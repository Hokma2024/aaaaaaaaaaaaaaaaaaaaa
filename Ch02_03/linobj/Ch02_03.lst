GAS LISTING linobj/Ch02_03.s 			page 1


 GNU ассемблер, версия 2.41 (x86_64-redhat-linux)
	 используется BFD версии version 2.41-37.fc40.
 пер-ные пар-ры	: -I -I --gdwarf-5 --64 -aghl=linobj/Ch02_03.lst 
 входной файл  	: linobj/Ch02_03.s
 выходной файл 	: linobj/Ch02_03.o
 цель          	: x86_64-redhat-linux-gnu
 метка времени 	: 2024-11-07T18:40:32.000+0300

GAS LISTING linobj/Ch02_03.s 			page 2


   1              		.file	"Ch02_03.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.file 0 "/home/vz/\320\224\320\276\320\272\321\203\320\274\320\265\320\275\321\202\321\213/code/GR
   5              	#APP
   6              		.globl _ZSt21ios_base_library_initv
   7              		.section	.rodata.str1.1,"aMS",@progbits,1
   8              	.LC2:
   9 0000 0A526573 		.string	"\nResults for MulI16_Iavx\n"
   9      756C7473 
   9      20666F72 
   9      204D756C 
   9      4931365F 
  10              	.LC3:
  11 001a 615B00   		.string	"a["
  12              	.LC4:
  13 001d 5D3A2000 		.string	"]: "
  14              	.LC5:
  15 0021 202000   		.string	"  "
  16              	.LC6:
  17 0024 625B00   		.string	"b["
  18              	.LC7:
  19 0027 635B305D 		.string	"c[0]["
  19      5B00
  20              	.LC8:
  21 002d 635B315D 		.string	"c[1]["
  21      5B00
  22              	.LC11:
  23 0033 0A526573 		.string	"\nResults for MulI32a_Iavx\n"
  23      756C7473 
  23      20666F72 
  23      204D756C 
  23      49333261 
  24              	.LC12:
  25 004e 635B00   		.string	"c["
  26              	.LC15:
  27 0051 0A526573 		.string	"\nResults for MulI32b_Iavx\n"
  27      756C7473 
  27      20666F72 
  27      204D756C 
  27      49333262 
  28              	#NO_APP
  29              		.section	.text.unlikely,"ax",@progbits
  30              	.LCOLDB16:
  31              		.section	.text.startup,"ax",@progbits
  32              	.LHOTB16:
  33              		.p2align 4
  34              		.section	.text.unlikely
  35              	.Ltext_cold0:
  36              		.section	.text.startup
  37              		.globl	main
  38              		.type	main, @function
  39              	main:
  40              	.LFB1975:
  41              		.file 1 "Ch02_03.cpp"
   1:Ch02_03.cpp   **** //------------------------------------------------
   2:Ch02_03.cpp   **** //               Ch02_03.cpp
GAS LISTING linobj/Ch02_03.s 			page 3


   3:Ch02_03.cpp   **** //------------------------------------------------
   4:Ch02_03.cpp   **** 
   5:Ch02_03.cpp   **** #include <iostream>
   6:Ch02_03.cpp   **** #include <iomanip>
   7:Ch02_03.cpp   **** #include <string>
   8:Ch02_03.cpp   **** #include "Ch02_03.h"
   9:Ch02_03.cpp   **** 
  10:Ch02_03.cpp   **** static void MulI16(void);
  11:Ch02_03.cpp   **** static void MulI32a(void);
  12:Ch02_03.cpp   **** static void MulI32b(void);
  13:Ch02_03.cpp   **** 
  14:Ch02_03.cpp   **** int main()
  15:Ch02_03.cpp   **** {
  42              		.loc 1 15 1 view -0
  43              		.cfi_startproc
  44              		.cfi_personality 0x3,__gxx_personality_v0
  45              		.cfi_lsda 0x3,.LLSDA1975
  16:Ch02_03.cpp   ****     const char nl = '\n';
  46              		.loc 1 16 5 view .LVU1
  47              	.LVL0:
  17:Ch02_03.cpp   ****     std::string sep(75, '-');
  48              		.loc 1 17 5 view .LVU2
  49              	.LBB683:
  50              	.LBI683:
  51              		.file 2 "/usr/include/c++/14/bits/allocator.h"
   1:/usr/include/c++/14/bits/allocator.h **** // Allocators -*- C++ -*-
   2:/usr/include/c++/14/bits/allocator.h **** 
   3:/usr/include/c++/14/bits/allocator.h **** // Copyright (C) 2001-2024 Free Software Foundation, Inc.
   4:/usr/include/c++/14/bits/allocator.h **** //
   5:/usr/include/c++/14/bits/allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/14/bits/allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/14/bits/allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/14/bits/allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/14/bits/allocator.h **** // any later version.
  10:/usr/include/c++/14/bits/allocator.h **** 
  11:/usr/include/c++/14/bits/allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/14/bits/allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/14/bits/allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/14/bits/allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/14/bits/allocator.h **** 
  16:/usr/include/c++/14/bits/allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/14/bits/allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/14/bits/allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/14/bits/allocator.h **** 
  20:/usr/include/c++/14/bits/allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/14/bits/allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/14/bits/allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/14/bits/allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/14/bits/allocator.h **** 
  25:/usr/include/c++/14/bits/allocator.h **** /*
  26:/usr/include/c++/14/bits/allocator.h ****  * Copyright (c) 1996-1997
  27:/usr/include/c++/14/bits/allocator.h ****  * Silicon Graphics Computer Systems, Inc.
  28:/usr/include/c++/14/bits/allocator.h ****  *
  29:/usr/include/c++/14/bits/allocator.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/usr/include/c++/14/bits/allocator.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/usr/include/c++/14/bits/allocator.h ****  * provided that the above copyright notice appear in all copies and
  32:/usr/include/c++/14/bits/allocator.h ****  * that both that copyright notice and this permission notice appear
GAS LISTING linobj/Ch02_03.s 			page 4


  33:/usr/include/c++/14/bits/allocator.h ****  * in supporting documentation.  Silicon Graphics makes no
  34:/usr/include/c++/14/bits/allocator.h ****  * representations about the suitability of this software for any
  35:/usr/include/c++/14/bits/allocator.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/usr/include/c++/14/bits/allocator.h ****  */
  37:/usr/include/c++/14/bits/allocator.h **** 
  38:/usr/include/c++/14/bits/allocator.h **** /** @file bits/allocator.h
  39:/usr/include/c++/14/bits/allocator.h ****  *  This is an internal header file, included by other library headers.
  40:/usr/include/c++/14/bits/allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  41:/usr/include/c++/14/bits/allocator.h ****  */
  42:/usr/include/c++/14/bits/allocator.h **** 
  43:/usr/include/c++/14/bits/allocator.h **** #ifndef _ALLOCATOR_H
  44:/usr/include/c++/14/bits/allocator.h **** #define _ALLOCATOR_H 1
  45:/usr/include/c++/14/bits/allocator.h **** 
  46:/usr/include/c++/14/bits/allocator.h **** #include <bits/c++allocator.h> // Define the base class to std::allocator.
  47:/usr/include/c++/14/bits/allocator.h **** #include <bits/memoryfwd.h>
  48:/usr/include/c++/14/bits/allocator.h **** #if __cplusplus >= 201103L
  49:/usr/include/c++/14/bits/allocator.h **** #include <type_traits>
  50:/usr/include/c++/14/bits/allocator.h **** #endif
  51:/usr/include/c++/14/bits/allocator.h **** 
  52:/usr/include/c++/14/bits/allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  53:/usr/include/c++/14/bits/allocator.h **** {
  54:/usr/include/c++/14/bits/allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  55:/usr/include/c++/14/bits/allocator.h **** 
  56:/usr/include/c++/14/bits/allocator.h ****   /**
  57:/usr/include/c++/14/bits/allocator.h ****    *  @addtogroup allocators
  58:/usr/include/c++/14/bits/allocator.h ****    *  @{
  59:/usr/include/c++/14/bits/allocator.h ****    */
  60:/usr/include/c++/14/bits/allocator.h **** 
  61:/usr/include/c++/14/bits/allocator.h ****   // Since C++20 the primary template should be used for allocator<void>,
  62:/usr/include/c++/14/bits/allocator.h ****   // but then it would have a non-trivial default ctor and dtor for C++20,
  63:/usr/include/c++/14/bits/allocator.h ****   // but trivial for C++98-17, which would be an ABI incompatibility between
  64:/usr/include/c++/14/bits/allocator.h ****   // different standard dialects. So C++20 still uses the allocator<void>
  65:/usr/include/c++/14/bits/allocator.h ****   // explicit specialization, with the historical ABI properties, but with
  66:/usr/include/c++/14/bits/allocator.h ****   // the same members that are present in the primary template.
  67:/usr/include/c++/14/bits/allocator.h **** 
  68:/usr/include/c++/14/bits/allocator.h ****   /** std::allocator<void> specialization.
  69:/usr/include/c++/14/bits/allocator.h ****    *
  70:/usr/include/c++/14/bits/allocator.h ****    * @headerfile memory
  71:/usr/include/c++/14/bits/allocator.h ****    */
  72:/usr/include/c++/14/bits/allocator.h ****   template<>
  73:/usr/include/c++/14/bits/allocator.h ****     class allocator<void>
  74:/usr/include/c++/14/bits/allocator.h ****     {
  75:/usr/include/c++/14/bits/allocator.h ****     public:
  76:/usr/include/c++/14/bits/allocator.h ****       typedef void        value_type;
  77:/usr/include/c++/14/bits/allocator.h ****       typedef size_t      size_type;
  78:/usr/include/c++/14/bits/allocator.h ****       typedef ptrdiff_t   difference_type;
  79:/usr/include/c++/14/bits/allocator.h **** 
  80:/usr/include/c++/14/bits/allocator.h **** #if __cplusplus <= 201703L
  81:/usr/include/c++/14/bits/allocator.h ****       // These were removed for C++20, allocator_traits does the right thing.
  82:/usr/include/c++/14/bits/allocator.h ****       typedef void*       pointer;
  83:/usr/include/c++/14/bits/allocator.h ****       typedef const void* const_pointer;
  84:/usr/include/c++/14/bits/allocator.h **** 
  85:/usr/include/c++/14/bits/allocator.h ****       template<typename _Tp1>
  86:/usr/include/c++/14/bits/allocator.h **** 	struct rebind
  87:/usr/include/c++/14/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
  88:/usr/include/c++/14/bits/allocator.h **** #endif
  89:/usr/include/c++/14/bits/allocator.h **** 
GAS LISTING linobj/Ch02_03.s 			page 5


  90:/usr/include/c++/14/bits/allocator.h **** #if __cplusplus >= 201103L
  91:/usr/include/c++/14/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  92:/usr/include/c++/14/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
  93:/usr/include/c++/14/bits/allocator.h ****       using propagate_on_container_move_assignment = true_type;
  94:/usr/include/c++/14/bits/allocator.h **** 
  95:/usr/include/c++/14/bits/allocator.h ****       using is_always_equal
  96:/usr/include/c++/14/bits/allocator.h **** 	_GLIBCXX20_DEPRECATED_SUGGEST("std::allocator_traits::is_always_equal")
  97:/usr/include/c++/14/bits/allocator.h **** 	= true_type;
  98:/usr/include/c++/14/bits/allocator.h **** 
  99:/usr/include/c++/14/bits/allocator.h **** #if __cplusplus >= 202002L
 100:/usr/include/c++/14/bits/allocator.h ****       // As noted above, these members are present for C++20 to provide the
 101:/usr/include/c++/14/bits/allocator.h ****       // same API as the primary template, but still trivial as in pre-C++20.
 102:/usr/include/c++/14/bits/allocator.h ****       allocator() = default;
 103:/usr/include/c++/14/bits/allocator.h ****       ~allocator() = default;
 104:/usr/include/c++/14/bits/allocator.h **** 
 105:/usr/include/c++/14/bits/allocator.h ****       template<typename _Up>
 106:/usr/include/c++/14/bits/allocator.h **** 	__attribute__((__always_inline__))
 107:/usr/include/c++/14/bits/allocator.h **** 	constexpr
 108:/usr/include/c++/14/bits/allocator.h **** 	allocator(const allocator<_Up>&) noexcept { }
 109:/usr/include/c++/14/bits/allocator.h **** 
 110:/usr/include/c++/14/bits/allocator.h ****       // No allocate member because it's ill-formed by LWG 3307.
 111:/usr/include/c++/14/bits/allocator.h ****       // No deallocate member because it would be undefined to call it
 112:/usr/include/c++/14/bits/allocator.h ****       // with any pointer which wasn't obtained from allocate.
 113:/usr/include/c++/14/bits/allocator.h **** #endif // C++20
 114:/usr/include/c++/14/bits/allocator.h **** #endif // C++11
 115:/usr/include/c++/14/bits/allocator.h ****     };
 116:/usr/include/c++/14/bits/allocator.h **** 
 117:/usr/include/c++/14/bits/allocator.h ****   /**
 118:/usr/include/c++/14/bits/allocator.h ****    * @brief  The @a standard allocator, as per C++03 [20.4.1].
 119:/usr/include/c++/14/bits/allocator.h ****    *
 120:/usr/include/c++/14/bits/allocator.h ****    *  See https://gcc.gnu.org/onlinedocs/libstdc++/manual/memory.html#std.util.memory.allocator
 121:/usr/include/c++/14/bits/allocator.h ****    *  for further details.
 122:/usr/include/c++/14/bits/allocator.h ****    *
 123:/usr/include/c++/14/bits/allocator.h ****    *  @tparam  _Tp  Type of allocated object.
 124:/usr/include/c++/14/bits/allocator.h ****    *
 125:/usr/include/c++/14/bits/allocator.h ****    *  @headerfile memory
 126:/usr/include/c++/14/bits/allocator.h ****    */
 127:/usr/include/c++/14/bits/allocator.h ****   template<typename _Tp>
 128:/usr/include/c++/14/bits/allocator.h ****     class allocator : public __allocator_base<_Tp>
 129:/usr/include/c++/14/bits/allocator.h ****     {
 130:/usr/include/c++/14/bits/allocator.h ****     public:
 131:/usr/include/c++/14/bits/allocator.h ****       typedef _Tp        value_type;
 132:/usr/include/c++/14/bits/allocator.h ****       typedef size_t     size_type;
 133:/usr/include/c++/14/bits/allocator.h ****       typedef ptrdiff_t  difference_type;
 134:/usr/include/c++/14/bits/allocator.h **** 
 135:/usr/include/c++/14/bits/allocator.h **** #if __cplusplus <= 201703L
 136:/usr/include/c++/14/bits/allocator.h ****       // These were removed for C++20.
 137:/usr/include/c++/14/bits/allocator.h ****       typedef _Tp*       pointer;
 138:/usr/include/c++/14/bits/allocator.h ****       typedef const _Tp* const_pointer;
 139:/usr/include/c++/14/bits/allocator.h ****       typedef _Tp&       reference;
 140:/usr/include/c++/14/bits/allocator.h ****       typedef const _Tp& const_reference;
 141:/usr/include/c++/14/bits/allocator.h **** 
 142:/usr/include/c++/14/bits/allocator.h ****       template<typename _Tp1>
 143:/usr/include/c++/14/bits/allocator.h **** 	struct rebind
 144:/usr/include/c++/14/bits/allocator.h **** 	{ typedef allocator<_Tp1> other; };
 145:/usr/include/c++/14/bits/allocator.h **** #endif
 146:/usr/include/c++/14/bits/allocator.h **** 
GAS LISTING linobj/Ch02_03.s 			page 6


 147:/usr/include/c++/14/bits/allocator.h **** #if __cplusplus >= 201103L
 148:/usr/include/c++/14/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 149:/usr/include/c++/14/bits/allocator.h ****       // 2103. std::allocator propagate_on_container_move_assignment
 150:/usr/include/c++/14/bits/allocator.h ****       using propagate_on_container_move_assignment = true_type;
 151:/usr/include/c++/14/bits/allocator.h **** 
 152:/usr/include/c++/14/bits/allocator.h ****       using is_always_equal
 153:/usr/include/c++/14/bits/allocator.h **** 	_GLIBCXX20_DEPRECATED_SUGGEST("std::allocator_traits::is_always_equal")
 154:/usr/include/c++/14/bits/allocator.h **** 	= true_type;
 155:/usr/include/c++/14/bits/allocator.h **** #endif
 156:/usr/include/c++/14/bits/allocator.h **** 
 157:/usr/include/c++/14/bits/allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 158:/usr/include/c++/14/bits/allocator.h ****       // 3035. std::allocator's constructors should be constexpr
 159:/usr/include/c++/14/bits/allocator.h ****       __attribute__((__always_inline__))
 160:/usr/include/c++/14/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 161:/usr/include/c++/14/bits/allocator.h ****       allocator() _GLIBCXX_NOTHROW { }
  52              		.loc 2 161 7 view .LVU3
  53              	.LBB684:
  54              	.LBI684:
  55              		.file 3 "/usr/include/c++/14/bits/new_allocator.h"
   1:/usr/include/c++/14/bits/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   2:/usr/include/c++/14/bits/new_allocator.h **** 
   3:/usr/include/c++/14/bits/new_allocator.h **** // Copyright (C) 2001-2024 Free Software Foundation, Inc.
   4:/usr/include/c++/14/bits/new_allocator.h **** //
   5:/usr/include/c++/14/bits/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/14/bits/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/14/bits/new_allocator.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/14/bits/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/14/bits/new_allocator.h **** // any later version.
  10:/usr/include/c++/14/bits/new_allocator.h **** 
  11:/usr/include/c++/14/bits/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/14/bits/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/14/bits/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/14/bits/new_allocator.h **** // GNU General Public License for more details.
  15:/usr/include/c++/14/bits/new_allocator.h **** 
  16:/usr/include/c++/14/bits/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/14/bits/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/14/bits/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/14/bits/new_allocator.h **** 
  20:/usr/include/c++/14/bits/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/14/bits/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/14/bits/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/14/bits/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/14/bits/new_allocator.h **** 
  25:/usr/include/c++/14/bits/new_allocator.h **** /** @file bits/new_allocator.h
  26:/usr/include/c++/14/bits/new_allocator.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/14/bits/new_allocator.h ****  *  Do not attempt to use it directly. @headername{memory}
  28:/usr/include/c++/14/bits/new_allocator.h ****  */
  29:/usr/include/c++/14/bits/new_allocator.h **** 
  30:/usr/include/c++/14/bits/new_allocator.h **** #ifndef _STD_NEW_ALLOCATOR_H
  31:/usr/include/c++/14/bits/new_allocator.h **** #define _STD_NEW_ALLOCATOR_H 1
  32:/usr/include/c++/14/bits/new_allocator.h **** 
  33:/usr/include/c++/14/bits/new_allocator.h **** #include <bits/c++config.h>
  34:/usr/include/c++/14/bits/new_allocator.h **** #include <new>
  35:/usr/include/c++/14/bits/new_allocator.h **** #include <bits/functexcept.h>
  36:/usr/include/c++/14/bits/new_allocator.h **** #include <bits/move.h>
  37:/usr/include/c++/14/bits/new_allocator.h **** #if __cplusplus >= 201103L
  38:/usr/include/c++/14/bits/new_allocator.h **** #include <type_traits>
GAS LISTING linobj/Ch02_03.s 			page 7


  39:/usr/include/c++/14/bits/new_allocator.h **** #endif
  40:/usr/include/c++/14/bits/new_allocator.h **** 
  41:/usr/include/c++/14/bits/new_allocator.h **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/usr/include/c++/14/bits/new_allocator.h **** {
  43:/usr/include/c++/14/bits/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  44:/usr/include/c++/14/bits/new_allocator.h **** 
  45:/usr/include/c++/14/bits/new_allocator.h ****   /**
  46:/usr/include/c++/14/bits/new_allocator.h ****    * @brief  An allocator that uses global `new`, as per C++03 [20.4.1].
  47:/usr/include/c++/14/bits/new_allocator.h ****    * @ingroup allocators
  48:/usr/include/c++/14/bits/new_allocator.h ****    *
  49:/usr/include/c++/14/bits/new_allocator.h ****    * This is precisely the allocator defined in the C++ Standard.
  50:/usr/include/c++/14/bits/new_allocator.h ****    *   - all allocation calls `operator new`
  51:/usr/include/c++/14/bits/new_allocator.h ****    *   - all deallocation calls `operator delete`
  52:/usr/include/c++/14/bits/new_allocator.h ****    *
  53:/usr/include/c++/14/bits/new_allocator.h ****    * This is the default base-class implementation of `std::allocator`,
  54:/usr/include/c++/14/bits/new_allocator.h ****    * and is also the base-class of the `__gnu_cxx::new_allocator` extension.
  55:/usr/include/c++/14/bits/new_allocator.h ****    * You should use either `std::allocator` or `__gnu_cxx::new_allocator`
  56:/usr/include/c++/14/bits/new_allocator.h ****    * instead of using this directly.
  57:/usr/include/c++/14/bits/new_allocator.h ****    *
  58:/usr/include/c++/14/bits/new_allocator.h ****    * @tparam  _Tp  Type of allocated object.
  59:/usr/include/c++/14/bits/new_allocator.h ****    *
  60:/usr/include/c++/14/bits/new_allocator.h ****    * @headerfile memory
  61:/usr/include/c++/14/bits/new_allocator.h ****    */
  62:/usr/include/c++/14/bits/new_allocator.h ****   template<typename _Tp>
  63:/usr/include/c++/14/bits/new_allocator.h ****     class __new_allocator
  64:/usr/include/c++/14/bits/new_allocator.h ****     {
  65:/usr/include/c++/14/bits/new_allocator.h ****     public:
  66:/usr/include/c++/14/bits/new_allocator.h ****       typedef _Tp        value_type;
  67:/usr/include/c++/14/bits/new_allocator.h ****       typedef std::size_t     size_type;
  68:/usr/include/c++/14/bits/new_allocator.h ****       typedef std::ptrdiff_t  difference_type;
  69:/usr/include/c++/14/bits/new_allocator.h **** #if __cplusplus <= 201703L
  70:/usr/include/c++/14/bits/new_allocator.h ****       typedef _Tp*       pointer;
  71:/usr/include/c++/14/bits/new_allocator.h ****       typedef const _Tp* const_pointer;
  72:/usr/include/c++/14/bits/new_allocator.h ****       typedef _Tp&       reference;
  73:/usr/include/c++/14/bits/new_allocator.h ****       typedef const _Tp& const_reference;
  74:/usr/include/c++/14/bits/new_allocator.h **** 
  75:/usr/include/c++/14/bits/new_allocator.h ****       template<typename _Tp1>
  76:/usr/include/c++/14/bits/new_allocator.h **** 	struct rebind
  77:/usr/include/c++/14/bits/new_allocator.h **** 	{ typedef __new_allocator<_Tp1> other; };
  78:/usr/include/c++/14/bits/new_allocator.h **** #endif
  79:/usr/include/c++/14/bits/new_allocator.h **** 
  80:/usr/include/c++/14/bits/new_allocator.h **** #if __cplusplus >= 201103L
  81:/usr/include/c++/14/bits/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  82:/usr/include/c++/14/bits/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  83:/usr/include/c++/14/bits/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  84:/usr/include/c++/14/bits/new_allocator.h **** #endif
  85:/usr/include/c++/14/bits/new_allocator.h **** 
  86:/usr/include/c++/14/bits/new_allocator.h ****       __attribute__((__always_inline__))
  87:/usr/include/c++/14/bits/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  88:/usr/include/c++/14/bits/new_allocator.h ****       __new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  56              		.loc 3 88 7 view .LVU4
  57              		.loc 3 88 7 is_stmt 0 view .LVU5
  58              	.LBE684:
  59              	.LBE683:
  15:Ch02_03.cpp   ****     const char nl = '\n';
  60              		.loc 1 15 1 view .LVU6
  61 0000 4157     		pushq	%r15
GAS LISTING linobj/Ch02_03.s 			page 8


  62              		.cfi_def_cfa_offset 16
  63              		.cfi_offset 15, -16
  64              	.LBB685:
  65              	.LBB686:
  66              	.LBB687:
  67              		.file 4 "/usr/include/c++/14/bits/basic_string.h"
   1:/usr/include/c++/14/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   2:/usr/include/c++/14/bits/basic_string.h **** 
   3:/usr/include/c++/14/bits/basic_string.h **** // Copyright (C) 1997-2024 Free Software Foundation, Inc.
   4:/usr/include/c++/14/bits/basic_string.h **** //
   5:/usr/include/c++/14/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/14/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/14/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/14/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/14/bits/basic_string.h **** // any later version.
  10:/usr/include/c++/14/bits/basic_string.h **** 
  11:/usr/include/c++/14/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/14/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/14/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/14/bits/basic_string.h **** // GNU General Public License for more details.
  15:/usr/include/c++/14/bits/basic_string.h **** 
  16:/usr/include/c++/14/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/14/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/14/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/14/bits/basic_string.h **** 
  20:/usr/include/c++/14/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/14/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/14/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/14/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/14/bits/basic_string.h **** 
  25:/usr/include/c++/14/bits/basic_string.h **** /** @file bits/basic_string.h
  26:/usr/include/c++/14/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/14/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  28:/usr/include/c++/14/bits/basic_string.h ****  */
  29:/usr/include/c++/14/bits/basic_string.h **** 
  30:/usr/include/c++/14/bits/basic_string.h **** //
  31:/usr/include/c++/14/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  32:/usr/include/c++/14/bits/basic_string.h **** //
  33:/usr/include/c++/14/bits/basic_string.h **** 
  34:/usr/include/c++/14/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  35:/usr/include/c++/14/bits/basic_string.h **** #define _BASIC_STRING_H 1
  36:/usr/include/c++/14/bits/basic_string.h **** 
  37:/usr/include/c++/14/bits/basic_string.h **** #pragma GCC system_header
  38:/usr/include/c++/14/bits/basic_string.h **** 
  39:/usr/include/c++/14/bits/basic_string.h **** #include <ext/alloc_traits.h>
  40:/usr/include/c++/14/bits/basic_string.h **** #include <debug/debug.h>
  41:/usr/include/c++/14/bits/basic_string.h **** 
  42:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
  43:/usr/include/c++/14/bits/basic_string.h **** #include <initializer_list>
  44:/usr/include/c++/14/bits/basic_string.h **** #endif
  45:/usr/include/c++/14/bits/basic_string.h **** 
  46:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
  47:/usr/include/c++/14/bits/basic_string.h **** # include <string_view>
  48:/usr/include/c++/14/bits/basic_string.h **** #endif
  49:/usr/include/c++/14/bits/basic_string.h **** 
  50:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus > 202302L
  51:/usr/include/c++/14/bits/basic_string.h **** # include <charconv>
GAS LISTING linobj/Ch02_03.s 			page 9


  52:/usr/include/c++/14/bits/basic_string.h **** #endif
  53:/usr/include/c++/14/bits/basic_string.h **** 
  54:/usr/include/c++/14/bits/basic_string.h **** #include <bits/version.h>
  55:/usr/include/c++/14/bits/basic_string.h **** 
  56:/usr/include/c++/14/bits/basic_string.h **** #if ! _GLIBCXX_USE_CXX11_ABI
  57:/usr/include/c++/14/bits/basic_string.h **** # include "cow_string.h"
  58:/usr/include/c++/14/bits/basic_string.h **** #else
  59:/usr/include/c++/14/bits/basic_string.h **** 
  60:/usr/include/c++/14/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  61:/usr/include/c++/14/bits/basic_string.h **** {
  62:/usr/include/c++/14/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  63:/usr/include/c++/14/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
  64:/usr/include/c++/14/bits/basic_string.h **** 
  65:/usr/include/c++/14/bits/basic_string.h ****   /**
  66:/usr/include/c++/14/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
  67:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  68:/usr/include/c++/14/bits/basic_string.h ****    *
  69:/usr/include/c++/14/bits/basic_string.h ****    *  @ingroup strings
  70:/usr/include/c++/14/bits/basic_string.h ****    *  @ingroup sequences
  71:/usr/include/c++/14/bits/basic_string.h ****    *  @headerfile string
  72:/usr/include/c++/14/bits/basic_string.h ****    *  @since C++98
  73:/usr/include/c++/14/bits/basic_string.h ****    *
  74:/usr/include/c++/14/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  75:/usr/include/c++/14/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  76:/usr/include/c++/14/bits/basic_string.h ****    *                   char_traits<_CharT>.
  77:/usr/include/c++/14/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  78:/usr/include/c++/14/bits/basic_string.h ****    *
  79:/usr/include/c++/14/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  80:/usr/include/c++/14/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  81:/usr/include/c++/14/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  82:/usr/include/c++/14/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  83:/usr/include/c++/14/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  84:/usr/include/c++/14/bits/basic_string.h ****    */
  85:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
  86:/usr/include/c++/14/bits/basic_string.h ****     class basic_string
  87:/usr/include/c++/14/bits/basic_string.h ****     {
  88:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 202002L
  89:/usr/include/c++/14/bits/basic_string.h ****       static_assert(is_same_v<_CharT, typename _Traits::char_type>);
  90:/usr/include/c++/14/bits/basic_string.h ****       static_assert(is_same_v<_CharT, typename _Alloc::value_type>);
  91:/usr/include/c++/14/bits/basic_string.h ****       using _Char_alloc_type = _Alloc;
  92:/usr/include/c++/14/bits/basic_string.h **** #else
  93:/usr/include/c++/14/bits/basic_string.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  94:/usr/include/c++/14/bits/basic_string.h **** 	rebind<_CharT>::other _Char_alloc_type;
  95:/usr/include/c++/14/bits/basic_string.h **** #endif
  96:/usr/include/c++/14/bits/basic_string.h **** 
  97:/usr/include/c++/14/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<_Char_alloc_type> _Alloc_traits;
  98:/usr/include/c++/14/bits/basic_string.h **** 
  99:/usr/include/c++/14/bits/basic_string.h ****       // Types:
 100:/usr/include/c++/14/bits/basic_string.h ****     public:
 101:/usr/include/c++/14/bits/basic_string.h ****       typedef _Traits					traits_type;
 102:/usr/include/c++/14/bits/basic_string.h ****       typedef typename _Traits::char_type		value_type;
 103:/usr/include/c++/14/bits/basic_string.h ****       typedef _Char_alloc_type				allocator_type;
 104:/usr/include/c++/14/bits/basic_string.h ****       typedef typename _Alloc_traits::size_type		size_type;
 105:/usr/include/c++/14/bits/basic_string.h ****       typedef typename _Alloc_traits::difference_type	difference_type;
 106:/usr/include/c++/14/bits/basic_string.h ****       typedef typename _Alloc_traits::reference		reference;
 107:/usr/include/c++/14/bits/basic_string.h ****       typedef typename _Alloc_traits::const_reference	const_reference;
 108:/usr/include/c++/14/bits/basic_string.h ****       typedef typename _Alloc_traits::pointer		pointer;
GAS LISTING linobj/Ch02_03.s 			page 10


 109:/usr/include/c++/14/bits/basic_string.h ****       typedef typename _Alloc_traits::const_pointer	const_pointer;
 110:/usr/include/c++/14/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 111:/usr/include/c++/14/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 112:/usr/include/c++/14/bits/basic_string.h **** 							const_iterator;
 113:/usr/include/c++/14/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 114:/usr/include/c++/14/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		reverse_iterator;
 115:/usr/include/c++/14/bits/basic_string.h **** 
 116:/usr/include/c++/14/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 117:/usr/include/c++/14/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 118:/usr/include/c++/14/bits/basic_string.h **** 
 119:/usr/include/c++/14/bits/basic_string.h ****     protected:
 120:/usr/include/c++/14/bits/basic_string.h ****       // type used for positions in insert, erase etc.
 121:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus < 201103L
 122:/usr/include/c++/14/bits/basic_string.h ****       typedef iterator __const_iterator;
 123:/usr/include/c++/14/bits/basic_string.h **** #else
 124:/usr/include/c++/14/bits/basic_string.h ****       typedef const_iterator __const_iterator;
 125:/usr/include/c++/14/bits/basic_string.h **** #endif
 126:/usr/include/c++/14/bits/basic_string.h **** 
 127:/usr/include/c++/14/bits/basic_string.h ****     private:
 128:/usr/include/c++/14/bits/basic_string.h ****       static _GLIBCXX20_CONSTEXPR pointer
 129:/usr/include/c++/14/bits/basic_string.h ****       _S_allocate(_Char_alloc_type& __a, size_type __n)
 130:/usr/include/c++/14/bits/basic_string.h ****       {
 131:/usr/include/c++/14/bits/basic_string.h **** 	pointer __p = _Alloc_traits::allocate(__a, __n);
 132:/usr/include/c++/14/bits/basic_string.h **** #if __glibcxx_constexpr_string >= 201907L
 133:/usr/include/c++/14/bits/basic_string.h **** 	// std::char_traits begins the lifetime of characters,
 134:/usr/include/c++/14/bits/basic_string.h **** 	// but custom traits might not, so do it here.
 135:/usr/include/c++/14/bits/basic_string.h **** 	if constexpr (!is_same_v<_Traits, char_traits<_CharT>>)
 136:/usr/include/c++/14/bits/basic_string.h **** 	  if (std::__is_constant_evaluated())
 137:/usr/include/c++/14/bits/basic_string.h **** 	    // Begin the lifetime of characters in allocated storage.
 138:/usr/include/c++/14/bits/basic_string.h **** 	    for (size_type __i = 0; __i < __n; ++__i)
 139:/usr/include/c++/14/bits/basic_string.h **** 	      std::construct_at(__builtin_addressof(__p[__i]));
 140:/usr/include/c++/14/bits/basic_string.h **** #endif
 141:/usr/include/c++/14/bits/basic_string.h **** 	return __p;
 142:/usr/include/c++/14/bits/basic_string.h ****       }
 143:/usr/include/c++/14/bits/basic_string.h **** 
 144:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
 145:/usr/include/c++/14/bits/basic_string.h ****       // A helper type for avoiding boiler-plate.
 146:/usr/include/c++/14/bits/basic_string.h ****       typedef basic_string_view<_CharT, _Traits> __sv_type;
 147:/usr/include/c++/14/bits/basic_string.h **** 
 148:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp, typename _Res>
 149:/usr/include/c++/14/bits/basic_string.h **** 	using _If_sv = enable_if_t<
 150:/usr/include/c++/14/bits/basic_string.h **** 	  __and_<is_convertible<const _Tp&, __sv_type>,
 151:/usr/include/c++/14/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp*, const basic_string*>>,
 152:/usr/include/c++/14/bits/basic_string.h **** 		 __not_<is_convertible<const _Tp&, const _CharT*>>>::value,
 153:/usr/include/c++/14/bits/basic_string.h **** 	  _Res>;
 154:/usr/include/c++/14/bits/basic_string.h **** 
 155:/usr/include/c++/14/bits/basic_string.h ****       // Allows an implicit conversion to __sv_type.
 156:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 157:/usr/include/c++/14/bits/basic_string.h ****       static __sv_type
 158:/usr/include/c++/14/bits/basic_string.h ****       _S_to_string_view(__sv_type __svt) noexcept
 159:/usr/include/c++/14/bits/basic_string.h ****       { return __svt; }
 160:/usr/include/c++/14/bits/basic_string.h **** 
 161:/usr/include/c++/14/bits/basic_string.h ****       // Wraps a string_view by explicit conversion and thus
 162:/usr/include/c++/14/bits/basic_string.h ****       // allows to add an internal constructor that does not
 163:/usr/include/c++/14/bits/basic_string.h ****       // participate in overload resolution when a string_view
 164:/usr/include/c++/14/bits/basic_string.h ****       // is provided.
 165:/usr/include/c++/14/bits/basic_string.h ****       struct __sv_wrapper
GAS LISTING linobj/Ch02_03.s 			page 11


 166:/usr/include/c++/14/bits/basic_string.h ****       {
 167:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR explicit
 168:/usr/include/c++/14/bits/basic_string.h **** 	__sv_wrapper(__sv_type __sv) noexcept : _M_sv(__sv) { }
 169:/usr/include/c++/14/bits/basic_string.h **** 
 170:/usr/include/c++/14/bits/basic_string.h **** 	__sv_type _M_sv;
 171:/usr/include/c++/14/bits/basic_string.h ****       };
 172:/usr/include/c++/14/bits/basic_string.h **** 
 173:/usr/include/c++/14/bits/basic_string.h ****       /**
 174:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Only internally used: Construct string from a string view
 175:/usr/include/c++/14/bits/basic_string.h ****        *          wrapper.
 176:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __svw  string view wrapper.
 177:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 178:/usr/include/c++/14/bits/basic_string.h ****        */
 179:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 180:/usr/include/c++/14/bits/basic_string.h ****       explicit
 181:/usr/include/c++/14/bits/basic_string.h ****       basic_string(__sv_wrapper __svw, const _Alloc& __a)
 182:/usr/include/c++/14/bits/basic_string.h ****       : basic_string(__svw._M_sv.data(), __svw._M_sv.size(), __a) { }
 183:/usr/include/c++/14/bits/basic_string.h **** #endif
 184:/usr/include/c++/14/bits/basic_string.h **** 
 185:/usr/include/c++/14/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 186:/usr/include/c++/14/bits/basic_string.h ****       struct _Alloc_hider : allocator_type // TODO check __is_final
 187:/usr/include/c++/14/bits/basic_string.h ****       {
 188:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus < 201103L
 189:/usr/include/c++/14/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a = _Alloc())
 190:/usr/include/c++/14/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 191:/usr/include/c++/14/bits/basic_string.h **** #else
 192:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
 193:/usr/include/c++/14/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, const _Alloc& __a)
 194:/usr/include/c++/14/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 195:/usr/include/c++/14/bits/basic_string.h **** 
 196:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
 197:/usr/include/c++/14/bits/basic_string.h **** 	_Alloc_hider(pointer __dat, _Alloc&& __a = _Alloc())
 198:/usr/include/c++/14/bits/basic_string.h **** 	: allocator_type(std::move(__a)), _M_p(__dat) { }
 199:/usr/include/c++/14/bits/basic_string.h **** #endif
 200:/usr/include/c++/14/bits/basic_string.h **** 
 201:/usr/include/c++/14/bits/basic_string.h **** 	pointer _M_p; // The actual data.
 202:/usr/include/c++/14/bits/basic_string.h ****       };
 203:/usr/include/c++/14/bits/basic_string.h **** 
 204:/usr/include/c++/14/bits/basic_string.h ****       _Alloc_hider	_M_dataplus;
 205:/usr/include/c++/14/bits/basic_string.h ****       size_type		_M_string_length;
 206:/usr/include/c++/14/bits/basic_string.h **** 
 207:/usr/include/c++/14/bits/basic_string.h ****       enum { _S_local_capacity = 15 / sizeof(_CharT) };
 208:/usr/include/c++/14/bits/basic_string.h **** 
 209:/usr/include/c++/14/bits/basic_string.h ****       union
 210:/usr/include/c++/14/bits/basic_string.h ****       {
 211:/usr/include/c++/14/bits/basic_string.h **** 	_CharT           _M_local_buf[_S_local_capacity + 1];
 212:/usr/include/c++/14/bits/basic_string.h **** 	size_type        _M_allocated_capacity;
 213:/usr/include/c++/14/bits/basic_string.h ****       };
 214:/usr/include/c++/14/bits/basic_string.h **** 
 215:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 216:/usr/include/c++/14/bits/basic_string.h ****       void
 217:/usr/include/c++/14/bits/basic_string.h ****       _M_data(pointer __p)
 218:/usr/include/c++/14/bits/basic_string.h ****       { _M_dataplus._M_p = __p; }
 219:/usr/include/c++/14/bits/basic_string.h **** 
 220:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 221:/usr/include/c++/14/bits/basic_string.h ****       void
 222:/usr/include/c++/14/bits/basic_string.h ****       _M_length(size_type __length)
GAS LISTING linobj/Ch02_03.s 			page 12


 223:/usr/include/c++/14/bits/basic_string.h ****       { _M_string_length = __length; }
 224:/usr/include/c++/14/bits/basic_string.h **** 
 225:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 226:/usr/include/c++/14/bits/basic_string.h ****       pointer
 227:/usr/include/c++/14/bits/basic_string.h ****       _M_data() const
 228:/usr/include/c++/14/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 229:/usr/include/c++/14/bits/basic_string.h **** 
 230:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 231:/usr/include/c++/14/bits/basic_string.h ****       pointer
 232:/usr/include/c++/14/bits/basic_string.h ****       _M_local_data()
 233:/usr/include/c++/14/bits/basic_string.h ****       {
 234:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
 235:/usr/include/c++/14/bits/basic_string.h **** 	return std::pointer_traits<pointer>::pointer_to(*_M_local_buf);
 236:/usr/include/c++/14/bits/basic_string.h **** #else
 237:/usr/include/c++/14/bits/basic_string.h **** 	return pointer(_M_local_buf);
 238:/usr/include/c++/14/bits/basic_string.h **** #endif
 239:/usr/include/c++/14/bits/basic_string.h ****       }
 240:/usr/include/c++/14/bits/basic_string.h **** 
 241:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 242:/usr/include/c++/14/bits/basic_string.h ****       const_pointer
 243:/usr/include/c++/14/bits/basic_string.h ****       _M_local_data() const
 244:/usr/include/c++/14/bits/basic_string.h ****       {
 245:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
 246:/usr/include/c++/14/bits/basic_string.h **** 	return std::pointer_traits<const_pointer>::pointer_to(*_M_local_buf);
 247:/usr/include/c++/14/bits/basic_string.h **** #else
 248:/usr/include/c++/14/bits/basic_string.h **** 	return const_pointer(_M_local_buf);
 249:/usr/include/c++/14/bits/basic_string.h **** #endif
 250:/usr/include/c++/14/bits/basic_string.h ****       }
 251:/usr/include/c++/14/bits/basic_string.h **** 
 252:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 253:/usr/include/c++/14/bits/basic_string.h ****       void
 254:/usr/include/c++/14/bits/basic_string.h ****       _M_capacity(size_type __capacity)
 255:/usr/include/c++/14/bits/basic_string.h ****       { _M_allocated_capacity = __capacity; }
 256:/usr/include/c++/14/bits/basic_string.h **** 
 257:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 258:/usr/include/c++/14/bits/basic_string.h ****       void
 259:/usr/include/c++/14/bits/basic_string.h ****       _M_set_length(size_type __n)
 260:/usr/include/c++/14/bits/basic_string.h ****       {
 261:/usr/include/c++/14/bits/basic_string.h **** 	_M_length(__n);
 262:/usr/include/c++/14/bits/basic_string.h **** 	traits_type::assign(_M_data()[__n], _CharT());
 263:/usr/include/c++/14/bits/basic_string.h ****       }
 264:/usr/include/c++/14/bits/basic_string.h **** 
 265:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 266:/usr/include/c++/14/bits/basic_string.h ****       bool
 267:/usr/include/c++/14/bits/basic_string.h ****       _M_is_local() const
 268:/usr/include/c++/14/bits/basic_string.h ****       {
 269:/usr/include/c++/14/bits/basic_string.h **** 	if (_M_data() == _M_local_data())
 270:/usr/include/c++/14/bits/basic_string.h **** 	  {
 271:/usr/include/c++/14/bits/basic_string.h **** 	    if (_M_string_length > _S_local_capacity)
 272:/usr/include/c++/14/bits/basic_string.h **** 	      __builtin_unreachable();
 273:/usr/include/c++/14/bits/basic_string.h **** 	    return true;
 274:/usr/include/c++/14/bits/basic_string.h **** 	  }
 275:/usr/include/c++/14/bits/basic_string.h **** 	return false;
 276:/usr/include/c++/14/bits/basic_string.h ****       }
 277:/usr/include/c++/14/bits/basic_string.h **** 
 278:/usr/include/c++/14/bits/basic_string.h ****       // Create & Destroy
 279:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
GAS LISTING linobj/Ch02_03.s 			page 13


 280:/usr/include/c++/14/bits/basic_string.h ****       pointer
 281:/usr/include/c++/14/bits/basic_string.h ****       _M_create(size_type&, size_type);
 282:/usr/include/c++/14/bits/basic_string.h **** 
 283:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 284:/usr/include/c++/14/bits/basic_string.h ****       void
 285:/usr/include/c++/14/bits/basic_string.h ****       _M_dispose()
 286:/usr/include/c++/14/bits/basic_string.h ****       {
 287:/usr/include/c++/14/bits/basic_string.h **** 	if (!_M_is_local())
 288:/usr/include/c++/14/bits/basic_string.h **** 	  _M_destroy(_M_allocated_capacity);
 289:/usr/include/c++/14/bits/basic_string.h ****       }
 290:/usr/include/c++/14/bits/basic_string.h **** 
 291:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 292:/usr/include/c++/14/bits/basic_string.h ****       void
 293:/usr/include/c++/14/bits/basic_string.h ****       _M_destroy(size_type __size) throw()
 294:/usr/include/c++/14/bits/basic_string.h ****       { _Alloc_traits::deallocate(_M_get_allocator(), _M_data(), __size + 1); }
 295:/usr/include/c++/14/bits/basic_string.h **** 
 296:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus < 201103L || defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 297:/usr/include/c++/14/bits/basic_string.h ****       // _M_construct_aux is used to implement the 21.3.1 para 15 which
 298:/usr/include/c++/14/bits/basic_string.h ****       // requires special behaviour if _InIterator is an integral type
 299:/usr/include/c++/14/bits/basic_string.h ****       template<typename _InIterator>
 300:/usr/include/c++/14/bits/basic_string.h ****         void
 301:/usr/include/c++/14/bits/basic_string.h ****         _M_construct_aux(_InIterator __beg, _InIterator __end,
 302:/usr/include/c++/14/bits/basic_string.h **** 			 std::__false_type)
 303:/usr/include/c++/14/bits/basic_string.h **** 	{
 304:/usr/include/c++/14/bits/basic_string.h ****           typedef typename iterator_traits<_InIterator>::iterator_category _Tag;
 305:/usr/include/c++/14/bits/basic_string.h ****           _M_construct(__beg, __end, _Tag());
 306:/usr/include/c++/14/bits/basic_string.h **** 	}
 307:/usr/include/c++/14/bits/basic_string.h **** 
 308:/usr/include/c++/14/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 309:/usr/include/c++/14/bits/basic_string.h ****       // 438. Ambiguity in the "do the right thing" clause
 310:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Integer>
 311:/usr/include/c++/14/bits/basic_string.h ****         void
 312:/usr/include/c++/14/bits/basic_string.h ****         _M_construct_aux(_Integer __beg, _Integer __end, std::__true_type)
 313:/usr/include/c++/14/bits/basic_string.h **** 	{ _M_construct_aux_2(static_cast<size_type>(__beg), __end); }
 314:/usr/include/c++/14/bits/basic_string.h **** 
 315:/usr/include/c++/14/bits/basic_string.h ****       void
 316:/usr/include/c++/14/bits/basic_string.h ****       _M_construct_aux_2(size_type __req, _CharT __c)
 317:/usr/include/c++/14/bits/basic_string.h ****       { _M_construct(__req, __c); }
 318:/usr/include/c++/14/bits/basic_string.h **** #endif
 319:/usr/include/c++/14/bits/basic_string.h **** 
 320:/usr/include/c++/14/bits/basic_string.h ****       // For Input Iterators, used in istreambuf_iterators, etc.
 321:/usr/include/c++/14/bits/basic_string.h ****       template<typename _InIterator>
 322:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
 323:/usr/include/c++/14/bits/basic_string.h ****         void
 324:/usr/include/c++/14/bits/basic_string.h ****         _M_construct(_InIterator __beg, _InIterator __end,
 325:/usr/include/c++/14/bits/basic_string.h **** 		     std::input_iterator_tag);
 326:/usr/include/c++/14/bits/basic_string.h **** 
 327:/usr/include/c++/14/bits/basic_string.h ****       // For forward_iterators up to random_access_iterators, used for
 328:/usr/include/c++/14/bits/basic_string.h ****       // string::iterator, _CharT*, etc.
 329:/usr/include/c++/14/bits/basic_string.h ****       template<typename _FwdIterator>
 330:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
 331:/usr/include/c++/14/bits/basic_string.h ****         void
 332:/usr/include/c++/14/bits/basic_string.h ****         _M_construct(_FwdIterator __beg, _FwdIterator __end,
 333:/usr/include/c++/14/bits/basic_string.h **** 		     std::forward_iterator_tag);
 334:/usr/include/c++/14/bits/basic_string.h **** 
 335:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 336:/usr/include/c++/14/bits/basic_string.h ****       void
GAS LISTING linobj/Ch02_03.s 			page 14


 337:/usr/include/c++/14/bits/basic_string.h ****       _M_construct(size_type __req, _CharT __c);
 338:/usr/include/c++/14/bits/basic_string.h **** 
 339:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 340:/usr/include/c++/14/bits/basic_string.h ****       allocator_type&
 341:/usr/include/c++/14/bits/basic_string.h ****       _M_get_allocator()
 342:/usr/include/c++/14/bits/basic_string.h ****       { return _M_dataplus; }
 343:/usr/include/c++/14/bits/basic_string.h **** 
 344:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 345:/usr/include/c++/14/bits/basic_string.h ****       const allocator_type&
 346:/usr/include/c++/14/bits/basic_string.h ****       _M_get_allocator() const
 347:/usr/include/c++/14/bits/basic_string.h ****       { return _M_dataplus; }
 348:/usr/include/c++/14/bits/basic_string.h **** 
 349:/usr/include/c++/14/bits/basic_string.h ****       // Ensure that _M_local_buf is the active member of the union.
 350:/usr/include/c++/14/bits/basic_string.h ****       __attribute__((__always_inline__))
 351:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX14_CONSTEXPR
 352:/usr/include/c++/14/bits/basic_string.h ****       void
 353:/usr/include/c++/14/bits/basic_string.h ****       _M_init_local_buf() _GLIBCXX_NOEXCEPT
 354:/usr/include/c++/14/bits/basic_string.h ****       {
 355:/usr/include/c++/14/bits/basic_string.h **** #if __glibcxx_is_constant_evaluated
 356:/usr/include/c++/14/bits/basic_string.h **** 	if (std::is_constant_evaluated())
 357:/usr/include/c++/14/bits/basic_string.h **** 	  for (size_type __i = 0; __i <= _S_local_capacity; ++__i)
 358:/usr/include/c++/14/bits/basic_string.h **** 	    _M_local_buf[__i] = _CharT();
 359:/usr/include/c++/14/bits/basic_string.h **** #endif
 360:/usr/include/c++/14/bits/basic_string.h ****       }
 361:/usr/include/c++/14/bits/basic_string.h **** 
 362:/usr/include/c++/14/bits/basic_string.h ****       __attribute__((__always_inline__))
 363:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX14_CONSTEXPR
 364:/usr/include/c++/14/bits/basic_string.h ****       pointer
 365:/usr/include/c++/14/bits/basic_string.h ****       _M_use_local_data() _GLIBCXX_NOEXCEPT
 366:/usr/include/c++/14/bits/basic_string.h ****       {
 367:/usr/include/c++/14/bits/basic_string.h **** #if __cpp_lib_is_constant_evaluated
 368:/usr/include/c++/14/bits/basic_string.h **** 	_M_init_local_buf();
 369:/usr/include/c++/14/bits/basic_string.h **** #endif
 370:/usr/include/c++/14/bits/basic_string.h **** 	return _M_local_data();
 371:/usr/include/c++/14/bits/basic_string.h ****       }
 372:/usr/include/c++/14/bits/basic_string.h **** 
 373:/usr/include/c++/14/bits/basic_string.h ****     private:
 374:/usr/include/c++/14/bits/basic_string.h **** 
 375:/usr/include/c++/14/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
 376:/usr/include/c++/14/bits/basic_string.h ****       // The explicit instantiations in misc-inst.cc require this due to
 377:/usr/include/c++/14/bits/basic_string.h ****       // https://gcc.gnu.org/bugzilla/show_bug.cgi?id=64063
 378:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp, bool _Requires =
 379:/usr/include/c++/14/bits/basic_string.h **** 	       !__are_same<_Tp, _CharT*>::__value
 380:/usr/include/c++/14/bits/basic_string.h **** 	       && !__are_same<_Tp, const _CharT*>::__value
 381:/usr/include/c++/14/bits/basic_string.h **** 	       && !__are_same<_Tp, iterator>::__value
 382:/usr/include/c++/14/bits/basic_string.h **** 	       && !__are_same<_Tp, const_iterator>::__value>
 383:/usr/include/c++/14/bits/basic_string.h **** 	struct __enable_if_not_native_iterator
 384:/usr/include/c++/14/bits/basic_string.h **** 	{ typedef basic_string& __type; };
 385:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
 386:/usr/include/c++/14/bits/basic_string.h **** 	struct __enable_if_not_native_iterator<_Tp, false> { };
 387:/usr/include/c++/14/bits/basic_string.h **** #endif
 388:/usr/include/c++/14/bits/basic_string.h **** 
 389:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 390:/usr/include/c++/14/bits/basic_string.h ****       size_type
 391:/usr/include/c++/14/bits/basic_string.h ****       _M_check(size_type __pos, const char* __s) const
 392:/usr/include/c++/14/bits/basic_string.h ****       {
 393:/usr/include/c++/14/bits/basic_string.h **** 	if (__pos > this->size())
GAS LISTING linobj/Ch02_03.s 			page 15


 394:/usr/include/c++/14/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("%s: __pos (which is %zu) > "
 395:/usr/include/c++/14/bits/basic_string.h **** 				       "this->size() (which is %zu)"),
 396:/usr/include/c++/14/bits/basic_string.h **** 				   __s, __pos, this->size());
 397:/usr/include/c++/14/bits/basic_string.h **** 	return __pos;
 398:/usr/include/c++/14/bits/basic_string.h ****       }
 399:/usr/include/c++/14/bits/basic_string.h **** 
 400:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 401:/usr/include/c++/14/bits/basic_string.h ****       void
 402:/usr/include/c++/14/bits/basic_string.h ****       _M_check_length(size_type __n1, size_type __n2, const char* __s) const
 403:/usr/include/c++/14/bits/basic_string.h ****       {
 404:/usr/include/c++/14/bits/basic_string.h **** 	if (this->max_size() - (this->size() - __n1) < __n2)
 405:/usr/include/c++/14/bits/basic_string.h **** 	  __throw_length_error(__N(__s));
 406:/usr/include/c++/14/bits/basic_string.h ****       }
 407:/usr/include/c++/14/bits/basic_string.h **** 
 408:/usr/include/c++/14/bits/basic_string.h **** 
 409:/usr/include/c++/14/bits/basic_string.h ****       // NB: _M_limit doesn't check for a bad __pos value.
 410:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 411:/usr/include/c++/14/bits/basic_string.h ****       size_type
 412:/usr/include/c++/14/bits/basic_string.h ****       _M_limit(size_type __pos, size_type __off) const _GLIBCXX_NOEXCEPT
 413:/usr/include/c++/14/bits/basic_string.h ****       {
 414:/usr/include/c++/14/bits/basic_string.h **** 	const bool __testoff =  __off < this->size() - __pos;
 415:/usr/include/c++/14/bits/basic_string.h **** 	return __testoff ? __off : this->size() - __pos;
 416:/usr/include/c++/14/bits/basic_string.h ****       }
 417:/usr/include/c++/14/bits/basic_string.h **** 
 418:/usr/include/c++/14/bits/basic_string.h ****       // True if _Rep and source do not overlap.
 419:/usr/include/c++/14/bits/basic_string.h ****       bool
 420:/usr/include/c++/14/bits/basic_string.h ****       _M_disjunct(const _CharT* __s) const _GLIBCXX_NOEXCEPT
 421:/usr/include/c++/14/bits/basic_string.h ****       {
 422:/usr/include/c++/14/bits/basic_string.h **** 	return (less<const _CharT*>()(__s, _M_data())
 423:/usr/include/c++/14/bits/basic_string.h **** 		|| less<const _CharT*>()(_M_data() + this->size(), __s));
 424:/usr/include/c++/14/bits/basic_string.h ****       }
 425:/usr/include/c++/14/bits/basic_string.h **** 
 426:/usr/include/c++/14/bits/basic_string.h ****       // When __n = 1 way faster than the general multichar
 427:/usr/include/c++/14/bits/basic_string.h ****       // traits_type::copy/move/assign.
 428:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 429:/usr/include/c++/14/bits/basic_string.h ****       static void
 430:/usr/include/c++/14/bits/basic_string.h ****       _S_copy(_CharT* __d, const _CharT* __s, size_type __n)
 431:/usr/include/c++/14/bits/basic_string.h ****       {
 432:/usr/include/c++/14/bits/basic_string.h **** 	if (__n == 1)
 433:/usr/include/c++/14/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 434:/usr/include/c++/14/bits/basic_string.h **** 	else
 435:/usr/include/c++/14/bits/basic_string.h **** 	  traits_type::copy(__d, __s, __n);
 436:/usr/include/c++/14/bits/basic_string.h ****       }
 437:/usr/include/c++/14/bits/basic_string.h **** 
 438:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 439:/usr/include/c++/14/bits/basic_string.h ****       static void
 440:/usr/include/c++/14/bits/basic_string.h ****       _S_move(_CharT* __d, const _CharT* __s, size_type __n)
 441:/usr/include/c++/14/bits/basic_string.h ****       {
 442:/usr/include/c++/14/bits/basic_string.h **** 	if (__n == 1)
 443:/usr/include/c++/14/bits/basic_string.h **** 	  traits_type::assign(*__d, *__s);
 444:/usr/include/c++/14/bits/basic_string.h **** 	else
 445:/usr/include/c++/14/bits/basic_string.h **** 	  traits_type::move(__d, __s, __n);
 446:/usr/include/c++/14/bits/basic_string.h ****       }
 447:/usr/include/c++/14/bits/basic_string.h **** 
 448:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 449:/usr/include/c++/14/bits/basic_string.h ****       static void
 450:/usr/include/c++/14/bits/basic_string.h ****       _S_assign(_CharT* __d, size_type __n, _CharT __c)
GAS LISTING linobj/Ch02_03.s 			page 16


 451:/usr/include/c++/14/bits/basic_string.h ****       {
 452:/usr/include/c++/14/bits/basic_string.h **** 	if (__n == 1)
 453:/usr/include/c++/14/bits/basic_string.h **** 	  traits_type::assign(*__d, __c);
 454:/usr/include/c++/14/bits/basic_string.h **** 	else
 455:/usr/include/c++/14/bits/basic_string.h **** 	  traits_type::assign(__d, __n, __c);
 456:/usr/include/c++/14/bits/basic_string.h ****       }
 457:/usr/include/c++/14/bits/basic_string.h **** 
 458:/usr/include/c++/14/bits/basic_string.h ****       // _S_copy_chars is a separate template to permit specialization
 459:/usr/include/c++/14/bits/basic_string.h ****       // to optimize for the common case of pointers as iterators.
 460:/usr/include/c++/14/bits/basic_string.h ****       template<class _Iterator>
 461:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
 462:/usr/include/c++/14/bits/basic_string.h ****         static void
 463:/usr/include/c++/14/bits/basic_string.h ****         _S_copy_chars(_CharT* __p, _Iterator __k1, _Iterator __k2)
 464:/usr/include/c++/14/bits/basic_string.h ****         {
 465:/usr/include/c++/14/bits/basic_string.h **** 	  for (; __k1 != __k2; ++__k1, (void)++__p)
 466:/usr/include/c++/14/bits/basic_string.h **** 	    traits_type::assign(*__p, *__k1); // These types are off.
 467:/usr/include/c++/14/bits/basic_string.h **** 	}
 468:/usr/include/c++/14/bits/basic_string.h **** 
 469:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 470:/usr/include/c++/14/bits/basic_string.h ****       static void
 471:/usr/include/c++/14/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, iterator __k1, iterator __k2) _GLIBCXX_NOEXCEPT
 472:/usr/include/c++/14/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 473:/usr/include/c++/14/bits/basic_string.h **** 
 474:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 475:/usr/include/c++/14/bits/basic_string.h ****       static void
 476:/usr/include/c++/14/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const_iterator __k1, const_iterator __k2)
 477:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 478:/usr/include/c++/14/bits/basic_string.h ****       { _S_copy_chars(__p, __k1.base(), __k2.base()); }
 479:/usr/include/c++/14/bits/basic_string.h **** 
 480:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 481:/usr/include/c++/14/bits/basic_string.h ****       static void
 482:/usr/include/c++/14/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, _CharT* __k1, _CharT* __k2) _GLIBCXX_NOEXCEPT
 483:/usr/include/c++/14/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 484:/usr/include/c++/14/bits/basic_string.h **** 
 485:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 486:/usr/include/c++/14/bits/basic_string.h ****       static void
 487:/usr/include/c++/14/bits/basic_string.h ****       _S_copy_chars(_CharT* __p, const _CharT* __k1, const _CharT* __k2)
 488:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
 489:/usr/include/c++/14/bits/basic_string.h ****       { _S_copy(__p, __k1, __k2 - __k1); }
 490:/usr/include/c++/14/bits/basic_string.h **** 
 491:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 492:/usr/include/c++/14/bits/basic_string.h ****       static int
 493:/usr/include/c++/14/bits/basic_string.h ****       _S_compare(size_type __n1, size_type __n2) _GLIBCXX_NOEXCEPT
 494:/usr/include/c++/14/bits/basic_string.h ****       {
 495:/usr/include/c++/14/bits/basic_string.h **** 	const difference_type __d = difference_type(__n1 - __n2);
 496:/usr/include/c++/14/bits/basic_string.h **** 
 497:/usr/include/c++/14/bits/basic_string.h **** 	if (__d > __gnu_cxx::__numeric_traits<int>::__max)
 498:/usr/include/c++/14/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__max;
 499:/usr/include/c++/14/bits/basic_string.h **** 	else if (__d < __gnu_cxx::__numeric_traits<int>::__min)
 500:/usr/include/c++/14/bits/basic_string.h **** 	  return __gnu_cxx::__numeric_traits<int>::__min;
 501:/usr/include/c++/14/bits/basic_string.h **** 	else
 502:/usr/include/c++/14/bits/basic_string.h **** 	  return int(__d);
 503:/usr/include/c++/14/bits/basic_string.h ****       }
 504:/usr/include/c++/14/bits/basic_string.h **** 
 505:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 506:/usr/include/c++/14/bits/basic_string.h ****       void
 507:/usr/include/c++/14/bits/basic_string.h ****       _M_assign(const basic_string&);
GAS LISTING linobj/Ch02_03.s 			page 17


 508:/usr/include/c++/14/bits/basic_string.h **** 
 509:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 510:/usr/include/c++/14/bits/basic_string.h ****       void
 511:/usr/include/c++/14/bits/basic_string.h ****       _M_mutate(size_type __pos, size_type __len1, const _CharT* __s,
 512:/usr/include/c++/14/bits/basic_string.h **** 		size_type __len2);
 513:/usr/include/c++/14/bits/basic_string.h **** 
 514:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 515:/usr/include/c++/14/bits/basic_string.h ****       void
 516:/usr/include/c++/14/bits/basic_string.h ****       _M_erase(size_type __pos, size_type __n);
 517:/usr/include/c++/14/bits/basic_string.h **** 
 518:/usr/include/c++/14/bits/basic_string.h ****     public:
 519:/usr/include/c++/14/bits/basic_string.h ****       // Construct/copy/destroy:
 520:/usr/include/c++/14/bits/basic_string.h ****       // NB: We overload ctors in some cases instead of using default
 521:/usr/include/c++/14/bits/basic_string.h ****       // arguments, per 17.4.4.4 para. 2 item 2.
 522:/usr/include/c++/14/bits/basic_string.h **** 
 523:/usr/include/c++/14/bits/basic_string.h ****       /**
 524:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Default constructor creates an empty string.
 525:/usr/include/c++/14/bits/basic_string.h ****        */
 526:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 527:/usr/include/c++/14/bits/basic_string.h ****       basic_string()
 528:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT_IF(is_nothrow_default_constructible<_Alloc>::value)
 529:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 530:/usr/include/c++/14/bits/basic_string.h ****       {
 531:/usr/include/c++/14/bits/basic_string.h **** 	_M_init_local_buf();
 532:/usr/include/c++/14/bits/basic_string.h **** 	_M_set_length(0);
 533:/usr/include/c++/14/bits/basic_string.h ****       }
 534:/usr/include/c++/14/bits/basic_string.h **** 
 535:/usr/include/c++/14/bits/basic_string.h ****       /**
 536:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct an empty string using allocator @a a.
 537:/usr/include/c++/14/bits/basic_string.h ****        */
 538:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 539:/usr/include/c++/14/bits/basic_string.h ****       explicit
 540:/usr/include/c++/14/bits/basic_string.h ****       basic_string(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 541:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 542:/usr/include/c++/14/bits/basic_string.h ****       {
 543:/usr/include/c++/14/bits/basic_string.h **** 	_M_init_local_buf();
 544:/usr/include/c++/14/bits/basic_string.h **** 	_M_set_length(0);
 545:/usr/include/c++/14/bits/basic_string.h ****       }
 546:/usr/include/c++/14/bits/basic_string.h **** 
 547:/usr/include/c++/14/bits/basic_string.h ****       /**
 548:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string with copy of value of @a __str.
 549:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string.
 550:/usr/include/c++/14/bits/basic_string.h ****        */
 551:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 552:/usr/include/c++/14/bits/basic_string.h ****       basic_string(const basic_string& __str)
 553:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(),
 554:/usr/include/c++/14/bits/basic_string.h **** 		    _Alloc_traits::_S_select_on_copy(__str._M_get_allocator()))
 555:/usr/include/c++/14/bits/basic_string.h ****       {
 556:/usr/include/c++/14/bits/basic_string.h **** 	_M_construct(__str._M_data(), __str._M_data() + __str.length(),
 557:/usr/include/c++/14/bits/basic_string.h **** 		     std::forward_iterator_tag());
 558:/usr/include/c++/14/bits/basic_string.h ****       }
 559:/usr/include/c++/14/bits/basic_string.h **** 
 560:/usr/include/c++/14/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 561:/usr/include/c++/14/bits/basic_string.h ****       // 2583. no way to supply an allocator for basic_string(str, pos)
 562:/usr/include/c++/14/bits/basic_string.h ****       /**
 563:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 564:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string.
GAS LISTING linobj/Ch02_03.s 			page 18


 565:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 566:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 567:/usr/include/c++/14/bits/basic_string.h ****        */
 568:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 569:/usr/include/c++/14/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 570:/usr/include/c++/14/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 571:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 572:/usr/include/c++/14/bits/basic_string.h ****       {
 573:/usr/include/c++/14/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 574:/usr/include/c++/14/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 575:/usr/include/c++/14/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, npos),
 576:/usr/include/c++/14/bits/basic_string.h **** 		     std::forward_iterator_tag());
 577:/usr/include/c++/14/bits/basic_string.h ****       }
 578:/usr/include/c++/14/bits/basic_string.h **** 
 579:/usr/include/c++/14/bits/basic_string.h ****       /**
 580:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 581:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string.
 582:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 583:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 584:/usr/include/c++/14/bits/basic_string.h ****        */
 585:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 586:/usr/include/c++/14/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 587:/usr/include/c++/14/bits/basic_string.h **** 		   size_type __n)
 588:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data())
 589:/usr/include/c++/14/bits/basic_string.h ****       {
 590:/usr/include/c++/14/bits/basic_string.h **** 	const _CharT* __start = __str._M_data()
 591:/usr/include/c++/14/bits/basic_string.h **** 	  + __str._M_check(__pos, "basic_string::basic_string");
 592:/usr/include/c++/14/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n),
 593:/usr/include/c++/14/bits/basic_string.h **** 		     std::forward_iterator_tag());
 594:/usr/include/c++/14/bits/basic_string.h ****       }
 595:/usr/include/c++/14/bits/basic_string.h **** 
 596:/usr/include/c++/14/bits/basic_string.h ****       /**
 597:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string as copy of a substring.
 598:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string.
 599:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __pos  Index of first character to copy from.
 600:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 601:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use.
 602:/usr/include/c++/14/bits/basic_string.h ****        */
 603:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 604:/usr/include/c++/14/bits/basic_string.h ****       basic_string(const basic_string& __str, size_type __pos,
 605:/usr/include/c++/14/bits/basic_string.h **** 		   size_type __n, const _Alloc& __a)
 606:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 607:/usr/include/c++/14/bits/basic_string.h ****       {
 608:/usr/include/c++/14/bits/basic_string.h **** 	const _CharT* __start
 609:/usr/include/c++/14/bits/basic_string.h **** 	  = __str._M_data() + __str._M_check(__pos, "string::string");
 610:/usr/include/c++/14/bits/basic_string.h **** 	_M_construct(__start, __start + __str._M_limit(__pos, __n),
 611:/usr/include/c++/14/bits/basic_string.h **** 		     std::forward_iterator_tag());
 612:/usr/include/c++/14/bits/basic_string.h ****       }
 613:/usr/include/c++/14/bits/basic_string.h **** 
 614:/usr/include/c++/14/bits/basic_string.h ****       /**
 615:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string initialized by a character %array.
 616:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __s  Source character %array.
 617:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __n  Number of characters to copy.
 618:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 619:/usr/include/c++/14/bits/basic_string.h ****        *
 620:/usr/include/c++/14/bits/basic_string.h ****        *  NB: @a __s must have at least @a __n characters, &apos;\\0&apos;
 621:/usr/include/c++/14/bits/basic_string.h ****        *  has no special meaning.
GAS LISTING linobj/Ch02_03.s 			page 19


 622:/usr/include/c++/14/bits/basic_string.h ****        */
 623:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 624:/usr/include/c++/14/bits/basic_string.h ****       basic_string(const _CharT* __s, size_type __n,
 625:/usr/include/c++/14/bits/basic_string.h **** 		   const _Alloc& __a = _Alloc())
 626:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 627:/usr/include/c++/14/bits/basic_string.h ****       {
 628:/usr/include/c++/14/bits/basic_string.h **** 	// NB: Not required, but considered best practice.
 629:/usr/include/c++/14/bits/basic_string.h **** 	if (__s == 0 && __n > 0)
 630:/usr/include/c++/14/bits/basic_string.h **** 	  std::__throw_logic_error(__N("basic_string: "
 631:/usr/include/c++/14/bits/basic_string.h **** 				       "construction from null is not valid"));
 632:/usr/include/c++/14/bits/basic_string.h **** 	_M_construct(__s, __s + __n, std::forward_iterator_tag());
 633:/usr/include/c++/14/bits/basic_string.h ****       }
 634:/usr/include/c++/14/bits/basic_string.h **** 
 635:/usr/include/c++/14/bits/basic_string.h ****       /**
 636:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string as copy of a C string.
 637:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __s  Source C string.
 638:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 639:/usr/include/c++/14/bits/basic_string.h ****        */
 640:/usr/include/c++/14/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 641:/usr/include/c++/14/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 642:/usr/include/c++/14/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 643:/usr/include/c++/14/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 644:/usr/include/c++/14/bits/basic_string.h **** #endif
 645:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 646:/usr/include/c++/14/bits/basic_string.h ****       basic_string(const _CharT* __s, const _Alloc& __a = _Alloc())
 647:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 648:/usr/include/c++/14/bits/basic_string.h ****       {
 649:/usr/include/c++/14/bits/basic_string.h **** 	// NB: Not required, but considered best practice.
 650:/usr/include/c++/14/bits/basic_string.h **** 	if (__s == 0)
 651:/usr/include/c++/14/bits/basic_string.h **** 	  std::__throw_logic_error(__N("basic_string: "
 652:/usr/include/c++/14/bits/basic_string.h **** 				       "construction from null is not valid"));
 653:/usr/include/c++/14/bits/basic_string.h **** 	const _CharT* __end = __s + traits_type::length(__s);
 654:/usr/include/c++/14/bits/basic_string.h **** 	_M_construct(__s, __end, forward_iterator_tag());
 655:/usr/include/c++/14/bits/basic_string.h ****       }
 656:/usr/include/c++/14/bits/basic_string.h **** 
 657:/usr/include/c++/14/bits/basic_string.h ****       /**
 658:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string as multiple characters.
 659:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __n  Number of characters.
 660:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __c  Character to use.
 661:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 662:/usr/include/c++/14/bits/basic_string.h ****        */
 663:/usr/include/c++/14/bits/basic_string.h **** #if __cpp_deduction_guides && ! defined _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
 664:/usr/include/c++/14/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 665:/usr/include/c++/14/bits/basic_string.h ****       // 3076. basic_string CTAD ambiguity
 666:/usr/include/c++/14/bits/basic_string.h ****       template<typename = _RequireAllocator<_Alloc>>
 667:/usr/include/c++/14/bits/basic_string.h **** #endif
 668:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 669:/usr/include/c++/14/bits/basic_string.h ****       basic_string(size_type __n, _CharT __c, const _Alloc& __a = _Alloc())
 670:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 671:/usr/include/c++/14/bits/basic_string.h ****       { _M_construct(__n, __c); }
  68              		.loc 4 671 21 view .LVU7
  69 0002 BA2D0000 		movl	$45, %edx
  69      00
  70 0007 BE4B0000 		movl	$75, %esi
  70      00
  71              	.LBE687:
  72              	.LBE686:
GAS LISTING linobj/Ch02_03.s 			page 20


  73              	.LBE685:
  15:Ch02_03.cpp   ****     const char nl = '\n';
  74              		.loc 1 15 1 view .LVU8
  75 000c 4156     		pushq	%r14
  76              		.cfi_def_cfa_offset 24
  77              		.cfi_offset 14, -24
  78 000e 4155     		pushq	%r13
  79              		.cfi_def_cfa_offset 32
  80              		.cfi_offset 13, -32
  81 0010 4154     		pushq	%r12
  82              		.cfi_def_cfa_offset 40
  83              		.cfi_offset 12, -40
  84 0012 55       		pushq	%rbp
  85              		.cfi_def_cfa_offset 48
  86              		.cfi_offset 6, -48
  87 0013 53       		pushq	%rbx
  88              		.cfi_def_cfa_offset 56
  89              		.cfi_offset 3, -56
  90 0014 4883EC78 		subq	$120, %rsp
  91              		.cfi_def_cfa_offset 176
  92              	.LVL1:
  93              	.LBB701:
  94              	.LBI685:
 669:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
  95              		.loc 4 669 7 is_stmt 1 view .LVU9
  96              	.LBB699:
  97              	.LBB697:
  98              	.LBB688:
  99              	.LBI688:
 232:/usr/include/c++/14/bits/basic_string.h ****       {
 100              		.loc 4 232 7 view .LVU10
 232:/usr/include/c++/14/bits/basic_string.h ****       {
 101              		.loc 4 232 7 is_stmt 0 view .LVU11
 102              	.LBE688:
 103              	.LBB689:
 104              	.LBI689:
 193:/usr/include/c++/14/bits/basic_string.h **** 	: allocator_type(__a), _M_p(__dat) { }
 105              		.loc 4 193 2 is_stmt 1 view .LVU12
 106              	.LBB690:
 107              	.LBB691:
 108              	.LBB692:
 109              	.LBI692:
 162:/usr/include/c++/14/bits/allocator.h **** 
 163:/usr/include/c++/14/bits/allocator.h ****       __attribute__((__always_inline__))
 164:/usr/include/c++/14/bits/allocator.h ****       _GLIBCXX20_CONSTEXPR
 165:/usr/include/c++/14/bits/allocator.h ****       allocator(const allocator& __a) _GLIBCXX_NOTHROW
 110              		.loc 2 165 7 view .LVU13
 111              	.LBB693:
 112              	.LBI693:
  89:/usr/include/c++/14/bits/new_allocator.h **** 
  90:/usr/include/c++/14/bits/new_allocator.h ****       __attribute__((__always_inline__))
  91:/usr/include/c++/14/bits/new_allocator.h ****       _GLIBCXX20_CONSTEXPR
  92:/usr/include/c++/14/bits/new_allocator.h ****       __new_allocator(const __new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
 113              		.loc 3 92 7 view .LVU14
 114              		.loc 3 92 7 is_stmt 0 view .LVU15
 115              	.LBE693:
 116              	.LBE692:
GAS LISTING linobj/Ch02_03.s 			page 21


 194:/usr/include/c++/14/bits/basic_string.h **** 
 117              		.loc 4 194 25 discriminator 1 view .LVU16
 118 0018 4C8D7424 		leaq	48(%rsp), %r14
 118      30
 119              	.LVL2:
 194:/usr/include/c++/14/bits/basic_string.h **** 
 120              		.loc 4 194 25 discriminator 1 view .LVU17
 121 001d 488D4424 		leaq	64(%rsp), %rax
 121      40
 122              	.LVL3:
 194:/usr/include/c++/14/bits/basic_string.h **** 
 123              		.loc 4 194 25 discriminator 1 view .LVU18
 124              	.LBE691:
 125              	.LBE690:
 126              	.LBE689:
 127              		.loc 4 671 21 view .LVU19
 128 0022 4C89F7   		movq	%r14, %rdi
 129              	.LBB696:
 130              	.LBB695:
 131              	.LBB694:
 194:/usr/include/c++/14/bits/basic_string.h **** 
 132              		.loc 4 194 25 discriminator 1 view .LVU20
 133 0025 48894424 		movq	%rax, 48(%rsp)
 133      30
 134              	.LVL4:
 194:/usr/include/c++/14/bits/basic_string.h **** 
 135              		.loc 4 194 25 discriminator 1 view .LVU21
 136              	.LBE694:
 137              	.LBE695:
 138              	.LBE696:
 139              	.LBE697:
 140              	.LBE699:
 141              	.LBE701:
 142              	.LBB702:
 143              	.LBB703:
  18:Ch02_03.cpp   **** 
  19:Ch02_03.cpp   ****     MulI16();
  20:Ch02_03.cpp   ****     std::cout << nl << sep << nl;
  21:Ch02_03.cpp   ****     MulI32a();
  22:Ch02_03.cpp   ****     std::cout << nl << sep << nl;
  23:Ch02_03.cpp   ****     MulI32b();
  24:Ch02_03.cpp   ****     return 0;
  25:Ch02_03.cpp   **** }
  26:Ch02_03.cpp   **** 
  27:Ch02_03.cpp   **** static void MulI16(void)
  28:Ch02_03.cpp   **** {
  29:Ch02_03.cpp   ****     const char nl = '\n';
  30:Ch02_03.cpp   ****     XmmVal a, b, c[2];
  31:Ch02_03.cpp   **** 
  32:Ch02_03.cpp   ****     a.m_I16[0] = 10;        b.m_I16[0] = -5;
  33:Ch02_03.cpp   ****     a.m_I16[1] = 3000;      b.m_I16[1] = 100;
  34:Ch02_03.cpp   ****     a.m_I16[2] = -2000;     b.m_I16[2] = -9000;
  35:Ch02_03.cpp   ****     a.m_I16[3] = 42;        b.m_I16[3] = 1000;
  36:Ch02_03.cpp   ****     a.m_I16[4] = -5000;     b.m_I16[4] = 25000;
  37:Ch02_03.cpp   ****     a.m_I16[5] = 8;         b.m_I16[5] = 16384;
  38:Ch02_03.cpp   ****     a.m_I16[6] = 10000;     b.m_I16[6] = 3500;
  39:Ch02_03.cpp   ****     a.m_I16[7] = -60;       b.m_I16[7] = 6000;
GAS LISTING linobj/Ch02_03.s 			page 22


  40:Ch02_03.cpp   **** 
  41:Ch02_03.cpp   ****     MulI16_Iavx(c, &a, &b);
 144              		.loc 1 41 16 view .LVU22
 145 002a 4C8D6C24 		leaq	32(%rsp), %r13
 145      20
 146 002f 4C8D6424 		leaq	16(%rsp), %r12
 146      10
 147              	.LEHB0:
 148              	.LBE703:
 149              	.LBE702:
 150              	.LBB795:
 151              	.LBB700:
 152              	.LBB698:
 153              		.loc 4 671 21 view .LVU23
 154 0034 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc
 154      00
 155              	.LVL5:
 156              	.LEHE0:
 157              		.loc 4 671 21 view .LVU24
 158              	.LBE698:
 159              	.LBE700:
 160              	.LBE795:
 161              	.LBB796:
 162              	.LBI796:
 166:/usr/include/c++/14/bits/allocator.h ****       : __allocator_base<_Tp>(__a) { }
 167:/usr/include/c++/14/bits/allocator.h **** 
 168:/usr/include/c++/14/bits/allocator.h **** #if __cplusplus >= 201103L
 169:/usr/include/c++/14/bits/allocator.h ****       // Avoid implicit deprecation.
 170:/usr/include/c++/14/bits/allocator.h ****       allocator& operator=(const allocator&) = default;
 171:/usr/include/c++/14/bits/allocator.h **** #endif
 172:/usr/include/c++/14/bits/allocator.h **** 
 173:/usr/include/c++/14/bits/allocator.h ****       template<typename _Tp1>
 174:/usr/include/c++/14/bits/allocator.h **** 	__attribute__((__always_inline__))
 175:/usr/include/c++/14/bits/allocator.h **** 	_GLIBCXX20_CONSTEXPR
 176:/usr/include/c++/14/bits/allocator.h **** 	allocator(const allocator<_Tp1>&) _GLIBCXX_NOTHROW { }
 177:/usr/include/c++/14/bits/allocator.h **** 
 178:/usr/include/c++/14/bits/allocator.h ****       __attribute__((__always_inline__))
 179:/usr/include/c++/14/bits/allocator.h **** #if __cpp_constexpr_dynamic_alloc
 180:/usr/include/c++/14/bits/allocator.h ****       constexpr
 181:/usr/include/c++/14/bits/allocator.h **** #endif
 182:/usr/include/c++/14/bits/allocator.h ****       ~allocator() _GLIBCXX_NOTHROW { }
 163              		.loc 2 182 7 is_stmt 1 view .LVU25
 164              	.LBB797:
 165              	.LBI797:
  93:/usr/include/c++/14/bits/new_allocator.h **** 
  94:/usr/include/c++/14/bits/new_allocator.h ****       template<typename _Tp1>
  95:/usr/include/c++/14/bits/new_allocator.h **** 	__attribute__((__always_inline__))
  96:/usr/include/c++/14/bits/new_allocator.h **** 	_GLIBCXX20_CONSTEXPR
  97:/usr/include/c++/14/bits/new_allocator.h **** 	__new_allocator(const __new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  98:/usr/include/c++/14/bits/new_allocator.h **** 
  99:/usr/include/c++/14/bits/new_allocator.h **** #if __cplusplus >= 201103L
 100:/usr/include/c++/14/bits/new_allocator.h ****       __new_allocator& operator=(const __new_allocator&) = default;
 101:/usr/include/c++/14/bits/new_allocator.h **** #endif
 102:/usr/include/c++/14/bits/new_allocator.h **** 
 103:/usr/include/c++/14/bits/new_allocator.h **** #if __cplusplus <= 201703L
 104:/usr/include/c++/14/bits/new_allocator.h ****       ~__new_allocator() _GLIBCXX_USE_NOEXCEPT { }
 166              		.loc 3 104 7 view .LVU26
GAS LISTING linobj/Ch02_03.s 			page 23


 167              		.loc 3 104 7 is_stmt 0 view .LVU27
 168              	.LBE797:
 169              	.LBE796:
  19:Ch02_03.cpp   ****     std::cout << nl << sep << nl;
 170              		.loc 1 19 5 is_stmt 1 view .LVU28
 171              	.LBB798:
 172              	.LBI702:
  27:Ch02_03.cpp   **** {
 173              		.loc 1 27 13 view .LVU29
 174              	.LBB793:
  29:Ch02_03.cpp   ****     XmmVal a, b, c[2];
 175              		.loc 1 29 5 view .LVU30
  30:Ch02_03.cpp   **** 
 176              		.loc 1 30 5 view .LVU31
  32:Ch02_03.cpp   ****     a.m_I16[1] = 3000;      b.m_I16[1] = 100;
 177              		.loc 1 32 5 view .LVU32
  32:Ch02_03.cpp   ****     a.m_I16[1] = 3000;      b.m_I16[1] = 100;
 178              		.loc 1 32 22 view .LVU33
  33:Ch02_03.cpp   ****     a.m_I16[2] = -2000;     b.m_I16[2] = -9000;
 179              		.loc 1 33 5 view .LVU34
  33:Ch02_03.cpp   ****     a.m_I16[2] = -2000;     b.m_I16[2] = -9000;
 180              		.loc 1 33 24 view .LVU35
  34:Ch02_03.cpp   ****     a.m_I16[3] = 42;        b.m_I16[3] = 1000;
 181              		.loc 1 34 5 view .LVU36
  34:Ch02_03.cpp   ****     a.m_I16[3] = 42;        b.m_I16[3] = 1000;
 182              		.loc 1 34 25 view .LVU37
  35:Ch02_03.cpp   ****     a.m_I16[4] = -5000;     b.m_I16[4] = 25000;
 183              		.loc 1 35 5 view .LVU38
  35:Ch02_03.cpp   ****     a.m_I16[4] = -5000;     b.m_I16[4] = 25000;
 184              		.loc 1 35 22 view .LVU39
  36:Ch02_03.cpp   ****     a.m_I16[5] = 8;         b.m_I16[5] = 16384;
 185              		.loc 1 36 5 view .LVU40
  36:Ch02_03.cpp   ****     a.m_I16[5] = 8;         b.m_I16[5] = 16384;
 186              		.loc 1 36 25 view .LVU41
  37:Ch02_03.cpp   ****     a.m_I16[6] = 10000;     b.m_I16[6] = 3500;
 187              		.loc 1 37 5 view .LVU42
  37:Ch02_03.cpp   ****     a.m_I16[6] = 10000;     b.m_I16[6] = 3500;
 188              		.loc 1 37 21 view .LVU43
  38:Ch02_03.cpp   ****     a.m_I16[7] = -60;       b.m_I16[7] = 6000;
 189              		.loc 1 38 5 view .LVU44
  38:Ch02_03.cpp   ****     a.m_I16[7] = -60;       b.m_I16[7] = 6000;
 190              		.loc 1 38 25 view .LVU45
  39:Ch02_03.cpp   **** 
 191              		.loc 1 39 5 view .LVU46
 192              		.loc 1 41 16 is_stmt 0 view .LVU47
 193 0039 488D6C24 		leaq	80(%rsp), %rbp
 193      50
 194 003e 4C89EA   		movq	%r13, %rdx
 195 0041 4C89E6   		movq	%r12, %rsi
  32:Ch02_03.cpp   ****     a.m_I16[1] = 3000;      b.m_I16[1] = 100;
 196              		.loc 1 32 16 view .LVU48
 197 0044 C5F96F05 		vmovdqa	.LC0(%rip), %xmm0
 197      00000000 
 198              		.loc 1 41 16 view .LVU49
 199 004c 4889EF   		movq	%rbp, %rdi
  32:Ch02_03.cpp   ****     a.m_I16[1] = 3000;      b.m_I16[1] = 100;
 200              		.loc 1 32 16 view .LVU50
GAS LISTING linobj/Ch02_03.s 			page 24


 201 004f C5F97F44 		vmovdqa	%xmm0, 16(%rsp)
 201      2410
  39:Ch02_03.cpp   **** 
 202              		.loc 1 39 23 is_stmt 1 view .LVU51
  32:Ch02_03.cpp   ****     a.m_I16[1] = 3000;      b.m_I16[1] = 100;
 203              		.loc 1 32 33 is_stmt 0 view .LVU52
 204 0055 C5F96F05 		vmovdqa	.LC1(%rip), %xmm0
 204      00000000 
 205 005d C5F97F44 		vmovdqa	%xmm0, 32(%rsp)
 205      2420
 206              		.loc 1 41 5 is_stmt 1 view .LVU53
 207              	.LEHB1:
 208              		.loc 1 41 16 is_stmt 0 view .LVU54
 209 0063 E8000000 		call	_Z11MulI16_IavxP6XmmValPKS_S2_
 209      00
 210              	.LVL6:
  42:Ch02_03.cpp   **** 
  43:Ch02_03.cpp   ****     std::cout << "\nResults for MulI16_Iavx\n";
 211              		.loc 1 43 5 is_stmt 1 view .LVU55
 212              	.LBB704:
 213              	.LBI704:
 214              		.file 5 "/usr/include/c++/14/ostream"
   1:/usr/include/c++/14/ostream **** // Output streams -*- C++ -*-
   2:/usr/include/c++/14/ostream **** 
   3:/usr/include/c++/14/ostream **** // Copyright (C) 1997-2024 Free Software Foundation, Inc.
   4:/usr/include/c++/14/ostream **** //
   5:/usr/include/c++/14/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/14/ostream **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/14/ostream **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/14/ostream **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/14/ostream **** // any later version.
  10:/usr/include/c++/14/ostream **** 
  11:/usr/include/c++/14/ostream **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/14/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/14/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/14/ostream **** // GNU General Public License for more details.
  15:/usr/include/c++/14/ostream **** 
  16:/usr/include/c++/14/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/14/ostream **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/14/ostream **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/14/ostream **** 
  20:/usr/include/c++/14/ostream **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/14/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/14/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/14/ostream **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/14/ostream **** 
  25:/usr/include/c++/14/ostream **** /** @file include/ostream
  26:/usr/include/c++/14/ostream ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/14/ostream ****  */
  28:/usr/include/c++/14/ostream **** 
  29:/usr/include/c++/14/ostream **** //
  30:/usr/include/c++/14/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  31:/usr/include/c++/14/ostream **** //
  32:/usr/include/c++/14/ostream **** 
  33:/usr/include/c++/14/ostream **** #ifndef _GLIBCXX_OSTREAM
  34:/usr/include/c++/14/ostream **** #define _GLIBCXX_OSTREAM 1
  35:/usr/include/c++/14/ostream **** 
GAS LISTING linobj/Ch02_03.s 			page 25


  36:/usr/include/c++/14/ostream **** #pragma GCC system_header
  37:/usr/include/c++/14/ostream **** 
  38:/usr/include/c++/14/ostream **** #include <bits/requires_hosted.h> // iostreams
  39:/usr/include/c++/14/ostream **** 
  40:/usr/include/c++/14/ostream **** #include <ios>
  41:/usr/include/c++/14/ostream **** #include <bits/ostream_insert.h>
  42:/usr/include/c++/14/ostream **** #if __cplusplus > 202002L
  43:/usr/include/c++/14/ostream **** # include <format>
  44:/usr/include/c++/14/ostream **** #endif
  45:/usr/include/c++/14/ostream **** 
  46:/usr/include/c++/14/ostream **** # define __glibcxx_want_print
  47:/usr/include/c++/14/ostream **** #include <bits/version.h> // __glibcxx_syncbuf
  48:/usr/include/c++/14/ostream **** 
  49:/usr/include/c++/14/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  50:/usr/include/c++/14/ostream **** {
  51:/usr/include/c++/14/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  52:/usr/include/c++/14/ostream **** 
  53:/usr/include/c++/14/ostream ****   /**
  54:/usr/include/c++/14/ostream ****    *  @brief  Template class basic_ostream.
  55:/usr/include/c++/14/ostream ****    *  @ingroup io
  56:/usr/include/c++/14/ostream ****    *
  57:/usr/include/c++/14/ostream ****    *  @tparam _CharT  Type of character stream.
  58:/usr/include/c++/14/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  59:/usr/include/c++/14/ostream ****    *                   char_traits<_CharT>.
  60:/usr/include/c++/14/ostream ****    *
  61:/usr/include/c++/14/ostream ****    *  This is the base class for all output streams.  It provides text
  62:/usr/include/c++/14/ostream ****    *  formatting of all builtin types, and communicates with any class
  63:/usr/include/c++/14/ostream ****    *  derived from basic_streambuf to do the actual output.
  64:/usr/include/c++/14/ostream ****   */
  65:/usr/include/c++/14/ostream ****   template<typename _CharT, typename _Traits>
  66:/usr/include/c++/14/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  67:/usr/include/c++/14/ostream ****     {
  68:/usr/include/c++/14/ostream ****     public:
  69:/usr/include/c++/14/ostream ****       // Types (inherited from basic_ios):
  70:/usr/include/c++/14/ostream ****       typedef _CharT			 		char_type;
  71:/usr/include/c++/14/ostream ****       typedef typename _Traits::int_type 		int_type;
  72:/usr/include/c++/14/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  73:/usr/include/c++/14/ostream ****       typedef typename _Traits::off_type 		off_type;
  74:/usr/include/c++/14/ostream ****       typedef _Traits			 		traits_type;
  75:/usr/include/c++/14/ostream **** 
  76:/usr/include/c++/14/ostream ****       // Non-standard Types:
  77:/usr/include/c++/14/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  78:/usr/include/c++/14/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  79:/usr/include/c++/14/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  80:/usr/include/c++/14/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  81:/usr/include/c++/14/ostream ****       							__num_put_type;
  82:/usr/include/c++/14/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  83:/usr/include/c++/14/ostream **** 
  84:/usr/include/c++/14/ostream ****       /**
  85:/usr/include/c++/14/ostream ****        *  @brief  Base constructor.
  86:/usr/include/c++/14/ostream ****        *
  87:/usr/include/c++/14/ostream ****        *  This ctor is almost never called by the user directly, rather from
  88:/usr/include/c++/14/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  89:/usr/include/c++/14/ostream ****        *  their own stream buffer.
  90:/usr/include/c++/14/ostream ****       */
  91:/usr/include/c++/14/ostream ****       explicit
  92:/usr/include/c++/14/ostream ****       basic_ostream(__streambuf_type* __sb)
GAS LISTING linobj/Ch02_03.s 			page 26


  93:/usr/include/c++/14/ostream ****       { this->init(__sb); }
  94:/usr/include/c++/14/ostream **** 
  95:/usr/include/c++/14/ostream ****       /**
  96:/usr/include/c++/14/ostream ****        *  @brief  Base destructor.
  97:/usr/include/c++/14/ostream ****        *
  98:/usr/include/c++/14/ostream ****        *  This does very little apart from providing a virtual base dtor.
  99:/usr/include/c++/14/ostream ****       */
 100:/usr/include/c++/14/ostream ****       virtual
 101:/usr/include/c++/14/ostream ****       ~basic_ostream() { }
 102:/usr/include/c++/14/ostream **** 
 103:/usr/include/c++/14/ostream ****       /// Safe prefix/suffix operations.
 104:/usr/include/c++/14/ostream ****       class sentry;
 105:/usr/include/c++/14/ostream ****       friend class sentry;
 106:/usr/include/c++/14/ostream **** 
 107:/usr/include/c++/14/ostream ****       ///@{
 108:/usr/include/c++/14/ostream ****       /**
 109:/usr/include/c++/14/ostream ****        *  @brief  Interface for manipulators.
 110:/usr/include/c++/14/ostream ****        *
 111:/usr/include/c++/14/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 112:/usr/include/c++/14/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 113:/usr/include/c++/14/ostream ****        *  information, see the iomanip header.
 114:/usr/include/c++/14/ostream ****       */
 115:/usr/include/c++/14/ostream ****       __ostream_type&
 116:/usr/include/c++/14/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 117:/usr/include/c++/14/ostream ****       {
 118:/usr/include/c++/14/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 119:/usr/include/c++/14/ostream **** 	// DR 60. What is a formatted input function?
 120:/usr/include/c++/14/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 121:/usr/include/c++/14/ostream **** 	return __pf(*this);
 122:/usr/include/c++/14/ostream ****       }
 123:/usr/include/c++/14/ostream **** 
 124:/usr/include/c++/14/ostream ****       __ostream_type&
 125:/usr/include/c++/14/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 126:/usr/include/c++/14/ostream ****       {
 127:/usr/include/c++/14/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 128:/usr/include/c++/14/ostream **** 	// DR 60. What is a formatted input function?
 129:/usr/include/c++/14/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 130:/usr/include/c++/14/ostream **** 	__pf(*this);
 131:/usr/include/c++/14/ostream **** 	return *this;
 132:/usr/include/c++/14/ostream ****       }
 133:/usr/include/c++/14/ostream **** 
 134:/usr/include/c++/14/ostream ****       __ostream_type&
 135:/usr/include/c++/14/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 136:/usr/include/c++/14/ostream ****       {
 137:/usr/include/c++/14/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 138:/usr/include/c++/14/ostream **** 	// DR 60. What is a formatted input function?
 139:/usr/include/c++/14/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 140:/usr/include/c++/14/ostream **** 	__pf(*this);
 141:/usr/include/c++/14/ostream **** 	return *this;
 142:/usr/include/c++/14/ostream ****       }
 143:/usr/include/c++/14/ostream ****       ///@}
 144:/usr/include/c++/14/ostream **** 
 145:/usr/include/c++/14/ostream ****       ///@{
 146:/usr/include/c++/14/ostream ****       /**
 147:/usr/include/c++/14/ostream ****        *  @name Inserters
 148:/usr/include/c++/14/ostream ****        *
 149:/usr/include/c++/14/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
GAS LISTING linobj/Ch02_03.s 			page 27


 150:/usr/include/c++/14/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 151:/usr/include/c++/14/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 152:/usr/include/c++/14/ostream ****        *  This can have several effects, concluding with the setting of a
 153:/usr/include/c++/14/ostream ****        *  status flag; see the sentry documentation for more.
 154:/usr/include/c++/14/ostream ****        *
 155:/usr/include/c++/14/ostream ****        *  If the sentry status is good, the function tries to generate
 156:/usr/include/c++/14/ostream ****        *  whatever data is appropriate for the type of the argument.
 157:/usr/include/c++/14/ostream ****        *
 158:/usr/include/c++/14/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 159:/usr/include/c++/14/ostream ****        *  will be turned on in the stream's error state without causing an
 160:/usr/include/c++/14/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 161:/usr/include/c++/14/ostream ****        *  be rethrown.
 162:/usr/include/c++/14/ostream ****       */
 163:/usr/include/c++/14/ostream **** 
 164:/usr/include/c++/14/ostream ****       ///@{
 165:/usr/include/c++/14/ostream ****       /**
 166:/usr/include/c++/14/ostream ****        *  @brief Integer arithmetic inserters
 167:/usr/include/c++/14/ostream ****        *  @param  __n A variable of builtin integral type.
 168:/usr/include/c++/14/ostream ****        *  @return  @c *this if successful
 169:/usr/include/c++/14/ostream ****        *
 170:/usr/include/c++/14/ostream ****        *  These functions use the stream's current locale (specifically, the
 171:/usr/include/c++/14/ostream ****        *  @c num_get facet) to perform numeric formatting.
 172:/usr/include/c++/14/ostream ****       */
 173:/usr/include/c++/14/ostream ****       __ostream_type&
 174:/usr/include/c++/14/ostream ****       operator<<(long __n)
 175:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 176:/usr/include/c++/14/ostream **** 
 177:/usr/include/c++/14/ostream ****       __ostream_type&
 178:/usr/include/c++/14/ostream ****       operator<<(unsigned long __n)
 179:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 180:/usr/include/c++/14/ostream **** 
 181:/usr/include/c++/14/ostream ****       __ostream_type&
 182:/usr/include/c++/14/ostream ****       operator<<(bool __n)
 183:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 184:/usr/include/c++/14/ostream **** 
 185:/usr/include/c++/14/ostream ****       __ostream_type&
 186:/usr/include/c++/14/ostream ****       operator<<(short __n);
 187:/usr/include/c++/14/ostream **** 
 188:/usr/include/c++/14/ostream ****       __ostream_type&
 189:/usr/include/c++/14/ostream ****       operator<<(unsigned short __n)
 190:/usr/include/c++/14/ostream ****       {
 191:/usr/include/c++/14/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 192:/usr/include/c++/14/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 193:/usr/include/c++/14/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 194:/usr/include/c++/14/ostream ****       }
 195:/usr/include/c++/14/ostream **** 
 196:/usr/include/c++/14/ostream ****       __ostream_type&
 197:/usr/include/c++/14/ostream ****       operator<<(int __n);
 198:/usr/include/c++/14/ostream **** 
 199:/usr/include/c++/14/ostream ****       __ostream_type&
 200:/usr/include/c++/14/ostream ****       operator<<(unsigned int __n)
 201:/usr/include/c++/14/ostream ****       {
 202:/usr/include/c++/14/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 203:/usr/include/c++/14/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 204:/usr/include/c++/14/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 205:/usr/include/c++/14/ostream ****       }
 206:/usr/include/c++/14/ostream **** 
GAS LISTING linobj/Ch02_03.s 			page 28


 207:/usr/include/c++/14/ostream **** #ifdef _GLIBCXX_USE_LONG_LONG
 208:/usr/include/c++/14/ostream ****       __ostream_type&
 209:/usr/include/c++/14/ostream ****       operator<<(long long __n)
 210:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 211:/usr/include/c++/14/ostream **** 
 212:/usr/include/c++/14/ostream ****       __ostream_type&
 213:/usr/include/c++/14/ostream ****       operator<<(unsigned long long __n)
 214:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 215:/usr/include/c++/14/ostream **** #endif
 216:/usr/include/c++/14/ostream ****       ///@}
 217:/usr/include/c++/14/ostream **** 
 218:/usr/include/c++/14/ostream ****       ///@{
 219:/usr/include/c++/14/ostream ****       /**
 220:/usr/include/c++/14/ostream ****        *  @brief  Floating point arithmetic inserters
 221:/usr/include/c++/14/ostream ****        *  @param  __f A variable of builtin floating point type.
 222:/usr/include/c++/14/ostream ****        *  @return  @c *this if successful
 223:/usr/include/c++/14/ostream ****        *
 224:/usr/include/c++/14/ostream ****        *  These functions use the stream's current locale (specifically, the
 225:/usr/include/c++/14/ostream ****        *  @c num_get facet) to perform numeric formatting.
 226:/usr/include/c++/14/ostream ****       */
 227:/usr/include/c++/14/ostream ****       __ostream_type&
 228:/usr/include/c++/14/ostream ****       operator<<(double __f)
 229:/usr/include/c++/14/ostream ****       { return _M_insert(__f); }
 230:/usr/include/c++/14/ostream **** 
 231:/usr/include/c++/14/ostream ****       __ostream_type&
 232:/usr/include/c++/14/ostream ****       operator<<(float __f)
 233:/usr/include/c++/14/ostream ****       {
 234:/usr/include/c++/14/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 235:/usr/include/c++/14/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 236:/usr/include/c++/14/ostream **** 	return _M_insert(static_cast<double>(__f));
 237:/usr/include/c++/14/ostream ****       }
 238:/usr/include/c++/14/ostream **** 
 239:/usr/include/c++/14/ostream ****       __ostream_type&
 240:/usr/include/c++/14/ostream ****       operator<<(long double __f)
 241:/usr/include/c++/14/ostream ****       { return _M_insert(__f); }
 242:/usr/include/c++/14/ostream ****       ///@}
 243:/usr/include/c++/14/ostream **** 
 244:/usr/include/c++/14/ostream **** #if defined(__STDCPP_FLOAT16_T__) && defined(_GLIBCXX_DOUBLE_IS_IEEE_BINARY64)
 245:/usr/include/c++/14/ostream ****       __attribute__((__always_inline__))
 246:/usr/include/c++/14/ostream ****       __ostream_type&
 247:/usr/include/c++/14/ostream ****       operator<<(_Float16 __f)
 248:/usr/include/c++/14/ostream ****       {
 249:/usr/include/c++/14/ostream **** 	return _M_insert(static_cast<double>(__f));
 250:/usr/include/c++/14/ostream ****       }
 251:/usr/include/c++/14/ostream **** #endif
 252:/usr/include/c++/14/ostream **** 
 253:/usr/include/c++/14/ostream **** #if defined(__STDCPP_FLOAT32_T__) && defined(_GLIBCXX_DOUBLE_IS_IEEE_BINARY64)
 254:/usr/include/c++/14/ostream ****       __attribute__((__always_inline__))
 255:/usr/include/c++/14/ostream ****       __ostream_type&
 256:/usr/include/c++/14/ostream ****       operator<<(_Float32 __f)
 257:/usr/include/c++/14/ostream ****       {
 258:/usr/include/c++/14/ostream **** 	return _M_insert(static_cast<double>(__f));
 259:/usr/include/c++/14/ostream ****       }
 260:/usr/include/c++/14/ostream **** #endif
 261:/usr/include/c++/14/ostream **** 
 262:/usr/include/c++/14/ostream **** #if defined(__STDCPP_FLOAT64_T__) && defined(_GLIBCXX_DOUBLE_IS_IEEE_BINARY64)
 263:/usr/include/c++/14/ostream ****       __attribute__((__always_inline__))
GAS LISTING linobj/Ch02_03.s 			page 29


 264:/usr/include/c++/14/ostream ****       __ostream_type&
 265:/usr/include/c++/14/ostream ****       operator<<(_Float64 __f)
 266:/usr/include/c++/14/ostream ****       {
 267:/usr/include/c++/14/ostream **** 	return _M_insert(static_cast<double>(__f));
 268:/usr/include/c++/14/ostream ****       }
 269:/usr/include/c++/14/ostream **** #endif
 270:/usr/include/c++/14/ostream **** 
 271:/usr/include/c++/14/ostream **** #if defined(__STDCPP_FLOAT128_T__) && defined(_GLIBCXX_LDOUBLE_IS_IEEE_BINARY128)
 272:/usr/include/c++/14/ostream ****       __attribute__((__always_inline__))
 273:/usr/include/c++/14/ostream ****       __ostream_type&
 274:/usr/include/c++/14/ostream ****       operator<<(_Float128 __f)
 275:/usr/include/c++/14/ostream ****       {
 276:/usr/include/c++/14/ostream **** 	return _M_insert(static_cast<long double>(__f));
 277:/usr/include/c++/14/ostream ****       }
 278:/usr/include/c++/14/ostream **** #endif
 279:/usr/include/c++/14/ostream **** 
 280:/usr/include/c++/14/ostream **** #if defined(__STDCPP_BFLOAT16_T__) && defined(_GLIBCXX_DOUBLE_IS_IEEE_BINARY64)
 281:/usr/include/c++/14/ostream ****       __attribute__((__always_inline__))
 282:/usr/include/c++/14/ostream ****       __ostream_type&
 283:/usr/include/c++/14/ostream ****       operator<<(__gnu_cxx::__bfloat16_t __f)
 284:/usr/include/c++/14/ostream ****       {
 285:/usr/include/c++/14/ostream **** 	return _M_insert(static_cast<double>(__f));
 286:/usr/include/c++/14/ostream ****       }
 287:/usr/include/c++/14/ostream **** #endif
 288:/usr/include/c++/14/ostream **** 
 289:/usr/include/c++/14/ostream ****       /**
 290:/usr/include/c++/14/ostream ****        *  @brief  Pointer arithmetic inserters
 291:/usr/include/c++/14/ostream ****        *  @param  __p A variable of pointer type.
 292:/usr/include/c++/14/ostream ****        *  @return  @c *this if successful
 293:/usr/include/c++/14/ostream ****        *
 294:/usr/include/c++/14/ostream ****        *  These functions use the stream's current locale (specifically, the
 295:/usr/include/c++/14/ostream ****        *  @c num_get facet) to perform numeric formatting.
 296:/usr/include/c++/14/ostream ****       */
 297:/usr/include/c++/14/ostream ****       __ostream_type&
 298:/usr/include/c++/14/ostream ****       operator<<(const void* __p)
 299:/usr/include/c++/14/ostream ****       { return _M_insert(__p); }
 300:/usr/include/c++/14/ostream **** 
 301:/usr/include/c++/14/ostream **** #if __cplusplus >= 201703L
 302:/usr/include/c++/14/ostream ****       __ostream_type&
 303:/usr/include/c++/14/ostream ****       operator<<(nullptr_t)
 304:/usr/include/c++/14/ostream ****       { return *this << "nullptr"; }
 305:/usr/include/c++/14/ostream **** #endif
 306:/usr/include/c++/14/ostream **** 
 307:/usr/include/c++/14/ostream **** #if __cplusplus > 202002L
 308:/usr/include/c++/14/ostream ****       __attribute__((__always_inline__))
 309:/usr/include/c++/14/ostream ****       __ostream_type&
 310:/usr/include/c++/14/ostream ****       operator<<(const volatile void* __p)
 311:/usr/include/c++/14/ostream ****       { return _M_insert(const_cast<const void*>(__p)); }
 312:/usr/include/c++/14/ostream **** #endif
 313:/usr/include/c++/14/ostream **** 
 314:/usr/include/c++/14/ostream ****       /**
 315:/usr/include/c++/14/ostream ****        *  @brief  Extracting from another streambuf.
 316:/usr/include/c++/14/ostream ****        *  @param  __sb  A pointer to a streambuf
 317:/usr/include/c++/14/ostream ****        *
 318:/usr/include/c++/14/ostream ****        *  This function behaves like one of the basic arithmetic extractors,
 319:/usr/include/c++/14/ostream ****        *  in that it also constructs a sentry object and has the same error
 320:/usr/include/c++/14/ostream ****        *  handling behavior.
GAS LISTING linobj/Ch02_03.s 			page 30


 321:/usr/include/c++/14/ostream ****        *
 322:/usr/include/c++/14/ostream ****        *  If @p __sb is NULL, the stream will set failbit in its error state.
 323:/usr/include/c++/14/ostream ****        *
 324:/usr/include/c++/14/ostream ****        *  Characters are extracted from @p __sb and inserted into @c *this
 325:/usr/include/c++/14/ostream ****        *  until one of the following occurs:
 326:/usr/include/c++/14/ostream ****        *
 327:/usr/include/c++/14/ostream ****        *  - the input stream reaches end-of-file,
 328:/usr/include/c++/14/ostream ****        *  - insertion into the output sequence fails (in this case, the
 329:/usr/include/c++/14/ostream ****        *    character that would have been inserted is not extracted), or
 330:/usr/include/c++/14/ostream ****        *  - an exception occurs while getting a character from @p __sb, which
 331:/usr/include/c++/14/ostream ****        *    sets failbit in the error state
 332:/usr/include/c++/14/ostream ****        *
 333:/usr/include/c++/14/ostream ****        *  If the function inserts no characters, failbit is set.
 334:/usr/include/c++/14/ostream ****       */
 335:/usr/include/c++/14/ostream ****       __ostream_type&
 336:/usr/include/c++/14/ostream ****       operator<<(__streambuf_type* __sb);
 337:/usr/include/c++/14/ostream ****       ///@}
 338:/usr/include/c++/14/ostream **** 
 339:/usr/include/c++/14/ostream ****       ///@{
 340:/usr/include/c++/14/ostream ****       /**
 341:/usr/include/c++/14/ostream ****        *  @name Unformatted Output Functions
 342:/usr/include/c++/14/ostream ****        *
 343:/usr/include/c++/14/ostream ****        *  All the unformatted output functions have some common behavior.
 344:/usr/include/c++/14/ostream ****        *  Each starts by constructing a temporary object of type
 345:/usr/include/c++/14/ostream ****        *  std::basic_ostream::sentry.  This has several effects, concluding
 346:/usr/include/c++/14/ostream ****        *  with the setting of a status flag; see the sentry documentation
 347:/usr/include/c++/14/ostream ****        *  for more.
 348:/usr/include/c++/14/ostream ****        *
 349:/usr/include/c++/14/ostream ****        *  If the sentry status is good, the function tries to generate
 350:/usr/include/c++/14/ostream ****        *  whatever data is appropriate for the type of the argument.
 351:/usr/include/c++/14/ostream ****        *
 352:/usr/include/c++/14/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 353:/usr/include/c++/14/ostream ****        *  will be turned on in the stream's error state.  If badbit is on in
 354:/usr/include/c++/14/ostream ****        *  the stream's exceptions mask, the exception will be rethrown
 355:/usr/include/c++/14/ostream ****        *  without completing its actions.
 356:/usr/include/c++/14/ostream ****       */
 357:/usr/include/c++/14/ostream **** 
 358:/usr/include/c++/14/ostream ****       /**
 359:/usr/include/c++/14/ostream ****        *  @brief  Simple insertion.
 360:/usr/include/c++/14/ostream ****        *  @param  __c  The character to insert.
 361:/usr/include/c++/14/ostream ****        *  @return  *this
 362:/usr/include/c++/14/ostream ****        *
 363:/usr/include/c++/14/ostream ****        *  Tries to insert @p __c.
 364:/usr/include/c++/14/ostream ****        *
 365:/usr/include/c++/14/ostream ****        *  @note  This function is not overloaded on signed char and
 366:/usr/include/c++/14/ostream ****        *         unsigned char.
 367:/usr/include/c++/14/ostream ****       */
 368:/usr/include/c++/14/ostream ****       __ostream_type&
 369:/usr/include/c++/14/ostream ****       put(char_type __c);
 370:/usr/include/c++/14/ostream **** 
 371:/usr/include/c++/14/ostream ****       /**
 372:/usr/include/c++/14/ostream ****        *  @brief  Character string insertion.
 373:/usr/include/c++/14/ostream ****        *  @param  __s  The array to insert.
 374:/usr/include/c++/14/ostream ****        *  @param  __n  Maximum number of characters to insert.
 375:/usr/include/c++/14/ostream ****        *  @return  *this
 376:/usr/include/c++/14/ostream ****        *
 377:/usr/include/c++/14/ostream ****        *  Characters are copied from @p __s and inserted into the stream until
GAS LISTING linobj/Ch02_03.s 			page 31


 378:/usr/include/c++/14/ostream ****        *  one of the following happens:
 379:/usr/include/c++/14/ostream ****        *
 380:/usr/include/c++/14/ostream ****        *  - @p __n characters are inserted
 381:/usr/include/c++/14/ostream ****        *  - inserting into the output sequence fails (in this case, badbit
 382:/usr/include/c++/14/ostream ****        *    will be set in the stream's error state)
 383:/usr/include/c++/14/ostream ****        *
 384:/usr/include/c++/14/ostream ****        *  @note  This function is not overloaded on signed char and
 385:/usr/include/c++/14/ostream ****        *         unsigned char.
 386:/usr/include/c++/14/ostream ****       */
 387:/usr/include/c++/14/ostream ****       __ostream_type&
 388:/usr/include/c++/14/ostream ****       write(const char_type* __s, streamsize __n);
 389:/usr/include/c++/14/ostream ****       ///@}
 390:/usr/include/c++/14/ostream **** 
 391:/usr/include/c++/14/ostream ****       /**
 392:/usr/include/c++/14/ostream ****        *  @brief  Synchronizing the stream buffer.
 393:/usr/include/c++/14/ostream ****        *  @return  *this
 394:/usr/include/c++/14/ostream ****        *
 395:/usr/include/c++/14/ostream ****        *  If @c rdbuf() is a null pointer, changes nothing.
 396:/usr/include/c++/14/ostream ****        *
 397:/usr/include/c++/14/ostream ****        *  Otherwise, calls @c rdbuf()->pubsync(), and if that returns -1,
 398:/usr/include/c++/14/ostream ****        *  sets badbit.
 399:/usr/include/c++/14/ostream ****       */
 400:/usr/include/c++/14/ostream ****       __ostream_type&
 401:/usr/include/c++/14/ostream ****       flush();
 402:/usr/include/c++/14/ostream **** 
 403:/usr/include/c++/14/ostream ****       /**
 404:/usr/include/c++/14/ostream ****        *  @brief  Getting the current write position.
 405:/usr/include/c++/14/ostream ****        *  @return  A file position object.
 406:/usr/include/c++/14/ostream ****        *
 407:/usr/include/c++/14/ostream ****        *  If @c fail() is not false, returns @c pos_type(-1) to indicate
 408:/usr/include/c++/14/ostream ****        *  failure.  Otherwise returns @c rdbuf()->pubseekoff(0,cur,out).
 409:/usr/include/c++/14/ostream ****       */
 410:/usr/include/c++/14/ostream ****       pos_type
 411:/usr/include/c++/14/ostream ****       tellp();
 412:/usr/include/c++/14/ostream **** 
 413:/usr/include/c++/14/ostream ****       /**
 414:/usr/include/c++/14/ostream ****        *  @brief  Changing the current write position.
 415:/usr/include/c++/14/ostream ****        *  @param  __pos  A file position object.
 416:/usr/include/c++/14/ostream ****        *  @return  *this
 417:/usr/include/c++/14/ostream ****        *
 418:/usr/include/c++/14/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekpos(pos).  If
 419:/usr/include/c++/14/ostream ****        *  that function fails, sets failbit.
 420:/usr/include/c++/14/ostream ****       */
 421:/usr/include/c++/14/ostream ****       __ostream_type&
 422:/usr/include/c++/14/ostream ****       seekp(pos_type);
 423:/usr/include/c++/14/ostream **** 
 424:/usr/include/c++/14/ostream ****       /**
 425:/usr/include/c++/14/ostream ****        *  @brief  Changing the current write position.
 426:/usr/include/c++/14/ostream ****        *  @param  __off  A file offset object.
 427:/usr/include/c++/14/ostream ****        *  @param  __dir  The direction in which to seek.
 428:/usr/include/c++/14/ostream ****        *  @return  *this
 429:/usr/include/c++/14/ostream ****        *
 430:/usr/include/c++/14/ostream ****        *  If @c fail() is not true, calls @c rdbuf()->pubseekoff(off,dir).
 431:/usr/include/c++/14/ostream ****        *  If that function fails, sets failbit.
 432:/usr/include/c++/14/ostream ****       */
 433:/usr/include/c++/14/ostream ****        __ostream_type&
 434:/usr/include/c++/14/ostream ****       seekp(off_type, ios_base::seekdir);
GAS LISTING linobj/Ch02_03.s 			page 32


 435:/usr/include/c++/14/ostream **** 
 436:/usr/include/c++/14/ostream ****     protected:
 437:/usr/include/c++/14/ostream ****       basic_ostream()
 438:/usr/include/c++/14/ostream ****       { this->init(0); }
 439:/usr/include/c++/14/ostream **** 
 440:/usr/include/c++/14/ostream **** #if __cplusplus >= 201103L
 441:/usr/include/c++/14/ostream ****       // Non-standard constructor that does not call init()
 442:/usr/include/c++/14/ostream ****       basic_ostream(basic_iostream<_CharT, _Traits>&) { }
 443:/usr/include/c++/14/ostream **** 
 444:/usr/include/c++/14/ostream ****       basic_ostream(const basic_ostream&) = delete;
 445:/usr/include/c++/14/ostream **** 
 446:/usr/include/c++/14/ostream ****       basic_ostream(basic_ostream&& __rhs)
 447:/usr/include/c++/14/ostream ****       : __ios_type()
 448:/usr/include/c++/14/ostream ****       { __ios_type::move(__rhs); }
 449:/usr/include/c++/14/ostream **** 
 450:/usr/include/c++/14/ostream ****       // 27.7.3.3 Assign/swap
 451:/usr/include/c++/14/ostream **** 
 452:/usr/include/c++/14/ostream ****       basic_ostream& operator=(const basic_ostream&) = delete;
 453:/usr/include/c++/14/ostream **** 
 454:/usr/include/c++/14/ostream ****       basic_ostream&
 455:/usr/include/c++/14/ostream ****       operator=(basic_ostream&& __rhs)
 456:/usr/include/c++/14/ostream ****       {
 457:/usr/include/c++/14/ostream **** 	swap(__rhs);
 458:/usr/include/c++/14/ostream **** 	return *this;
 459:/usr/include/c++/14/ostream ****       }
 460:/usr/include/c++/14/ostream **** 
 461:/usr/include/c++/14/ostream ****       void
 462:/usr/include/c++/14/ostream ****       swap(basic_ostream& __rhs)
 463:/usr/include/c++/14/ostream ****       { __ios_type::swap(__rhs); }
 464:/usr/include/c++/14/ostream **** #endif
 465:/usr/include/c++/14/ostream **** 
 466:/usr/include/c++/14/ostream ****       template<typename _ValueT>
 467:/usr/include/c++/14/ostream **** 	__ostream_type&
 468:/usr/include/c++/14/ostream **** 	_M_insert(_ValueT __v);
 469:/usr/include/c++/14/ostream **** 
 470:/usr/include/c++/14/ostream ****     private:
 471:/usr/include/c++/14/ostream **** #if !_GLIBCXX_INLINE_VERSION
 472:/usr/include/c++/14/ostream ****       void
 473:/usr/include/c++/14/ostream ****       _M_write(const char_type* __s, streamsize __n)
 474:/usr/include/c++/14/ostream ****       { std::__ostream_insert(*this, __s, __n); }
 475:/usr/include/c++/14/ostream **** #endif
 476:/usr/include/c++/14/ostream ****     };
 477:/usr/include/c++/14/ostream **** 
 478:/usr/include/c++/14/ostream ****   /**
 479:/usr/include/c++/14/ostream ****    *  @brief  Performs setup work for output streams.
 480:/usr/include/c++/14/ostream ****    *
 481:/usr/include/c++/14/ostream ****    *  Objects of this class are created before all of the standard
 482:/usr/include/c++/14/ostream ****    *  inserters are run.  It is responsible for <em>exception-safe prefix and
 483:/usr/include/c++/14/ostream ****    *  suffix operations</em>.
 484:/usr/include/c++/14/ostream ****   */
 485:/usr/include/c++/14/ostream ****   template <typename _CharT, typename _Traits>
 486:/usr/include/c++/14/ostream ****     class basic_ostream<_CharT, _Traits>::sentry
 487:/usr/include/c++/14/ostream ****     {
 488:/usr/include/c++/14/ostream ****       // Data Members.
 489:/usr/include/c++/14/ostream ****       bool 				_M_ok;
 490:/usr/include/c++/14/ostream ****       basic_ostream<_CharT, _Traits>& 	_M_os;
 491:/usr/include/c++/14/ostream **** 
GAS LISTING linobj/Ch02_03.s 			page 33


 492:/usr/include/c++/14/ostream ****     public:
 493:/usr/include/c++/14/ostream ****       /**
 494:/usr/include/c++/14/ostream ****        *  @brief  The constructor performs preparatory work.
 495:/usr/include/c++/14/ostream ****        *  @param  __os  The output stream to guard.
 496:/usr/include/c++/14/ostream ****        *
 497:/usr/include/c++/14/ostream ****        *  If the stream state is good (@a __os.good() is true), then if the
 498:/usr/include/c++/14/ostream ****        *  stream is tied to another output stream, @c is.tie()->flush()
 499:/usr/include/c++/14/ostream ****        *  is called to synchronize the output sequences.
 500:/usr/include/c++/14/ostream ****        *
 501:/usr/include/c++/14/ostream ****        *  If the stream state is still good, then the sentry state becomes
 502:/usr/include/c++/14/ostream ****        *  true (@a okay).
 503:/usr/include/c++/14/ostream ****       */
 504:/usr/include/c++/14/ostream ****       explicit
 505:/usr/include/c++/14/ostream ****       sentry(basic_ostream<_CharT, _Traits>& __os);
 506:/usr/include/c++/14/ostream **** 
 507:/usr/include/c++/14/ostream **** #pragma GCC diagnostic push
 508:/usr/include/c++/14/ostream **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
 509:/usr/include/c++/14/ostream ****       /**
 510:/usr/include/c++/14/ostream ****        *  @brief  Possibly flushes the stream.
 511:/usr/include/c++/14/ostream ****        *
 512:/usr/include/c++/14/ostream ****        *  If @c ios_base::unitbuf is set in @c os.flags(), and
 513:/usr/include/c++/14/ostream ****        *  @c std::uncaught_exception() is true, the sentry destructor calls
 514:/usr/include/c++/14/ostream ****        *  @c flush() on the output stream.
 515:/usr/include/c++/14/ostream ****       */
 516:/usr/include/c++/14/ostream ****       ~sentry()
 517:/usr/include/c++/14/ostream ****       {
 518:/usr/include/c++/14/ostream **** 	// XXX MT
 519:/usr/include/c++/14/ostream **** 	if (bool(_M_os.flags() & ios_base::unitbuf) && !uncaught_exception())
 520:/usr/include/c++/14/ostream **** 	  {
 521:/usr/include/c++/14/ostream **** 	    // Can't call flush directly or else will get into recursive lock.
 522:/usr/include/c++/14/ostream **** 	    if (_M_os.rdbuf() && _M_os.rdbuf()->pubsync() == -1)
 523:/usr/include/c++/14/ostream **** 	      _M_os.setstate(ios_base::badbit);
 524:/usr/include/c++/14/ostream **** 	  }
 525:/usr/include/c++/14/ostream ****       }
 526:/usr/include/c++/14/ostream **** #pragma GCC diagnostic pop
 527:/usr/include/c++/14/ostream **** 
 528:/usr/include/c++/14/ostream ****       /**
 529:/usr/include/c++/14/ostream ****        *  @brief  Quick status checking.
 530:/usr/include/c++/14/ostream ****        *  @return  The sentry state.
 531:/usr/include/c++/14/ostream ****        *
 532:/usr/include/c++/14/ostream ****        *  For ease of use, sentries may be converted to booleans.  The
 533:/usr/include/c++/14/ostream ****        *  return value is that of the sentry state (true == okay).
 534:/usr/include/c++/14/ostream ****       */
 535:/usr/include/c++/14/ostream **** #if __cplusplus >= 201103L
 536:/usr/include/c++/14/ostream ****       explicit
 537:/usr/include/c++/14/ostream **** #endif
 538:/usr/include/c++/14/ostream ****       operator bool() const
 539:/usr/include/c++/14/ostream ****       { return _M_ok; }
 540:/usr/include/c++/14/ostream ****     };
 541:/usr/include/c++/14/ostream **** 
 542:/usr/include/c++/14/ostream ****   ///@{
 543:/usr/include/c++/14/ostream ****   /**
 544:/usr/include/c++/14/ostream ****    *  @brief  Character inserters
 545:/usr/include/c++/14/ostream ****    *  @param  __out  An output stream.
 546:/usr/include/c++/14/ostream ****    *  @param  __c  A character.
 547:/usr/include/c++/14/ostream ****    *  @return  out
 548:/usr/include/c++/14/ostream ****    *
GAS LISTING linobj/Ch02_03.s 			page 34


 549:/usr/include/c++/14/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 550:/usr/include/c++/14/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 551:/usr/include/c++/14/ostream ****    *  status, this function inserts a single character and any required
 552:/usr/include/c++/14/ostream ****    *  padding (as determined by [22.2.2.2.2]).  @c __out.width(0) is then
 553:/usr/include/c++/14/ostream ****    *  called.
 554:/usr/include/c++/14/ostream ****    *
 555:/usr/include/c++/14/ostream ****    *  If @p __c is of type @c char and the character type of the stream is not
 556:/usr/include/c++/14/ostream ****    *  @c char, the character is widened before insertion.
 557:/usr/include/c++/14/ostream ****   */
 558:/usr/include/c++/14/ostream ****   template<typename _CharT, typename _Traits>
 559:/usr/include/c++/14/ostream ****     inline basic_ostream<_CharT, _Traits>&
 560:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, _CharT __c)
 561:/usr/include/c++/14/ostream ****     {
 562:/usr/include/c++/14/ostream ****       if (__out.width() != 0)
 563:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 564:/usr/include/c++/14/ostream ****       __out.put(__c);
 565:/usr/include/c++/14/ostream ****       return __out;
 566:/usr/include/c++/14/ostream ****     }
 567:/usr/include/c++/14/ostream **** 
 568:/usr/include/c++/14/ostream ****   template<typename _CharT, typename _Traits>
 569:/usr/include/c++/14/ostream ****     inline basic_ostream<_CharT, _Traits>&
 570:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, char __c)
 571:/usr/include/c++/14/ostream ****     { return (__out << __out.widen(__c)); }
 572:/usr/include/c++/14/ostream **** 
 573:/usr/include/c++/14/ostream ****   // Specialization
 574:/usr/include/c++/14/ostream ****   template<typename _Traits>
 575:/usr/include/c++/14/ostream ****     inline basic_ostream<char, _Traits>&
 576:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, char __c)
 577:/usr/include/c++/14/ostream ****     {
 578:/usr/include/c++/14/ostream ****       if (__out.width() != 0)
 579:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 580:/usr/include/c++/14/ostream ****       __out.put(__c);
 581:/usr/include/c++/14/ostream ****       return __out;
 582:/usr/include/c++/14/ostream ****     }
 583:/usr/include/c++/14/ostream **** 
 584:/usr/include/c++/14/ostream ****   // Signed and unsigned
 585:/usr/include/c++/14/ostream ****   template<typename _Traits>
 586:/usr/include/c++/14/ostream ****     inline basic_ostream<char, _Traits>&
 587:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, signed char __c)
 588:/usr/include/c++/14/ostream ****     { return (__out << static_cast<char>(__c)); }
 589:/usr/include/c++/14/ostream **** 
 590:/usr/include/c++/14/ostream ****   template<typename _Traits>
 591:/usr/include/c++/14/ostream ****     inline basic_ostream<char, _Traits>&
 592:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, unsigned char __c)
 593:/usr/include/c++/14/ostream ****     { return (__out << static_cast<char>(__c)); }
 594:/usr/include/c++/14/ostream **** 
 595:/usr/include/c++/14/ostream **** #if __cplusplus > 201703L
 596:/usr/include/c++/14/ostream ****   // The following deleted overloads prevent formatting character values as
 597:/usr/include/c++/14/ostream ****   // numeric values.
 598:/usr/include/c++/14/ostream **** 
 599:/usr/include/c++/14/ostream ****   template<typename _Traits>
 600:/usr/include/c++/14/ostream ****     basic_ostream<char, _Traits>&
 601:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<char, _Traits>&, wchar_t) = delete;
 602:/usr/include/c++/14/ostream **** 
 603:/usr/include/c++/14/ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 604:/usr/include/c++/14/ostream ****   template<typename _Traits>
 605:/usr/include/c++/14/ostream ****     basic_ostream<char, _Traits>&
GAS LISTING linobj/Ch02_03.s 			page 35


 606:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<char, _Traits>&, char8_t) = delete;
 607:/usr/include/c++/14/ostream **** #endif
 608:/usr/include/c++/14/ostream **** 
 609:/usr/include/c++/14/ostream ****   template<typename _Traits>
 610:/usr/include/c++/14/ostream ****     basic_ostream<char, _Traits>&
 611:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<char, _Traits>&, char16_t) = delete;
 612:/usr/include/c++/14/ostream **** 
 613:/usr/include/c++/14/ostream ****   template<typename _Traits>
 614:/usr/include/c++/14/ostream ****     basic_ostream<char, _Traits>&
 615:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<char, _Traits>&, char32_t) = delete;
 616:/usr/include/c++/14/ostream **** 
 617:/usr/include/c++/14/ostream **** #ifdef _GLIBCXX_USE_WCHAR_T
 618:/usr/include/c++/14/ostream **** #ifdef _GLIBCXX_USE_CHAR8_T
 619:/usr/include/c++/14/ostream ****   template<typename _Traits>
 620:/usr/include/c++/14/ostream ****     basic_ostream<wchar_t, _Traits>&
 621:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char8_t) = delete;
 622:/usr/include/c++/14/ostream **** #endif // _GLIBCXX_USE_CHAR8_T
 623:/usr/include/c++/14/ostream **** 
 624:/usr/include/c++/14/ostream ****   template<typename _Traits>
 625:/usr/include/c++/14/ostream ****     basic_ostream<wchar_t, _Traits>&
 626:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char16_t) = delete;
 627:/usr/include/c++/14/ostream **** 
 628:/usr/include/c++/14/ostream ****   template<typename _Traits>
 629:/usr/include/c++/14/ostream ****     basic_ostream<wchar_t, _Traits>&
 630:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<wchar_t, _Traits>&, char32_t) = delete;
 631:/usr/include/c++/14/ostream **** #endif // _GLIBCXX_USE_WCHAR_T
 632:/usr/include/c++/14/ostream **** #endif // C++20
 633:/usr/include/c++/14/ostream ****   ///@}
 634:/usr/include/c++/14/ostream **** 
 635:/usr/include/c++/14/ostream ****   ///@{
 636:/usr/include/c++/14/ostream ****   /**
 637:/usr/include/c++/14/ostream ****    *  @brief  String inserters
 638:/usr/include/c++/14/ostream ****    *  @param  __out  An output stream.
 639:/usr/include/c++/14/ostream ****    *  @param  __s  A character string.
 640:/usr/include/c++/14/ostream ****    *  @return  out
 641:/usr/include/c++/14/ostream ****    *  @pre  @p __s must be a non-NULL pointer
 642:/usr/include/c++/14/ostream ****    *
 643:/usr/include/c++/14/ostream ****    *  Behaves like one of the formatted arithmetic inserters described in
 644:/usr/include/c++/14/ostream ****    *  std::basic_ostream.  After constructing a sentry object with good
 645:/usr/include/c++/14/ostream ****    *  status, this function inserts @c traits::length(__s) characters starting
 646:/usr/include/c++/14/ostream ****    *  at @p __s, widened if necessary, followed by any required padding (as
 647:/usr/include/c++/14/ostream ****    *  determined by [22.2.2.2.2]).  @c __out.width(0) is then called.
 648:/usr/include/c++/14/ostream ****   */
 649:/usr/include/c++/14/ostream ****   template<typename _CharT, typename _Traits>
 650:/usr/include/c++/14/ostream ****     inline basic_ostream<_CharT, _Traits>&
 651:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const _CharT* __s)
 652:/usr/include/c++/14/ostream ****     {
 653:/usr/include/c++/14/ostream ****       if (!__s)
 654:/usr/include/c++/14/ostream **** 	__out.setstate(ios_base::badbit);
 655:/usr/include/c++/14/ostream ****       else
 656:/usr/include/c++/14/ostream **** 	__ostream_insert(__out, __s,
 657:/usr/include/c++/14/ostream **** 			 static_cast<streamsize>(_Traits::length(__s)));
 658:/usr/include/c++/14/ostream ****       return __out;
 659:/usr/include/c++/14/ostream ****     }
 660:/usr/include/c++/14/ostream **** 
 661:/usr/include/c++/14/ostream ****   template<typename _CharT, typename _Traits>
 662:/usr/include/c++/14/ostream ****     basic_ostream<_CharT, _Traits> &
GAS LISTING linobj/Ch02_03.s 			page 36


 663:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<_CharT, _Traits>& __out, const char* __s);
 664:/usr/include/c++/14/ostream **** 
 665:/usr/include/c++/14/ostream ****   // Partial specializations
 666:/usr/include/c++/14/ostream ****   template<typename _Traits>
 667:/usr/include/c++/14/ostream ****     inline basic_ostream<char, _Traits>&
 668:/usr/include/c++/14/ostream ****     operator<<(basic_ostream<char, _Traits>& __out, const char* __s)
 215              		.loc 5 668 5 view .LVU56
 216              	.LBB705:
 669:/usr/include/c++/14/ostream ****     {
 670:/usr/include/c++/14/ostream ****       if (!__s)
 671:/usr/include/c++/14/ostream **** 	__out.setstate(ios_base::badbit);
 672:/usr/include/c++/14/ostream ****       else
 673:/usr/include/c++/14/ostream **** 	__ostream_insert(__out, __s,
 217              		.loc 5 673 18 is_stmt 0 view .LVU57
 218 0068 BA190000 		movl	$25, %edx
 218      00
 219 006d BE000000 		movl	$.LC2, %esi
 219      00
 220 0072 BF000000 		movl	$_ZSt4cout, %edi
 220      00
 221 0077 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 221      00
 222              	.LVL7:
 223              	.LBE705:
 224              	.LBE704:
 225              	.LBB706:
  44:Ch02_03.cpp   ****     for (size_t i = 0; i < 8; i++)
 226              		.loc 1 44 17 view .LVU58
 227 007c 31DB     		xorl	%ebx, %ebx
 228              	.LVL8:
 229 007e 6690     		.p2align 4,,10
 230              		.p2align 3
 231              	.L9:
  45:Ch02_03.cpp   ****     {
  46:Ch02_03.cpp   ****         std::cout << "a[" << i << "]: " << std::setw(8) << a.m_I16[i] << "  ";
 232              		.loc 1 46 9 is_stmt 1 view .LVU59
 233              	.LBB707:
 234              	.LBI707:
 668:/usr/include/c++/14/ostream ****     {
 235              		.loc 5 668 5 view .LVU60
 236              	.LBB708:
 237              		.loc 5 673 18 is_stmt 0 view .LVU61
 238 0080 BA020000 		movl	$2, %edx
 238      00
 239 0085 BE000000 		movl	$.LC3, %esi
 239      00
 240 008a BF000000 		movl	$_ZSt4cout, %edi
 240      00
 241 008f E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 241      00
 242              	.LVL9:
 243              		.loc 5 673 18 view .LVU62
 244              	.LBE708:
 245              	.LBE707:
 246              	.LBB709:
 247              	.LBI709:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
GAS LISTING linobj/Ch02_03.s 			page 37


 248              		.loc 5 178 7 is_stmt 1 view .LVU63
 249              	.LBB710:
 179:/usr/include/c++/14/ostream **** 
 250              		.loc 5 179 25 is_stmt 0 view .LVU64
 251 0094 4889DE   		movq	%rbx, %rsi
 252 0097 BF000000 		movl	$_ZSt4cout, %edi
 252      00
 253 009c E8000000 		call	_ZNSo9_M_insertImEERSoT_
 253      00
 254              	.LVL10:
 255              	.LBE710:
 256              	.LBE709:
 257              	.LBB712:
 258              	.LBB713:
 259              		.loc 5 673 18 view .LVU65
 260 00a1 BA030000 		movl	$3, %edx
 260      00
 261 00a6 BE000000 		movl	$.LC4, %esi
 261      00
 262 00ab 4889C7   		movq	%rax, %rdi
 263              	.LBE713:
 264              	.LBE712:
 265              	.LBB715:
 266              	.LBB711:
 179:/usr/include/c++/14/ostream **** 
 267              		.loc 5 179 25 view .LVU66
 268 00ae 4989C7   		movq	%rax, %r15
 269              	.LVL11:
 179:/usr/include/c++/14/ostream **** 
 270              		.loc 5 179 25 view .LVU67
 271              	.LBE711:
 272              	.LBE715:
 273              	.LBB716:
 274              	.LBI712:
 668:/usr/include/c++/14/ostream ****     {
 275              		.loc 5 668 5 is_stmt 1 view .LVU68
 276              	.LBB714:
 277              		.loc 5 673 18 is_stmt 0 view .LVU69
 278 00b1 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 278      00
 279              	.LVL12:
 280              		.loc 5 673 18 view .LVU70
 281              	.LBE714:
 282              	.LBE716:
 283              	.LBB717:
 284              	.LBI717:
 285              		.file 6 "/usr/include/c++/14/iomanip"
   1:/usr/include/c++/14/iomanip **** // Standard stream manipulators -*- C++ -*-
   2:/usr/include/c++/14/iomanip **** 
   3:/usr/include/c++/14/iomanip **** // Copyright (C) 1997-2024 Free Software Foundation, Inc.
   4:/usr/include/c++/14/iomanip **** //
   5:/usr/include/c++/14/iomanip **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/14/iomanip **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/14/iomanip **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/14/iomanip **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/14/iomanip **** // any later version.
  10:/usr/include/c++/14/iomanip **** 
GAS LISTING linobj/Ch02_03.s 			page 38


  11:/usr/include/c++/14/iomanip **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/14/iomanip **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/14/iomanip **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/14/iomanip **** // GNU General Public License for more details.
  15:/usr/include/c++/14/iomanip **** 
  16:/usr/include/c++/14/iomanip **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/14/iomanip **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/14/iomanip **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/14/iomanip **** 
  20:/usr/include/c++/14/iomanip **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/14/iomanip **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/14/iomanip **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/14/iomanip **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/14/iomanip **** 
  25:/usr/include/c++/14/iomanip **** /** @file include/iomanip
  26:/usr/include/c++/14/iomanip ****  *  This is a Standard C++ Library header.
  27:/usr/include/c++/14/iomanip ****  */
  28:/usr/include/c++/14/iomanip **** 
  29:/usr/include/c++/14/iomanip **** //
  30:/usr/include/c++/14/iomanip **** // ISO C++ 14882: 27.6.3  Standard manipulators
  31:/usr/include/c++/14/iomanip **** //
  32:/usr/include/c++/14/iomanip **** 
  33:/usr/include/c++/14/iomanip **** #ifndef _GLIBCXX_IOMANIP
  34:/usr/include/c++/14/iomanip **** #define _GLIBCXX_IOMANIP 1
  35:/usr/include/c++/14/iomanip **** 
  36:/usr/include/c++/14/iomanip **** #pragma GCC system_header
  37:/usr/include/c++/14/iomanip **** 
  38:/usr/include/c++/14/iomanip **** #include <bits/requires_hosted.h> // iostreams
  39:/usr/include/c++/14/iomanip **** 
  40:/usr/include/c++/14/iomanip **** #include <bits/c++config.h>
  41:/usr/include/c++/14/iomanip **** #include <iosfwd>
  42:/usr/include/c++/14/iomanip **** #include <bits/ios_base.h>
  43:/usr/include/c++/14/iomanip **** 
  44:/usr/include/c++/14/iomanip **** #define __glibcxx_want_quoted_string_io
  45:/usr/include/c++/14/iomanip **** #include <bits/version.h>
  46:/usr/include/c++/14/iomanip **** 
  47:/usr/include/c++/14/iomanip **** #if __cplusplus >= 201103L
  48:/usr/include/c++/14/iomanip **** #include <locale>
  49:/usr/include/c++/14/iomanip **** #if __cplusplus > 201103L
  50:/usr/include/c++/14/iomanip **** #include <bits/quoted_string.h>
  51:/usr/include/c++/14/iomanip **** #endif
  52:/usr/include/c++/14/iomanip **** #endif
  53:/usr/include/c++/14/iomanip **** 
  54:/usr/include/c++/14/iomanip **** namespace std _GLIBCXX_VISIBILITY(default)
  55:/usr/include/c++/14/iomanip **** {
  56:/usr/include/c++/14/iomanip **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  57:/usr/include/c++/14/iomanip **** 
  58:/usr/include/c++/14/iomanip ****   // [27.6.3] standard manipulators
  59:/usr/include/c++/14/iomanip ****   // Also see DR 183.
  60:/usr/include/c++/14/iomanip **** 
  61:/usr/include/c++/14/iomanip ****   struct _Resetiosflags { ios_base::fmtflags _M_mask; };
  62:/usr/include/c++/14/iomanip **** 
  63:/usr/include/c++/14/iomanip ****   /**
  64:/usr/include/c++/14/iomanip ****    *  @brief  Manipulator for @c setf.
  65:/usr/include/c++/14/iomanip ****    *  @param  __mask  A format flags mask.
  66:/usr/include/c++/14/iomanip ****    *
  67:/usr/include/c++/14/iomanip ****    *  Sent to a stream object, this manipulator resets the specified flags,
GAS LISTING linobj/Ch02_03.s 			page 39


  68:/usr/include/c++/14/iomanip ****    *  via @e stream.setf(0,__mask).
  69:/usr/include/c++/14/iomanip ****   */
  70:/usr/include/c++/14/iomanip ****   inline _Resetiosflags
  71:/usr/include/c++/14/iomanip ****   resetiosflags(ios_base::fmtflags __mask)
  72:/usr/include/c++/14/iomanip ****   { return { __mask }; }
  73:/usr/include/c++/14/iomanip **** 
  74:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
  75:/usr/include/c++/14/iomanip ****     inline basic_istream<_CharT, _Traits>&
  76:/usr/include/c++/14/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Resetiosflags __f)
  77:/usr/include/c++/14/iomanip ****     {
  78:/usr/include/c++/14/iomanip ****       __is.setf(ios_base::fmtflags(0), __f._M_mask);
  79:/usr/include/c++/14/iomanip ****       return __is;
  80:/usr/include/c++/14/iomanip ****     }
  81:/usr/include/c++/14/iomanip **** 
  82:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
  83:/usr/include/c++/14/iomanip ****     inline basic_ostream<_CharT, _Traits>&
  84:/usr/include/c++/14/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Resetiosflags __f)
  85:/usr/include/c++/14/iomanip ****     {
  86:/usr/include/c++/14/iomanip ****       __os.setf(ios_base::fmtflags(0), __f._M_mask);
  87:/usr/include/c++/14/iomanip ****       return __os;
  88:/usr/include/c++/14/iomanip ****     }
  89:/usr/include/c++/14/iomanip **** 
  90:/usr/include/c++/14/iomanip **** 
  91:/usr/include/c++/14/iomanip ****   struct _Setiosflags { ios_base::fmtflags _M_mask; };
  92:/usr/include/c++/14/iomanip **** 
  93:/usr/include/c++/14/iomanip ****   /**
  94:/usr/include/c++/14/iomanip ****    *  @brief  Manipulator for @c setf.
  95:/usr/include/c++/14/iomanip ****    *  @param  __mask  A format flags mask.
  96:/usr/include/c++/14/iomanip ****    *
  97:/usr/include/c++/14/iomanip ****    *  Sent to a stream object, this manipulator sets the format flags
  98:/usr/include/c++/14/iomanip ****    *  to @a __mask.
  99:/usr/include/c++/14/iomanip ****   */
 100:/usr/include/c++/14/iomanip ****   inline _Setiosflags
 101:/usr/include/c++/14/iomanip ****   setiosflags(ios_base::fmtflags __mask)
 102:/usr/include/c++/14/iomanip ****   { return { __mask }; }
 103:/usr/include/c++/14/iomanip **** 
 104:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 105:/usr/include/c++/14/iomanip ****     inline basic_istream<_CharT, _Traits>&
 106:/usr/include/c++/14/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setiosflags __f)
 107:/usr/include/c++/14/iomanip ****     {
 108:/usr/include/c++/14/iomanip ****       __is.setf(__f._M_mask);
 109:/usr/include/c++/14/iomanip ****       return __is;
 110:/usr/include/c++/14/iomanip ****     }
 111:/usr/include/c++/14/iomanip **** 
 112:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 113:/usr/include/c++/14/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 114:/usr/include/c++/14/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setiosflags __f)
 115:/usr/include/c++/14/iomanip ****     {
 116:/usr/include/c++/14/iomanip ****       __os.setf(__f._M_mask);
 117:/usr/include/c++/14/iomanip ****       return __os;
 118:/usr/include/c++/14/iomanip ****     }
 119:/usr/include/c++/14/iomanip **** 
 120:/usr/include/c++/14/iomanip **** 
 121:/usr/include/c++/14/iomanip ****   struct _Setbase { int _M_base; };
 122:/usr/include/c++/14/iomanip **** 
 123:/usr/include/c++/14/iomanip ****   /**
 124:/usr/include/c++/14/iomanip ****    *  @brief  Manipulator for @c setf.
GAS LISTING linobj/Ch02_03.s 			page 40


 125:/usr/include/c++/14/iomanip ****    *  @param  __base  A numeric base.
 126:/usr/include/c++/14/iomanip ****    *
 127:/usr/include/c++/14/iomanip ****    *  Sent to a stream object, this manipulator changes the
 128:/usr/include/c++/14/iomanip ****    *  @c ios_base::basefield flags to @c oct, @c dec, or @c hex when @a base
 129:/usr/include/c++/14/iomanip ****    *  is 8, 10, or 16, accordingly, and to 0 if @a __base is any other value.
 130:/usr/include/c++/14/iomanip ****   */
 131:/usr/include/c++/14/iomanip ****   inline _Setbase
 132:/usr/include/c++/14/iomanip ****   setbase(int __base)
 133:/usr/include/c++/14/iomanip ****   { return { __base }; }
 134:/usr/include/c++/14/iomanip **** 
 135:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 136:/usr/include/c++/14/iomanip ****     inline basic_istream<_CharT, _Traits>&
 137:/usr/include/c++/14/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setbase __f)
 138:/usr/include/c++/14/iomanip ****     {
 139:/usr/include/c++/14/iomanip ****       __is.setf(__f._M_base ==  8 ? ios_base::oct :
 140:/usr/include/c++/14/iomanip **** 		__f._M_base == 10 ? ios_base::dec :
 141:/usr/include/c++/14/iomanip **** 		__f._M_base == 16 ? ios_base::hex :
 142:/usr/include/c++/14/iomanip **** 		ios_base::fmtflags(0), ios_base::basefield);
 143:/usr/include/c++/14/iomanip ****       return __is;
 144:/usr/include/c++/14/iomanip ****     }
 145:/usr/include/c++/14/iomanip **** 
 146:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 147:/usr/include/c++/14/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 148:/usr/include/c++/14/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setbase __f)
 149:/usr/include/c++/14/iomanip ****     {
 150:/usr/include/c++/14/iomanip ****       __os.setf(__f._M_base ==  8 ? ios_base::oct :
 151:/usr/include/c++/14/iomanip **** 		__f._M_base == 10 ? ios_base::dec :
 152:/usr/include/c++/14/iomanip **** 		__f._M_base == 16 ? ios_base::hex :
 153:/usr/include/c++/14/iomanip **** 		ios_base::fmtflags(0), ios_base::basefield);
 154:/usr/include/c++/14/iomanip ****       return __os;
 155:/usr/include/c++/14/iomanip ****     }
 156:/usr/include/c++/14/iomanip **** 
 157:/usr/include/c++/14/iomanip **** 
 158:/usr/include/c++/14/iomanip ****   template<typename _CharT>
 159:/usr/include/c++/14/iomanip ****     struct _Setfill { _CharT _M_c; };
 160:/usr/include/c++/14/iomanip **** 
 161:/usr/include/c++/14/iomanip ****   /**
 162:/usr/include/c++/14/iomanip ****    *  @brief  Manipulator for @c fill.
 163:/usr/include/c++/14/iomanip ****    *  @param  __c  The new fill character.
 164:/usr/include/c++/14/iomanip ****    *
 165:/usr/include/c++/14/iomanip ****    *  Sent to a stream object, this manipulator calls @c fill(__c) for that
 166:/usr/include/c++/14/iomanip ****    *  object.
 167:/usr/include/c++/14/iomanip ****   */
 168:/usr/include/c++/14/iomanip ****   template<typename _CharT>
 169:/usr/include/c++/14/iomanip ****     inline _Setfill<_CharT>
 170:/usr/include/c++/14/iomanip ****     setfill(_CharT __c)
 171:/usr/include/c++/14/iomanip ****     { return { __c }; }
 172:/usr/include/c++/14/iomanip **** 
 173:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 174:/usr/include/c++/14/iomanip ****     __attribute__((__deprecated__("'std::setfill' should only be used with "
 175:/usr/include/c++/14/iomanip **** 				  "output streams")))
 176:/usr/include/c++/14/iomanip ****     inline basic_istream<_CharT, _Traits>&
 177:/usr/include/c++/14/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setfill<_CharT> __f)
 178:/usr/include/c++/14/iomanip ****     {
 179:/usr/include/c++/14/iomanip ****       __is.fill(__f._M_c);
 180:/usr/include/c++/14/iomanip ****       return __is;
 181:/usr/include/c++/14/iomanip ****     }
GAS LISTING linobj/Ch02_03.s 			page 41


 182:/usr/include/c++/14/iomanip **** 
 183:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 184:/usr/include/c++/14/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 185:/usr/include/c++/14/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setfill<_CharT> __f)
 186:/usr/include/c++/14/iomanip ****     {
 187:/usr/include/c++/14/iomanip ****       __os.fill(__f._M_c);
 188:/usr/include/c++/14/iomanip ****       return __os;
 189:/usr/include/c++/14/iomanip ****     }
 190:/usr/include/c++/14/iomanip **** 
 191:/usr/include/c++/14/iomanip **** 
 192:/usr/include/c++/14/iomanip ****   struct _Setprecision { int _M_n; };
 193:/usr/include/c++/14/iomanip **** 
 194:/usr/include/c++/14/iomanip ****   /**
 195:/usr/include/c++/14/iomanip ****    *  @brief  Manipulator for @c precision.
 196:/usr/include/c++/14/iomanip ****    *  @param  __n  The new precision.
 197:/usr/include/c++/14/iomanip ****    *
 198:/usr/include/c++/14/iomanip ****    *  Sent to a stream object, this manipulator calls @c precision(__n) for
 199:/usr/include/c++/14/iomanip ****    *  that object.
 200:/usr/include/c++/14/iomanip ****   */
 201:/usr/include/c++/14/iomanip ****   inline _Setprecision
 202:/usr/include/c++/14/iomanip ****   setprecision(int __n)
 203:/usr/include/c++/14/iomanip ****   { return { __n }; }
 204:/usr/include/c++/14/iomanip **** 
 205:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 206:/usr/include/c++/14/iomanip ****     inline basic_istream<_CharT, _Traits>&
 207:/usr/include/c++/14/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setprecision __f)
 208:/usr/include/c++/14/iomanip ****     {
 209:/usr/include/c++/14/iomanip ****       __is.precision(__f._M_n);
 210:/usr/include/c++/14/iomanip ****       return __is;
 211:/usr/include/c++/14/iomanip ****     }
 212:/usr/include/c++/14/iomanip **** 
 213:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 214:/usr/include/c++/14/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 215:/usr/include/c++/14/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setprecision __f)
 216:/usr/include/c++/14/iomanip ****     {
 217:/usr/include/c++/14/iomanip ****       __os.precision(__f._M_n);
 218:/usr/include/c++/14/iomanip ****       return __os;
 219:/usr/include/c++/14/iomanip ****     }
 220:/usr/include/c++/14/iomanip **** 
 221:/usr/include/c++/14/iomanip **** 
 222:/usr/include/c++/14/iomanip ****   struct _Setw { int _M_n; };
 223:/usr/include/c++/14/iomanip **** 
 224:/usr/include/c++/14/iomanip ****   /**
 225:/usr/include/c++/14/iomanip ****    *  @brief  Manipulator for @c width.
 226:/usr/include/c++/14/iomanip ****    *  @param  __n  The new width.
 227:/usr/include/c++/14/iomanip ****    *
 228:/usr/include/c++/14/iomanip ****    *  Sent to a stream object, this manipulator calls @c width(__n) for
 229:/usr/include/c++/14/iomanip ****    *  that object.
 230:/usr/include/c++/14/iomanip ****   */
 231:/usr/include/c++/14/iomanip ****   inline _Setw
 232:/usr/include/c++/14/iomanip ****   setw(int __n)
 233:/usr/include/c++/14/iomanip ****   { return { __n }; }
 234:/usr/include/c++/14/iomanip **** 
 235:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 236:/usr/include/c++/14/iomanip ****     inline basic_istream<_CharT, _Traits>&
 237:/usr/include/c++/14/iomanip ****     operator>>(basic_istream<_CharT, _Traits>& __is, _Setw __f)
 238:/usr/include/c++/14/iomanip ****     {
GAS LISTING linobj/Ch02_03.s 			page 42


 239:/usr/include/c++/14/iomanip ****       __is.width(__f._M_n);
 240:/usr/include/c++/14/iomanip ****       return __is;
 241:/usr/include/c++/14/iomanip ****     }
 242:/usr/include/c++/14/iomanip **** 
 243:/usr/include/c++/14/iomanip ****   template<typename _CharT, typename _Traits>
 244:/usr/include/c++/14/iomanip ****     inline basic_ostream<_CharT, _Traits>&
 245:/usr/include/c++/14/iomanip ****     operator<<(basic_ostream<_CharT, _Traits>& __os, _Setw __f)
 286              		.loc 6 245 5 is_stmt 1 view .LVU71
 287              	.LBB718:
 288              	.LBB719:
 289              	.LBI719:
 290              		.file 7 "/usr/include/c++/14/bits/ios_base.h"
   1:/usr/include/c++/14/bits/ios_base.h **** // Iostreams base classes -*- C++ -*-
   2:/usr/include/c++/14/bits/ios_base.h **** 
   3:/usr/include/c++/14/bits/ios_base.h **** // Copyright (C) 1997-2024 Free Software Foundation, Inc.
   4:/usr/include/c++/14/bits/ios_base.h **** //
   5:/usr/include/c++/14/bits/ios_base.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   6:/usr/include/c++/14/bits/ios_base.h **** // software; you can redistribute it and/or modify it under the
   7:/usr/include/c++/14/bits/ios_base.h **** // terms of the GNU General Public License as published by the
   8:/usr/include/c++/14/bits/ios_base.h **** // Free Software Foundation; either version 3, or (at your option)
   9:/usr/include/c++/14/bits/ios_base.h **** // any later version.
  10:/usr/include/c++/14/bits/ios_base.h **** 
  11:/usr/include/c++/14/bits/ios_base.h **** // This library is distributed in the hope that it will be useful,
  12:/usr/include/c++/14/bits/ios_base.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:/usr/include/c++/14/bits/ios_base.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:/usr/include/c++/14/bits/ios_base.h **** // GNU General Public License for more details.
  15:/usr/include/c++/14/bits/ios_base.h **** 
  16:/usr/include/c++/14/bits/ios_base.h **** // Under Section 7 of GPL version 3, you are granted additional
  17:/usr/include/c++/14/bits/ios_base.h **** // permissions described in the GCC Runtime Library Exception, version
  18:/usr/include/c++/14/bits/ios_base.h **** // 3.1, as published by the Free Software Foundation.
  19:/usr/include/c++/14/bits/ios_base.h **** 
  20:/usr/include/c++/14/bits/ios_base.h **** // You should have received a copy of the GNU General Public License and
  21:/usr/include/c++/14/bits/ios_base.h **** // a copy of the GCC Runtime Library Exception along with this program;
  22:/usr/include/c++/14/bits/ios_base.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  23:/usr/include/c++/14/bits/ios_base.h **** // <http://www.gnu.org/licenses/>.
  24:/usr/include/c++/14/bits/ios_base.h **** 
  25:/usr/include/c++/14/bits/ios_base.h **** /** @file bits/ios_base.h
  26:/usr/include/c++/14/bits/ios_base.h ****  *  This is an internal header file, included by other library headers.
  27:/usr/include/c++/14/bits/ios_base.h ****  *  Do not attempt to use it directly. @headername{ios}
  28:/usr/include/c++/14/bits/ios_base.h ****  */
  29:/usr/include/c++/14/bits/ios_base.h **** 
  30:/usr/include/c++/14/bits/ios_base.h **** //
  31:/usr/include/c++/14/bits/ios_base.h **** // ISO C++ 14882: 27.4  Iostreams base classes
  32:/usr/include/c++/14/bits/ios_base.h **** //
  33:/usr/include/c++/14/bits/ios_base.h **** 
  34:/usr/include/c++/14/bits/ios_base.h **** #ifndef _IOS_BASE_H
  35:/usr/include/c++/14/bits/ios_base.h **** #define _IOS_BASE_H 1
  36:/usr/include/c++/14/bits/ios_base.h **** 
  37:/usr/include/c++/14/bits/ios_base.h **** #pragma GCC system_header
  38:/usr/include/c++/14/bits/ios_base.h **** 
  39:/usr/include/c++/14/bits/ios_base.h **** #include <ext/atomicity.h>
  40:/usr/include/c++/14/bits/ios_base.h **** #include <bits/localefwd.h>
  41:/usr/include/c++/14/bits/ios_base.h **** #include <bits/locale_classes.h>
  42:/usr/include/c++/14/bits/ios_base.h **** 
  43:/usr/include/c++/14/bits/ios_base.h **** #if __cplusplus < 201103L
  44:/usr/include/c++/14/bits/ios_base.h **** # include <stdexcept>
  45:/usr/include/c++/14/bits/ios_base.h **** #else
GAS LISTING linobj/Ch02_03.s 			page 43


  46:/usr/include/c++/14/bits/ios_base.h **** # include <system_error>
  47:/usr/include/c++/14/bits/ios_base.h **** #endif
  48:/usr/include/c++/14/bits/ios_base.h **** 
  49:/usr/include/c++/14/bits/ios_base.h **** namespace std _GLIBCXX_VISIBILITY(default)
  50:/usr/include/c++/14/bits/ios_base.h **** {
  51:/usr/include/c++/14/bits/ios_base.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  52:/usr/include/c++/14/bits/ios_base.h **** 
  53:/usr/include/c++/14/bits/ios_base.h ****   // The following definitions of bitmask types are enums, not ints,
  54:/usr/include/c++/14/bits/ios_base.h ****   // as permitted (but not required) in the standard, in order to provide
  55:/usr/include/c++/14/bits/ios_base.h ****   // better type safety in iostream calls.  A side effect is that in C++98
  56:/usr/include/c++/14/bits/ios_base.h ****   // expressions involving them are not compile-time constants.
  57:/usr/include/c++/14/bits/ios_base.h ****   enum _Ios_Fmtflags 
  58:/usr/include/c++/14/bits/ios_base.h ****     { 
  59:/usr/include/c++/14/bits/ios_base.h ****       _S_boolalpha 	= 1L << 0,
  60:/usr/include/c++/14/bits/ios_base.h ****       _S_dec 		= 1L << 1,
  61:/usr/include/c++/14/bits/ios_base.h ****       _S_fixed 		= 1L << 2,
  62:/usr/include/c++/14/bits/ios_base.h ****       _S_hex 		= 1L << 3,
  63:/usr/include/c++/14/bits/ios_base.h ****       _S_internal 	= 1L << 4,
  64:/usr/include/c++/14/bits/ios_base.h ****       _S_left 		= 1L << 5,
  65:/usr/include/c++/14/bits/ios_base.h ****       _S_oct 		= 1L << 6,
  66:/usr/include/c++/14/bits/ios_base.h ****       _S_right 		= 1L << 7,
  67:/usr/include/c++/14/bits/ios_base.h ****       _S_scientific 	= 1L << 8,
  68:/usr/include/c++/14/bits/ios_base.h ****       _S_showbase 	= 1L << 9,
  69:/usr/include/c++/14/bits/ios_base.h ****       _S_showpoint 	= 1L << 10,
  70:/usr/include/c++/14/bits/ios_base.h ****       _S_showpos 	= 1L << 11,
  71:/usr/include/c++/14/bits/ios_base.h ****       _S_skipws 	= 1L << 12,
  72:/usr/include/c++/14/bits/ios_base.h ****       _S_unitbuf 	= 1L << 13,
  73:/usr/include/c++/14/bits/ios_base.h ****       _S_uppercase 	= 1L << 14,
  74:/usr/include/c++/14/bits/ios_base.h ****       _S_adjustfield 	= _S_left | _S_right | _S_internal,
  75:/usr/include/c++/14/bits/ios_base.h ****       _S_basefield 	= _S_dec | _S_oct | _S_hex,
  76:/usr/include/c++/14/bits/ios_base.h ****       _S_floatfield 	= _S_scientific | _S_fixed,
  77:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_fmtflags_end = 1L << 16,
  78:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_fmtflags_max = __INT_MAX__,
  79:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_fmtflags_min = ~__INT_MAX__
  80:/usr/include/c++/14/bits/ios_base.h ****     };
  81:/usr/include/c++/14/bits/ios_base.h **** 
  82:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
  83:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Fmtflags
  84:/usr/include/c++/14/bits/ios_base.h ****   operator&(_Ios_Fmtflags __a, _Ios_Fmtflags __b) _GLIBCXX_NOTHROW
  85:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) & static_cast<int>(__b)); }
  86:/usr/include/c++/14/bits/ios_base.h **** 
  87:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
  88:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Fmtflags
  89:/usr/include/c++/14/bits/ios_base.h ****   operator|(_Ios_Fmtflags __a, _Ios_Fmtflags __b) _GLIBCXX_NOTHROW
  90:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) | static_cast<int>(__b)); }
  91:/usr/include/c++/14/bits/ios_base.h **** 
  92:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
  93:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Fmtflags
  94:/usr/include/c++/14/bits/ios_base.h ****   operator^(_Ios_Fmtflags __a, _Ios_Fmtflags __b) _GLIBCXX_NOTHROW
  95:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Fmtflags(static_cast<int>(__a) ^ static_cast<int>(__b)); }
  96:/usr/include/c++/14/bits/ios_base.h **** 
  97:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
  98:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Fmtflags
  99:/usr/include/c++/14/bits/ios_base.h ****   operator~(_Ios_Fmtflags __a) _GLIBCXX_NOTHROW
 100:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Fmtflags(~static_cast<int>(__a)); }
 101:/usr/include/c++/14/bits/ios_base.h **** 
 102:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
GAS LISTING linobj/Ch02_03.s 			page 44


 103:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Fmtflags&
 104:/usr/include/c++/14/bits/ios_base.h ****   operator|=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b) _GLIBCXX_NOTHROW
 105:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a | __b; }
 106:/usr/include/c++/14/bits/ios_base.h **** 
 107:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
 108:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Fmtflags&
 109:/usr/include/c++/14/bits/ios_base.h ****   operator&=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b) _GLIBCXX_NOTHROW
 110:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a & __b; }
 111:/usr/include/c++/14/bits/ios_base.h **** 
 112:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
 113:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Fmtflags&
 114:/usr/include/c++/14/bits/ios_base.h ****   operator^=(_Ios_Fmtflags& __a, _Ios_Fmtflags __b) _GLIBCXX_NOTHROW
 115:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a ^ __b; }
 116:/usr/include/c++/14/bits/ios_base.h **** 
 117:/usr/include/c++/14/bits/ios_base.h **** 
 118:/usr/include/c++/14/bits/ios_base.h ****   enum _Ios_Openmode 
 119:/usr/include/c++/14/bits/ios_base.h ****     { 
 120:/usr/include/c++/14/bits/ios_base.h ****       _S_app 		= 1L << 0,
 121:/usr/include/c++/14/bits/ios_base.h ****       _S_ate 		= 1L << 1,
 122:/usr/include/c++/14/bits/ios_base.h ****       _S_bin 		= 1L << 2,
 123:/usr/include/c++/14/bits/ios_base.h ****       _S_in 		= 1L << 3,
 124:/usr/include/c++/14/bits/ios_base.h ****       _S_out 		= 1L << 4,
 125:/usr/include/c++/14/bits/ios_base.h ****       _S_trunc 		= 1L << 5,
 126:/usr/include/c++/14/bits/ios_base.h ****       _S_noreplace 	= 1L << 6,
 127:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_openmode_end = 1L << 16,
 128:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_openmode_max = __INT_MAX__,
 129:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_openmode_min = ~__INT_MAX__
 130:/usr/include/c++/14/bits/ios_base.h ****     };
 131:/usr/include/c++/14/bits/ios_base.h **** 
 132:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
 133:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Openmode
 134:/usr/include/c++/14/bits/ios_base.h ****   operator&(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
 135:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) & static_cast<int>(__b)); }
 136:/usr/include/c++/14/bits/ios_base.h **** 
 137:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
 138:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Openmode
 139:/usr/include/c++/14/bits/ios_base.h ****   operator|(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
 140:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) | static_cast<int>(__b)); }
 141:/usr/include/c++/14/bits/ios_base.h **** 
 142:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
 143:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Openmode
 144:/usr/include/c++/14/bits/ios_base.h ****   operator^(_Ios_Openmode __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
 145:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Openmode(static_cast<int>(__a) ^ static_cast<int>(__b)); }
 146:/usr/include/c++/14/bits/ios_base.h **** 
 147:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
 148:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Openmode
 149:/usr/include/c++/14/bits/ios_base.h ****   operator~(_Ios_Openmode __a) _GLIBCXX_NOTHROW
 150:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Openmode(~static_cast<int>(__a)); }
 151:/usr/include/c++/14/bits/ios_base.h **** 
 152:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
 153:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Openmode&
 154:/usr/include/c++/14/bits/ios_base.h ****   operator|=(_Ios_Openmode& __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
 155:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a | __b; }
 156:/usr/include/c++/14/bits/ios_base.h **** 
 157:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
 158:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Openmode&
 159:/usr/include/c++/14/bits/ios_base.h ****   operator&=(_Ios_Openmode& __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
GAS LISTING linobj/Ch02_03.s 			page 45


 160:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a & __b; }
 161:/usr/include/c++/14/bits/ios_base.h **** 
 162:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
 163:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Openmode&
 164:/usr/include/c++/14/bits/ios_base.h ****   operator^=(_Ios_Openmode& __a, _Ios_Openmode __b) _GLIBCXX_NOTHROW
 165:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a ^ __b; }
 166:/usr/include/c++/14/bits/ios_base.h **** 
 167:/usr/include/c++/14/bits/ios_base.h **** 
 168:/usr/include/c++/14/bits/ios_base.h ****   enum _Ios_Iostate
 169:/usr/include/c++/14/bits/ios_base.h ****     { 
 170:/usr/include/c++/14/bits/ios_base.h ****       _S_goodbit 		= 0,
 171:/usr/include/c++/14/bits/ios_base.h ****       _S_badbit 		= 1L << 0,
 172:/usr/include/c++/14/bits/ios_base.h ****       _S_eofbit 		= 1L << 1,
 173:/usr/include/c++/14/bits/ios_base.h ****       _S_failbit		= 1L << 2,
 174:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_iostate_end = 1L << 16,
 175:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_iostate_max = __INT_MAX__,
 176:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_iostate_min = ~__INT_MAX__
 177:/usr/include/c++/14/bits/ios_base.h ****     };
 178:/usr/include/c++/14/bits/ios_base.h **** 
 179:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
 180:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Iostate
 181:/usr/include/c++/14/bits/ios_base.h ****   operator&(_Ios_Iostate __a, _Ios_Iostate __b) _GLIBCXX_NOTHROW
 182:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) & static_cast<int>(__b)); }
 183:/usr/include/c++/14/bits/ios_base.h **** 
 184:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
 185:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Iostate
 186:/usr/include/c++/14/bits/ios_base.h ****   operator|(_Ios_Iostate __a, _Ios_Iostate __b) _GLIBCXX_NOTHROW
 187:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) | static_cast<int>(__b)); }
 188:/usr/include/c++/14/bits/ios_base.h **** 
 189:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
 190:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Iostate
 191:/usr/include/c++/14/bits/ios_base.h ****   operator^(_Ios_Iostate __a, _Ios_Iostate __b) _GLIBCXX_NOTHROW
 192:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Iostate(static_cast<int>(__a) ^ static_cast<int>(__b)); }
 193:/usr/include/c++/14/bits/ios_base.h **** 
 194:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX_NODISCARD _GLIBCXX_CONSTEXPR
 195:/usr/include/c++/14/bits/ios_base.h ****   inline _Ios_Iostate
 196:/usr/include/c++/14/bits/ios_base.h ****   operator~(_Ios_Iostate __a) _GLIBCXX_NOTHROW
 197:/usr/include/c++/14/bits/ios_base.h ****   { return _Ios_Iostate(~static_cast<int>(__a)); }
 198:/usr/include/c++/14/bits/ios_base.h **** 
 199:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
 200:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Iostate&
 201:/usr/include/c++/14/bits/ios_base.h ****   operator|=(_Ios_Iostate& __a, _Ios_Iostate __b) _GLIBCXX_NOTHROW
 202:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a | __b; }
 203:/usr/include/c++/14/bits/ios_base.h **** 
 204:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
 205:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Iostate&
 206:/usr/include/c++/14/bits/ios_base.h ****   operator&=(_Ios_Iostate& __a, _Ios_Iostate __b) _GLIBCXX_NOTHROW
 207:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a & __b; }
 208:/usr/include/c++/14/bits/ios_base.h **** 
 209:/usr/include/c++/14/bits/ios_base.h ****   _GLIBCXX14_CONSTEXPR
 210:/usr/include/c++/14/bits/ios_base.h ****   inline const _Ios_Iostate&
 211:/usr/include/c++/14/bits/ios_base.h ****   operator^=(_Ios_Iostate& __a, _Ios_Iostate __b) _GLIBCXX_NOTHROW
 212:/usr/include/c++/14/bits/ios_base.h ****   { return __a = __a ^ __b; }
 213:/usr/include/c++/14/bits/ios_base.h **** 
 214:/usr/include/c++/14/bits/ios_base.h **** 
 215:/usr/include/c++/14/bits/ios_base.h ****   enum _Ios_Seekdir 
 216:/usr/include/c++/14/bits/ios_base.h ****     { 
GAS LISTING linobj/Ch02_03.s 			page 46


 217:/usr/include/c++/14/bits/ios_base.h ****       _S_beg = 0,
 218:/usr/include/c++/14/bits/ios_base.h ****       _S_cur = _GLIBCXX_STDIO_SEEK_CUR,
 219:/usr/include/c++/14/bits/ios_base.h ****       _S_end = _GLIBCXX_STDIO_SEEK_END,
 220:/usr/include/c++/14/bits/ios_base.h ****       _S_ios_seekdir_end = 1L << 16 
 221:/usr/include/c++/14/bits/ios_base.h ****     };
 222:/usr/include/c++/14/bits/ios_base.h **** 
 223:/usr/include/c++/14/bits/ios_base.h **** #if __cplusplus >= 201103L
 224:/usr/include/c++/14/bits/ios_base.h ****   /// I/O error code
 225:/usr/include/c++/14/bits/ios_base.h ****   enum class io_errc { stream = 1 };
 226:/usr/include/c++/14/bits/ios_base.h **** 
 227:/usr/include/c++/14/bits/ios_base.h ****   template <> struct is_error_code_enum<io_errc> : public true_type { };
 228:/usr/include/c++/14/bits/ios_base.h **** 
 229:/usr/include/c++/14/bits/ios_base.h ****   [[__nodiscard__, __gnu__::__const__]]
 230:/usr/include/c++/14/bits/ios_base.h ****   const error_category&
 231:/usr/include/c++/14/bits/ios_base.h ****   iostream_category() noexcept;
 232:/usr/include/c++/14/bits/ios_base.h **** 
 233:/usr/include/c++/14/bits/ios_base.h ****   [[__nodiscard__]]
 234:/usr/include/c++/14/bits/ios_base.h ****   inline error_code
 235:/usr/include/c++/14/bits/ios_base.h ****   make_error_code(io_errc __e) noexcept
 236:/usr/include/c++/14/bits/ios_base.h ****   { return error_code(static_cast<int>(__e), iostream_category()); }
 237:/usr/include/c++/14/bits/ios_base.h **** 
 238:/usr/include/c++/14/bits/ios_base.h ****   [[__nodiscard__]]
 239:/usr/include/c++/14/bits/ios_base.h ****   inline error_condition
 240:/usr/include/c++/14/bits/ios_base.h ****   make_error_condition(io_errc __e) noexcept
 241:/usr/include/c++/14/bits/ios_base.h ****   { return error_condition(static_cast<int>(__e), iostream_category()); }
 242:/usr/include/c++/14/bits/ios_base.h **** #endif
 243:/usr/include/c++/14/bits/ios_base.h **** 
 244:/usr/include/c++/14/bits/ios_base.h ****   // 27.4.2  Class ios_base
 245:/usr/include/c++/14/bits/ios_base.h ****   /**
 246:/usr/include/c++/14/bits/ios_base.h ****    *  @brief  The base of the I/O class hierarchy.
 247:/usr/include/c++/14/bits/ios_base.h ****    *  @ingroup io
 248:/usr/include/c++/14/bits/ios_base.h ****    *
 249:/usr/include/c++/14/bits/ios_base.h ****    *  This class defines everything that can be defined about I/O that does
 250:/usr/include/c++/14/bits/ios_base.h ****    *  not depend on the type of characters being input or output.  Most
 251:/usr/include/c++/14/bits/ios_base.h ****    *  people will only see @c ios_base when they need to specify the full
 252:/usr/include/c++/14/bits/ios_base.h ****    *  name of the various I/O flags (e.g., the openmodes).
 253:/usr/include/c++/14/bits/ios_base.h ****   */
 254:/usr/include/c++/14/bits/ios_base.h ****   class ios_base
 255:/usr/include/c++/14/bits/ios_base.h ****   {
 256:/usr/include/c++/14/bits/ios_base.h **** #if _GLIBCXX_USE_CXX11_ABI
 257:/usr/include/c++/14/bits/ios_base.h **** #if __cplusplus < 201103L
 258:/usr/include/c++/14/bits/ios_base.h ****     // Type that is layout-compatible with std::system_error
 259:/usr/include/c++/14/bits/ios_base.h ****     struct system_error : std::runtime_error
 260:/usr/include/c++/14/bits/ios_base.h ****     {
 261:/usr/include/c++/14/bits/ios_base.h ****       // Type that is layout-compatible with std::error_code
 262:/usr/include/c++/14/bits/ios_base.h ****       struct error_code
 263:/usr/include/c++/14/bits/ios_base.h ****       {
 264:/usr/include/c++/14/bits/ios_base.h **** 	error_code() { }
 265:/usr/include/c++/14/bits/ios_base.h ****       private:
 266:/usr/include/c++/14/bits/ios_base.h **** 	int		_M_value;
 267:/usr/include/c++/14/bits/ios_base.h **** 	const void*	_M_cat;
 268:/usr/include/c++/14/bits/ios_base.h ****       } _M_code;
 269:/usr/include/c++/14/bits/ios_base.h ****     };
 270:/usr/include/c++/14/bits/ios_base.h **** #endif
 271:/usr/include/c++/14/bits/ios_base.h **** #endif
 272:/usr/include/c++/14/bits/ios_base.h ****   public:
 273:/usr/include/c++/14/bits/ios_base.h **** 
GAS LISTING linobj/Ch02_03.s 			page 47


 274:/usr/include/c++/14/bits/ios_base.h ****     /** 
 275:/usr/include/c++/14/bits/ios_base.h ****      *  @brief These are thrown to indicate problems with io.
 276:/usr/include/c++/14/bits/ios_base.h ****      *  @ingroup exceptions
 277:/usr/include/c++/14/bits/ios_base.h ****      *
 278:/usr/include/c++/14/bits/ios_base.h ****      *  27.4.2.1.1  Class ios_base::failure
 279:/usr/include/c++/14/bits/ios_base.h ****      */
 280:/usr/include/c++/14/bits/ios_base.h **** #if _GLIBCXX_USE_CXX11_ABI
 281:/usr/include/c++/14/bits/ios_base.h ****     class _GLIBCXX_ABI_TAG_CXX11 failure : public system_error
 282:/usr/include/c++/14/bits/ios_base.h ****     {
 283:/usr/include/c++/14/bits/ios_base.h ****     public:
 284:/usr/include/c++/14/bits/ios_base.h ****       explicit
 285:/usr/include/c++/14/bits/ios_base.h ****       failure(const string& __str);
 286:/usr/include/c++/14/bits/ios_base.h **** 
 287:/usr/include/c++/14/bits/ios_base.h **** #if __cplusplus >= 201103L
 288:/usr/include/c++/14/bits/ios_base.h ****       explicit
 289:/usr/include/c++/14/bits/ios_base.h ****       failure(const string&, const error_code&);
 290:/usr/include/c++/14/bits/ios_base.h **** 
 291:/usr/include/c++/14/bits/ios_base.h ****       explicit
 292:/usr/include/c++/14/bits/ios_base.h ****       failure(const char*, const error_code& = io_errc::stream);
 293:/usr/include/c++/14/bits/ios_base.h **** #endif
 294:/usr/include/c++/14/bits/ios_base.h **** 
 295:/usr/include/c++/14/bits/ios_base.h ****       virtual
 296:/usr/include/c++/14/bits/ios_base.h ****       ~failure() throw();
 297:/usr/include/c++/14/bits/ios_base.h **** 
 298:/usr/include/c++/14/bits/ios_base.h ****       virtual const char*
 299:/usr/include/c++/14/bits/ios_base.h ****       what() const throw();
 300:/usr/include/c++/14/bits/ios_base.h ****     };
 301:/usr/include/c++/14/bits/ios_base.h **** #else
 302:/usr/include/c++/14/bits/ios_base.h ****     class failure : public exception
 303:/usr/include/c++/14/bits/ios_base.h ****     {
 304:/usr/include/c++/14/bits/ios_base.h ****     public:
 305:/usr/include/c++/14/bits/ios_base.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 306:/usr/include/c++/14/bits/ios_base.h ****       // 48.  Use of non-existent exception constructor
 307:/usr/include/c++/14/bits/ios_base.h ****       explicit
 308:/usr/include/c++/14/bits/ios_base.h ****       failure(const string& __str) throw();
 309:/usr/include/c++/14/bits/ios_base.h **** 
 310:/usr/include/c++/14/bits/ios_base.h ****       // This declaration is not useless:
 311:/usr/include/c++/14/bits/ios_base.h ****       // http://gcc.gnu.org/onlinedocs/gcc-4.3.2/gcc/Vague-Linkage.html
 312:/usr/include/c++/14/bits/ios_base.h ****       virtual
 313:/usr/include/c++/14/bits/ios_base.h ****       ~failure() throw();
 314:/usr/include/c++/14/bits/ios_base.h **** 
 315:/usr/include/c++/14/bits/ios_base.h ****       virtual const char*
 316:/usr/include/c++/14/bits/ios_base.h ****       what() const throw();
 317:/usr/include/c++/14/bits/ios_base.h **** 
 318:/usr/include/c++/14/bits/ios_base.h **** #if __cplusplus >= 201103L
 319:/usr/include/c++/14/bits/ios_base.h ****       // Define the new members required by C++11,
 320:/usr/include/c++/14/bits/ios_base.h ****       // even though the error_code cannot be stored.
 321:/usr/include/c++/14/bits/ios_base.h **** 
 322:/usr/include/c++/14/bits/ios_base.h ****       explicit
 323:/usr/include/c++/14/bits/ios_base.h ****       failure(const string& __s, const error_code&) noexcept
 324:/usr/include/c++/14/bits/ios_base.h ****       : failure(__s)
 325:/usr/include/c++/14/bits/ios_base.h ****       { }
 326:/usr/include/c++/14/bits/ios_base.h **** 
 327:/usr/include/c++/14/bits/ios_base.h ****       explicit
 328:/usr/include/c++/14/bits/ios_base.h ****       failure(const char* __s, const error_code& = error_code{})
 329:/usr/include/c++/14/bits/ios_base.h ****       : failure(string(__s))
 330:/usr/include/c++/14/bits/ios_base.h ****       { }
GAS LISTING linobj/Ch02_03.s 			page 48


 331:/usr/include/c++/14/bits/ios_base.h **** 
 332:/usr/include/c++/14/bits/ios_base.h ****       // Stand-in for system_error::code() but returning by value.
 333:/usr/include/c++/14/bits/ios_base.h ****       error_code code() const noexcept { return error_code{}; }
 334:/usr/include/c++/14/bits/ios_base.h **** #endif
 335:/usr/include/c++/14/bits/ios_base.h **** 
 336:/usr/include/c++/14/bits/ios_base.h ****     private:
 337:/usr/include/c++/14/bits/ios_base.h ****       string _M_msg;
 338:/usr/include/c++/14/bits/ios_base.h ****     };
 339:/usr/include/c++/14/bits/ios_base.h **** #endif
 340:/usr/include/c++/14/bits/ios_base.h **** 
 341:/usr/include/c++/14/bits/ios_base.h ****     // 27.4.2.1.2  Type ios_base::fmtflags
 342:/usr/include/c++/14/bits/ios_base.h ****     /**
 343:/usr/include/c++/14/bits/ios_base.h ****      *  @brief This is a bitmask type.
 344:/usr/include/c++/14/bits/ios_base.h ****      *
 345:/usr/include/c++/14/bits/ios_base.h ****      *  @c @a _Ios_Fmtflags is implementation-defined, but it is valid to
 346:/usr/include/c++/14/bits/ios_base.h ****      *  perform bitwise operations on these values and expect the Right
 347:/usr/include/c++/14/bits/ios_base.h ****      *  Thing to happen.  Defined objects of type fmtflags are:
 348:/usr/include/c++/14/bits/ios_base.h ****      *  - boolalpha
 349:/usr/include/c++/14/bits/ios_base.h ****      *  - dec
 350:/usr/include/c++/14/bits/ios_base.h ****      *  - fixed
 351:/usr/include/c++/14/bits/ios_base.h ****      *  - hex
 352:/usr/include/c++/14/bits/ios_base.h ****      *  - internal
 353:/usr/include/c++/14/bits/ios_base.h ****      *  - left
 354:/usr/include/c++/14/bits/ios_base.h ****      *  - oct
 355:/usr/include/c++/14/bits/ios_base.h ****      *  - right
 356:/usr/include/c++/14/bits/ios_base.h ****      *  - scientific
 357:/usr/include/c++/14/bits/ios_base.h ****      *  - showbase
 358:/usr/include/c++/14/bits/ios_base.h ****      *  - showpoint
 359:/usr/include/c++/14/bits/ios_base.h ****      *  - showpos
 360:/usr/include/c++/14/bits/ios_base.h ****      *  - skipws
 361:/usr/include/c++/14/bits/ios_base.h ****      *  - unitbuf
 362:/usr/include/c++/14/bits/ios_base.h ****      *  - uppercase
 363:/usr/include/c++/14/bits/ios_base.h ****      *  - adjustfield
 364:/usr/include/c++/14/bits/ios_base.h ****      *  - basefield
 365:/usr/include/c++/14/bits/ios_base.h ****      *  - floatfield
 366:/usr/include/c++/14/bits/ios_base.h ****     */
 367:/usr/include/c++/14/bits/ios_base.h ****     typedef _Ios_Fmtflags fmtflags;
 368:/usr/include/c++/14/bits/ios_base.h **** 
 369:/usr/include/c++/14/bits/ios_base.h ****     /// Insert/extract @c bool in alphabetic rather than numeric format.
 370:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags boolalpha =   _S_boolalpha;
 371:/usr/include/c++/14/bits/ios_base.h **** 
 372:/usr/include/c++/14/bits/ios_base.h ****     /// Converts integer input or generates integer output in decimal base.
 373:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags dec =         _S_dec;
 374:/usr/include/c++/14/bits/ios_base.h **** 
 375:/usr/include/c++/14/bits/ios_base.h ****     /// Generate floating-point output in fixed-point notation.
 376:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags fixed =       _S_fixed;
 377:/usr/include/c++/14/bits/ios_base.h **** 
 378:/usr/include/c++/14/bits/ios_base.h ****     /// Converts integer input or generates integer output in hexadecimal base.
 379:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags hex =         _S_hex;
 380:/usr/include/c++/14/bits/ios_base.h **** 
 381:/usr/include/c++/14/bits/ios_base.h ****     /// Adds fill characters at a designated internal point in certain
 382:/usr/include/c++/14/bits/ios_base.h ****     /// generated output, or identical to @c right if no such point is
 383:/usr/include/c++/14/bits/ios_base.h ****     /// designated.
 384:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags internal =    _S_internal;
 385:/usr/include/c++/14/bits/ios_base.h **** 
 386:/usr/include/c++/14/bits/ios_base.h ****     /// Adds fill characters on the right (final positions) of certain
 387:/usr/include/c++/14/bits/ios_base.h ****     /// generated output.  (I.e., the thing you print is flush left.)
GAS LISTING linobj/Ch02_03.s 			page 49


 388:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags left =        _S_left;
 389:/usr/include/c++/14/bits/ios_base.h **** 
 390:/usr/include/c++/14/bits/ios_base.h ****     /// Converts integer input or generates integer output in octal base.
 391:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags oct =         _S_oct;
 392:/usr/include/c++/14/bits/ios_base.h **** 
 393:/usr/include/c++/14/bits/ios_base.h ****     /// Adds fill characters on the left (initial positions) of certain
 394:/usr/include/c++/14/bits/ios_base.h ****     /// generated output.  (I.e., the thing you print is flush right.)
 395:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags right =       _S_right;
 396:/usr/include/c++/14/bits/ios_base.h **** 
 397:/usr/include/c++/14/bits/ios_base.h ****     /// Generates floating-point output in scientific notation.
 398:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags scientific =  _S_scientific;
 399:/usr/include/c++/14/bits/ios_base.h **** 
 400:/usr/include/c++/14/bits/ios_base.h ****     /// Generates a prefix indicating the numeric base of generated integer
 401:/usr/include/c++/14/bits/ios_base.h ****     /// output.
 402:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags showbase =    _S_showbase;
 403:/usr/include/c++/14/bits/ios_base.h **** 
 404:/usr/include/c++/14/bits/ios_base.h ****     /// Generates a decimal-point character unconditionally in generated
 405:/usr/include/c++/14/bits/ios_base.h ****     /// floating-point output.
 406:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags showpoint =   _S_showpoint;
 407:/usr/include/c++/14/bits/ios_base.h **** 
 408:/usr/include/c++/14/bits/ios_base.h ****     /// Generates a + sign in non-negative generated numeric output.
 409:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags showpos =     _S_showpos;
 410:/usr/include/c++/14/bits/ios_base.h **** 
 411:/usr/include/c++/14/bits/ios_base.h ****     /// Skips leading white space before certain input operations.
 412:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags skipws =      _S_skipws;
 413:/usr/include/c++/14/bits/ios_base.h **** 
 414:/usr/include/c++/14/bits/ios_base.h ****     /// Flushes output after each output operation.
 415:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags unitbuf =     _S_unitbuf;
 416:/usr/include/c++/14/bits/ios_base.h **** 
 417:/usr/include/c++/14/bits/ios_base.h ****     /// Replaces certain lowercase letters with their uppercase equivalents
 418:/usr/include/c++/14/bits/ios_base.h ****     /// in generated output.
 419:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags uppercase =   _S_uppercase;
 420:/usr/include/c++/14/bits/ios_base.h **** 
 421:/usr/include/c++/14/bits/ios_base.h ****     /// A mask of left|right|internal.  Useful for the 2-arg form of @c setf.
 422:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags adjustfield = _S_adjustfield;
 423:/usr/include/c++/14/bits/ios_base.h **** 
 424:/usr/include/c++/14/bits/ios_base.h ****     /// A mask of dec|oct|hex.  Useful for the 2-arg form of @c setf.
 425:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags basefield =   _S_basefield;
 426:/usr/include/c++/14/bits/ios_base.h **** 
 427:/usr/include/c++/14/bits/ios_base.h ****     /// A mask of scientific|fixed.  Useful for the 2-arg form of @c setf.
 428:/usr/include/c++/14/bits/ios_base.h ****     static const fmtflags floatfield =  _S_floatfield;
 429:/usr/include/c++/14/bits/ios_base.h **** 
 430:/usr/include/c++/14/bits/ios_base.h ****     // 27.4.2.1.3  Type ios_base::iostate
 431:/usr/include/c++/14/bits/ios_base.h ****     /**
 432:/usr/include/c++/14/bits/ios_base.h ****      *  @brief This is a bitmask type.
 433:/usr/include/c++/14/bits/ios_base.h ****      *
 434:/usr/include/c++/14/bits/ios_base.h ****      *  @c @a _Ios_Iostate is implementation-defined, but it is valid to
 435:/usr/include/c++/14/bits/ios_base.h ****      *  perform bitwise operations on these values and expect the Right
 436:/usr/include/c++/14/bits/ios_base.h ****      *  Thing to happen.  Defined objects of type iostate are:
 437:/usr/include/c++/14/bits/ios_base.h ****      *  - badbit
 438:/usr/include/c++/14/bits/ios_base.h ****      *  - eofbit
 439:/usr/include/c++/14/bits/ios_base.h ****      *  - failbit
 440:/usr/include/c++/14/bits/ios_base.h ****      *  - goodbit
 441:/usr/include/c++/14/bits/ios_base.h ****     */
 442:/usr/include/c++/14/bits/ios_base.h ****     typedef _Ios_Iostate iostate;
 443:/usr/include/c++/14/bits/ios_base.h **** 
 444:/usr/include/c++/14/bits/ios_base.h ****     /// Indicates a loss of integrity in an input or output sequence (such
GAS LISTING linobj/Ch02_03.s 			page 50


 445:/usr/include/c++/14/bits/ios_base.h ****     /// as an irrecoverable read error from a file).
 446:/usr/include/c++/14/bits/ios_base.h ****     static const iostate badbit =	_S_badbit;
 447:/usr/include/c++/14/bits/ios_base.h **** 
 448:/usr/include/c++/14/bits/ios_base.h ****     /// Indicates that an input operation reached the end of an input sequence.
 449:/usr/include/c++/14/bits/ios_base.h ****     static const iostate eofbit =	_S_eofbit;
 450:/usr/include/c++/14/bits/ios_base.h **** 
 451:/usr/include/c++/14/bits/ios_base.h ****     /// Indicates that an input operation failed to read the expected
 452:/usr/include/c++/14/bits/ios_base.h ****     /// characters, or that an output operation failed to generate the
 453:/usr/include/c++/14/bits/ios_base.h ****     /// desired characters.
 454:/usr/include/c++/14/bits/ios_base.h ****     static const iostate failbit =	_S_failbit;
 455:/usr/include/c++/14/bits/ios_base.h **** 
 456:/usr/include/c++/14/bits/ios_base.h ****     /// Indicates all is well.
 457:/usr/include/c++/14/bits/ios_base.h ****     static const iostate goodbit =	_S_goodbit;
 458:/usr/include/c++/14/bits/ios_base.h **** 
 459:/usr/include/c++/14/bits/ios_base.h ****     // 27.4.2.1.4  Type ios_base::openmode
 460:/usr/include/c++/14/bits/ios_base.h ****     /**
 461:/usr/include/c++/14/bits/ios_base.h ****      *  @brief This is a bitmask type.
 462:/usr/include/c++/14/bits/ios_base.h ****      *
 463:/usr/include/c++/14/bits/ios_base.h ****      *  @c @a _Ios_Openmode is implementation-defined, but it is valid to
 464:/usr/include/c++/14/bits/ios_base.h ****      *  perform bitwise operations on these values and expect the Right
 465:/usr/include/c++/14/bits/ios_base.h ****      *  Thing to happen.  Defined objects of type openmode are:
 466:/usr/include/c++/14/bits/ios_base.h ****      *  - app
 467:/usr/include/c++/14/bits/ios_base.h ****      *  - ate
 468:/usr/include/c++/14/bits/ios_base.h ****      *  - binary
 469:/usr/include/c++/14/bits/ios_base.h ****      *  - in
 470:/usr/include/c++/14/bits/ios_base.h ****      *  - out
 471:/usr/include/c++/14/bits/ios_base.h ****      *  - trunc
 472:/usr/include/c++/14/bits/ios_base.h ****     */
 473:/usr/include/c++/14/bits/ios_base.h ****     typedef _Ios_Openmode openmode;
 474:/usr/include/c++/14/bits/ios_base.h **** 
 475:/usr/include/c++/14/bits/ios_base.h ****     /// Seek to end before each write.
 476:/usr/include/c++/14/bits/ios_base.h ****     static const openmode app =		_S_app;
 477:/usr/include/c++/14/bits/ios_base.h **** 
 478:/usr/include/c++/14/bits/ios_base.h ****     /// Open and seek to end immediately after opening.
 479:/usr/include/c++/14/bits/ios_base.h ****     static const openmode ate =		_S_ate;
 480:/usr/include/c++/14/bits/ios_base.h **** 
 481:/usr/include/c++/14/bits/ios_base.h ****     /// Perform input and output in binary mode (as opposed to text mode).
 482:/usr/include/c++/14/bits/ios_base.h ****     /// This is probably not what you think it is; see
 483:/usr/include/c++/14/bits/ios_base.h ****     /// https://gcc.gnu.org/onlinedocs/libstdc++/manual/fstreams.html#std.io.filestreams.binary
 484:/usr/include/c++/14/bits/ios_base.h ****     static const openmode binary =	_S_bin;
 485:/usr/include/c++/14/bits/ios_base.h **** 
 486:/usr/include/c++/14/bits/ios_base.h ****     /// Open for input.  Default for @c ifstream and fstream.
 487:/usr/include/c++/14/bits/ios_base.h ****     static const openmode in =		_S_in;
 488:/usr/include/c++/14/bits/ios_base.h **** 
 489:/usr/include/c++/14/bits/ios_base.h ****     /// Open for output.  Default for @c ofstream and fstream.
 490:/usr/include/c++/14/bits/ios_base.h ****     static const openmode out =		_S_out;
 491:/usr/include/c++/14/bits/ios_base.h **** 
 492:/usr/include/c++/14/bits/ios_base.h ****     /// Truncate an existing stream when opening.  Default for @c ofstream.
 493:/usr/include/c++/14/bits/ios_base.h ****     static const openmode trunc =	_S_trunc;
 494:/usr/include/c++/14/bits/ios_base.h **** 
 495:/usr/include/c++/14/bits/ios_base.h ****     static const openmode __noreplace =	_S_noreplace;
 496:/usr/include/c++/14/bits/ios_base.h **** 
 497:/usr/include/c++/14/bits/ios_base.h **** #ifdef __glibcxx_ios_noreplace // C++ >= 23 && HOSTED
 498:/usr/include/c++/14/bits/ios_base.h ****     /// Open a file in exclusive mode.
 499:/usr/include/c++/14/bits/ios_base.h ****     static const openmode noreplace =	_S_noreplace;
 500:/usr/include/c++/14/bits/ios_base.h **** #endif
 501:/usr/include/c++/14/bits/ios_base.h **** 
GAS LISTING linobj/Ch02_03.s 			page 51


 502:/usr/include/c++/14/bits/ios_base.h ****     // 27.4.2.1.5  Type ios_base::seekdir
 503:/usr/include/c++/14/bits/ios_base.h ****     /**
 504:/usr/include/c++/14/bits/ios_base.h ****      *  @brief This is an enumerated type.
 505:/usr/include/c++/14/bits/ios_base.h ****      *
 506:/usr/include/c++/14/bits/ios_base.h ****      *  @c @a _Ios_Seekdir is implementation-defined.  Defined values
 507:/usr/include/c++/14/bits/ios_base.h ****      *  of type seekdir are:
 508:/usr/include/c++/14/bits/ios_base.h ****      *  - beg
 509:/usr/include/c++/14/bits/ios_base.h ****      *  - cur, equivalent to @c SEEK_CUR in the C standard library.
 510:/usr/include/c++/14/bits/ios_base.h ****      *  - end, equivalent to @c SEEK_END in the C standard library.
 511:/usr/include/c++/14/bits/ios_base.h ****     */
 512:/usr/include/c++/14/bits/ios_base.h ****     typedef _Ios_Seekdir seekdir;
 513:/usr/include/c++/14/bits/ios_base.h **** 
 514:/usr/include/c++/14/bits/ios_base.h ****     /// Request a seek relative to the beginning of the stream.
 515:/usr/include/c++/14/bits/ios_base.h ****     static const seekdir beg =		_S_beg;
 516:/usr/include/c++/14/bits/ios_base.h **** 
 517:/usr/include/c++/14/bits/ios_base.h ****     /// Request a seek relative to the current position within the sequence.
 518:/usr/include/c++/14/bits/ios_base.h ****     static const seekdir cur =		_S_cur;
 519:/usr/include/c++/14/bits/ios_base.h **** 
 520:/usr/include/c++/14/bits/ios_base.h ****     /// Request a seek relative to the current end of the sequence.
 521:/usr/include/c++/14/bits/ios_base.h ****     static const seekdir end =		_S_end;
 522:/usr/include/c++/14/bits/ios_base.h **** 
 523:/usr/include/c++/14/bits/ios_base.h **** #if __cplusplus <= 201402L
 524:/usr/include/c++/14/bits/ios_base.h ****     // Annex D.6 (removed in C++17)
 525:/usr/include/c++/14/bits/ios_base.h ****     typedef int io_state
 526:/usr/include/c++/14/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::iostate");
 527:/usr/include/c++/14/bits/ios_base.h ****     typedef int open_mode
 528:/usr/include/c++/14/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::openmode");
 529:/usr/include/c++/14/bits/ios_base.h ****     typedef int seek_dir
 530:/usr/include/c++/14/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::seekdir");
 531:/usr/include/c++/14/bits/ios_base.h **** 
 532:/usr/include/c++/14/bits/ios_base.h ****     typedef std::streampos streampos
 533:/usr/include/c++/14/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::streampos");
 534:/usr/include/c++/14/bits/ios_base.h ****     typedef std::streamoff streamoff
 535:/usr/include/c++/14/bits/ios_base.h ****       _GLIBCXX_DEPRECATED_SUGGEST("std::streamoff");
 536:/usr/include/c++/14/bits/ios_base.h **** #endif
 537:/usr/include/c++/14/bits/ios_base.h **** 
 538:/usr/include/c++/14/bits/ios_base.h ****     // Callbacks;
 539:/usr/include/c++/14/bits/ios_base.h ****     /**
 540:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  The set of events that may be passed to an event callback.
 541:/usr/include/c++/14/bits/ios_base.h ****      *
 542:/usr/include/c++/14/bits/ios_base.h ****      *  erase_event is used during ~ios() and copyfmt().  imbue_event is used
 543:/usr/include/c++/14/bits/ios_base.h ****      *  during imbue().  copyfmt_event is used during copyfmt().
 544:/usr/include/c++/14/bits/ios_base.h ****     */
 545:/usr/include/c++/14/bits/ios_base.h ****     enum event
 546:/usr/include/c++/14/bits/ios_base.h ****     {
 547:/usr/include/c++/14/bits/ios_base.h ****       erase_event,
 548:/usr/include/c++/14/bits/ios_base.h ****       imbue_event,
 549:/usr/include/c++/14/bits/ios_base.h ****       copyfmt_event
 550:/usr/include/c++/14/bits/ios_base.h ****     };
 551:/usr/include/c++/14/bits/ios_base.h **** 
 552:/usr/include/c++/14/bits/ios_base.h ****     /**
 553:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  The type of an event callback function.
 554:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __e  One of the members of the event enum.
 555:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __b  Reference to the ios_base object.
 556:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __i  The integer provided when the callback was registered.
 557:/usr/include/c++/14/bits/ios_base.h ****      *
 558:/usr/include/c++/14/bits/ios_base.h ****      *  Event callbacks are user defined functions that get called during
GAS LISTING linobj/Ch02_03.s 			page 52


 559:/usr/include/c++/14/bits/ios_base.h ****      *  several ios_base and basic_ios functions, specifically imbue(),
 560:/usr/include/c++/14/bits/ios_base.h ****      *  copyfmt(), and ~ios().
 561:/usr/include/c++/14/bits/ios_base.h ****     */
 562:/usr/include/c++/14/bits/ios_base.h ****     typedef void (*event_callback) (event __e, ios_base& __b, int __i);
 563:/usr/include/c++/14/bits/ios_base.h **** 
 564:/usr/include/c++/14/bits/ios_base.h ****     /**
 565:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Add the callback __fn with parameter __index.
 566:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __fn  The function to add.
 567:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __index  The integer to pass to the function when invoked.
 568:/usr/include/c++/14/bits/ios_base.h ****      *
 569:/usr/include/c++/14/bits/ios_base.h ****      *  Registers a function as an event callback with an integer parameter to
 570:/usr/include/c++/14/bits/ios_base.h ****      *  be passed to the function when invoked.  Multiple copies of the
 571:/usr/include/c++/14/bits/ios_base.h ****      *  function are allowed.  If there are multiple callbacks, they are
 572:/usr/include/c++/14/bits/ios_base.h ****      *  invoked in the order they were registered.
 573:/usr/include/c++/14/bits/ios_base.h ****     */
 574:/usr/include/c++/14/bits/ios_base.h ****     void
 575:/usr/include/c++/14/bits/ios_base.h ****     register_callback(event_callback __fn, int __index);
 576:/usr/include/c++/14/bits/ios_base.h **** 
 577:/usr/include/c++/14/bits/ios_base.h ****   protected:
 578:/usr/include/c++/14/bits/ios_base.h ****     streamsize		_M_precision;
 579:/usr/include/c++/14/bits/ios_base.h ****     streamsize		_M_width;
 580:/usr/include/c++/14/bits/ios_base.h ****     fmtflags		_M_flags;
 581:/usr/include/c++/14/bits/ios_base.h ****     iostate		_M_exception;
 582:/usr/include/c++/14/bits/ios_base.h ****     iostate		_M_streambuf_state;
 583:/usr/include/c++/14/bits/ios_base.h **** 
 584:/usr/include/c++/14/bits/ios_base.h ****     // 27.4.2.6  Members for callbacks
 585:/usr/include/c++/14/bits/ios_base.h ****     // 27.4.2.6  ios_base callbacks
 586:/usr/include/c++/14/bits/ios_base.h ****     struct _Callback_list
 587:/usr/include/c++/14/bits/ios_base.h ****     {
 588:/usr/include/c++/14/bits/ios_base.h ****       // Data Members
 589:/usr/include/c++/14/bits/ios_base.h ****       _Callback_list*		_M_next;
 590:/usr/include/c++/14/bits/ios_base.h ****       ios_base::event_callback	_M_fn;
 591:/usr/include/c++/14/bits/ios_base.h ****       int			_M_index;
 592:/usr/include/c++/14/bits/ios_base.h ****       _Atomic_word		_M_refcount;  // 0 means one reference.
 593:/usr/include/c++/14/bits/ios_base.h **** 
 594:/usr/include/c++/14/bits/ios_base.h ****       _Callback_list(ios_base::event_callback __fn, int __index,
 595:/usr/include/c++/14/bits/ios_base.h **** 		     _Callback_list* __cb)
 596:/usr/include/c++/14/bits/ios_base.h ****       : _M_next(__cb), _M_fn(__fn), _M_index(__index), _M_refcount(0) { }
 597:/usr/include/c++/14/bits/ios_base.h **** 
 598:/usr/include/c++/14/bits/ios_base.h ****       void
 599:/usr/include/c++/14/bits/ios_base.h ****       _M_add_reference() { __gnu_cxx::__atomic_add_dispatch(&_M_refcount, 1); }
 600:/usr/include/c++/14/bits/ios_base.h **** 
 601:/usr/include/c++/14/bits/ios_base.h ****       // 0 => OK to delete.
 602:/usr/include/c++/14/bits/ios_base.h ****       int
 603:/usr/include/c++/14/bits/ios_base.h ****       _M_remove_reference() 
 604:/usr/include/c++/14/bits/ios_base.h ****       {
 605:/usr/include/c++/14/bits/ios_base.h ****         // Be race-detector-friendly.  For more info see bits/c++config.
 606:/usr/include/c++/14/bits/ios_base.h ****         _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&_M_refcount);
 607:/usr/include/c++/14/bits/ios_base.h ****         int __res = __gnu_cxx::__exchange_and_add_dispatch(&_M_refcount, -1);
 608:/usr/include/c++/14/bits/ios_base.h ****         if (__res == 0)
 609:/usr/include/c++/14/bits/ios_base.h ****           {
 610:/usr/include/c++/14/bits/ios_base.h ****             _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&_M_refcount);
 611:/usr/include/c++/14/bits/ios_base.h ****           }
 612:/usr/include/c++/14/bits/ios_base.h ****         return __res;
 613:/usr/include/c++/14/bits/ios_base.h ****       }
 614:/usr/include/c++/14/bits/ios_base.h ****     };
 615:/usr/include/c++/14/bits/ios_base.h **** 
GAS LISTING linobj/Ch02_03.s 			page 53


 616:/usr/include/c++/14/bits/ios_base.h ****      _Callback_list*	_M_callbacks;
 617:/usr/include/c++/14/bits/ios_base.h **** 
 618:/usr/include/c++/14/bits/ios_base.h ****     void
 619:/usr/include/c++/14/bits/ios_base.h ****     _M_call_callbacks(event __ev) throw();
 620:/usr/include/c++/14/bits/ios_base.h **** 
 621:/usr/include/c++/14/bits/ios_base.h ****     void
 622:/usr/include/c++/14/bits/ios_base.h ****     _M_dispose_callbacks(void) throw();
 623:/usr/include/c++/14/bits/ios_base.h **** 
 624:/usr/include/c++/14/bits/ios_base.h ****     // 27.4.2.5  Members for iword/pword storage
 625:/usr/include/c++/14/bits/ios_base.h ****     struct _Words
 626:/usr/include/c++/14/bits/ios_base.h ****     {
 627:/usr/include/c++/14/bits/ios_base.h ****       void*	_M_pword;
 628:/usr/include/c++/14/bits/ios_base.h ****       long	_M_iword;
 629:/usr/include/c++/14/bits/ios_base.h ****       _Words() : _M_pword(0), _M_iword(0) { }
 630:/usr/include/c++/14/bits/ios_base.h ****     };
 631:/usr/include/c++/14/bits/ios_base.h **** 
 632:/usr/include/c++/14/bits/ios_base.h ****     // Only for failed iword/pword calls.
 633:/usr/include/c++/14/bits/ios_base.h ****     _Words		_M_word_zero;
 634:/usr/include/c++/14/bits/ios_base.h **** 
 635:/usr/include/c++/14/bits/ios_base.h ****     // Guaranteed storage.
 636:/usr/include/c++/14/bits/ios_base.h ****     // The first 5 iword and pword slots are reserved for internal use.
 637:/usr/include/c++/14/bits/ios_base.h ****     enum { _S_local_word_size = 8 };
 638:/usr/include/c++/14/bits/ios_base.h ****     _Words		_M_local_word[_S_local_word_size];
 639:/usr/include/c++/14/bits/ios_base.h **** 
 640:/usr/include/c++/14/bits/ios_base.h ****     // Allocated storage.
 641:/usr/include/c++/14/bits/ios_base.h ****     int			_M_word_size;
 642:/usr/include/c++/14/bits/ios_base.h ****     _Words*		_M_word;
 643:/usr/include/c++/14/bits/ios_base.h **** 
 644:/usr/include/c++/14/bits/ios_base.h ****     _Words&
 645:/usr/include/c++/14/bits/ios_base.h ****     _M_grow_words(int __index, bool __iword);
 646:/usr/include/c++/14/bits/ios_base.h **** 
 647:/usr/include/c++/14/bits/ios_base.h ****     // Members for locale and locale caching.
 648:/usr/include/c++/14/bits/ios_base.h ****     locale		_M_ios_locale;
 649:/usr/include/c++/14/bits/ios_base.h **** 
 650:/usr/include/c++/14/bits/ios_base.h ****     void
 651:/usr/include/c++/14/bits/ios_base.h ****     _M_init() throw();
 652:/usr/include/c++/14/bits/ios_base.h **** 
 653:/usr/include/c++/14/bits/ios_base.h ****   public:
 654:/usr/include/c++/14/bits/ios_base.h **** 
 655:/usr/include/c++/14/bits/ios_base.h ****     // 27.4.2.1.6  Class ios_base::Init
 656:/usr/include/c++/14/bits/ios_base.h ****     // Used to initialize standard streams. In theory, g++ could use
 657:/usr/include/c++/14/bits/ios_base.h ****     // -finit-priority to order this stuff correctly without going
 658:/usr/include/c++/14/bits/ios_base.h ****     // through these machinations.
 659:/usr/include/c++/14/bits/ios_base.h ****     class Init
 660:/usr/include/c++/14/bits/ios_base.h ****     {
 661:/usr/include/c++/14/bits/ios_base.h ****       friend class ios_base;
 662:/usr/include/c++/14/bits/ios_base.h ****     public:
 663:/usr/include/c++/14/bits/ios_base.h ****       Init();
 664:/usr/include/c++/14/bits/ios_base.h ****       ~Init();
 665:/usr/include/c++/14/bits/ios_base.h **** 
 666:/usr/include/c++/14/bits/ios_base.h **** #if __cplusplus >= 201103L
 667:/usr/include/c++/14/bits/ios_base.h ****       Init(const Init&) = default;
 668:/usr/include/c++/14/bits/ios_base.h ****       Init& operator=(const Init&) = default;
 669:/usr/include/c++/14/bits/ios_base.h **** #endif
 670:/usr/include/c++/14/bits/ios_base.h **** 
 671:/usr/include/c++/14/bits/ios_base.h ****     private:
 672:/usr/include/c++/14/bits/ios_base.h ****       static _Atomic_word	_S_refcount;
GAS LISTING linobj/Ch02_03.s 			page 54


 673:/usr/include/c++/14/bits/ios_base.h ****       static bool		_S_synced_with_stdio;
 674:/usr/include/c++/14/bits/ios_base.h ****     };
 675:/usr/include/c++/14/bits/ios_base.h **** 
 676:/usr/include/c++/14/bits/ios_base.h ****     // [27.4.2.2] fmtflags state functions
 677:/usr/include/c++/14/bits/ios_base.h ****     /**
 678:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Access to format flags.
 679:/usr/include/c++/14/bits/ios_base.h ****      *  @return  The format control flags for both input and output.
 680:/usr/include/c++/14/bits/ios_base.h ****     */
 681:/usr/include/c++/14/bits/ios_base.h ****     fmtflags
 682:/usr/include/c++/14/bits/ios_base.h ****     flags() const
 683:/usr/include/c++/14/bits/ios_base.h ****     { return _M_flags; }
 684:/usr/include/c++/14/bits/ios_base.h **** 
 685:/usr/include/c++/14/bits/ios_base.h ****     /**
 686:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Setting new format flags all at once.
 687:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __fmtfl  The new flags to set.
 688:/usr/include/c++/14/bits/ios_base.h ****      *  @return  The previous format control flags.
 689:/usr/include/c++/14/bits/ios_base.h ****      *
 690:/usr/include/c++/14/bits/ios_base.h ****      *  This function overwrites all the format flags with @a __fmtfl.
 691:/usr/include/c++/14/bits/ios_base.h ****     */
 692:/usr/include/c++/14/bits/ios_base.h ****     fmtflags
 693:/usr/include/c++/14/bits/ios_base.h ****     flags(fmtflags __fmtfl)
 694:/usr/include/c++/14/bits/ios_base.h ****     {
 695:/usr/include/c++/14/bits/ios_base.h ****       fmtflags __old = _M_flags;
 696:/usr/include/c++/14/bits/ios_base.h ****       _M_flags = __fmtfl;
 697:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 698:/usr/include/c++/14/bits/ios_base.h ****     }
 699:/usr/include/c++/14/bits/ios_base.h **** 
 700:/usr/include/c++/14/bits/ios_base.h ****     /**
 701:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Setting new format flags.
 702:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __fmtfl  Additional flags to set.
 703:/usr/include/c++/14/bits/ios_base.h ****      *  @return  The previous format control flags.
 704:/usr/include/c++/14/bits/ios_base.h ****      *
 705:/usr/include/c++/14/bits/ios_base.h ****      *  This function sets additional flags in format control.  Flags that
 706:/usr/include/c++/14/bits/ios_base.h ****      *  were previously set remain set.
 707:/usr/include/c++/14/bits/ios_base.h ****     */
 708:/usr/include/c++/14/bits/ios_base.h ****     fmtflags
 709:/usr/include/c++/14/bits/ios_base.h ****     setf(fmtflags __fmtfl)
 710:/usr/include/c++/14/bits/ios_base.h ****     {
 711:/usr/include/c++/14/bits/ios_base.h ****       fmtflags __old = _M_flags;
 712:/usr/include/c++/14/bits/ios_base.h ****       _M_flags |= __fmtfl;
 713:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 714:/usr/include/c++/14/bits/ios_base.h ****     }
 715:/usr/include/c++/14/bits/ios_base.h **** 
 716:/usr/include/c++/14/bits/ios_base.h ****     /**
 717:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Setting new format flags.
 718:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __fmtfl  Additional flags to set.
 719:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __mask  The flags mask for @a fmtfl.
 720:/usr/include/c++/14/bits/ios_base.h ****      *  @return  The previous format control flags.
 721:/usr/include/c++/14/bits/ios_base.h ****      *
 722:/usr/include/c++/14/bits/ios_base.h ****      *  This function clears @a mask in the format flags, then sets
 723:/usr/include/c++/14/bits/ios_base.h ****      *  @a fmtfl @c & @a mask.  An example mask is @c ios_base::adjustfield.
 724:/usr/include/c++/14/bits/ios_base.h ****     */
 725:/usr/include/c++/14/bits/ios_base.h ****     fmtflags
 726:/usr/include/c++/14/bits/ios_base.h ****     setf(fmtflags __fmtfl, fmtflags __mask)
 727:/usr/include/c++/14/bits/ios_base.h ****     {
 728:/usr/include/c++/14/bits/ios_base.h ****       fmtflags __old = _M_flags;
 729:/usr/include/c++/14/bits/ios_base.h ****       _M_flags &= ~__mask;
GAS LISTING linobj/Ch02_03.s 			page 55


 730:/usr/include/c++/14/bits/ios_base.h ****       _M_flags |= (__fmtfl & __mask);
 731:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 732:/usr/include/c++/14/bits/ios_base.h ****     }
 733:/usr/include/c++/14/bits/ios_base.h **** 
 734:/usr/include/c++/14/bits/ios_base.h ****     /**
 735:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Clearing format flags.
 736:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __mask  The flags to unset.
 737:/usr/include/c++/14/bits/ios_base.h ****      *
 738:/usr/include/c++/14/bits/ios_base.h ****      *  This function clears @a __mask in the format flags.
 739:/usr/include/c++/14/bits/ios_base.h ****     */
 740:/usr/include/c++/14/bits/ios_base.h ****     void
 741:/usr/include/c++/14/bits/ios_base.h ****     unsetf(fmtflags __mask)
 742:/usr/include/c++/14/bits/ios_base.h ****     { _M_flags &= ~__mask; }
 743:/usr/include/c++/14/bits/ios_base.h **** 
 744:/usr/include/c++/14/bits/ios_base.h ****     /**
 745:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Flags access.
 746:/usr/include/c++/14/bits/ios_base.h ****      *  @return  The precision to generate on certain output operations.
 747:/usr/include/c++/14/bits/ios_base.h ****      *
 748:/usr/include/c++/14/bits/ios_base.h ****      *  Be careful if you try to give a definition of @a precision here; see
 749:/usr/include/c++/14/bits/ios_base.h ****      *  DR 189.
 750:/usr/include/c++/14/bits/ios_base.h ****     */
 751:/usr/include/c++/14/bits/ios_base.h ****     streamsize
 752:/usr/include/c++/14/bits/ios_base.h ****     precision() const
 753:/usr/include/c++/14/bits/ios_base.h ****     { return _M_precision; }
 754:/usr/include/c++/14/bits/ios_base.h **** 
 755:/usr/include/c++/14/bits/ios_base.h ****     /**
 756:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Changing flags.
 757:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __prec  The new precision value.
 758:/usr/include/c++/14/bits/ios_base.h ****      *  @return  The previous value of precision().
 759:/usr/include/c++/14/bits/ios_base.h ****     */
 760:/usr/include/c++/14/bits/ios_base.h ****     streamsize
 761:/usr/include/c++/14/bits/ios_base.h ****     precision(streamsize __prec)
 762:/usr/include/c++/14/bits/ios_base.h ****     {
 763:/usr/include/c++/14/bits/ios_base.h ****       streamsize __old = _M_precision;
 764:/usr/include/c++/14/bits/ios_base.h ****       _M_precision = __prec;
 765:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 766:/usr/include/c++/14/bits/ios_base.h ****     }
 767:/usr/include/c++/14/bits/ios_base.h **** 
 768:/usr/include/c++/14/bits/ios_base.h ****     /**
 769:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Flags access.
 770:/usr/include/c++/14/bits/ios_base.h ****      *  @return  The minimum field width to generate on output operations.
 771:/usr/include/c++/14/bits/ios_base.h ****      *
 772:/usr/include/c++/14/bits/ios_base.h ****      *  <em>Minimum field width</em> refers to the number of characters.
 773:/usr/include/c++/14/bits/ios_base.h ****     */
 774:/usr/include/c++/14/bits/ios_base.h ****     streamsize
 775:/usr/include/c++/14/bits/ios_base.h ****     width() const
 776:/usr/include/c++/14/bits/ios_base.h ****     { return _M_width; }
 777:/usr/include/c++/14/bits/ios_base.h **** 
 778:/usr/include/c++/14/bits/ios_base.h ****     /**
 779:/usr/include/c++/14/bits/ios_base.h ****      *  @brief  Changing flags.
 780:/usr/include/c++/14/bits/ios_base.h ****      *  @param  __wide  The new width value.
 781:/usr/include/c++/14/bits/ios_base.h ****      *  @return  The previous value of width().
 782:/usr/include/c++/14/bits/ios_base.h ****     */
 783:/usr/include/c++/14/bits/ios_base.h ****     streamsize
 784:/usr/include/c++/14/bits/ios_base.h ****     width(streamsize __wide)
 291              		.loc 7 784 5 view .LVU72
 292              	.LBB720:
GAS LISTING linobj/Ch02_03.s 			page 56


 785:/usr/include/c++/14/bits/ios_base.h ****     {
 786:/usr/include/c++/14/bits/ios_base.h ****       streamsize __old = _M_width;
 293              		.loc 7 786 7 view .LVU73
 787:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 294              		.loc 7 787 7 view .LVU74
 295              	.LBE720:
 296              	.LBE719:
 246:/usr/include/c++/14/iomanip ****     {
 247:/usr/include/c++/14/iomanip ****       __os.width(__f._M_n);
 297              		.loc 6 247 17 is_stmt 0 view .LVU75
 298 00b6 498B07   		movq	(%r15), %rax
 299              	.LBE718:
 300              	.LBE717:
 301              		.loc 1 46 74 discriminator 2 view .LVU76
 302 00b9 4C89FF   		movq	%r15, %rdi
 303              	.LBB724:
 304              	.LBB723:
 305              	.LBB722:
 306              	.LBB721:
 307              		.loc 7 787 16 view .LVU77
 308 00bc 488B40E8 		movq	-24(%rax), %rax
 309 00c0 49C74407 		movq	$8, 16(%r15,%rax)
 309      10080000 
 309      00
 310              	.LVL13:
 788:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 311              		.loc 7 788 7 is_stmt 1 view .LVU78
 312              		.loc 7 788 7 is_stmt 0 view .LVU79
 313              	.LBE721:
 314              	.LBE722:
 315              	.LBE723:
 316              	.LBE724:
 317              		.loc 1 46 74 discriminator 2 view .LVU80
 318 00c9 410FBF34 		movswl	(%r12,%rbx,2), %esi
 318      5C
 319 00ce E8000000 		call	_ZNSolsEs
 319      00
 320              	.LVL14:
 321 00d3 4889C7   		movq	%rax, %rdi
 322              	.LVL15:
 323              	.LBB725:
 324              	.LBI725:
 668:/usr/include/c++/14/ostream ****     {
 325              		.loc 5 668 5 is_stmt 1 view .LVU81
 326              	.LBB726:
 327              		.loc 5 673 18 is_stmt 0 view .LVU82
 328 00d6 BA020000 		movl	$2, %edx
 328      00
 329 00db BE000000 		movl	$.LC5, %esi
 329      00
 330 00e0 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 330      00
 331              	.LVL16:
 332              		.loc 5 673 18 view .LVU83
 333              	.LBE726:
 334              	.LBE725:
  47:Ch02_03.cpp   ****         std::cout << "b[" << i << "]: " << std::setw(8) << b.m_I16[i] << "  ";
GAS LISTING linobj/Ch02_03.s 			page 57


 335              		.loc 1 47 9 is_stmt 1 view .LVU84
 336              	.LBB727:
 337              	.LBI727:
 668:/usr/include/c++/14/ostream ****     {
 338              		.loc 5 668 5 view .LVU85
 339              	.LBB728:
 340              		.loc 5 673 18 is_stmt 0 view .LVU86
 341 00e5 BA020000 		movl	$2, %edx
 341      00
 342 00ea BE000000 		movl	$.LC6, %esi
 342      00
 343 00ef BF000000 		movl	$_ZSt4cout, %edi
 343      00
 344 00f4 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 344      00
 345              	.LVL17:
 346              		.loc 5 673 18 view .LVU87
 347              	.LBE728:
 348              	.LBE727:
 349              	.LBB729:
 350              	.LBI729:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 351              		.loc 5 178 7 is_stmt 1 view .LVU88
 352              	.LBB730:
 179:/usr/include/c++/14/ostream **** 
 353              		.loc 5 179 25 is_stmt 0 view .LVU89
 354 00f9 4889DE   		movq	%rbx, %rsi
 355 00fc BF000000 		movl	$_ZSt4cout, %edi
 355      00
 356 0101 E8000000 		call	_ZNSo9_M_insertImEERSoT_
 356      00
 357              	.LVL18:
 358              	.LBE730:
 359              	.LBE729:
 360              	.LBB732:
 361              	.LBB733:
 362              		.loc 5 673 18 view .LVU90
 363 0106 BA030000 		movl	$3, %edx
 363      00
 364 010b BE000000 		movl	$.LC4, %esi
 364      00
 365 0110 4889C7   		movq	%rax, %rdi
 366              	.LBE733:
 367              	.LBE732:
 368              	.LBB735:
 369              	.LBB731:
 179:/usr/include/c++/14/ostream **** 
 370              		.loc 5 179 25 view .LVU91
 371 0113 4989C7   		movq	%rax, %r15
 372              	.LVL19:
 179:/usr/include/c++/14/ostream **** 
 373              		.loc 5 179 25 view .LVU92
 374              	.LBE731:
 375              	.LBE735:
 376              	.LBB736:
 377              	.LBI732:
 668:/usr/include/c++/14/ostream ****     {
GAS LISTING linobj/Ch02_03.s 			page 58


 378              		.loc 5 668 5 is_stmt 1 view .LVU93
 379              	.LBB734:
 380              		.loc 5 673 18 is_stmt 0 view .LVU94
 381 0116 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 381      00
 382              	.LVL20:
 383              		.loc 5 673 18 view .LVU95
 384              	.LBE734:
 385              	.LBE736:
 386              	.LBB737:
 387              	.LBI737:
 245:/usr/include/c++/14/iomanip ****     {
 388              		.loc 6 245 5 is_stmt 1 view .LVU96
 389              	.LBB738:
 390              	.LBB739:
 391              	.LBI739:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 392              		.loc 7 784 5 view .LVU97
 393              	.LBB740:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 394              		.loc 7 786 7 view .LVU98
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 395              		.loc 7 787 7 view .LVU99
 396              	.LBE740:
 397              	.LBE739:
 398              		.loc 6 247 17 is_stmt 0 view .LVU100
 399 011b 498B07   		movq	(%r15), %rax
 400              	.LBE738:
 401              	.LBE737:
 402              		.loc 1 47 74 discriminator 2 view .LVU101
 403 011e 4C89FF   		movq	%r15, %rdi
 404              	.LBB744:
 405              	.LBB743:
 406              	.LBB742:
 407              	.LBB741:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 408              		.loc 7 787 16 view .LVU102
 409 0121 488B40E8 		movq	-24(%rax), %rax
 410 0125 49C74407 		movq	$8, 16(%r15,%rax)
 410      10080000 
 410      00
 411              	.LVL21:
 412              		.loc 7 788 7 is_stmt 1 view .LVU103
 413              		.loc 7 788 7 is_stmt 0 view .LVU104
 414              	.LBE741:
 415              	.LBE742:
 416              	.LBE743:
 417              	.LBE744:
 418              		.loc 1 47 74 discriminator 2 view .LVU105
 419 012e 410FBF74 		movswl	0(%r13,%rbx,2), %esi
 419      5D00
 420 0134 E8000000 		call	_ZNSolsEs
 420      00
 421              	.LVL22:
 422 0139 4889C7   		movq	%rax, %rdi
 423              	.LVL23:
 424              	.LBB745:
GAS LISTING linobj/Ch02_03.s 			page 59


 425              	.LBI745:
 668:/usr/include/c++/14/ostream ****     {
 426              		.loc 5 668 5 is_stmt 1 view .LVU106
 427              	.LBB746:
 428              		.loc 5 673 18 is_stmt 0 view .LVU107
 429 013c BA020000 		movl	$2, %edx
 429      00
 430 0141 BE000000 		movl	$.LC5, %esi
 430      00
 431 0146 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 431      00
 432              	.LVL24:
 433              		.loc 5 673 18 view .LVU108
 434              	.LBE746:
 435              	.LBE745:
  48:Ch02_03.cpp   **** 
  49:Ch02_03.cpp   ****         if (i < 4)
 436              		.loc 1 49 9 is_stmt 1 view .LVU109
 437              	.LBB747:
 438              	.LBB748:
 439              		.loc 5 673 18 is_stmt 0 view .LVU110
 440 014b BA050000 		movl	$5, %edx
 440      00
 441              	.LBE748:
 442              	.LBE747:
 443              		.loc 1 49 9 view .LVU111
 444 0150 4883FB03 		cmpq	$3, %rbx
 445 0154 0F878600 		ja	.L2
 445      0000
  50:Ch02_03.cpp   ****         {
  51:Ch02_03.cpp   ****             std::cout << "c[0][" << i << "]: ";
 446              		.loc 1 51 13 is_stmt 1 view .LVU112
 447              	.LVL25:
 448              	.LBB750:
 449              	.LBI747:
 668:/usr/include/c++/14/ostream ****     {
 450              		.loc 5 668 5 view .LVU113
 451              	.LBB749:
 452              		.loc 5 673 18 is_stmt 0 view .LVU114
 453 015a BE000000 		movl	$.LC7, %esi
 453      00
 454 015f BF000000 		movl	$_ZSt4cout, %edi
 454      00
 455 0164 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 455      00
 456              	.LVL26:
 457              		.loc 5 673 18 view .LVU115
 458              	.LBE749:
 459              	.LBE750:
 460              	.LBB751:
 461              	.LBI751:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 462              		.loc 5 178 7 is_stmt 1 view .LVU116
 463              	.LBB752:
 179:/usr/include/c++/14/ostream **** 
 464              		.loc 5 179 25 is_stmt 0 view .LVU117
 465 0169 4889DE   		movq	%rbx, %rsi
GAS LISTING linobj/Ch02_03.s 			page 60


 466 016c BF000000 		movl	$_ZSt4cout, %edi
 466      00
 467 0171 E8000000 		call	_ZNSo9_M_insertImEERSoT_
 467      00
 468              	.LVL27:
 469 0176 4889C7   		movq	%rax, %rdi
 470              	.LVL28:
 179:/usr/include/c++/14/ostream **** 
 471              		.loc 5 179 25 view .LVU118
 472              	.LBE752:
 473              	.LBE751:
 474              	.LBB753:
 475              	.LBI753:
 668:/usr/include/c++/14/ostream ****     {
 476              		.loc 5 668 5 is_stmt 1 view .LVU119
 477              	.LBB754:
 478              		.loc 5 673 18 is_stmt 0 view .LVU120
 479 0179 BA030000 		movl	$3, %edx
 479      00
 480 017e BE000000 		movl	$.LC4, %esi
 480      00
 481 0183 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 481      00
 482              	.LVL29:
 483              		.loc 5 673 18 view .LVU121
 484              	.LBE754:
 485              	.LBE753:
  52:Ch02_03.cpp   ****             std::cout << std::setw(12) << c[0].m_I32[i] << nl;
 486              		.loc 1 52 13 is_stmt 1 view .LVU122
 487              	.LBB755:
 488              	.LBI755:
 245:/usr/include/c++/14/iomanip ****     {
 489              		.loc 6 245 5 view .LVU123
 490              	.LBB756:
 491              	.LBB757:
 492              	.LBI757:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 493              		.loc 7 784 5 view .LVU124
 494              	.LBB758:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 495              		.loc 7 786 7 view .LVU125
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 496              		.loc 7 787 7 view .LVU126
 497              	.LBE758:
 498              	.LBE757:
 499              		.loc 6 247 17 is_stmt 0 view .LVU127
 500 0188 488B0500 		movq	_ZSt4cout(%rip), %rax
 500      000000
 501              	.LBE756:
 502              	.LBE755:
 503              		.loc 1 52 60 discriminator 2 view .LVU128
 504 018f 8B749D00 		movl	0(%rbp,%rbx,4), %esi
 505 0193 BF000000 		movl	$_ZSt4cout, %edi
 505      00
 506              	.LVL30:
 507              	.LBB762:
 508              	.LBB761:
GAS LISTING linobj/Ch02_03.s 			page 61


 509              	.LBB760:
 510              	.LBB759:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 511              		.loc 7 787 16 view .LVU129
 512 0198 488B40E8 		movq	-24(%rax), %rax
 513              	.LVL31:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 514              		.loc 7 787 16 view .LVU130
 515 019c 48C78000 		movq	$12, _ZSt4cout+16(%rax)
 515      0000000C 
 515      000000
 516              	.LVL32:
 517              		.loc 7 788 7 is_stmt 1 view .LVU131
 518              		.loc 7 788 7 is_stmt 0 view .LVU132
 519              	.LBE759:
 520              	.LBE760:
 521              	.LBE761:
 522              	.LBE762:
 523              		.loc 1 52 60 discriminator 2 view .LVU133
 524 01a7 E8000000 		call	_ZNSolsEi
 524      00
 525              	.LVL33:
 526 01ac 4889C7   		movq	%rax, %rdi
 527              	.LVL34:
 528              	.LBB763:
 529              	.LBB764:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 530              		.loc 5 578 22 view .LVU134
 531 01af 488B00   		movq	(%rax), %rax
 532              	.LVL35:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 533              		.loc 5 578 22 view .LVU135
 534 01b2 C644240B 		movb	$10, 11(%rsp)
 534      0A
 535              	.LVL36:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 536              		.loc 5 578 22 view .LVU136
 537              	.LBE764:
 538              	.LBI763:
 576:/usr/include/c++/14/ostream ****     {
 539              		.loc 5 576 5 is_stmt 1 view .LVU137
 540              	.LBB767:
 541              	.LBB765:
 542              	.LBI765:
 775:/usr/include/c++/14/bits/ios_base.h ****     { return _M_width; }
 543              		.loc 7 775 5 view .LVU138
 544              	.LBB766:
 776:/usr/include/c++/14/bits/ios_base.h **** 
 545              		.loc 7 776 7 view .LVU139
 776:/usr/include/c++/14/bits/ios_base.h **** 
 546              		.loc 7 776 14 is_stmt 0 view .LVU140
 547 01b7 488B40E8 		movq	-24(%rax), %rax
 548              	.LBE766:
 549              	.LBE765:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 550              		.loc 5 578 7 discriminator 1 view .LVU141
 551 01bb 48837C07 		cmpq	$0, 16(%rdi,%rax)
GAS LISTING linobj/Ch02_03.s 			page 62


 551      1000
 552 01c1 0F84E904 		je	.L3
 552      0000
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 553              		.loc 5 579 25 view .LVU142
 554 01c7 488D7424 		leaq	11(%rsp), %rsi
 554      0B
 555              	.LVL37:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 556              		.loc 5 579 25 view .LVU143
 557 01cc BA010000 		movl	$1, %edx
 557      00
 558 01d1 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 558      00
 559              	.LVL38:
 560              	.L5:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 561              		.loc 5 579 25 view .LVU144
 562              	.LBE767:
 563              	.LBE763:
  44:Ch02_03.cpp   ****     {
 564              		.loc 1 44 5 is_stmt 1 discriminator 2 view .LVU145
 565 01d6 4883C301 		addq	$1, %rbx
 566              	.LVL39:
  44:Ch02_03.cpp   ****     {
 567              		.loc 1 44 26 discriminator 1 view .LVU146
 568 01da E9A1FEFF 		jmp	.L9
 568      FF
 569 01df 90       		.p2align 4,,10
 570              		.p2align 3
 571              	.L2:
  53:Ch02_03.cpp   ****         }
  54:Ch02_03.cpp   ****         else
  55:Ch02_03.cpp   ****         {
  56:Ch02_03.cpp   ****             std::cout << "c[1][" << i - 4 << "]: ";
 572              		.loc 1 56 13 view .LVU147
 573              	.LVL40:
 574              	.LBB769:
 575              	.LBI769:
 668:/usr/include/c++/14/ostream ****     {
 576              		.loc 5 668 5 view .LVU148
 577              	.LBB770:
 578              		.loc 5 673 18 is_stmt 0 view .LVU149
 579 01e0 BE000000 		movl	$.LC8, %esi
 579      00
 580 01e5 BF000000 		movl	$_ZSt4cout, %edi
 580      00
 581 01ea E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 581      00
 582              	.LVL41:
 583              		.loc 5 673 18 view .LVU150
 584              	.LBE770:
 585              	.LBE769:
 586              	.LBB771:
 587              	.LBI771:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 588              		.loc 5 178 7 is_stmt 1 view .LVU151
GAS LISTING linobj/Ch02_03.s 			page 63


 589              	.LBE771:
 590              		.loc 1 56 41 is_stmt 0 discriminator 1 view .LVU152
 591 01ef 488D73FC 		leaq	-4(%rbx), %rsi
 592              	.LVL42:
 593              	.LBB773:
 594              	.LBB772:
 179:/usr/include/c++/14/ostream **** 
 595              		.loc 5 179 25 view .LVU153
 596 01f3 BF000000 		movl	$_ZSt4cout, %edi
 596      00
 597 01f8 E8000000 		call	_ZNSo9_M_insertImEERSoT_
 597      00
 598              	.LVL43:
 179:/usr/include/c++/14/ostream **** 
 599              		.loc 5 179 25 view .LVU154
 600 01fd 4889C7   		movq	%rax, %rdi
 601              	.LVL44:
 179:/usr/include/c++/14/ostream **** 
 602              		.loc 5 179 25 view .LVU155
 603              	.LBE772:
 604              	.LBE773:
 605              	.LBB774:
 606              	.LBI774:
 668:/usr/include/c++/14/ostream ****     {
 607              		.loc 5 668 5 is_stmt 1 view .LVU156
 608              	.LBB775:
 609              		.loc 5 673 18 is_stmt 0 view .LVU157
 610 0200 BA030000 		movl	$3, %edx
 610      00
 611 0205 BE000000 		movl	$.LC4, %esi
 611      00
 612 020a E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 612      00
 613              	.LVL45:
 614              		.loc 5 673 18 view .LVU158
 615              	.LBE775:
 616              	.LBE774:
  57:Ch02_03.cpp   ****             std::cout << std::setw(12) << c[1].m_I32[i - 4] << nl;
 617              		.loc 1 57 13 is_stmt 1 view .LVU159
 618              	.LBB776:
 619              	.LBI776:
 245:/usr/include/c++/14/iomanip ****     {
 620              		.loc 6 245 5 view .LVU160
 621              	.LBB777:
 622              	.LBB778:
 623              	.LBI778:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 624              		.loc 7 784 5 view .LVU161
 625              	.LBB779:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 626              		.loc 7 786 7 view .LVU162
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 627              		.loc 7 787 7 view .LVU163
 628              	.LBE779:
 629              	.LBE778:
 630              		.loc 6 247 17 is_stmt 0 view .LVU164
 631 020f 488B0500 		movq	_ZSt4cout(%rip), %rax
GAS LISTING linobj/Ch02_03.s 			page 64


 631      000000
 632              	.LBE777:
 633              	.LBE776:
 634              		.loc 1 57 64 discriminator 2 view .LVU165
 635 0216 8B749D00 		movl	0(%rbp,%rbx,4), %esi
 636 021a BF000000 		movl	$_ZSt4cout, %edi
 636      00
 637              	.LVL46:
 638              	.LBB783:
 639              	.LBB782:
 640              	.LBB781:
 641              	.LBB780:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 642              		.loc 7 787 16 view .LVU166
 643 021f 488B40E8 		movq	-24(%rax), %rax
 644              	.LVL47:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 645              		.loc 7 787 16 view .LVU167
 646 0223 48C78000 		movq	$12, _ZSt4cout+16(%rax)
 646      0000000C 
 646      000000
 647              	.LVL48:
 648              		.loc 7 788 7 is_stmt 1 view .LVU168
 649              		.loc 7 788 7 is_stmt 0 view .LVU169
 650              	.LBE780:
 651              	.LBE781:
 652              	.LBE782:
 653              	.LBE783:
 654              		.loc 1 57 64 discriminator 2 view .LVU170
 655 022e E8000000 		call	_ZNSolsEi
 655      00
 656              	.LVL49:
 657 0233 4889C7   		movq	%rax, %rdi
 658              	.LVL50:
 659              	.LBB784:
 660              	.LBB785:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 661              		.loc 5 578 22 view .LVU171
 662 0236 488B00   		movq	(%rax), %rax
 663              	.LVL51:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 664              		.loc 5 578 22 view .LVU172
 665 0239 C644240C 		movb	$10, 12(%rsp)
 665      0A
 666              	.LVL52:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 667              		.loc 5 578 22 view .LVU173
 668              	.LBE785:
 669              	.LBI784:
 576:/usr/include/c++/14/ostream ****     {
 670              		.loc 5 576 5 is_stmt 1 view .LVU174
 671              	.LBB788:
 672              	.LBB786:
 673              	.LBI786:
 775:/usr/include/c++/14/bits/ios_base.h ****     { return _M_width; }
 674              		.loc 7 775 5 view .LVU175
 675              	.LBB787:
GAS LISTING linobj/Ch02_03.s 			page 65


 776:/usr/include/c++/14/bits/ios_base.h **** 
 676              		.loc 7 776 7 view .LVU176
 776:/usr/include/c++/14/bits/ios_base.h **** 
 677              		.loc 7 776 14 is_stmt 0 view .LVU177
 678 023e 488B40E8 		movq	-24(%rax), %rax
 679              	.LBE787:
 680              	.LBE786:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 681              		.loc 5 578 7 discriminator 1 view .LVU178
 682 0242 48837C07 		cmpq	$0, 16(%rdi,%rax)
 682      1000
 683 0248 0F845204 		je	.L6
 683      0000
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 684              		.loc 5 579 25 view .LVU179
 685 024e BA010000 		movl	$1, %edx
 685      00
 686 0253 488D7424 		leaq	12(%rsp), %rsi
 686      0C
 687              	.LVL53:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 688              		.loc 5 579 25 view .LVU180
 689 0258 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 689      00
 690              	.LVL54:
 691              	.L8:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 692              		.loc 5 579 25 view .LVU181
 693              	.LBE788:
 694              	.LBE784:
  44:Ch02_03.cpp   ****     {
 695              		.loc 1 44 5 is_stmt 1 discriminator 2 view .LVU182
 696 025d 4883C301 		addq	$1, %rbx
 697              	.LVL55:
  44:Ch02_03.cpp   ****     {
 698              		.loc 1 44 26 discriminator 1 view .LVU183
 699 0261 4883FB08 		cmpq	$8, %rbx
 700 0265 0F8515FE 		jne	.L9
 700      FFFF
 701              	.LVL56:
  44:Ch02_03.cpp   ****     {
 702              		.loc 1 44 26 is_stmt 0 discriminator 1 view .LVU184
 703              	.LBE706:
 704              	.LBE793:
 705              	.LBE798:
  20:Ch02_03.cpp   ****     MulI32a();
 706              		.loc 1 20 5 is_stmt 1 view .LVU185
  20:Ch02_03.cpp   ****     MulI32a();
 707              		.loc 1 20 31 is_stmt 0 view .LVU186
 708 026b BE0A0000 		movl	$10, %esi
 708      00
 709 0270 BF000000 		movl	$_ZSt4cout, %edi
 709      00
 710 0275 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
 710      00
 711              	.LVL57:
 712              	.LBB799:
GAS LISTING linobj/Ch02_03.s 			page 66


 713              	.LBB800:
 672:/usr/include/c++/14/bits/basic_string.h **** 
 673:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
 674:/usr/include/c++/14/bits/basic_string.h ****       /**
 675:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Move construct string.
 676:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string.
 677:/usr/include/c++/14/bits/basic_string.h ****        *
 678:/usr/include/c++/14/bits/basic_string.h ****        *  The newly-created string contains the exact contents of @a __str.
 679:/usr/include/c++/14/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
 680:/usr/include/c++/14/bits/basic_string.h ****        */
 681:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 682:/usr/include/c++/14/bits/basic_string.h ****       basic_string(basic_string&& __str) noexcept
 683:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), std::move(__str._M_get_allocator()))
 684:/usr/include/c++/14/bits/basic_string.h ****       {
 685:/usr/include/c++/14/bits/basic_string.h **** 	if (__str._M_is_local())
 686:/usr/include/c++/14/bits/basic_string.h **** 	  {
 687:/usr/include/c++/14/bits/basic_string.h **** 	    _M_init_local_buf();
 688:/usr/include/c++/14/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 689:/usr/include/c++/14/bits/basic_string.h **** 			      __str.length() + 1);
 690:/usr/include/c++/14/bits/basic_string.h **** 	  }
 691:/usr/include/c++/14/bits/basic_string.h **** 	else
 692:/usr/include/c++/14/bits/basic_string.h **** 	  {
 693:/usr/include/c++/14/bits/basic_string.h **** 	    _M_data(__str._M_data());
 694:/usr/include/c++/14/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 695:/usr/include/c++/14/bits/basic_string.h **** 	  }
 696:/usr/include/c++/14/bits/basic_string.h **** 
 697:/usr/include/c++/14/bits/basic_string.h **** 	// Must use _M_length() here not _M_set_length() because
 698:/usr/include/c++/14/bits/basic_string.h **** 	// basic_stringbuf relies on writing into unallocated capacity so
 699:/usr/include/c++/14/bits/basic_string.h **** 	// we mess up the contents if we put a '\0' in the string.
 700:/usr/include/c++/14/bits/basic_string.h **** 	_M_length(__str.length());
 701:/usr/include/c++/14/bits/basic_string.h **** 	__str._M_data(__str._M_use_local_data());
 702:/usr/include/c++/14/bits/basic_string.h **** 	__str._M_set_length(0);
 703:/usr/include/c++/14/bits/basic_string.h ****       }
 704:/usr/include/c++/14/bits/basic_string.h **** 
 705:/usr/include/c++/14/bits/basic_string.h ****       /**
 706:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string from an initializer %list.
 707:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __l  std::initializer_list of characters.
 708:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 709:/usr/include/c++/14/bits/basic_string.h ****        */
 710:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 711:/usr/include/c++/14/bits/basic_string.h ****       basic_string(initializer_list<_CharT> __l, const _Alloc& __a = _Alloc())
 712:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 713:/usr/include/c++/14/bits/basic_string.h ****       { _M_construct(__l.begin(), __l.end(), std::forward_iterator_tag()); }
 714:/usr/include/c++/14/bits/basic_string.h **** 
 715:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 716:/usr/include/c++/14/bits/basic_string.h ****       basic_string(const basic_string& __str, const _Alloc& __a)
 717:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 718:/usr/include/c++/14/bits/basic_string.h ****       { _M_construct(__str.begin(), __str.end(), std::forward_iterator_tag()); }
 719:/usr/include/c++/14/bits/basic_string.h **** 
 720:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 721:/usr/include/c++/14/bits/basic_string.h ****       basic_string(basic_string&& __str, const _Alloc& __a)
 722:/usr/include/c++/14/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_always_equal())
 723:/usr/include/c++/14/bits/basic_string.h ****       : _M_dataplus(_M_local_data(), __a)
 724:/usr/include/c++/14/bits/basic_string.h ****       {
 725:/usr/include/c++/14/bits/basic_string.h **** 	if (__str._M_is_local())
 726:/usr/include/c++/14/bits/basic_string.h **** 	  {
 727:/usr/include/c++/14/bits/basic_string.h **** 	    _M_init_local_buf();
GAS LISTING linobj/Ch02_03.s 			page 67


 728:/usr/include/c++/14/bits/basic_string.h **** 	    traits_type::copy(_M_local_buf, __str._M_local_buf,
 729:/usr/include/c++/14/bits/basic_string.h **** 			      __str.length() + 1);
 730:/usr/include/c++/14/bits/basic_string.h **** 	    _M_length(__str.length());
 731:/usr/include/c++/14/bits/basic_string.h **** 	    __str._M_set_length(0);
 732:/usr/include/c++/14/bits/basic_string.h **** 	  }
 733:/usr/include/c++/14/bits/basic_string.h **** 	else if (_Alloc_traits::_S_always_equal()
 734:/usr/include/c++/14/bits/basic_string.h **** 	    || __str.get_allocator() == __a)
 735:/usr/include/c++/14/bits/basic_string.h **** 	  {
 736:/usr/include/c++/14/bits/basic_string.h **** 	    _M_data(__str._M_data());
 737:/usr/include/c++/14/bits/basic_string.h **** 	    _M_length(__str.length());
 738:/usr/include/c++/14/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 739:/usr/include/c++/14/bits/basic_string.h **** 	    __str._M_data(__str._M_use_local_data());
 740:/usr/include/c++/14/bits/basic_string.h **** 	    __str._M_set_length(0);
 741:/usr/include/c++/14/bits/basic_string.h **** 	  }
 742:/usr/include/c++/14/bits/basic_string.h **** 	else
 743:/usr/include/c++/14/bits/basic_string.h **** 	  _M_construct(__str.begin(), __str.end(), std::forward_iterator_tag());
 744:/usr/include/c++/14/bits/basic_string.h ****       }
 745:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
 746:/usr/include/c++/14/bits/basic_string.h **** 
 747:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 202100L
 748:/usr/include/c++/14/bits/basic_string.h ****       basic_string(nullptr_t) = delete;
 749:/usr/include/c++/14/bits/basic_string.h ****       basic_string& operator=(nullptr_t) = delete;
 750:/usr/include/c++/14/bits/basic_string.h **** #endif // C++23
 751:/usr/include/c++/14/bits/basic_string.h **** 
 752:/usr/include/c++/14/bits/basic_string.h ****       /**
 753:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string as copy of a range.
 754:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __beg  Start of range.
 755:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __end  End of range.
 756:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 757:/usr/include/c++/14/bits/basic_string.h ****        */
 758:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
 759:/usr/include/c++/14/bits/basic_string.h ****       template<typename _InputIterator,
 760:/usr/include/c++/14/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 761:/usr/include/c++/14/bits/basic_string.h **** #else
 762:/usr/include/c++/14/bits/basic_string.h ****       template<typename _InputIterator>
 763:/usr/include/c++/14/bits/basic_string.h **** #endif
 764:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
 765:/usr/include/c++/14/bits/basic_string.h ****         basic_string(_InputIterator __beg, _InputIterator __end,
 766:/usr/include/c++/14/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 767:/usr/include/c++/14/bits/basic_string.h **** 	: _M_dataplus(_M_local_data(), __a), _M_string_length(0)
 768:/usr/include/c++/14/bits/basic_string.h **** 	{
 769:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
 770:/usr/include/c++/14/bits/basic_string.h **** 	  _M_construct(__beg, __end, std::__iterator_category(__beg));
 771:/usr/include/c++/14/bits/basic_string.h **** #else
 772:/usr/include/c++/14/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 773:/usr/include/c++/14/bits/basic_string.h **** 	  _M_construct_aux(__beg, __end, _Integral());
 774:/usr/include/c++/14/bits/basic_string.h **** #endif
 775:/usr/include/c++/14/bits/basic_string.h **** 	}
 776:/usr/include/c++/14/bits/basic_string.h **** 
 777:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
 778:/usr/include/c++/14/bits/basic_string.h ****       /**
 779:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string from a substring of a string_view.
 780:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __t   Source object convertible to string view.
 781:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __pos The index of the first character to copy from __t.
 782:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __n   The number of characters to copy from __t.
 783:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a   Allocator to use.
 784:/usr/include/c++/14/bits/basic_string.h ****        */
GAS LISTING linobj/Ch02_03.s 			page 68


 785:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp,
 786:/usr/include/c++/14/bits/basic_string.h **** 	       typename = enable_if_t<is_convertible_v<const _Tp&, __sv_type>>>
 787:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
 788:/usr/include/c++/14/bits/basic_string.h **** 	basic_string(const _Tp& __t, size_type __pos, size_type __n,
 789:/usr/include/c++/14/bits/basic_string.h **** 		     const _Alloc& __a = _Alloc())
 790:/usr/include/c++/14/bits/basic_string.h **** 	: basic_string(_S_to_string_view(__t).substr(__pos, __n), __a) { }
 791:/usr/include/c++/14/bits/basic_string.h **** 
 792:/usr/include/c++/14/bits/basic_string.h ****       /**
 793:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Construct string from a string_view.
 794:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __t  Source object convertible to string view.
 795:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __a  Allocator to use (default is default allocator).
 796:/usr/include/c++/14/bits/basic_string.h ****        */
 797:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp, typename = _If_sv<_Tp, void>>
 798:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
 799:/usr/include/c++/14/bits/basic_string.h **** 	explicit
 800:/usr/include/c++/14/bits/basic_string.h **** 	basic_string(const _Tp& __t, const _Alloc& __a = _Alloc())
 801:/usr/include/c++/14/bits/basic_string.h **** 	: basic_string(__sv_wrapper(_S_to_string_view(__t)), __a) { }
 802:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
 803:/usr/include/c++/14/bits/basic_string.h **** 
 804:/usr/include/c++/14/bits/basic_string.h ****       /**
 805:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Destroy the string instance.
 806:/usr/include/c++/14/bits/basic_string.h ****        */
 807:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 808:/usr/include/c++/14/bits/basic_string.h ****       ~basic_string()
 809:/usr/include/c++/14/bits/basic_string.h ****       { _M_dispose(); }
 810:/usr/include/c++/14/bits/basic_string.h **** 
 811:/usr/include/c++/14/bits/basic_string.h ****       /**
 812:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Assign the value of @a str to this string.
 813:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string.
 814:/usr/include/c++/14/bits/basic_string.h ****        */
 815:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 816:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
 817:/usr/include/c++/14/bits/basic_string.h ****       operator=(const basic_string& __str)
 818:/usr/include/c++/14/bits/basic_string.h ****       {
 819:/usr/include/c++/14/bits/basic_string.h **** 	return this->assign(__str);
 820:/usr/include/c++/14/bits/basic_string.h ****       }
 821:/usr/include/c++/14/bits/basic_string.h **** 
 822:/usr/include/c++/14/bits/basic_string.h ****       /**
 823:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Copy contents of @a s into this string.
 824:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __s  Source null-terminated string.
 825:/usr/include/c++/14/bits/basic_string.h ****        */
 826:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 827:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
 828:/usr/include/c++/14/bits/basic_string.h ****       operator=(const _CharT* __s)
 829:/usr/include/c++/14/bits/basic_string.h ****       { return this->assign(__s); }
 830:/usr/include/c++/14/bits/basic_string.h **** 
 831:/usr/include/c++/14/bits/basic_string.h ****       /**
 832:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to string of length 1.
 833:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __c  Source character.
 834:/usr/include/c++/14/bits/basic_string.h ****        *
 835:/usr/include/c++/14/bits/basic_string.h ****        *  Assigning to a character makes this string length 1 and
 836:/usr/include/c++/14/bits/basic_string.h ****        *  (*this)[0] == @a c.
 837:/usr/include/c++/14/bits/basic_string.h ****        */
 838:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 839:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
 840:/usr/include/c++/14/bits/basic_string.h ****       operator=(_CharT __c)
 841:/usr/include/c++/14/bits/basic_string.h ****       {
GAS LISTING linobj/Ch02_03.s 			page 69


 842:/usr/include/c++/14/bits/basic_string.h **** 	this->assign(1, __c);
 843:/usr/include/c++/14/bits/basic_string.h **** 	return *this;
 844:/usr/include/c++/14/bits/basic_string.h ****       }
 845:/usr/include/c++/14/bits/basic_string.h **** 
 846:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
 847:/usr/include/c++/14/bits/basic_string.h ****       /**
 848:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Move assign the value of @a str to this string.
 849:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string.
 850:/usr/include/c++/14/bits/basic_string.h ****        *
 851:/usr/include/c++/14/bits/basic_string.h ****        *  The contents of @a str are moved into this string (without copying).
 852:/usr/include/c++/14/bits/basic_string.h ****        *  @a str is a valid, but unspecified string.
 853:/usr/include/c++/14/bits/basic_string.h ****        */
 854:/usr/include/c++/14/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 855:/usr/include/c++/14/bits/basic_string.h ****       // 2063. Contradictory requirements for string move assignment
 856:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 857:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
 858:/usr/include/c++/14/bits/basic_string.h ****       operator=(basic_string&& __str)
 859:/usr/include/c++/14/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
 860:/usr/include/c++/14/bits/basic_string.h ****       {
 861:/usr/include/c++/14/bits/basic_string.h **** 	const bool __equal_allocs = _Alloc_traits::_S_always_equal()
 862:/usr/include/c++/14/bits/basic_string.h **** 	  || _M_get_allocator() == __str._M_get_allocator();
 863:/usr/include/c++/14/bits/basic_string.h **** 	if (!_M_is_local() && _Alloc_traits::_S_propagate_on_move_assign()
 864:/usr/include/c++/14/bits/basic_string.h **** 	    && !__equal_allocs)
 865:/usr/include/c++/14/bits/basic_string.h **** 	  {
 866:/usr/include/c++/14/bits/basic_string.h **** 	    // Destroy existing storage before replacing allocator.
 867:/usr/include/c++/14/bits/basic_string.h **** 	    _M_destroy(_M_allocated_capacity);
 868:/usr/include/c++/14/bits/basic_string.h **** 	    _M_data(_M_local_data());
 869:/usr/include/c++/14/bits/basic_string.h **** 	    _M_set_length(0);
 870:/usr/include/c++/14/bits/basic_string.h **** 	  }
 871:/usr/include/c++/14/bits/basic_string.h **** 	// Replace allocator if POCMA is true.
 872:/usr/include/c++/14/bits/basic_string.h **** 	std::__alloc_on_move(_M_get_allocator(), __str._M_get_allocator());
 873:/usr/include/c++/14/bits/basic_string.h **** 
 874:/usr/include/c++/14/bits/basic_string.h **** 	if (__str._M_is_local())
 875:/usr/include/c++/14/bits/basic_string.h **** 	  {
 876:/usr/include/c++/14/bits/basic_string.h **** 	    // We've always got room for a short string, just copy it
 877:/usr/include/c++/14/bits/basic_string.h **** 	    // (unless this is a self-move, because that would violate the
 878:/usr/include/c++/14/bits/basic_string.h **** 	    // char_traits::copy precondition that the ranges don't overlap).
 879:/usr/include/c++/14/bits/basic_string.h **** 	    if (__builtin_expect(std::__addressof(__str) != this, true))
 880:/usr/include/c++/14/bits/basic_string.h **** 	      {
 881:/usr/include/c++/14/bits/basic_string.h **** 		if (__str.size())
 882:/usr/include/c++/14/bits/basic_string.h **** 		  this->_S_copy(_M_data(), __str._M_data(), __str.size());
 883:/usr/include/c++/14/bits/basic_string.h **** 		_M_set_length(__str.size());
 884:/usr/include/c++/14/bits/basic_string.h **** 	      }
 885:/usr/include/c++/14/bits/basic_string.h **** 	  }
 886:/usr/include/c++/14/bits/basic_string.h **** 	else if (_Alloc_traits::_S_propagate_on_move_assign() || __equal_allocs)
 887:/usr/include/c++/14/bits/basic_string.h **** 	  {
 888:/usr/include/c++/14/bits/basic_string.h **** 	    // Just move the allocated pointer, our allocator can free it.
 889:/usr/include/c++/14/bits/basic_string.h **** 	    pointer __data = nullptr;
 890:/usr/include/c++/14/bits/basic_string.h **** 	    size_type __capacity;
 891:/usr/include/c++/14/bits/basic_string.h **** 	    if (!_M_is_local())
 892:/usr/include/c++/14/bits/basic_string.h **** 	      {
 893:/usr/include/c++/14/bits/basic_string.h **** 		if (__equal_allocs)
 894:/usr/include/c++/14/bits/basic_string.h **** 		  {
 895:/usr/include/c++/14/bits/basic_string.h **** 		    // __str can reuse our existing storage.
 896:/usr/include/c++/14/bits/basic_string.h **** 		    __data = _M_data();
 897:/usr/include/c++/14/bits/basic_string.h **** 		    __capacity = _M_allocated_capacity;
 898:/usr/include/c++/14/bits/basic_string.h **** 		  }
GAS LISTING linobj/Ch02_03.s 			page 70


 899:/usr/include/c++/14/bits/basic_string.h **** 		else // __str can't use it, so free it.
 900:/usr/include/c++/14/bits/basic_string.h **** 		  _M_destroy(_M_allocated_capacity);
 901:/usr/include/c++/14/bits/basic_string.h **** 	      }
 902:/usr/include/c++/14/bits/basic_string.h **** 
 903:/usr/include/c++/14/bits/basic_string.h **** 	    _M_data(__str._M_data());
 904:/usr/include/c++/14/bits/basic_string.h **** 	    _M_length(__str.length());
 905:/usr/include/c++/14/bits/basic_string.h **** 	    _M_capacity(__str._M_allocated_capacity);
 906:/usr/include/c++/14/bits/basic_string.h **** 	    if (__data)
 907:/usr/include/c++/14/bits/basic_string.h **** 	      {
 908:/usr/include/c++/14/bits/basic_string.h **** 		__str._M_data(__data);
 909:/usr/include/c++/14/bits/basic_string.h **** 		__str._M_capacity(__capacity);
 910:/usr/include/c++/14/bits/basic_string.h **** 	      }
 911:/usr/include/c++/14/bits/basic_string.h **** 	    else
 912:/usr/include/c++/14/bits/basic_string.h **** 	      __str._M_data(__str._M_use_local_data());
 913:/usr/include/c++/14/bits/basic_string.h **** 	  }
 914:/usr/include/c++/14/bits/basic_string.h **** 	else // Need to do a deep copy
 915:/usr/include/c++/14/bits/basic_string.h **** 	  assign(__str);
 916:/usr/include/c++/14/bits/basic_string.h **** 	__str.clear();
 917:/usr/include/c++/14/bits/basic_string.h **** 	return *this;
 918:/usr/include/c++/14/bits/basic_string.h ****       }
 919:/usr/include/c++/14/bits/basic_string.h **** 
 920:/usr/include/c++/14/bits/basic_string.h ****       /**
 921:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to string constructed from initializer %list.
 922:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __l  std::initializer_list.
 923:/usr/include/c++/14/bits/basic_string.h ****        */
 924:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 925:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
 926:/usr/include/c++/14/bits/basic_string.h ****       operator=(initializer_list<_CharT> __l)
 927:/usr/include/c++/14/bits/basic_string.h ****       {
 928:/usr/include/c++/14/bits/basic_string.h **** 	this->assign(__l.begin(), __l.size());
 929:/usr/include/c++/14/bits/basic_string.h **** 	return *this;
 930:/usr/include/c++/14/bits/basic_string.h ****       }
 931:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
 932:/usr/include/c++/14/bits/basic_string.h **** 
 933:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
 934:/usr/include/c++/14/bits/basic_string.h ****       /**
 935:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to string constructed from a string_view.
 936:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __svt  An object convertible to string_view.
 937:/usr/include/c++/14/bits/basic_string.h ****        */
 938:/usr/include/c++/14/bits/basic_string.h ****      template<typename _Tp>
 939:/usr/include/c++/14/bits/basic_string.h ****        _GLIBCXX20_CONSTEXPR
 940:/usr/include/c++/14/bits/basic_string.h ****        _If_sv<_Tp, basic_string&>
 941:/usr/include/c++/14/bits/basic_string.h ****        operator=(const _Tp& __svt)
 942:/usr/include/c++/14/bits/basic_string.h ****        { return this->assign(__svt); }
 943:/usr/include/c++/14/bits/basic_string.h **** 
 944:/usr/include/c++/14/bits/basic_string.h ****       /**
 945:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Convert to a string_view.
 946:/usr/include/c++/14/bits/basic_string.h ****        *  @return A string_view.
 947:/usr/include/c++/14/bits/basic_string.h ****        */
 948:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
 949:/usr/include/c++/14/bits/basic_string.h ****       operator __sv_type() const noexcept
 950:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(data(), size()); }
 951:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
 952:/usr/include/c++/14/bits/basic_string.h **** 
 953:/usr/include/c++/14/bits/basic_string.h ****       // Iterators:
 954:/usr/include/c++/14/bits/basic_string.h ****       /**
 955:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read/write iterator that points to the first character in
GAS LISTING linobj/Ch02_03.s 			page 71


 956:/usr/include/c++/14/bits/basic_string.h ****        *  the %string.
 957:/usr/include/c++/14/bits/basic_string.h ****        */
 958:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
 959:/usr/include/c++/14/bits/basic_string.h ****       iterator
 960:/usr/include/c++/14/bits/basic_string.h ****       begin() _GLIBCXX_NOEXCEPT
 961:/usr/include/c++/14/bits/basic_string.h ****       { return iterator(_M_data()); }
 962:/usr/include/c++/14/bits/basic_string.h **** 
 963:/usr/include/c++/14/bits/basic_string.h ****       /**
 964:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
 965:/usr/include/c++/14/bits/basic_string.h ****        *  character in the %string.
 966:/usr/include/c++/14/bits/basic_string.h ****        */
 967:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
 968:/usr/include/c++/14/bits/basic_string.h ****       const_iterator
 969:/usr/include/c++/14/bits/basic_string.h ****       begin() const _GLIBCXX_NOEXCEPT
 970:/usr/include/c++/14/bits/basic_string.h ****       { return const_iterator(_M_data()); }
 971:/usr/include/c++/14/bits/basic_string.h **** 
 972:/usr/include/c++/14/bits/basic_string.h ****       /**
 973:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read/write iterator that points one past the last
 974:/usr/include/c++/14/bits/basic_string.h ****        *  character in the %string.
 975:/usr/include/c++/14/bits/basic_string.h ****        */
 976:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
 977:/usr/include/c++/14/bits/basic_string.h ****       iterator
 978:/usr/include/c++/14/bits/basic_string.h ****       end() _GLIBCXX_NOEXCEPT
 979:/usr/include/c++/14/bits/basic_string.h ****       { return iterator(_M_data() + this->size()); }
 980:/usr/include/c++/14/bits/basic_string.h **** 
 981:/usr/include/c++/14/bits/basic_string.h ****       /**
 982:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
 983:/usr/include/c++/14/bits/basic_string.h ****        *  last character in the %string.
 984:/usr/include/c++/14/bits/basic_string.h ****        */
 985:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
 986:/usr/include/c++/14/bits/basic_string.h ****       const_iterator
 987:/usr/include/c++/14/bits/basic_string.h ****       end() const _GLIBCXX_NOEXCEPT
 988:/usr/include/c++/14/bits/basic_string.h ****       { return const_iterator(_M_data() + this->size()); }
 989:/usr/include/c++/14/bits/basic_string.h **** 
 990:/usr/include/c++/14/bits/basic_string.h ****       /**
 991:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to the last
 992:/usr/include/c++/14/bits/basic_string.h ****        *  character in the %string.  Iteration is done in reverse element
 993:/usr/include/c++/14/bits/basic_string.h ****        *  order.
 994:/usr/include/c++/14/bits/basic_string.h ****        */
 995:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
 996:/usr/include/c++/14/bits/basic_string.h ****       reverse_iterator
 997:/usr/include/c++/14/bits/basic_string.h ****       rbegin() _GLIBCXX_NOEXCEPT
 998:/usr/include/c++/14/bits/basic_string.h ****       { return reverse_iterator(this->end()); }
 999:/usr/include/c++/14/bits/basic_string.h **** 
1000:/usr/include/c++/14/bits/basic_string.h ****       /**
1001:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
1002:/usr/include/c++/14/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
1003:/usr/include/c++/14/bits/basic_string.h ****        *  reverse element order.
1004:/usr/include/c++/14/bits/basic_string.h ****        */
1005:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1006:/usr/include/c++/14/bits/basic_string.h ****       const_reverse_iterator
1007:/usr/include/c++/14/bits/basic_string.h ****       rbegin() const _GLIBCXX_NOEXCEPT
1008:/usr/include/c++/14/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
1009:/usr/include/c++/14/bits/basic_string.h **** 
1010:/usr/include/c++/14/bits/basic_string.h ****       /**
1011:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read/write reverse iterator that points to one before the
1012:/usr/include/c++/14/bits/basic_string.h ****        *  first character in the %string.  Iteration is done in reverse
GAS LISTING linobj/Ch02_03.s 			page 72


1013:/usr/include/c++/14/bits/basic_string.h ****        *  element order.
1014:/usr/include/c++/14/bits/basic_string.h ****        */
1015:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1016:/usr/include/c++/14/bits/basic_string.h ****       reverse_iterator
1017:/usr/include/c++/14/bits/basic_string.h ****       rend() _GLIBCXX_NOEXCEPT
1018:/usr/include/c++/14/bits/basic_string.h ****       { return reverse_iterator(this->begin()); }
1019:/usr/include/c++/14/bits/basic_string.h **** 
1020:/usr/include/c++/14/bits/basic_string.h ****       /**
1021:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
1022:/usr/include/c++/14/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
1023:/usr/include/c++/14/bits/basic_string.h ****        *  is done in reverse element order.
1024:/usr/include/c++/14/bits/basic_string.h ****        */
1025:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1026:/usr/include/c++/14/bits/basic_string.h ****       const_reverse_iterator
1027:/usr/include/c++/14/bits/basic_string.h ****       rend() const _GLIBCXX_NOEXCEPT
1028:/usr/include/c++/14/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
1029:/usr/include/c++/14/bits/basic_string.h **** 
1030:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1031:/usr/include/c++/14/bits/basic_string.h ****       /**
1032:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points to the first
1033:/usr/include/c++/14/bits/basic_string.h ****        *  character in the %string.
1034:/usr/include/c++/14/bits/basic_string.h ****        */
1035:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1036:/usr/include/c++/14/bits/basic_string.h ****       const_iterator
1037:/usr/include/c++/14/bits/basic_string.h ****       cbegin() const noexcept
1038:/usr/include/c++/14/bits/basic_string.h ****       { return const_iterator(this->_M_data()); }
1039:/usr/include/c++/14/bits/basic_string.h **** 
1040:/usr/include/c++/14/bits/basic_string.h ****       /**
1041:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) iterator that points one past the
1042:/usr/include/c++/14/bits/basic_string.h ****        *  last character in the %string.
1043:/usr/include/c++/14/bits/basic_string.h ****        */
1044:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1045:/usr/include/c++/14/bits/basic_string.h ****       const_iterator
1046:/usr/include/c++/14/bits/basic_string.h ****       cend() const noexcept
1047:/usr/include/c++/14/bits/basic_string.h ****       { return const_iterator(this->_M_data() + this->size()); }
1048:/usr/include/c++/14/bits/basic_string.h **** 
1049:/usr/include/c++/14/bits/basic_string.h ****       /**
1050:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
1051:/usr/include/c++/14/bits/basic_string.h ****        *  to the last character in the %string.  Iteration is done in
1052:/usr/include/c++/14/bits/basic_string.h ****        *  reverse element order.
1053:/usr/include/c++/14/bits/basic_string.h ****        */
1054:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1055:/usr/include/c++/14/bits/basic_string.h ****       const_reverse_iterator
1056:/usr/include/c++/14/bits/basic_string.h ****       crbegin() const noexcept
1057:/usr/include/c++/14/bits/basic_string.h ****       { return const_reverse_iterator(this->end()); }
1058:/usr/include/c++/14/bits/basic_string.h **** 
1059:/usr/include/c++/14/bits/basic_string.h ****       /**
1060:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) reverse iterator that points
1061:/usr/include/c++/14/bits/basic_string.h ****        *  to one before the first character in the %string.  Iteration
1062:/usr/include/c++/14/bits/basic_string.h ****        *  is done in reverse element order.
1063:/usr/include/c++/14/bits/basic_string.h ****        */
1064:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1065:/usr/include/c++/14/bits/basic_string.h ****       const_reverse_iterator
1066:/usr/include/c++/14/bits/basic_string.h ****       crend() const noexcept
1067:/usr/include/c++/14/bits/basic_string.h ****       { return const_reverse_iterator(this->begin()); }
1068:/usr/include/c++/14/bits/basic_string.h **** #endif
1069:/usr/include/c++/14/bits/basic_string.h **** 
GAS LISTING linobj/Ch02_03.s 			page 73


1070:/usr/include/c++/14/bits/basic_string.h ****     public:
1071:/usr/include/c++/14/bits/basic_string.h ****       // Capacity:
1072:/usr/include/c++/14/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
1073:/usr/include/c++/14/bits/basic_string.h ****       ///  null-termination.
1074:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1075:/usr/include/c++/14/bits/basic_string.h ****       size_type
1076:/usr/include/c++/14/bits/basic_string.h ****       size() const _GLIBCXX_NOEXCEPT
1077:/usr/include/c++/14/bits/basic_string.h ****       { return _M_string_length; }
1078:/usr/include/c++/14/bits/basic_string.h **** 
1079:/usr/include/c++/14/bits/basic_string.h ****       ///  Returns the number of characters in the string, not including any
1080:/usr/include/c++/14/bits/basic_string.h ****       ///  null-termination.
1081:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1082:/usr/include/c++/14/bits/basic_string.h ****       size_type
1083:/usr/include/c++/14/bits/basic_string.h ****       length() const _GLIBCXX_NOEXCEPT
1084:/usr/include/c++/14/bits/basic_string.h ****       { return _M_string_length; }
1085:/usr/include/c++/14/bits/basic_string.h **** 
1086:/usr/include/c++/14/bits/basic_string.h ****       ///  Returns the size() of the largest possible %string.
1087:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1088:/usr/include/c++/14/bits/basic_string.h ****       size_type
1089:/usr/include/c++/14/bits/basic_string.h ****       max_size() const _GLIBCXX_NOEXCEPT
1090:/usr/include/c++/14/bits/basic_string.h ****       { return (_Alloc_traits::max_size(_M_get_allocator()) - 1) / 2; }
1091:/usr/include/c++/14/bits/basic_string.h **** 
1092:/usr/include/c++/14/bits/basic_string.h ****       /**
1093:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
1094:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
1095:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __c  Character to fill any new elements.
1096:/usr/include/c++/14/bits/basic_string.h ****        *
1097:/usr/include/c++/14/bits/basic_string.h ****        *  This function will %resize the %string to the specified
1098:/usr/include/c++/14/bits/basic_string.h ****        *  number of characters.  If the number is smaller than the
1099:/usr/include/c++/14/bits/basic_string.h ****        *  %string's current size the %string is truncated, otherwise
1100:/usr/include/c++/14/bits/basic_string.h ****        *  the %string is extended and new elements are %set to @a __c.
1101:/usr/include/c++/14/bits/basic_string.h ****        */
1102:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1103:/usr/include/c++/14/bits/basic_string.h ****       void
1104:/usr/include/c++/14/bits/basic_string.h ****       resize(size_type __n, _CharT __c);
1105:/usr/include/c++/14/bits/basic_string.h **** 
1106:/usr/include/c++/14/bits/basic_string.h ****       /**
1107:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Resizes the %string to the specified number of characters.
1108:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __n  Number of characters the %string should contain.
1109:/usr/include/c++/14/bits/basic_string.h ****        *
1110:/usr/include/c++/14/bits/basic_string.h ****        *  This function will resize the %string to the specified length.  If
1111:/usr/include/c++/14/bits/basic_string.h ****        *  the new size is smaller than the %string's current size the %string
1112:/usr/include/c++/14/bits/basic_string.h ****        *  is truncated, otherwise the %string is extended and new characters
1113:/usr/include/c++/14/bits/basic_string.h ****        *  are default-constructed.  For basic types such as char, this means
1114:/usr/include/c++/14/bits/basic_string.h ****        *  setting them to 0.
1115:/usr/include/c++/14/bits/basic_string.h ****        */
1116:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1117:/usr/include/c++/14/bits/basic_string.h ****       void
1118:/usr/include/c++/14/bits/basic_string.h ****       resize(size_type __n)
1119:/usr/include/c++/14/bits/basic_string.h ****       { this->resize(__n, _CharT()); }
1120:/usr/include/c++/14/bits/basic_string.h **** 
1121:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1122:/usr/include/c++/14/bits/basic_string.h **** #pragma GCC diagnostic push
1123:/usr/include/c++/14/bits/basic_string.h **** #pragma GCC diagnostic ignored "-Wdeprecated-declarations"
1124:/usr/include/c++/14/bits/basic_string.h ****       ///  A non-binding request to reduce capacity() to size().
1125:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1126:/usr/include/c++/14/bits/basic_string.h ****       void
GAS LISTING linobj/Ch02_03.s 			page 74


1127:/usr/include/c++/14/bits/basic_string.h ****       shrink_to_fit() noexcept
1128:/usr/include/c++/14/bits/basic_string.h ****       { reserve(); }
1129:/usr/include/c++/14/bits/basic_string.h **** #pragma GCC diagnostic pop
1130:/usr/include/c++/14/bits/basic_string.h **** #endif
1131:/usr/include/c++/14/bits/basic_string.h **** 
1132:/usr/include/c++/14/bits/basic_string.h **** #ifdef __glibcxx_string_resize_and_overwrite // C++ >= 23
1133:/usr/include/c++/14/bits/basic_string.h ****       /** Resize the string and call a function to fill it.
1134:/usr/include/c++/14/bits/basic_string.h ****        *
1135:/usr/include/c++/14/bits/basic_string.h ****        * @param __n   The maximum size requested.
1136:/usr/include/c++/14/bits/basic_string.h ****        * @param __op  A callable object that writes characters to the string.
1137:/usr/include/c++/14/bits/basic_string.h ****        *
1138:/usr/include/c++/14/bits/basic_string.h ****        * This is a low-level function that is easy to misuse, be careful.
1139:/usr/include/c++/14/bits/basic_string.h ****        *
1140:/usr/include/c++/14/bits/basic_string.h ****        * Calling `str.resize_and_overwrite(n, op)` will reserve at least `n`
1141:/usr/include/c++/14/bits/basic_string.h ****        * characters in `str`, evaluate `n2 = std::move(op)(str.data(), n)`,
1142:/usr/include/c++/14/bits/basic_string.h ****        * and finally set the string length to `n2` (adding a null terminator
1143:/usr/include/c++/14/bits/basic_string.h ****        * at the end). The function object `op` is allowed to write to the
1144:/usr/include/c++/14/bits/basic_string.h ****        * extra capacity added by the initial reserve operation, which is not
1145:/usr/include/c++/14/bits/basic_string.h ****        * allowed if you just call `str.reserve(n)` yourself.
1146:/usr/include/c++/14/bits/basic_string.h ****        *
1147:/usr/include/c++/14/bits/basic_string.h ****        * This can be used to efficiently fill a `string` buffer without the
1148:/usr/include/c++/14/bits/basic_string.h ****        * overhead of zero-initializing characters that will be overwritten
1149:/usr/include/c++/14/bits/basic_string.h ****        * anyway.
1150:/usr/include/c++/14/bits/basic_string.h ****        *
1151:/usr/include/c++/14/bits/basic_string.h ****        * The callable `op` must not access the string directly (only through
1152:/usr/include/c++/14/bits/basic_string.h ****        * the pointer passed as its first argument), must not write more than
1153:/usr/include/c++/14/bits/basic_string.h ****        * `n` characters to the string, must return a value no greater than `n`,
1154:/usr/include/c++/14/bits/basic_string.h ****        * and must ensure that all characters up to the returned length are
1155:/usr/include/c++/14/bits/basic_string.h ****        * valid after it returns (i.e. there must be no uninitialized values
1156:/usr/include/c++/14/bits/basic_string.h ****        * left in the string after the call, because accessing them would
1157:/usr/include/c++/14/bits/basic_string.h ****        * have undefined behaviour). If `op` exits by throwing an exception
1158:/usr/include/c++/14/bits/basic_string.h ****        * the behaviour is undefined.
1159:/usr/include/c++/14/bits/basic_string.h ****        *
1160:/usr/include/c++/14/bits/basic_string.h ****        * @since C++23
1161:/usr/include/c++/14/bits/basic_string.h ****        */
1162:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Operation>
1163:/usr/include/c++/14/bits/basic_string.h **** 	constexpr void
1164:/usr/include/c++/14/bits/basic_string.h **** 	resize_and_overwrite(size_type __n, _Operation __op);
1165:/usr/include/c++/14/bits/basic_string.h **** #endif
1166:/usr/include/c++/14/bits/basic_string.h **** 
1167:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1168:/usr/include/c++/14/bits/basic_string.h ****       /// Non-standard version of resize_and_overwrite for C++11 and above.
1169:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Operation>
1170:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR void
1171:/usr/include/c++/14/bits/basic_string.h **** 	__resize_and_overwrite(size_type __n, _Operation __op);
1172:/usr/include/c++/14/bits/basic_string.h **** #endif
1173:/usr/include/c++/14/bits/basic_string.h **** 
1174:/usr/include/c++/14/bits/basic_string.h ****       /**
1175:/usr/include/c++/14/bits/basic_string.h ****        *  Returns the total number of characters that the %string can hold
1176:/usr/include/c++/14/bits/basic_string.h ****        *  before needing to allocate more memory.
1177:/usr/include/c++/14/bits/basic_string.h ****        */
1178:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1179:/usr/include/c++/14/bits/basic_string.h ****       size_type
1180:/usr/include/c++/14/bits/basic_string.h ****       capacity() const _GLIBCXX_NOEXCEPT
1181:/usr/include/c++/14/bits/basic_string.h ****       {
1182:/usr/include/c++/14/bits/basic_string.h **** 	return _M_is_local() ? size_type(_S_local_capacity)
1183:/usr/include/c++/14/bits/basic_string.h **** 	                     : _M_allocated_capacity;
GAS LISTING linobj/Ch02_03.s 			page 75


1184:/usr/include/c++/14/bits/basic_string.h ****       }
1185:/usr/include/c++/14/bits/basic_string.h **** 
1186:/usr/include/c++/14/bits/basic_string.h ****       /**
1187:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
1188:/usr/include/c++/14/bits/basic_string.h ****        *          characters.
1189:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __res_arg  Number of characters required.
1190:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If @a __res_arg exceeds @c max_size().
1191:/usr/include/c++/14/bits/basic_string.h ****        *
1192:/usr/include/c++/14/bits/basic_string.h ****        *  This function attempts to reserve enough memory for the
1193:/usr/include/c++/14/bits/basic_string.h ****        *  %string to hold the specified number of characters.  If the
1194:/usr/include/c++/14/bits/basic_string.h ****        *  number requested is more than max_size(), length_error is
1195:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.
1196:/usr/include/c++/14/bits/basic_string.h ****        *
1197:/usr/include/c++/14/bits/basic_string.h ****        *  The advantage of this function is that if optimal code is a
1198:/usr/include/c++/14/bits/basic_string.h ****        *  necessity and the user can determine the string length that will be
1199:/usr/include/c++/14/bits/basic_string.h ****        *  required, the user can reserve the memory in %advance, and thus
1200:/usr/include/c++/14/bits/basic_string.h ****        *  prevent a possible reallocation of memory and copying of %string
1201:/usr/include/c++/14/bits/basic_string.h ****        *  data.
1202:/usr/include/c++/14/bits/basic_string.h ****        */
1203:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1204:/usr/include/c++/14/bits/basic_string.h ****       void
1205:/usr/include/c++/14/bits/basic_string.h ****       reserve(size_type __res_arg);
1206:/usr/include/c++/14/bits/basic_string.h **** 
1207:/usr/include/c++/14/bits/basic_string.h ****       /**
1208:/usr/include/c++/14/bits/basic_string.h ****        *  Equivalent to shrink_to_fit().
1209:/usr/include/c++/14/bits/basic_string.h ****        */
1210:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus > 201703L
1211:/usr/include/c++/14/bits/basic_string.h ****       [[deprecated("use shrink_to_fit() instead")]]
1212:/usr/include/c++/14/bits/basic_string.h **** #endif
1213:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1214:/usr/include/c++/14/bits/basic_string.h ****       void
1215:/usr/include/c++/14/bits/basic_string.h ****       reserve();
1216:/usr/include/c++/14/bits/basic_string.h **** 
1217:/usr/include/c++/14/bits/basic_string.h ****       /**
1218:/usr/include/c++/14/bits/basic_string.h ****        *  Erases the string, making it empty.
1219:/usr/include/c++/14/bits/basic_string.h ****        */
1220:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1221:/usr/include/c++/14/bits/basic_string.h ****       void
1222:/usr/include/c++/14/bits/basic_string.h ****       clear() _GLIBCXX_NOEXCEPT
1223:/usr/include/c++/14/bits/basic_string.h ****       { _M_set_length(0); }
1224:/usr/include/c++/14/bits/basic_string.h **** 
1225:/usr/include/c++/14/bits/basic_string.h ****       /**
1226:/usr/include/c++/14/bits/basic_string.h ****        *  Returns true if the %string is empty.  Equivalent to 
1227:/usr/include/c++/14/bits/basic_string.h ****        *  <code>*this == ""</code>.
1228:/usr/include/c++/14/bits/basic_string.h ****        */
1229:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1230:/usr/include/c++/14/bits/basic_string.h ****       bool
1231:/usr/include/c++/14/bits/basic_string.h ****       empty() const _GLIBCXX_NOEXCEPT
1232:/usr/include/c++/14/bits/basic_string.h ****       { return this->size() == 0; }
1233:/usr/include/c++/14/bits/basic_string.h **** 
1234:/usr/include/c++/14/bits/basic_string.h ****       // Element access:
1235:/usr/include/c++/14/bits/basic_string.h ****       /**
1236:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1237:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1238:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Read-only (constant) reference to the character.
1239:/usr/include/c++/14/bits/basic_string.h ****        *
1240:/usr/include/c++/14/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
GAS LISTING linobj/Ch02_03.s 			page 76


1241:/usr/include/c++/14/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1242:/usr/include/c++/14/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1243:/usr/include/c++/14/bits/basic_string.h ****        *  see at().)
1244:/usr/include/c++/14/bits/basic_string.h ****        */
1245:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1246:/usr/include/c++/14/bits/basic_string.h ****       const_reference
1247:/usr/include/c++/14/bits/basic_string.h ****       operator[] (size_type __pos) const _GLIBCXX_NOEXCEPT
1248:/usr/include/c++/14/bits/basic_string.h ****       {
1249:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1250:/usr/include/c++/14/bits/basic_string.h **** 	return _M_data()[__pos];
1251:/usr/include/c++/14/bits/basic_string.h ****       }
1252:/usr/include/c++/14/bits/basic_string.h **** 
1253:/usr/include/c++/14/bits/basic_string.h ****       /**
1254:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Subscript access to the data contained in the %string.
1255:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __pos  The index of the character to access.
1256:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1257:/usr/include/c++/14/bits/basic_string.h ****        *
1258:/usr/include/c++/14/bits/basic_string.h ****        *  This operator allows for easy, array-style, data access.
1259:/usr/include/c++/14/bits/basic_string.h ****        *  Note that data access with this operator is unchecked and
1260:/usr/include/c++/14/bits/basic_string.h ****        *  out_of_range lookups are not defined. (For checked lookups
1261:/usr/include/c++/14/bits/basic_string.h ****        *  see at().)
1262:/usr/include/c++/14/bits/basic_string.h ****        */
1263:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1264:/usr/include/c++/14/bits/basic_string.h ****       reference
1265:/usr/include/c++/14/bits/basic_string.h ****       operator[](size_type __pos)
1266:/usr/include/c++/14/bits/basic_string.h ****       {
1267:/usr/include/c++/14/bits/basic_string.h ****         // Allow pos == size() both in C++98 mode, as v3 extension,
1268:/usr/include/c++/14/bits/basic_string.h **** 	// and in C++11 mode.
1269:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_assert(__pos <= size());
1270:/usr/include/c++/14/bits/basic_string.h ****         // In pedantic mode be strict in C++98 mode.
1271:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__cplusplus >= 201103L || __pos < size());
1272:/usr/include/c++/14/bits/basic_string.h **** 	return _M_data()[__pos];
1273:/usr/include/c++/14/bits/basic_string.h ****       }
1274:/usr/include/c++/14/bits/basic_string.h **** 
1275:/usr/include/c++/14/bits/basic_string.h ****       /**
1276:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1277:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n The index of the character to access.
1278:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Read-only (const) reference to the character.
1279:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1280:/usr/include/c++/14/bits/basic_string.h ****        *
1281:/usr/include/c++/14/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1282:/usr/include/c++/14/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1283:/usr/include/c++/14/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1284:/usr/include/c++/14/bits/basic_string.h ****        */
1285:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1286:/usr/include/c++/14/bits/basic_string.h ****       const_reference
1287:/usr/include/c++/14/bits/basic_string.h ****       at(size_type __n) const
1288:/usr/include/c++/14/bits/basic_string.h ****       {
1289:/usr/include/c++/14/bits/basic_string.h **** 	if (__n >= this->size())
1290:/usr/include/c++/14/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1291:/usr/include/c++/14/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1292:/usr/include/c++/14/bits/basic_string.h **** 				       "(which is %zu)"),
1293:/usr/include/c++/14/bits/basic_string.h **** 				   __n, this->size());
1294:/usr/include/c++/14/bits/basic_string.h **** 	return _M_data()[__n];
1295:/usr/include/c++/14/bits/basic_string.h ****       }
1296:/usr/include/c++/14/bits/basic_string.h **** 
1297:/usr/include/c++/14/bits/basic_string.h ****       /**
GAS LISTING linobj/Ch02_03.s 			page 77


1298:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Provides access to the data contained in the %string.
1299:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n The index of the character to access.
1300:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Read/write reference to the character.
1301:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a n is an invalid index.
1302:/usr/include/c++/14/bits/basic_string.h ****        *
1303:/usr/include/c++/14/bits/basic_string.h ****        *  This function provides for safer data access.  The parameter is
1304:/usr/include/c++/14/bits/basic_string.h ****        *  first checked that it is in the range of the string.  The function
1305:/usr/include/c++/14/bits/basic_string.h ****        *  throws out_of_range if the check fails.
1306:/usr/include/c++/14/bits/basic_string.h ****        */
1307:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1308:/usr/include/c++/14/bits/basic_string.h ****       reference
1309:/usr/include/c++/14/bits/basic_string.h ****       at(size_type __n)
1310:/usr/include/c++/14/bits/basic_string.h ****       {
1311:/usr/include/c++/14/bits/basic_string.h **** 	if (__n >= size())
1312:/usr/include/c++/14/bits/basic_string.h **** 	  __throw_out_of_range_fmt(__N("basic_string::at: __n "
1313:/usr/include/c++/14/bits/basic_string.h **** 				       "(which is %zu) >= this->size() "
1314:/usr/include/c++/14/bits/basic_string.h **** 				       "(which is %zu)"),
1315:/usr/include/c++/14/bits/basic_string.h **** 				   __n, this->size());
1316:/usr/include/c++/14/bits/basic_string.h **** 	return _M_data()[__n];
1317:/usr/include/c++/14/bits/basic_string.h ****       }
1318:/usr/include/c++/14/bits/basic_string.h **** 
1319:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1320:/usr/include/c++/14/bits/basic_string.h ****       /**
1321:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read/write reference to the data at the first
1322:/usr/include/c++/14/bits/basic_string.h ****        *  element of the %string.
1323:/usr/include/c++/14/bits/basic_string.h ****        */
1324:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1325:/usr/include/c++/14/bits/basic_string.h ****       reference
1326:/usr/include/c++/14/bits/basic_string.h ****       front() noexcept
1327:/usr/include/c++/14/bits/basic_string.h ****       {
1328:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1329:/usr/include/c++/14/bits/basic_string.h **** 	return operator[](0);
1330:/usr/include/c++/14/bits/basic_string.h ****       }
1331:/usr/include/c++/14/bits/basic_string.h **** 
1332:/usr/include/c++/14/bits/basic_string.h ****       /**
1333:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the first
1334:/usr/include/c++/14/bits/basic_string.h ****        *  element of the %string.
1335:/usr/include/c++/14/bits/basic_string.h ****        */
1336:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1337:/usr/include/c++/14/bits/basic_string.h ****       const_reference
1338:/usr/include/c++/14/bits/basic_string.h ****       front() const noexcept
1339:/usr/include/c++/14/bits/basic_string.h ****       {
1340:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1341:/usr/include/c++/14/bits/basic_string.h **** 	return operator[](0);
1342:/usr/include/c++/14/bits/basic_string.h ****       }
1343:/usr/include/c++/14/bits/basic_string.h **** 
1344:/usr/include/c++/14/bits/basic_string.h ****       /**
1345:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read/write reference to the data at the last
1346:/usr/include/c++/14/bits/basic_string.h ****        *  element of the %string.
1347:/usr/include/c++/14/bits/basic_string.h ****        */
1348:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1349:/usr/include/c++/14/bits/basic_string.h ****       reference
1350:/usr/include/c++/14/bits/basic_string.h ****       back() noexcept
1351:/usr/include/c++/14/bits/basic_string.h ****       {
1352:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1353:/usr/include/c++/14/bits/basic_string.h **** 	return operator[](this->size() - 1);
1354:/usr/include/c++/14/bits/basic_string.h ****       }
GAS LISTING linobj/Ch02_03.s 			page 78


1355:/usr/include/c++/14/bits/basic_string.h **** 
1356:/usr/include/c++/14/bits/basic_string.h ****       /**
1357:/usr/include/c++/14/bits/basic_string.h ****        *  Returns a read-only (constant) reference to the data at the
1358:/usr/include/c++/14/bits/basic_string.h ****        *  last element of the %string.
1359:/usr/include/c++/14/bits/basic_string.h ****        */
1360:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
1361:/usr/include/c++/14/bits/basic_string.h ****       const_reference
1362:/usr/include/c++/14/bits/basic_string.h ****       back() const noexcept
1363:/usr/include/c++/14/bits/basic_string.h ****       {
1364:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_assert(!empty());
1365:/usr/include/c++/14/bits/basic_string.h **** 	return operator[](this->size() - 1);
1366:/usr/include/c++/14/bits/basic_string.h ****       }
1367:/usr/include/c++/14/bits/basic_string.h **** #endif
1368:/usr/include/c++/14/bits/basic_string.h **** 
1369:/usr/include/c++/14/bits/basic_string.h ****       // Modifiers:
1370:/usr/include/c++/14/bits/basic_string.h ****       /**
1371:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a string to this string.
1372:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  The string to append.
1373:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1374:/usr/include/c++/14/bits/basic_string.h ****        */
1375:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1376:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1377:/usr/include/c++/14/bits/basic_string.h ****       operator+=(const basic_string& __str)
1378:/usr/include/c++/14/bits/basic_string.h ****       { return this->append(__str); }
1379:/usr/include/c++/14/bits/basic_string.h **** 
1380:/usr/include/c++/14/bits/basic_string.h ****       /**
1381:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a C string.
1382:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  The C string to append.
1383:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1384:/usr/include/c++/14/bits/basic_string.h ****        */
1385:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1386:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1387:/usr/include/c++/14/bits/basic_string.h ****       operator+=(const _CharT* __s)
1388:/usr/include/c++/14/bits/basic_string.h ****       { return this->append(__s); }
1389:/usr/include/c++/14/bits/basic_string.h **** 
1390:/usr/include/c++/14/bits/basic_string.h ****       /**
1391:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a character.
1392:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  The character to append.
1393:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1394:/usr/include/c++/14/bits/basic_string.h ****        */
1395:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1396:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1397:/usr/include/c++/14/bits/basic_string.h ****       operator+=(_CharT __c)
1398:/usr/include/c++/14/bits/basic_string.h ****       {
1399:/usr/include/c++/14/bits/basic_string.h **** 	this->push_back(__c);
1400:/usr/include/c++/14/bits/basic_string.h **** 	return *this;
1401:/usr/include/c++/14/bits/basic_string.h ****       }
1402:/usr/include/c++/14/bits/basic_string.h **** 
1403:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1404:/usr/include/c++/14/bits/basic_string.h ****       /**
1405:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1406:/usr/include/c++/14/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to be appended.
1407:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1408:/usr/include/c++/14/bits/basic_string.h ****        */
1409:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1410:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1411:/usr/include/c++/14/bits/basic_string.h ****       operator+=(initializer_list<_CharT> __l)
GAS LISTING linobj/Ch02_03.s 			page 79


1412:/usr/include/c++/14/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1413:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
1414:/usr/include/c++/14/bits/basic_string.h **** 
1415:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
1416:/usr/include/c++/14/bits/basic_string.h ****       /**
1417:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a string_view.
1418:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1419:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1420:/usr/include/c++/14/bits/basic_string.h ****        */
1421:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
1422:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
1423:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1424:/usr/include/c++/14/bits/basic_string.h **** 	operator+=(const _Tp& __svt)
1425:/usr/include/c++/14/bits/basic_string.h **** 	{ return this->append(__svt); }
1426:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
1427:/usr/include/c++/14/bits/basic_string.h **** 
1428:/usr/include/c++/14/bits/basic_string.h ****       /**
1429:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a string to this string.
1430:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  The string to append.
1431:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1432:/usr/include/c++/14/bits/basic_string.h ****        */
1433:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1434:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1435:/usr/include/c++/14/bits/basic_string.h ****       append(const basic_string& __str)
1436:/usr/include/c++/14/bits/basic_string.h ****       { return this->append(__str._M_data(), __str.size()); }
1437:/usr/include/c++/14/bits/basic_string.h **** 
1438:/usr/include/c++/14/bits/basic_string.h ****       /**
1439:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a substring.
1440:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  The string to append.
1441:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of the first character of str to append.
1442:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1443:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1444:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range if @a __pos is not a valid index.
1445:/usr/include/c++/14/bits/basic_string.h ****        *
1446:/usr/include/c++/14/bits/basic_string.h ****        *  This function appends @a __n characters from @a __str
1447:/usr/include/c++/14/bits/basic_string.h ****        *  starting at @a __pos to this string.  If @a __n is is larger
1448:/usr/include/c++/14/bits/basic_string.h ****        *  than the number of available characters in @a __str, the
1449:/usr/include/c++/14/bits/basic_string.h ****        *  remainder of @a __str is appended.
1450:/usr/include/c++/14/bits/basic_string.h ****        */
1451:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1452:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1453:/usr/include/c++/14/bits/basic_string.h ****       append(const basic_string& __str, size_type __pos, size_type __n = npos)
1454:/usr/include/c++/14/bits/basic_string.h ****       { return this->append(__str._M_data()
1455:/usr/include/c++/14/bits/basic_string.h **** 			    + __str._M_check(__pos, "basic_string::append"),
1456:/usr/include/c++/14/bits/basic_string.h **** 			    __str._M_limit(__pos, __n)); }
1457:/usr/include/c++/14/bits/basic_string.h **** 
1458:/usr/include/c++/14/bits/basic_string.h ****       /**
1459:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a C substring.
1460:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  The C string to append.
1461:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1462:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1463:/usr/include/c++/14/bits/basic_string.h ****        */
1464:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1465:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1466:/usr/include/c++/14/bits/basic_string.h ****       append(const _CharT* __s, size_type __n)
1467:/usr/include/c++/14/bits/basic_string.h ****       {
1468:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
GAS LISTING linobj/Ch02_03.s 			page 80


1469:/usr/include/c++/14/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1470:/usr/include/c++/14/bits/basic_string.h **** 	return _M_append(__s, __n);
1471:/usr/include/c++/14/bits/basic_string.h ****       }
1472:/usr/include/c++/14/bits/basic_string.h **** 
1473:/usr/include/c++/14/bits/basic_string.h ****       /**
1474:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a C string.
1475:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  The C string to append.
1476:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1477:/usr/include/c++/14/bits/basic_string.h ****        */
1478:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1479:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1480:/usr/include/c++/14/bits/basic_string.h ****       append(const _CharT* __s)
1481:/usr/include/c++/14/bits/basic_string.h ****       {
1482:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1483:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __n = traits_type::length(__s);
1484:/usr/include/c++/14/bits/basic_string.h **** 	_M_check_length(size_type(0), __n, "basic_string::append");
1485:/usr/include/c++/14/bits/basic_string.h **** 	return _M_append(__s, __n);
1486:/usr/include/c++/14/bits/basic_string.h ****       }
1487:/usr/include/c++/14/bits/basic_string.h **** 
1488:/usr/include/c++/14/bits/basic_string.h ****       /**
1489:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append multiple characters.
1490:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  The number of characters to append.
1491:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  The character to use.
1492:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1493:/usr/include/c++/14/bits/basic_string.h ****        *
1494:/usr/include/c++/14/bits/basic_string.h ****        *  Appends __n copies of __c to this string.
1495:/usr/include/c++/14/bits/basic_string.h ****        */
1496:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1497:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1498:/usr/include/c++/14/bits/basic_string.h ****       append(size_type __n, _CharT __c)
1499:/usr/include/c++/14/bits/basic_string.h ****       { return _M_replace_aux(this->size(), size_type(0), __n, __c); }
1500:/usr/include/c++/14/bits/basic_string.h **** 
1501:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1502:/usr/include/c++/14/bits/basic_string.h ****       /**
1503:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append an initializer_list of characters.
1504:/usr/include/c++/14/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to append.
1505:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1506:/usr/include/c++/14/bits/basic_string.h ****        */
1507:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1508:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1509:/usr/include/c++/14/bits/basic_string.h ****       append(initializer_list<_CharT> __l)
1510:/usr/include/c++/14/bits/basic_string.h ****       { return this->append(__l.begin(), __l.size()); }
1511:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
1512:/usr/include/c++/14/bits/basic_string.h **** 
1513:/usr/include/c++/14/bits/basic_string.h ****       /**
1514:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a range of characters.
1515:/usr/include/c++/14/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1516:/usr/include/c++/14/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1517:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1518:/usr/include/c++/14/bits/basic_string.h ****        *
1519:/usr/include/c++/14/bits/basic_string.h ****        *  Appends characters in the range [__first,__last) to this string.
1520:/usr/include/c++/14/bits/basic_string.h ****        */
1521:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1522:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator,
1523:/usr/include/c++/14/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1524:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
1525:/usr/include/c++/14/bits/basic_string.h **** #else
GAS LISTING linobj/Ch02_03.s 			page 81


1526:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator>
1527:/usr/include/c++/14/bits/basic_string.h **** #endif
1528:/usr/include/c++/14/bits/basic_string.h ****         basic_string&
1529:/usr/include/c++/14/bits/basic_string.h ****         append(_InputIterator __first, _InputIterator __last)
1530:/usr/include/c++/14/bits/basic_string.h ****         { return this->replace(end(), end(), __first, __last); }
1531:/usr/include/c++/14/bits/basic_string.h **** 
1532:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
1533:/usr/include/c++/14/bits/basic_string.h ****       /**
1534:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a string_view.
1535:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended.
1536:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1537:/usr/include/c++/14/bits/basic_string.h ****        */
1538:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
1539:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
1540:/usr/include/c++/14/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1541:/usr/include/c++/14/bits/basic_string.h ****         append(const _Tp& __svt)
1542:/usr/include/c++/14/bits/basic_string.h ****         {
1543:/usr/include/c++/14/bits/basic_string.h ****           __sv_type __sv = __svt;
1544:/usr/include/c++/14/bits/basic_string.h ****           return this->append(__sv.data(), __sv.size());
1545:/usr/include/c++/14/bits/basic_string.h ****         }
1546:/usr/include/c++/14/bits/basic_string.h **** 
1547:/usr/include/c++/14/bits/basic_string.h ****       /**
1548:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a range of characters from a string_view.
1549:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to be appended from.
1550:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos The position in the string_view to append from.
1551:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n   The number of characters to append from the string_view.
1552:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1553:/usr/include/c++/14/bits/basic_string.h ****        */
1554:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
1555:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
1556:/usr/include/c++/14/bits/basic_string.h ****         _If_sv<_Tp, basic_string&>
1557:/usr/include/c++/14/bits/basic_string.h **** 	append(const _Tp& __svt, size_type __pos, size_type __n = npos)
1558:/usr/include/c++/14/bits/basic_string.h **** 	{
1559:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1560:/usr/include/c++/14/bits/basic_string.h **** 	  return _M_append(__sv.data()
1561:/usr/include/c++/14/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::append"),
1562:/usr/include/c++/14/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1563:/usr/include/c++/14/bits/basic_string.h **** 	}
1564:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
1565:/usr/include/c++/14/bits/basic_string.h **** 
1566:/usr/include/c++/14/bits/basic_string.h ****       /**
1567:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Append a single character.
1568:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to append.
1569:/usr/include/c++/14/bits/basic_string.h ****        */
1570:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1571:/usr/include/c++/14/bits/basic_string.h ****       void
1572:/usr/include/c++/14/bits/basic_string.h ****       push_back(_CharT __c)
1573:/usr/include/c++/14/bits/basic_string.h ****       {
1574:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __size = this->size();
1575:/usr/include/c++/14/bits/basic_string.h **** 	if (__size + 1 > this->capacity())
1576:/usr/include/c++/14/bits/basic_string.h **** 	  this->_M_mutate(__size, size_type(0), 0, size_type(1));
1577:/usr/include/c++/14/bits/basic_string.h **** 	traits_type::assign(this->_M_data()[__size], __c);
1578:/usr/include/c++/14/bits/basic_string.h **** 	this->_M_set_length(__size + 1);
1579:/usr/include/c++/14/bits/basic_string.h ****       }
1580:/usr/include/c++/14/bits/basic_string.h **** 
1581:/usr/include/c++/14/bits/basic_string.h ****       /**
1582:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
GAS LISTING linobj/Ch02_03.s 			page 82


1583:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string to use.
1584:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1585:/usr/include/c++/14/bits/basic_string.h ****        */
1586:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1587:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1588:/usr/include/c++/14/bits/basic_string.h ****       assign(const basic_string& __str)
1589:/usr/include/c++/14/bits/basic_string.h ****       {
1590:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1591:/usr/include/c++/14/bits/basic_string.h **** 	if (_Alloc_traits::_S_propagate_on_copy_assign())
1592:/usr/include/c++/14/bits/basic_string.h **** 	  {
1593:/usr/include/c++/14/bits/basic_string.h **** 	    if (!_Alloc_traits::_S_always_equal() && !_M_is_local()
1594:/usr/include/c++/14/bits/basic_string.h **** 		&& _M_get_allocator() != __str._M_get_allocator())
1595:/usr/include/c++/14/bits/basic_string.h **** 	      {
1596:/usr/include/c++/14/bits/basic_string.h **** 		// Propagating allocator cannot free existing storage so must
1597:/usr/include/c++/14/bits/basic_string.h **** 		// deallocate it before replacing current allocator.
1598:/usr/include/c++/14/bits/basic_string.h **** 		if (__str.size() <= _S_local_capacity)
1599:/usr/include/c++/14/bits/basic_string.h **** 		  {
1600:/usr/include/c++/14/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1601:/usr/include/c++/14/bits/basic_string.h **** 		    _M_data(_M_use_local_data());
1602:/usr/include/c++/14/bits/basic_string.h **** 		    _M_set_length(0);
1603:/usr/include/c++/14/bits/basic_string.h **** 		  }
1604:/usr/include/c++/14/bits/basic_string.h **** 		else
1605:/usr/include/c++/14/bits/basic_string.h **** 		  {
1606:/usr/include/c++/14/bits/basic_string.h **** 		    const auto __len = __str.size();
1607:/usr/include/c++/14/bits/basic_string.h **** 		    auto __alloc = __str._M_get_allocator();
1608:/usr/include/c++/14/bits/basic_string.h **** 		    // If this allocation throws there are no effects:
1609:/usr/include/c++/14/bits/basic_string.h **** 		    auto __ptr = _S_allocate(__alloc, __len + 1);
1610:/usr/include/c++/14/bits/basic_string.h **** 		    _M_destroy(_M_allocated_capacity);
1611:/usr/include/c++/14/bits/basic_string.h **** 		    _M_data(__ptr);
1612:/usr/include/c++/14/bits/basic_string.h **** 		    _M_capacity(__len);
1613:/usr/include/c++/14/bits/basic_string.h **** 		    _M_set_length(__len);
1614:/usr/include/c++/14/bits/basic_string.h **** 		  }
1615:/usr/include/c++/14/bits/basic_string.h **** 	      }
1616:/usr/include/c++/14/bits/basic_string.h **** 	    std::__alloc_on_copy(_M_get_allocator(), __str._M_get_allocator());
1617:/usr/include/c++/14/bits/basic_string.h **** 	  }
1618:/usr/include/c++/14/bits/basic_string.h **** #endif
1619:/usr/include/c++/14/bits/basic_string.h **** 	this->_M_assign(__str);
1620:/usr/include/c++/14/bits/basic_string.h **** 	return *this;
1621:/usr/include/c++/14/bits/basic_string.h ****       }
1622:/usr/include/c++/14/bits/basic_string.h **** 
1623:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1624:/usr/include/c++/14/bits/basic_string.h ****       /**
1625:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to contents of another string.
1626:/usr/include/c++/14/bits/basic_string.h ****        *  @param  __str  Source string to use.
1627:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1628:/usr/include/c++/14/bits/basic_string.h ****        *
1629:/usr/include/c++/14/bits/basic_string.h ****        *  This function sets this string to the exact contents of @a __str.
1630:/usr/include/c++/14/bits/basic_string.h ****        *  @a __str is a valid, but unspecified string.
1631:/usr/include/c++/14/bits/basic_string.h ****        */
1632:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1633:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1634:/usr/include/c++/14/bits/basic_string.h ****       assign(basic_string&& __str)
1635:/usr/include/c++/14/bits/basic_string.h ****       noexcept(_Alloc_traits::_S_nothrow_move())
1636:/usr/include/c++/14/bits/basic_string.h ****       {
1637:/usr/include/c++/14/bits/basic_string.h **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
1638:/usr/include/c++/14/bits/basic_string.h **** 	// 2063. Contradictory requirements for string move assignment
1639:/usr/include/c++/14/bits/basic_string.h **** 	return *this = std::move(__str);
GAS LISTING linobj/Ch02_03.s 			page 83


1640:/usr/include/c++/14/bits/basic_string.h ****       }
1641:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
1642:/usr/include/c++/14/bits/basic_string.h **** 
1643:/usr/include/c++/14/bits/basic_string.h ****       /**
1644:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to a substring of a string.
1645:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  The string to use.
1646:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of the first character of str.
1647:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1648:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1649:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range if @a pos is not a valid index.
1650:/usr/include/c++/14/bits/basic_string.h ****        *
1651:/usr/include/c++/14/bits/basic_string.h ****        *  This function sets this string to the substring of @a __str
1652:/usr/include/c++/14/bits/basic_string.h ****        *  consisting of @a __n characters at @a __pos.  If @a __n is
1653:/usr/include/c++/14/bits/basic_string.h ****        *  is larger than the number of available characters in @a
1654:/usr/include/c++/14/bits/basic_string.h ****        *  __str, the remainder of @a __str is used.
1655:/usr/include/c++/14/bits/basic_string.h ****        */
1656:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1657:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1658:/usr/include/c++/14/bits/basic_string.h ****       assign(const basic_string& __str, size_type __pos, size_type __n = npos)
1659:/usr/include/c++/14/bits/basic_string.h ****       { return _M_replace(size_type(0), this->size(), __str._M_data()
1660:/usr/include/c++/14/bits/basic_string.h **** 			  + __str._M_check(__pos, "basic_string::assign"),
1661:/usr/include/c++/14/bits/basic_string.h **** 			  __str._M_limit(__pos, __n)); }
1662:/usr/include/c++/14/bits/basic_string.h **** 
1663:/usr/include/c++/14/bits/basic_string.h ****       /**
1664:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to a C substring.
1665:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  The C string to use.
1666:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to use.
1667:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1668:/usr/include/c++/14/bits/basic_string.h ****        *
1669:/usr/include/c++/14/bits/basic_string.h ****        *  This function sets the value of this string to the first @a __n
1670:/usr/include/c++/14/bits/basic_string.h ****        *  characters of @a __s.  If @a __n is is larger than the number of
1671:/usr/include/c++/14/bits/basic_string.h ****        *  available characters in @a __s, the remainder of @a __s is used.
1672:/usr/include/c++/14/bits/basic_string.h ****        */
1673:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1674:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1675:/usr/include/c++/14/bits/basic_string.h ****       assign(const _CharT* __s, size_type __n)
1676:/usr/include/c++/14/bits/basic_string.h ****       {
1677:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n);
1678:/usr/include/c++/14/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s, __n);
1679:/usr/include/c++/14/bits/basic_string.h ****       }
1680:/usr/include/c++/14/bits/basic_string.h **** 
1681:/usr/include/c++/14/bits/basic_string.h ****       /**
1682:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to contents of a C string.
1683:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  The C string to use.
1684:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1685:/usr/include/c++/14/bits/basic_string.h ****        *
1686:/usr/include/c++/14/bits/basic_string.h ****        *  This function sets the value of this string to the value of @a __s.
1687:/usr/include/c++/14/bits/basic_string.h ****        *  The data is copied, so there is no dependence on @a __s once the
1688:/usr/include/c++/14/bits/basic_string.h ****        *  function returns.
1689:/usr/include/c++/14/bits/basic_string.h ****        */
1690:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1691:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1692:/usr/include/c++/14/bits/basic_string.h ****       assign(const _CharT* __s)
1693:/usr/include/c++/14/bits/basic_string.h ****       {
1694:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
1695:/usr/include/c++/14/bits/basic_string.h **** 	return _M_replace(size_type(0), this->size(), __s,
1696:/usr/include/c++/14/bits/basic_string.h **** 			  traits_type::length(__s));
GAS LISTING linobj/Ch02_03.s 			page 84


1697:/usr/include/c++/14/bits/basic_string.h ****       }
1698:/usr/include/c++/14/bits/basic_string.h **** 
1699:/usr/include/c++/14/bits/basic_string.h ****       /**
1700:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to multiple characters.
1701:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Length of the resulting string.
1702:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  The character to use.
1703:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1704:/usr/include/c++/14/bits/basic_string.h ****        *
1705:/usr/include/c++/14/bits/basic_string.h ****        *  This function sets the value of this string to @a __n copies of
1706:/usr/include/c++/14/bits/basic_string.h ****        *  character @a __c.
1707:/usr/include/c++/14/bits/basic_string.h ****        */
1708:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1709:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1710:/usr/include/c++/14/bits/basic_string.h ****       assign(size_type __n, _CharT __c)
1711:/usr/include/c++/14/bits/basic_string.h ****       { return _M_replace_aux(size_type(0), this->size(), __n, __c); }
1712:/usr/include/c++/14/bits/basic_string.h **** 
1713:/usr/include/c++/14/bits/basic_string.h ****       /**
1714:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to a range of characters.
1715:/usr/include/c++/14/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to append.
1716:/usr/include/c++/14/bits/basic_string.h ****        *  @param __last  Iterator marking the end of the range.
1717:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1718:/usr/include/c++/14/bits/basic_string.h ****        *
1719:/usr/include/c++/14/bits/basic_string.h ****        *  Sets value of string to characters in the range [__first,__last).
1720:/usr/include/c++/14/bits/basic_string.h ****       */
1721:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1722:/usr/include/c++/14/bits/basic_string.h **** #pragma GCC diagnostic push
1723:/usr/include/c++/14/bits/basic_string.h **** #pragma GCC diagnostic ignored "-Wc++17-extensions"
1724:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator,
1725:/usr/include/c++/14/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1726:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
1727:/usr/include/c++/14/bits/basic_string.h **** 	basic_string&
1728:/usr/include/c++/14/bits/basic_string.h **** 	assign(_InputIterator __first, _InputIterator __last)
1729:/usr/include/c++/14/bits/basic_string.h **** 	{
1730:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 202002L
1731:/usr/include/c++/14/bits/basic_string.h **** 	  if constexpr (contiguous_iterator<_InputIterator>
1732:/usr/include/c++/14/bits/basic_string.h **** 			  && is_same_v<iter_value_t<_InputIterator>, _CharT>)
1733:/usr/include/c++/14/bits/basic_string.h **** #else
1734:/usr/include/c++/14/bits/basic_string.h **** 	  if constexpr (__is_one_of<_InputIterator, const_iterator, iterator,
1735:/usr/include/c++/14/bits/basic_string.h **** 				    const _CharT*, _CharT*>::value)
1736:/usr/include/c++/14/bits/basic_string.h **** #endif
1737:/usr/include/c++/14/bits/basic_string.h **** 	    {
1738:/usr/include/c++/14/bits/basic_string.h **** 	      __glibcxx_requires_valid_range(__first, __last);
1739:/usr/include/c++/14/bits/basic_string.h **** 	      return _M_replace(size_type(0), size(),
1740:/usr/include/c++/14/bits/basic_string.h **** 				std::__to_address(__first), __last - __first);
1741:/usr/include/c++/14/bits/basic_string.h **** 	    }
1742:/usr/include/c++/14/bits/basic_string.h **** 	  else
1743:/usr/include/c++/14/bits/basic_string.h **** 	    return *this = basic_string(__first, __last, get_allocator());
1744:/usr/include/c++/14/bits/basic_string.h **** 	}
1745:/usr/include/c++/14/bits/basic_string.h **** #pragma GCC diagnostic pop
1746:/usr/include/c++/14/bits/basic_string.h **** #else
1747:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator>
1748:/usr/include/c++/14/bits/basic_string.h **** 	basic_string&
1749:/usr/include/c++/14/bits/basic_string.h **** 	assign(_InputIterator __first, _InputIterator __last)
1750:/usr/include/c++/14/bits/basic_string.h **** 	{ return this->replace(begin(), end(), __first, __last); }
1751:/usr/include/c++/14/bits/basic_string.h **** #endif
1752:/usr/include/c++/14/bits/basic_string.h **** 
1753:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
GAS LISTING linobj/Ch02_03.s 			page 85


1754:/usr/include/c++/14/bits/basic_string.h ****       /**
1755:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value to an initializer_list of characters.
1756:/usr/include/c++/14/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to assign.
1757:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1758:/usr/include/c++/14/bits/basic_string.h ****        */
1759:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1760:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1761:/usr/include/c++/14/bits/basic_string.h ****       assign(initializer_list<_CharT> __l)
1762:/usr/include/c++/14/bits/basic_string.h ****       {
1763:/usr/include/c++/14/bits/basic_string.h **** 	// The initializer_list array cannot alias the characters in *this
1764:/usr/include/c++/14/bits/basic_string.h **** 	// so we don't need to use replace to that case.
1765:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __n = __l.size();
1766:/usr/include/c++/14/bits/basic_string.h **** 	if (__n > capacity())
1767:/usr/include/c++/14/bits/basic_string.h **** 	  *this = basic_string(__l.begin(), __l.end(), get_allocator());
1768:/usr/include/c++/14/bits/basic_string.h **** 	else
1769:/usr/include/c++/14/bits/basic_string.h **** 	  {
1770:/usr/include/c++/14/bits/basic_string.h **** 	    if (__n)
1771:/usr/include/c++/14/bits/basic_string.h **** 	      _S_copy(_M_data(), __l.begin(), __n);
1772:/usr/include/c++/14/bits/basic_string.h **** 	    _M_set_length(__n);
1773:/usr/include/c++/14/bits/basic_string.h **** 	  }
1774:/usr/include/c++/14/bits/basic_string.h **** 	return *this;
1775:/usr/include/c++/14/bits/basic_string.h ****       }
1776:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
1777:/usr/include/c++/14/bits/basic_string.h **** 
1778:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
1779:/usr/include/c++/14/bits/basic_string.h ****       /**
1780:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value from a string_view.
1781:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1782:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1783:/usr/include/c++/14/bits/basic_string.h ****        */
1784:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
1785:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
1786:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1787:/usr/include/c++/14/bits/basic_string.h **** 	assign(const _Tp& __svt)
1788:/usr/include/c++/14/bits/basic_string.h **** 	{
1789:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1790:/usr/include/c++/14/bits/basic_string.h **** 	  return this->assign(__sv.data(), __sv.size());
1791:/usr/include/c++/14/bits/basic_string.h **** 	}
1792:/usr/include/c++/14/bits/basic_string.h **** 
1793:/usr/include/c++/14/bits/basic_string.h ****       /**
1794:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Set value from a range of characters in a string_view.
1795:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  The source object convertible to string_view.
1796:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  The position in the string_view to assign from.
1797:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  The number of characters to assign.
1798:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1799:/usr/include/c++/14/bits/basic_string.h ****        */
1800:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
1801:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
1802:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
1803:/usr/include/c++/14/bits/basic_string.h **** 	assign(const _Tp& __svt, size_type __pos, size_type __n = npos)
1804:/usr/include/c++/14/bits/basic_string.h **** 	{
1805:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
1806:/usr/include/c++/14/bits/basic_string.h **** 	  return _M_replace(size_type(0), this->size(),
1807:/usr/include/c++/14/bits/basic_string.h **** 	      __sv.data()
1808:/usr/include/c++/14/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos, "basic_string::assign"),
1809:/usr/include/c++/14/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos, __n));
1810:/usr/include/c++/14/bits/basic_string.h **** 	}
GAS LISTING linobj/Ch02_03.s 			page 86


1811:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
1812:/usr/include/c++/14/bits/basic_string.h **** 
1813:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1814:/usr/include/c++/14/bits/basic_string.h ****       /**
1815:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1816:/usr/include/c++/14/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1817:/usr/include/c++/14/bits/basic_string.h ****        *              insert at.
1818:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1819:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  The character to insert.
1820:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1821:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1822:/usr/include/c++/14/bits/basic_string.h ****        *
1823:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1824:/usr/include/c++/14/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1825:/usr/include/c++/14/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1826:/usr/include/c++/14/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1827:/usr/include/c++/14/bits/basic_string.h ****        *  change if an error is thrown.
1828:/usr/include/c++/14/bits/basic_string.h ****       */
1829:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1830:/usr/include/c++/14/bits/basic_string.h ****       iterator
1831:/usr/include/c++/14/bits/basic_string.h ****       insert(const_iterator __p, size_type __n, _CharT __c)
1832:/usr/include/c++/14/bits/basic_string.h ****       {
1833:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1834:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __pos = __p - begin();
1835:/usr/include/c++/14/bits/basic_string.h **** 	this->replace(__p, __p, __n, __c);
1836:/usr/include/c++/14/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
1837:/usr/include/c++/14/bits/basic_string.h ****       }
1838:/usr/include/c++/14/bits/basic_string.h **** #else
1839:/usr/include/c++/14/bits/basic_string.h ****       /**
1840:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert multiple characters.
1841:/usr/include/c++/14/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1842:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to insert
1843:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  The character to insert.
1844:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1845:/usr/include/c++/14/bits/basic_string.h ****        *
1846:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at the
1847:/usr/include/c++/14/bits/basic_string.h ****        *  position referenced by iterator @a __p.  If adding
1848:/usr/include/c++/14/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1849:/usr/include/c++/14/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1850:/usr/include/c++/14/bits/basic_string.h ****        *  change if an error is thrown.
1851:/usr/include/c++/14/bits/basic_string.h ****       */
1852:/usr/include/c++/14/bits/basic_string.h ****       void
1853:/usr/include/c++/14/bits/basic_string.h ****       insert(iterator __p, size_type __n, _CharT __c)
1854:/usr/include/c++/14/bits/basic_string.h ****       {	this->replace(__p, __p, __n, __c);  }
1855:/usr/include/c++/14/bits/basic_string.h **** #endif
1856:/usr/include/c++/14/bits/basic_string.h **** 
1857:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1858:/usr/include/c++/14/bits/basic_string.h ****       /**
1859:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1860:/usr/include/c++/14/bits/basic_string.h ****        *  @param __p  Const_iterator referencing location in string to
1861:/usr/include/c++/14/bits/basic_string.h ****        *              insert at.
1862:/usr/include/c++/14/bits/basic_string.h ****        *  @param __beg  Start of range.
1863:/usr/include/c++/14/bits/basic_string.h ****        *  @param __end  End of range.
1864:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Iterator referencing the first inserted char.
1865:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1866:/usr/include/c++/14/bits/basic_string.h ****        *
1867:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts characters in range [beg,end).  If adding characters
GAS LISTING linobj/Ch02_03.s 			page 87


1868:/usr/include/c++/14/bits/basic_string.h ****        *  causes the length to exceed max_size(), length_error is
1869:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
1870:/usr/include/c++/14/bits/basic_string.h ****        *  is thrown.
1871:/usr/include/c++/14/bits/basic_string.h ****       */
1872:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator,
1873:/usr/include/c++/14/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1874:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
1875:/usr/include/c++/14/bits/basic_string.h **** 	iterator
1876:/usr/include/c++/14/bits/basic_string.h ****         insert(const_iterator __p, _InputIterator __beg, _InputIterator __end)
1877:/usr/include/c++/14/bits/basic_string.h ****         {
1878:/usr/include/c++/14/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1879:/usr/include/c++/14/bits/basic_string.h **** 	  const size_type __pos = __p - begin();
1880:/usr/include/c++/14/bits/basic_string.h **** 	  this->replace(__p, __p, __beg, __end);
1881:/usr/include/c++/14/bits/basic_string.h **** 	  return iterator(this->_M_data() + __pos);
1882:/usr/include/c++/14/bits/basic_string.h **** 	}
1883:/usr/include/c++/14/bits/basic_string.h **** #else
1884:/usr/include/c++/14/bits/basic_string.h ****       /**
1885:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert a range of characters.
1886:/usr/include/c++/14/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1887:/usr/include/c++/14/bits/basic_string.h ****        *  @param __beg  Start of range.
1888:/usr/include/c++/14/bits/basic_string.h ****        *  @param __end  End of range.
1889:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1890:/usr/include/c++/14/bits/basic_string.h ****        *
1891:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts characters in range [__beg,__end).  If adding
1892:/usr/include/c++/14/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1893:/usr/include/c++/14/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1894:/usr/include/c++/14/bits/basic_string.h ****        *  change if an error is thrown.
1895:/usr/include/c++/14/bits/basic_string.h ****       */
1896:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator>
1897:/usr/include/c++/14/bits/basic_string.h ****         void
1898:/usr/include/c++/14/bits/basic_string.h ****         insert(iterator __p, _InputIterator __beg, _InputIterator __end)
1899:/usr/include/c++/14/bits/basic_string.h ****         { this->replace(__p, __p, __beg, __end); }
1900:/usr/include/c++/14/bits/basic_string.h **** #endif
1901:/usr/include/c++/14/bits/basic_string.h **** 
1902:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
1903:/usr/include/c++/14/bits/basic_string.h ****       /**
1904:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert an initializer_list of characters.
1905:/usr/include/c++/14/bits/basic_string.h ****        *  @param __p  Iterator referencing location in string to insert at.
1906:/usr/include/c++/14/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
1907:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1908:/usr/include/c++/14/bits/basic_string.h ****        */
1909:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1910:/usr/include/c++/14/bits/basic_string.h ****       iterator
1911:/usr/include/c++/14/bits/basic_string.h ****       insert(const_iterator __p, initializer_list<_CharT> __l)
1912:/usr/include/c++/14/bits/basic_string.h ****       { return this->insert(__p, __l.begin(), __l.end()); }
1913:/usr/include/c++/14/bits/basic_string.h **** 
1914:/usr/include/c++/14/bits/basic_string.h **** #ifdef _GLIBCXX_DEFINING_STRING_INSTANTIATIONS
1915:/usr/include/c++/14/bits/basic_string.h ****       // See PR libstdc++/83328
1916:/usr/include/c++/14/bits/basic_string.h ****       void
1917:/usr/include/c++/14/bits/basic_string.h ****       insert(iterator __p, initializer_list<_CharT> __l)
1918:/usr/include/c++/14/bits/basic_string.h ****       {
1919:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
1920:/usr/include/c++/14/bits/basic_string.h **** 	this->insert(__p - begin(), __l.begin(), __l.size());
1921:/usr/include/c++/14/bits/basic_string.h ****       }
1922:/usr/include/c++/14/bits/basic_string.h **** #endif
1923:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
1924:/usr/include/c++/14/bits/basic_string.h **** 
GAS LISTING linobj/Ch02_03.s 			page 88


1925:/usr/include/c++/14/bits/basic_string.h ****       /**
1926:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert value of a string.
1927:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos1 Position in string to insert at.
1928:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  The string to insert.
1929:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1930:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1931:/usr/include/c++/14/bits/basic_string.h ****        *
1932:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts value of @a __str starting at @a __pos1.  If adding
1933:/usr/include/c++/14/bits/basic_string.h ****        *  characters causes the length to exceed max_size(),
1934:/usr/include/c++/14/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
1935:/usr/include/c++/14/bits/basic_string.h ****        *  change if an error is thrown.
1936:/usr/include/c++/14/bits/basic_string.h ****       */
1937:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1938:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1939:/usr/include/c++/14/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str)
1940:/usr/include/c++/14/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0),
1941:/usr/include/c++/14/bits/basic_string.h **** 			     __str._M_data(), __str.size()); }
1942:/usr/include/c++/14/bits/basic_string.h **** 
1943:/usr/include/c++/14/bits/basic_string.h ****       /**
1944:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert a substring.
1945:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
1946:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str   The string to insert.
1947:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
1948:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
1949:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1950:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1951:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size() or
1952:/usr/include/c++/14/bits/basic_string.h ****        *  @a __pos2 > @a str.size().
1953:/usr/include/c++/14/bits/basic_string.h ****        *
1954:/usr/include/c++/14/bits/basic_string.h ****        *  Starting at @a pos1, insert @a __n character of @a __str
1955:/usr/include/c++/14/bits/basic_string.h ****        *  beginning with @a __pos2.  If adding characters causes the
1956:/usr/include/c++/14/bits/basic_string.h ****        *  length to exceed max_size(), length_error is thrown.  If @a
1957:/usr/include/c++/14/bits/basic_string.h ****        *  __pos1 is beyond the end of this string or @a __pos2 is
1958:/usr/include/c++/14/bits/basic_string.h ****        *  beyond the end of @a __str, out_of_range is thrown.  The
1959:/usr/include/c++/14/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
1960:/usr/include/c++/14/bits/basic_string.h ****       */
1961:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1962:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1963:/usr/include/c++/14/bits/basic_string.h ****       insert(size_type __pos1, const basic_string& __str,
1964:/usr/include/c++/14/bits/basic_string.h **** 	     size_type __pos2, size_type __n = npos)
1965:/usr/include/c++/14/bits/basic_string.h ****       { return this->replace(__pos1, size_type(0), __str._M_data()
1966:/usr/include/c++/14/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::insert"),
1967:/usr/include/c++/14/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n)); }
1968:/usr/include/c++/14/bits/basic_string.h **** 
1969:/usr/include/c++/14/bits/basic_string.h ****       /**
1970:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert a C substring.
1971:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1972:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  The C string to insert.
1973:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  The number of characters to insert.
1974:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1975:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1976:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
1977:/usr/include/c++/14/bits/basic_string.h ****        *  string.
1978:/usr/include/c++/14/bits/basic_string.h ****        *
1979:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts the first @a __n characters of @a __s starting at @a
1980:/usr/include/c++/14/bits/basic_string.h ****        *  __pos.  If adding characters causes the length to exceed
1981:/usr/include/c++/14/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos is beyond
GAS LISTING linobj/Ch02_03.s 			page 89


1982:/usr/include/c++/14/bits/basic_string.h ****        *  end(), out_of_range is thrown.  The value of the string
1983:/usr/include/c++/14/bits/basic_string.h ****        *  doesn't change if an error is thrown.
1984:/usr/include/c++/14/bits/basic_string.h ****       */
1985:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
1986:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
1987:/usr/include/c++/14/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s, size_type __n)
1988:/usr/include/c++/14/bits/basic_string.h ****       { return this->replace(__pos, size_type(0), __s, __n); }
1989:/usr/include/c++/14/bits/basic_string.h **** 
1990:/usr/include/c++/14/bits/basic_string.h ****       /**
1991:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert a C string.
1992:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
1993:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  The C string to insert.
1994:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
1995:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
1996:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
1997:/usr/include/c++/14/bits/basic_string.h ****        *  string.
1998:/usr/include/c++/14/bits/basic_string.h ****        *
1999:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts the first @a n characters of @a __s starting at @a __pos.  If
2000:/usr/include/c++/14/bits/basic_string.h ****        *  adding characters causes the length to exceed max_size(),
2001:/usr/include/c++/14/bits/basic_string.h ****        *  length_error is thrown.  If @a __pos is beyond end(), out_of_range is
2002:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error is
2003:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.
2004:/usr/include/c++/14/bits/basic_string.h ****       */
2005:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2006:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2007:/usr/include/c++/14/bits/basic_string.h ****       insert(size_type __pos, const _CharT* __s)
2008:/usr/include/c++/14/bits/basic_string.h ****       {
2009:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2010:/usr/include/c++/14/bits/basic_string.h **** 	return this->replace(__pos, size_type(0), __s,
2011:/usr/include/c++/14/bits/basic_string.h **** 			     traits_type::length(__s));
2012:/usr/include/c++/14/bits/basic_string.h ****       }
2013:/usr/include/c++/14/bits/basic_string.h **** 
2014:/usr/include/c++/14/bits/basic_string.h ****       /**
2015:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert multiple characters.
2016:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index in string to insert at.
2017:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to insert
2018:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  The character to insert.
2019:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2020:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2021:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos is beyond the end of this
2022:/usr/include/c++/14/bits/basic_string.h ****        *  string.
2023:/usr/include/c++/14/bits/basic_string.h ****        *
2024:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts @a __n copies of character @a __c starting at index
2025:/usr/include/c++/14/bits/basic_string.h ****        *  @a __pos.  If adding characters causes the length to exceed
2026:/usr/include/c++/14/bits/basic_string.h ****        *  max_size(), length_error is thrown.  If @a __pos > length(),
2027:/usr/include/c++/14/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
2028:/usr/include/c++/14/bits/basic_string.h ****        *  change if an error is thrown.
2029:/usr/include/c++/14/bits/basic_string.h ****       */
2030:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2031:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2032:/usr/include/c++/14/bits/basic_string.h ****       insert(size_type __pos, size_type __n, _CharT __c)
2033:/usr/include/c++/14/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::insert"),
2034:/usr/include/c++/14/bits/basic_string.h **** 			      size_type(0), __n, __c); }
2035:/usr/include/c++/14/bits/basic_string.h **** 
2036:/usr/include/c++/14/bits/basic_string.h ****       /**
2037:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert one character.
2038:/usr/include/c++/14/bits/basic_string.h ****        *  @param __p  Iterator referencing position in string to insert at.
GAS LISTING linobj/Ch02_03.s 			page 90


2039:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  The character to insert.
2040:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Iterator referencing newly inserted char.
2041:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2042:/usr/include/c++/14/bits/basic_string.h ****        *
2043:/usr/include/c++/14/bits/basic_string.h ****        *  Inserts character @a __c at position referenced by @a __p.
2044:/usr/include/c++/14/bits/basic_string.h ****        *  If adding character causes the length to exceed max_size(),
2045:/usr/include/c++/14/bits/basic_string.h ****        *  length_error is thrown.  If @a __p is beyond end of string,
2046:/usr/include/c++/14/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
2047:/usr/include/c++/14/bits/basic_string.h ****        *  change if an error is thrown.
2048:/usr/include/c++/14/bits/basic_string.h ****       */
2049:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2050:/usr/include/c++/14/bits/basic_string.h ****       iterator
2051:/usr/include/c++/14/bits/basic_string.h ****       insert(__const_iterator __p, _CharT __c)
2052:/usr/include/c++/14/bits/basic_string.h ****       {
2053:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__p >= begin() && __p <= end());
2054:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __pos = __p - begin();
2055:/usr/include/c++/14/bits/basic_string.h **** 	_M_replace_aux(__pos, size_type(0), size_type(1), __c);
2056:/usr/include/c++/14/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
2057:/usr/include/c++/14/bits/basic_string.h ****       }
2058:/usr/include/c++/14/bits/basic_string.h **** 
2059:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
2060:/usr/include/c++/14/bits/basic_string.h ****       /**
2061:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert a string_view.
2062:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Position in string to insert at.
2063:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2064:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2065:/usr/include/c++/14/bits/basic_string.h ****       */
2066:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2067:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
2068:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2069:/usr/include/c++/14/bits/basic_string.h **** 	insert(size_type __pos, const _Tp& __svt)
2070:/usr/include/c++/14/bits/basic_string.h **** 	{
2071:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2072:/usr/include/c++/14/bits/basic_string.h **** 	  return this->insert(__pos, __sv.data(), __sv.size());
2073:/usr/include/c++/14/bits/basic_string.h **** 	}
2074:/usr/include/c++/14/bits/basic_string.h **** 
2075:/usr/include/c++/14/bits/basic_string.h ****       /**
2076:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Insert a string_view.
2077:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos1  Position in string to insert at.
2078:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2079:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos2  Start of characters in str to insert.
2080:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n    The number of characters to insert.
2081:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2082:/usr/include/c++/14/bits/basic_string.h ****       */
2083:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2084:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
2085:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2086:/usr/include/c++/14/bits/basic_string.h **** 	insert(size_type __pos1, const _Tp& __svt,
2087:/usr/include/c++/14/bits/basic_string.h **** 	       size_type __pos2, size_type __n = npos)
2088:/usr/include/c++/14/bits/basic_string.h **** 	{
2089:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2090:/usr/include/c++/14/bits/basic_string.h **** 	  return this->replace(__pos1, size_type(0),
2091:/usr/include/c++/14/bits/basic_string.h **** 	      __sv.data()
2092:/usr/include/c++/14/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::insert"),
2093:/usr/include/c++/14/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n));
2094:/usr/include/c++/14/bits/basic_string.h **** 	}
2095:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
GAS LISTING linobj/Ch02_03.s 			page 91


2096:/usr/include/c++/14/bits/basic_string.h **** 
2097:/usr/include/c++/14/bits/basic_string.h ****       /**
2098:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Remove characters.
2099:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character to remove (default 0).
2100:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to remove (default remainder).
2101:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2102:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
2103:/usr/include/c++/14/bits/basic_string.h ****        *  string.
2104:/usr/include/c++/14/bits/basic_string.h ****        *
2105:/usr/include/c++/14/bits/basic_string.h ****        *  Removes @a __n characters from this string starting at @a
2106:/usr/include/c++/14/bits/basic_string.h ****        *  __pos.  The length of the string is reduced by @a __n.  If
2107:/usr/include/c++/14/bits/basic_string.h ****        *  there are < @a __n characters to remove, the remainder of
2108:/usr/include/c++/14/bits/basic_string.h ****        *  the string is truncated.  If @a __p is beyond end of string,
2109:/usr/include/c++/14/bits/basic_string.h ****        *  out_of_range is thrown.  The value of the string doesn't
2110:/usr/include/c++/14/bits/basic_string.h ****        *  change if an error is thrown.
2111:/usr/include/c++/14/bits/basic_string.h ****       */
2112:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2113:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2114:/usr/include/c++/14/bits/basic_string.h ****       erase(size_type __pos = 0, size_type __n = npos)
2115:/usr/include/c++/14/bits/basic_string.h ****       {
2116:/usr/include/c++/14/bits/basic_string.h **** 	_M_check(__pos, "basic_string::erase");
2117:/usr/include/c++/14/bits/basic_string.h **** 	if (__n == npos)
2118:/usr/include/c++/14/bits/basic_string.h **** 	  this->_M_set_length(__pos);
2119:/usr/include/c++/14/bits/basic_string.h **** 	else if (__n != 0)
2120:/usr/include/c++/14/bits/basic_string.h **** 	  this->_M_erase(__pos, _M_limit(__pos, __n));
2121:/usr/include/c++/14/bits/basic_string.h **** 	return *this;
2122:/usr/include/c++/14/bits/basic_string.h ****       }
2123:/usr/include/c++/14/bits/basic_string.h **** 
2124:/usr/include/c++/14/bits/basic_string.h ****       /**
2125:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Remove one character.
2126:/usr/include/c++/14/bits/basic_string.h ****        *  @param __position  Iterator referencing the character to remove.
2127:/usr/include/c++/14/bits/basic_string.h ****        *  @return  iterator referencing same location after removal.
2128:/usr/include/c++/14/bits/basic_string.h ****        *
2129:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the character at @a __position from this string. The value
2130:/usr/include/c++/14/bits/basic_string.h ****        *  of the string doesn't change if an error is thrown.
2131:/usr/include/c++/14/bits/basic_string.h ****       */
2132:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2133:/usr/include/c++/14/bits/basic_string.h ****       iterator
2134:/usr/include/c++/14/bits/basic_string.h ****       erase(__const_iterator __position)
2135:/usr/include/c++/14/bits/basic_string.h ****       {
2136:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__position >= begin()
2137:/usr/include/c++/14/bits/basic_string.h **** 				 && __position < end());
2138:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __pos = __position - begin();
2139:/usr/include/c++/14/bits/basic_string.h **** 	this->_M_erase(__pos, size_type(1));
2140:/usr/include/c++/14/bits/basic_string.h **** 	return iterator(_M_data() + __pos);
2141:/usr/include/c++/14/bits/basic_string.h ****       }
2142:/usr/include/c++/14/bits/basic_string.h **** 
2143:/usr/include/c++/14/bits/basic_string.h ****       /**
2144:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Remove a range of characters.
2145:/usr/include/c++/14/bits/basic_string.h ****        *  @param __first  Iterator referencing the first character to remove.
2146:/usr/include/c++/14/bits/basic_string.h ****        *  @param __last  Iterator referencing the end of the range.
2147:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Iterator referencing location of first after removal.
2148:/usr/include/c++/14/bits/basic_string.h ****        *
2149:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [first,last) from this string.
2150:/usr/include/c++/14/bits/basic_string.h ****        *  The value of the string doesn't change if an error is thrown.
2151:/usr/include/c++/14/bits/basic_string.h ****       */
2152:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
GAS LISTING linobj/Ch02_03.s 			page 92


2153:/usr/include/c++/14/bits/basic_string.h ****       iterator
2154:/usr/include/c++/14/bits/basic_string.h ****       erase(__const_iterator __first, __const_iterator __last)
2155:/usr/include/c++/14/bits/basic_string.h ****       {
2156:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(__first >= begin() && __first <= __last
2157:/usr/include/c++/14/bits/basic_string.h **** 				 && __last <= end());
2158:/usr/include/c++/14/bits/basic_string.h ****         const size_type __pos = __first - begin();
2159:/usr/include/c++/14/bits/basic_string.h **** 	if (__last == end())
2160:/usr/include/c++/14/bits/basic_string.h **** 	  this->_M_set_length(__pos);
2161:/usr/include/c++/14/bits/basic_string.h **** 	else
2162:/usr/include/c++/14/bits/basic_string.h **** 	  this->_M_erase(__pos, __last - __first);
2163:/usr/include/c++/14/bits/basic_string.h **** 	return iterator(this->_M_data() + __pos);
2164:/usr/include/c++/14/bits/basic_string.h ****       }
2165:/usr/include/c++/14/bits/basic_string.h **** 
2166:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
2167:/usr/include/c++/14/bits/basic_string.h ****       /**
2168:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Remove the last character.
2169:/usr/include/c++/14/bits/basic_string.h ****        *
2170:/usr/include/c++/14/bits/basic_string.h ****        *  The string must be non-empty.
2171:/usr/include/c++/14/bits/basic_string.h ****        */
2172:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2173:/usr/include/c++/14/bits/basic_string.h ****       void
2174:/usr/include/c++/14/bits/basic_string.h ****       pop_back() noexcept
2175:/usr/include/c++/14/bits/basic_string.h ****       {
2176:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_assert(!empty());
2177:/usr/include/c++/14/bits/basic_string.h **** 	_M_erase(size() - 1, 1);
2178:/usr/include/c++/14/bits/basic_string.h ****       }
2179:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
2180:/usr/include/c++/14/bits/basic_string.h **** 
2181:/usr/include/c++/14/bits/basic_string.h ****       /**
2182:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
2183:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
2184:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to be replaced.
2185:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String to insert.
2186:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2187:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos is beyond the end of this
2188:/usr/include/c++/14/bits/basic_string.h ****        *  string.
2189:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2190:/usr/include/c++/14/bits/basic_string.h ****        *
2191:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos+__n) from
2192:/usr/include/c++/14/bits/basic_string.h ****        *  this string.  In place, the value of @a __str is inserted.
2193:/usr/include/c++/14/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
2194:/usr/include/c++/14/bits/basic_string.h ****        *  If the length of the result exceeds max_size(), length_error
2195:/usr/include/c++/14/bits/basic_string.h ****        *  is thrown.  The value of the string doesn't change if an
2196:/usr/include/c++/14/bits/basic_string.h ****        *  error is thrown.
2197:/usr/include/c++/14/bits/basic_string.h ****       */
2198:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2199:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2200:/usr/include/c++/14/bits/basic_string.h ****       replace(size_type __pos, size_type __n, const basic_string& __str)
2201:/usr/include/c++/14/bits/basic_string.h ****       { return this->replace(__pos, __n, __str._M_data(), __str.size()); }
2202:/usr/include/c++/14/bits/basic_string.h **** 
2203:/usr/include/c++/14/bits/basic_string.h ****       /**
2204:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace characters with value from another string.
2205:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos1  Index of first character to replace.
2206:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
2207:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String to insert.
2208:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos2  Index of first character of str to use.
2209:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n2  Number of characters from str to use.
GAS LISTING linobj/Ch02_03.s 			page 93


2210:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2211:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos1 > size() or @a __pos2 >
2212:/usr/include/c++/14/bits/basic_string.h ****        *  __str.size().
2213:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2214:/usr/include/c++/14/bits/basic_string.h ****        *
2215:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__pos1,__pos1 + n) from this
2216:/usr/include/c++/14/bits/basic_string.h ****        *  string.  In place, the value of @a __str is inserted.  If @a __pos is
2217:/usr/include/c++/14/bits/basic_string.h ****        *  beyond end of string, out_of_range is thrown.  If the length of the
2218:/usr/include/c++/14/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The value of the
2219:/usr/include/c++/14/bits/basic_string.h ****        *  string doesn't change if an error is thrown.
2220:/usr/include/c++/14/bits/basic_string.h ****       */
2221:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2222:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2223:/usr/include/c++/14/bits/basic_string.h ****       replace(size_type __pos1, size_type __n1, const basic_string& __str,
2224:/usr/include/c++/14/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos)
2225:/usr/include/c++/14/bits/basic_string.h ****       { return this->replace(__pos1, __n1, __str._M_data()
2226:/usr/include/c++/14/bits/basic_string.h **** 			     + __str._M_check(__pos2, "basic_string::replace"),
2227:/usr/include/c++/14/bits/basic_string.h **** 			     __str._M_limit(__pos2, __n2)); }
2228:/usr/include/c++/14/bits/basic_string.h **** 
2229:/usr/include/c++/14/bits/basic_string.h ****       /**
2230:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace characters with value of a C substring.
2231:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
2232:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
2233:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to insert.
2234:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n2  Number of characters from @a s to use.
2235:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2236:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos1 > size().
2237:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2238:/usr/include/c++/14/bits/basic_string.h ****        *
2239:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
2240:/usr/include/c++/14/bits/basic_string.h ****        *  from this string.  In place, the first @a __n2 characters of
2241:/usr/include/c++/14/bits/basic_string.h ****        *  @a __s are inserted, or all of @a __s if @a __n2 is too large.  If
2242:/usr/include/c++/14/bits/basic_string.h ****        *  @a __pos is beyond end of string, out_of_range is thrown.  If
2243:/usr/include/c++/14/bits/basic_string.h ****        *  the length of result exceeds max_size(), length_error is
2244:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
2245:/usr/include/c++/14/bits/basic_string.h ****        *  is thrown.
2246:/usr/include/c++/14/bits/basic_string.h ****       */
2247:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2248:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2249:/usr/include/c++/14/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s,
2250:/usr/include/c++/14/bits/basic_string.h **** 	      size_type __n2)
2251:/usr/include/c++/14/bits/basic_string.h ****       {
2252:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
2253:/usr/include/c++/14/bits/basic_string.h **** 	return _M_replace(_M_check(__pos, "basic_string::replace"),
2254:/usr/include/c++/14/bits/basic_string.h **** 			  _M_limit(__pos, __n1), __s, __n2);
2255:/usr/include/c++/14/bits/basic_string.h ****       }
2256:/usr/include/c++/14/bits/basic_string.h **** 
2257:/usr/include/c++/14/bits/basic_string.h ****       /**
2258:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace characters with value of a C string.
2259:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
2260:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
2261:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to insert.
2262:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2263:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a pos > size().
2264:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2265:/usr/include/c++/14/bits/basic_string.h ****        *
2266:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__pos,__pos + __n1)
GAS LISTING linobj/Ch02_03.s 			page 94


2267:/usr/include/c++/14/bits/basic_string.h ****        *  from this string.  In place, the characters of @a __s are
2268:/usr/include/c++/14/bits/basic_string.h ****        *  inserted.  If @a __pos is beyond end of string, out_of_range
2269:/usr/include/c++/14/bits/basic_string.h ****        *  is thrown.  If the length of result exceeds max_size(),
2270:/usr/include/c++/14/bits/basic_string.h ****        *  length_error is thrown.  The value of the string doesn't
2271:/usr/include/c++/14/bits/basic_string.h ****        *  change if an error is thrown.
2272:/usr/include/c++/14/bits/basic_string.h ****       */
2273:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2274:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2275:/usr/include/c++/14/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, const _CharT* __s)
2276:/usr/include/c++/14/bits/basic_string.h ****       {
2277:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2278:/usr/include/c++/14/bits/basic_string.h **** 	return this->replace(__pos, __n1, __s, traits_type::length(__s));
2279:/usr/include/c++/14/bits/basic_string.h ****       }
2280:/usr/include/c++/14/bits/basic_string.h **** 
2281:/usr/include/c++/14/bits/basic_string.h ****       /**
2282:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace characters with multiple characters.
2283:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character to replace.
2284:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1  Number of characters to be replaced.
2285:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n2  Number of characters to insert.
2286:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to insert.
2287:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2288:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If @a __pos > size().
2289:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2290:/usr/include/c++/14/bits/basic_string.h ****        *
2291:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [pos,pos + n1) from this
2292:/usr/include/c++/14/bits/basic_string.h ****        *  string.  In place, @a __n2 copies of @a __c are inserted.
2293:/usr/include/c++/14/bits/basic_string.h ****        *  If @a __pos is beyond end of string, out_of_range is thrown.
2294:/usr/include/c++/14/bits/basic_string.h ****        *  If the length of result exceeds max_size(), length_error is
2295:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.  The value of the string doesn't change if an error
2296:/usr/include/c++/14/bits/basic_string.h ****        *  is thrown.
2297:/usr/include/c++/14/bits/basic_string.h ****       */
2298:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2299:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2300:/usr/include/c++/14/bits/basic_string.h ****       replace(size_type __pos, size_type __n1, size_type __n2, _CharT __c)
2301:/usr/include/c++/14/bits/basic_string.h ****       { return _M_replace_aux(_M_check(__pos, "basic_string::replace"),
2302:/usr/include/c++/14/bits/basic_string.h **** 			      _M_limit(__pos, __n1), __n2, __c); }
2303:/usr/include/c++/14/bits/basic_string.h **** 
2304:/usr/include/c++/14/bits/basic_string.h ****       /**
2305:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with string.
2306:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2307:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2308:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String value to insert.
2309:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2310:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2311:/usr/include/c++/14/bits/basic_string.h ****        *
2312:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2313:/usr/include/c++/14/bits/basic_string.h ****        *  the value of @a __str is inserted.  If the length of result
2314:/usr/include/c++/14/bits/basic_string.h ****        *  exceeds max_size(), length_error is thrown.  The value of
2315:/usr/include/c++/14/bits/basic_string.h ****        *  the string doesn't change if an error is thrown.
2316:/usr/include/c++/14/bits/basic_string.h ****       */
2317:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2318:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2319:/usr/include/c++/14/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2320:/usr/include/c++/14/bits/basic_string.h **** 	      const basic_string& __str)
2321:/usr/include/c++/14/bits/basic_string.h ****       { return this->replace(__i1, __i2, __str._M_data(), __str.size()); }
2322:/usr/include/c++/14/bits/basic_string.h **** 
2323:/usr/include/c++/14/bits/basic_string.h ****       /**
GAS LISTING linobj/Ch02_03.s 			page 95


2324:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with C substring.
2325:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2326:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2327:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string value to insert.
2328:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters from s to insert.
2329:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2330:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2331:/usr/include/c++/14/bits/basic_string.h ****        *
2332:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2333:/usr/include/c++/14/bits/basic_string.h ****        *  the first @a __n characters of @a __s are inserted.  If the
2334:/usr/include/c++/14/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2335:/usr/include/c++/14/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2336:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.
2337:/usr/include/c++/14/bits/basic_string.h ****       */
2338:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2339:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2340:/usr/include/c++/14/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2341:/usr/include/c++/14/bits/basic_string.h **** 	      const _CharT* __s, size_type __n)
2342:/usr/include/c++/14/bits/basic_string.h ****       {
2343:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2344:/usr/include/c++/14/bits/basic_string.h **** 				 && __i2 <= end());
2345:/usr/include/c++/14/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1, __s, __n);
2346:/usr/include/c++/14/bits/basic_string.h ****       }
2347:/usr/include/c++/14/bits/basic_string.h **** 
2348:/usr/include/c++/14/bits/basic_string.h ****       /**
2349:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with C string.
2350:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2351:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2352:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string value to insert.
2353:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2354:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2355:/usr/include/c++/14/bits/basic_string.h ****        *
2356:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2357:/usr/include/c++/14/bits/basic_string.h ****        *  the characters of @a __s are inserted.  If the length of
2358:/usr/include/c++/14/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
2359:/usr/include/c++/14/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2360:/usr/include/c++/14/bits/basic_string.h ****       */
2361:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2362:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2363:/usr/include/c++/14/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, const _CharT* __s)
2364:/usr/include/c++/14/bits/basic_string.h ****       {
2365:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2366:/usr/include/c++/14/bits/basic_string.h **** 	return this->replace(__i1, __i2, __s, traits_type::length(__s));
2367:/usr/include/c++/14/bits/basic_string.h ****       }
2368:/usr/include/c++/14/bits/basic_string.h **** 
2369:/usr/include/c++/14/bits/basic_string.h ****       /**
2370:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with multiple characters
2371:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2372:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2373:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to insert.
2374:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to insert.
2375:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2376:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2377:/usr/include/c++/14/bits/basic_string.h ****        *
2378:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2379:/usr/include/c++/14/bits/basic_string.h ****        *  @a __n copies of @a __c are inserted.  If the length of
2380:/usr/include/c++/14/bits/basic_string.h ****        *  result exceeds max_size(), length_error is thrown.  The
GAS LISTING linobj/Ch02_03.s 			page 96


2381:/usr/include/c++/14/bits/basic_string.h ****        *  value of the string doesn't change if an error is thrown.
2382:/usr/include/c++/14/bits/basic_string.h ****       */
2383:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2384:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2385:/usr/include/c++/14/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2, size_type __n,
2386:/usr/include/c++/14/bits/basic_string.h **** 	      _CharT __c)
2387:/usr/include/c++/14/bits/basic_string.h ****       {
2388:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2389:/usr/include/c++/14/bits/basic_string.h **** 				 && __i2 <= end());
2390:/usr/include/c++/14/bits/basic_string.h **** 	return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __c);
2391:/usr/include/c++/14/bits/basic_string.h ****       }
2392:/usr/include/c++/14/bits/basic_string.h **** 
2393:/usr/include/c++/14/bits/basic_string.h ****       /**
2394:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with range.
2395:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2396:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
2397:/usr/include/c++/14/bits/basic_string.h ****        *  @param __k1  Iterator referencing start of range to insert.
2398:/usr/include/c++/14/bits/basic_string.h ****        *  @param __k2  Iterator referencing end of range to insert.
2399:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2400:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2401:/usr/include/c++/14/bits/basic_string.h ****        *
2402:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2403:/usr/include/c++/14/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2404:/usr/include/c++/14/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2405:/usr/include/c++/14/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2406:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.
2407:/usr/include/c++/14/bits/basic_string.h ****       */
2408:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
2409:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator,
2410:/usr/include/c++/14/bits/basic_string.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
2411:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
2412:/usr/include/c++/14/bits/basic_string.h ****         basic_string&
2413:/usr/include/c++/14/bits/basic_string.h ****         replace(const_iterator __i1, const_iterator __i2,
2414:/usr/include/c++/14/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2415:/usr/include/c++/14/bits/basic_string.h ****         {
2416:/usr/include/c++/14/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2417:/usr/include/c++/14/bits/basic_string.h **** 				   && __i2 <= end());
2418:/usr/include/c++/14/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2419:/usr/include/c++/14/bits/basic_string.h **** 	  return this->_M_replace_dispatch(__i1, __i2, __k1, __k2,
2420:/usr/include/c++/14/bits/basic_string.h **** 					   std::__false_type());
2421:/usr/include/c++/14/bits/basic_string.h **** 	}
2422:/usr/include/c++/14/bits/basic_string.h **** #else
2423:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator>
2424:/usr/include/c++/14/bits/basic_string.h **** #ifdef _GLIBCXX_DISAMBIGUATE_REPLACE_INST
2425:/usr/include/c++/14/bits/basic_string.h ****         typename __enable_if_not_native_iterator<_InputIterator>::__type
2426:/usr/include/c++/14/bits/basic_string.h **** #else
2427:/usr/include/c++/14/bits/basic_string.h ****         basic_string&
2428:/usr/include/c++/14/bits/basic_string.h **** #endif
2429:/usr/include/c++/14/bits/basic_string.h ****         replace(iterator __i1, iterator __i2,
2430:/usr/include/c++/14/bits/basic_string.h **** 		_InputIterator __k1, _InputIterator __k2)
2431:/usr/include/c++/14/bits/basic_string.h ****         {
2432:/usr/include/c++/14/bits/basic_string.h **** 	  _GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2433:/usr/include/c++/14/bits/basic_string.h **** 				   && __i2 <= end());
2434:/usr/include/c++/14/bits/basic_string.h **** 	  __glibcxx_requires_valid_range(__k1, __k2);
2435:/usr/include/c++/14/bits/basic_string.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
2436:/usr/include/c++/14/bits/basic_string.h **** 	  return _M_replace_dispatch(__i1, __i2, __k1, __k2, _Integral());
2437:/usr/include/c++/14/bits/basic_string.h **** 	}
GAS LISTING linobj/Ch02_03.s 			page 97


2438:/usr/include/c++/14/bits/basic_string.h **** #endif
2439:/usr/include/c++/14/bits/basic_string.h **** 
2440:/usr/include/c++/14/bits/basic_string.h ****       // Specializations for the common case of pointer and iterator:
2441:/usr/include/c++/14/bits/basic_string.h ****       // useful to avoid the overhead of temporary buffering in _M_replace.
2442:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2443:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2444:/usr/include/c++/14/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2445:/usr/include/c++/14/bits/basic_string.h **** 	      _CharT* __k1, _CharT* __k2)
2446:/usr/include/c++/14/bits/basic_string.h ****       {
2447:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2448:/usr/include/c++/14/bits/basic_string.h **** 				 && __i2 <= end());
2449:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2450:/usr/include/c++/14/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2451:/usr/include/c++/14/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2452:/usr/include/c++/14/bits/basic_string.h ****       }
2453:/usr/include/c++/14/bits/basic_string.h **** 
2454:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2455:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2456:/usr/include/c++/14/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2457:/usr/include/c++/14/bits/basic_string.h **** 	      const _CharT* __k1, const _CharT* __k2)
2458:/usr/include/c++/14/bits/basic_string.h ****       {
2459:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2460:/usr/include/c++/14/bits/basic_string.h **** 				 && __i2 <= end());
2461:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2462:/usr/include/c++/14/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2463:/usr/include/c++/14/bits/basic_string.h **** 			     __k1, __k2 - __k1);
2464:/usr/include/c++/14/bits/basic_string.h ****       }
2465:/usr/include/c++/14/bits/basic_string.h **** 
2466:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2467:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2468:/usr/include/c++/14/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2469:/usr/include/c++/14/bits/basic_string.h **** 	      iterator __k1, iterator __k2)
2470:/usr/include/c++/14/bits/basic_string.h ****       {
2471:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2472:/usr/include/c++/14/bits/basic_string.h **** 				 && __i2 <= end());
2473:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2474:/usr/include/c++/14/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2475:/usr/include/c++/14/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2476:/usr/include/c++/14/bits/basic_string.h ****       }
2477:/usr/include/c++/14/bits/basic_string.h **** 
2478:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2479:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2480:/usr/include/c++/14/bits/basic_string.h ****       replace(__const_iterator __i1, __const_iterator __i2,
2481:/usr/include/c++/14/bits/basic_string.h **** 	      const_iterator __k1, const_iterator __k2)
2482:/usr/include/c++/14/bits/basic_string.h ****       {
2483:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_DEBUG_PEDASSERT(begin() <= __i1 && __i1 <= __i2
2484:/usr/include/c++/14/bits/basic_string.h **** 				 && __i2 <= end());
2485:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_valid_range(__k1, __k2);
2486:/usr/include/c++/14/bits/basic_string.h **** 	return this->replace(__i1 - begin(), __i2 - __i1,
2487:/usr/include/c++/14/bits/basic_string.h **** 			     __k1.base(), __k2 - __k1);
2488:/usr/include/c++/14/bits/basic_string.h ****       }
2489:/usr/include/c++/14/bits/basic_string.h **** 
2490:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
2491:/usr/include/c++/14/bits/basic_string.h ****       /**
2492:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with initializer_list.
2493:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i1  Iterator referencing start of range to replace.
2494:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i2  Iterator referencing end of range to replace.
GAS LISTING linobj/Ch02_03.s 			page 98


2495:/usr/include/c++/14/bits/basic_string.h ****        *  @param __l  The initializer_list of characters to insert.
2496:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2497:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::length_error  If new length exceeds @c max_size().
2498:/usr/include/c++/14/bits/basic_string.h ****        *
2499:/usr/include/c++/14/bits/basic_string.h ****        *  Removes the characters in the range [__i1,__i2).  In place,
2500:/usr/include/c++/14/bits/basic_string.h ****        *  characters in the range [__k1,__k2) are inserted.  If the
2501:/usr/include/c++/14/bits/basic_string.h ****        *  length of result exceeds max_size(), length_error is thrown.
2502:/usr/include/c++/14/bits/basic_string.h ****        *  The value of the string doesn't change if an error is
2503:/usr/include/c++/14/bits/basic_string.h ****        *  thrown.
2504:/usr/include/c++/14/bits/basic_string.h ****       */
2505:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2506:/usr/include/c++/14/bits/basic_string.h ****       basic_string& replace(const_iterator __i1, const_iterator __i2,
2507:/usr/include/c++/14/bits/basic_string.h **** 			    initializer_list<_CharT> __l)
2508:/usr/include/c++/14/bits/basic_string.h ****       { return this->replace(__i1, __i2, __l.begin(), __l.size()); }
2509:/usr/include/c++/14/bits/basic_string.h **** #endif // C++11
2510:/usr/include/c++/14/bits/basic_string.h **** 
2511:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
2512:/usr/include/c++/14/bits/basic_string.h ****       /**
2513:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2514:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  The position to replace at.
2515:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n    The number of characters to replace.
2516:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to insert.
2517:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2518:/usr/include/c++/14/bits/basic_string.h ****       */
2519:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2520:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
2521:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2522:/usr/include/c++/14/bits/basic_string.h **** 	replace(size_type __pos, size_type __n, const _Tp& __svt)
2523:/usr/include/c++/14/bits/basic_string.h **** 	{
2524:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2525:/usr/include/c++/14/bits/basic_string.h **** 	  return this->replace(__pos, __n, __sv.data(), __sv.size());
2526:/usr/include/c++/14/bits/basic_string.h **** 	}
2527:/usr/include/c++/14/bits/basic_string.h **** 
2528:/usr/include/c++/14/bits/basic_string.h ****       /**
2529:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
2530:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos1  The position to replace at.
2531:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1    The number of characters to replace.
2532:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2533:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos2  The position in the string_view to insert from.
2534:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n2    The number of characters to insert.
2535:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2536:/usr/include/c++/14/bits/basic_string.h ****       */
2537:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2538:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
2539:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2540:/usr/include/c++/14/bits/basic_string.h **** 	replace(size_type __pos1, size_type __n1, const _Tp& __svt,
2541:/usr/include/c++/14/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos)
2542:/usr/include/c++/14/bits/basic_string.h **** 	{
2543:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2544:/usr/include/c++/14/bits/basic_string.h **** 	  return this->replace(__pos1, __n1,
2545:/usr/include/c++/14/bits/basic_string.h **** 	      __sv.data()
2546:/usr/include/c++/14/bits/basic_string.h **** 	      + std::__sv_check(__sv.size(), __pos2, "basic_string::replace"),
2547:/usr/include/c++/14/bits/basic_string.h **** 	      std::__sv_limit(__sv.size(), __pos2, __n2));
2548:/usr/include/c++/14/bits/basic_string.h **** 	}
2549:/usr/include/c++/14/bits/basic_string.h **** 
2550:/usr/include/c++/14/bits/basic_string.h ****       /**
2551:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Replace range of characters with string_view.
GAS LISTING linobj/Ch02_03.s 			page 99


2552:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i1    An iterator referencing the start position
2553:/usr/include/c++/14/bits/basic_string.h ****           to replace at.
2554:/usr/include/c++/14/bits/basic_string.h ****        *  @param __i2    An iterator referencing the end position
2555:/usr/include/c++/14/bits/basic_string.h ****           for the replace.
2556:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt   The object convertible to string_view to insert from.
2557:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Reference to this string.
2558:/usr/include/c++/14/bits/basic_string.h ****       */
2559:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2560:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
2561:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, basic_string&>
2562:/usr/include/c++/14/bits/basic_string.h **** 	replace(const_iterator __i1, const_iterator __i2, const _Tp& __svt)
2563:/usr/include/c++/14/bits/basic_string.h **** 	{
2564:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2565:/usr/include/c++/14/bits/basic_string.h **** 	  return this->replace(__i1 - begin(), __i2 - __i1, __sv);
2566:/usr/include/c++/14/bits/basic_string.h **** 	}
2567:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
2568:/usr/include/c++/14/bits/basic_string.h **** 
2569:/usr/include/c++/14/bits/basic_string.h ****     private:
2570:/usr/include/c++/14/bits/basic_string.h ****       template<class _Integer>
2571:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
2572:/usr/include/c++/14/bits/basic_string.h **** 	basic_string&
2573:/usr/include/c++/14/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2574:/usr/include/c++/14/bits/basic_string.h **** 			    _Integer __n, _Integer __val, __true_type)
2575:/usr/include/c++/14/bits/basic_string.h ****         { return _M_replace_aux(__i1 - begin(), __i2 - __i1, __n, __val); }
2576:/usr/include/c++/14/bits/basic_string.h **** 
2577:/usr/include/c++/14/bits/basic_string.h ****       template<class _InputIterator>
2578:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX20_CONSTEXPR
2579:/usr/include/c++/14/bits/basic_string.h **** 	basic_string&
2580:/usr/include/c++/14/bits/basic_string.h **** 	_M_replace_dispatch(const_iterator __i1, const_iterator __i2,
2581:/usr/include/c++/14/bits/basic_string.h **** 			    _InputIterator __k1, _InputIterator __k2,
2582:/usr/include/c++/14/bits/basic_string.h **** 			    __false_type);
2583:/usr/include/c++/14/bits/basic_string.h **** 
2584:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2585:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2586:/usr/include/c++/14/bits/basic_string.h ****       _M_replace_aux(size_type __pos1, size_type __n1, size_type __n2,
2587:/usr/include/c++/14/bits/basic_string.h **** 		     _CharT __c);
2588:/usr/include/c++/14/bits/basic_string.h **** 
2589:/usr/include/c++/14/bits/basic_string.h ****       __attribute__((__noinline__, __noclone__, __cold__)) void
2590:/usr/include/c++/14/bits/basic_string.h ****       _M_replace_cold(pointer __p, size_type __len1, const _CharT* __s,
2591:/usr/include/c++/14/bits/basic_string.h **** 		      const size_type __len2, const size_type __how_much);
2592:/usr/include/c++/14/bits/basic_string.h **** 
2593:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2594:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2595:/usr/include/c++/14/bits/basic_string.h ****       _M_replace(size_type __pos, size_type __len1, const _CharT* __s,
2596:/usr/include/c++/14/bits/basic_string.h **** 		 const size_type __len2);
2597:/usr/include/c++/14/bits/basic_string.h **** 
2598:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2599:/usr/include/c++/14/bits/basic_string.h ****       basic_string&
2600:/usr/include/c++/14/bits/basic_string.h ****       _M_append(const _CharT* __s, size_type __n);
2601:/usr/include/c++/14/bits/basic_string.h **** 
2602:/usr/include/c++/14/bits/basic_string.h ****     public:
2603:/usr/include/c++/14/bits/basic_string.h **** 
2604:/usr/include/c++/14/bits/basic_string.h ****       /**
2605:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Copy substring into C string.
2606:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to copy value into.
2607:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters to copy.
2608:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character to copy.
GAS LISTING linobj/Ch02_03.s 			page 100


2609:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Number of characters actually copied
2610:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
2611:/usr/include/c++/14/bits/basic_string.h ****        *
2612:/usr/include/c++/14/bits/basic_string.h ****        *  Copies up to @a __n characters starting at @a __pos into the
2613:/usr/include/c++/14/bits/basic_string.h ****        *  C string @a __s.  If @a __pos is %greater than size(),
2614:/usr/include/c++/14/bits/basic_string.h ****        *  out_of_range is thrown.
2615:/usr/include/c++/14/bits/basic_string.h ****       */
2616:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2617:/usr/include/c++/14/bits/basic_string.h ****       size_type
2618:/usr/include/c++/14/bits/basic_string.h ****       copy(_CharT* __s, size_type __n, size_type __pos = 0) const;
2619:/usr/include/c++/14/bits/basic_string.h **** 
2620:/usr/include/c++/14/bits/basic_string.h ****       /**
2621:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Swap contents with another string.
2622:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  String to swap with.
2623:/usr/include/c++/14/bits/basic_string.h ****        *
2624:/usr/include/c++/14/bits/basic_string.h ****        *  Exchanges the contents of this string with that of @a __s in constant
2625:/usr/include/c++/14/bits/basic_string.h ****        *  time.
2626:/usr/include/c++/14/bits/basic_string.h ****       */
2627:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX20_CONSTEXPR
2628:/usr/include/c++/14/bits/basic_string.h ****       void
2629:/usr/include/c++/14/bits/basic_string.h ****       swap(basic_string& __s) _GLIBCXX_NOEXCEPT;
2630:/usr/include/c++/14/bits/basic_string.h **** 
2631:/usr/include/c++/14/bits/basic_string.h ****       // String operations:
2632:/usr/include/c++/14/bits/basic_string.h ****       /**
2633:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Return const pointer to null-terminated contents.
2634:/usr/include/c++/14/bits/basic_string.h ****        *
2635:/usr/include/c++/14/bits/basic_string.h ****        *  This is a handle to internal data.  Do not modify or dire things may
2636:/usr/include/c++/14/bits/basic_string.h ****        *  happen.
2637:/usr/include/c++/14/bits/basic_string.h ****       */
2638:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2639:/usr/include/c++/14/bits/basic_string.h ****       const _CharT*
2640:/usr/include/c++/14/bits/basic_string.h ****       c_str() const _GLIBCXX_NOEXCEPT
2641:/usr/include/c++/14/bits/basic_string.h ****       { return _M_data(); }
2642:/usr/include/c++/14/bits/basic_string.h **** 
2643:/usr/include/c++/14/bits/basic_string.h ****       /**
2644:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Return const pointer to contents.
2645:/usr/include/c++/14/bits/basic_string.h ****        *
2646:/usr/include/c++/14/bits/basic_string.h ****        *  This is a pointer to internal data.  It is undefined to modify
2647:/usr/include/c++/14/bits/basic_string.h ****        *  the contents through the returned pointer. To get a pointer that
2648:/usr/include/c++/14/bits/basic_string.h ****        *  allows modifying the contents use @c &str[0] instead,
2649:/usr/include/c++/14/bits/basic_string.h ****        *  (or in C++17 the non-const @c str.data() overload).
2650:/usr/include/c++/14/bits/basic_string.h ****       */
2651:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2652:/usr/include/c++/14/bits/basic_string.h ****       const _CharT*
2653:/usr/include/c++/14/bits/basic_string.h ****       data() const _GLIBCXX_NOEXCEPT
2654:/usr/include/c++/14/bits/basic_string.h ****       { return _M_data(); }
2655:/usr/include/c++/14/bits/basic_string.h **** 
2656:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
2657:/usr/include/c++/14/bits/basic_string.h ****       /**
2658:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Return non-const pointer to contents.
2659:/usr/include/c++/14/bits/basic_string.h ****        *
2660:/usr/include/c++/14/bits/basic_string.h ****        *  This is a pointer to the character sequence held by the string.
2661:/usr/include/c++/14/bits/basic_string.h ****        *  Modifying the characters in the sequence is allowed.
2662:/usr/include/c++/14/bits/basic_string.h ****       */
2663:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2664:/usr/include/c++/14/bits/basic_string.h ****       _CharT*
2665:/usr/include/c++/14/bits/basic_string.h ****       data() noexcept
GAS LISTING linobj/Ch02_03.s 			page 101


2666:/usr/include/c++/14/bits/basic_string.h ****       { return _M_data(); }
2667:/usr/include/c++/14/bits/basic_string.h **** #endif
2668:/usr/include/c++/14/bits/basic_string.h **** 
2669:/usr/include/c++/14/bits/basic_string.h ****       /**
2670:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Return copy of allocator used to construct this string.
2671:/usr/include/c++/14/bits/basic_string.h ****       */
2672:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2673:/usr/include/c++/14/bits/basic_string.h ****       allocator_type
2674:/usr/include/c++/14/bits/basic_string.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
2675:/usr/include/c++/14/bits/basic_string.h ****       { return _M_get_allocator(); }
2676:/usr/include/c++/14/bits/basic_string.h **** 
2677:/usr/include/c++/14/bits/basic_string.h ****       /**
2678:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a C substring.
2679:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to locate.
2680:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2681:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters from @a s to search for.
2682:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2683:/usr/include/c++/14/bits/basic_string.h ****        *
2684:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the first @a
2685:/usr/include/c++/14/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2686:/usr/include/c++/14/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2687:/usr/include/c++/14/bits/basic_string.h ****        *  npos.
2688:/usr/include/c++/14/bits/basic_string.h ****       */
2689:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2690:/usr/include/c++/14/bits/basic_string.h ****       size_type
2691:/usr/include/c++/14/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos, size_type __n) const
2692:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2693:/usr/include/c++/14/bits/basic_string.h **** 
2694:/usr/include/c++/14/bits/basic_string.h ****       /**
2695:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a string.
2696:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String to locate.
2697:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2698:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2699:/usr/include/c++/14/bits/basic_string.h ****        *
2700:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for value of @a __str within
2701:/usr/include/c++/14/bits/basic_string.h ****        *  this string.  If found, returns the index where it begins.  If not
2702:/usr/include/c++/14/bits/basic_string.h ****        *  found, returns npos.
2703:/usr/include/c++/14/bits/basic_string.h ****       */
2704:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2705:/usr/include/c++/14/bits/basic_string.h ****       size_type
2706:/usr/include/c++/14/bits/basic_string.h ****       find(const basic_string& __str, size_type __pos = 0) const
2707:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2708:/usr/include/c++/14/bits/basic_string.h ****       { return this->find(__str.data(), __pos, __str.size()); }
2709:/usr/include/c++/14/bits/basic_string.h **** 
2710:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
2711:/usr/include/c++/14/bits/basic_string.h ****       /**
2712:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a string_view.
2713:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
2714:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2715:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2716:/usr/include/c++/14/bits/basic_string.h ****       */
2717:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2718:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2719:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2720:/usr/include/c++/14/bits/basic_string.h **** 	find(const _Tp& __svt, size_type __pos = 0) const
2721:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2722:/usr/include/c++/14/bits/basic_string.h **** 	{
GAS LISTING linobj/Ch02_03.s 			page 102


2723:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2724:/usr/include/c++/14/bits/basic_string.h **** 	  return this->find(__sv.data(), __pos, __sv.size());
2725:/usr/include/c++/14/bits/basic_string.h **** 	}
2726:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
2727:/usr/include/c++/14/bits/basic_string.h **** 
2728:/usr/include/c++/14/bits/basic_string.h ****       /**
2729:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a C string.
2730:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to locate.
2731:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2732:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of start of first occurrence.
2733:/usr/include/c++/14/bits/basic_string.h ****        *
2734:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the value of @a
2735:/usr/include/c++/14/bits/basic_string.h ****        *  __s within this string.  If found, returns the index where
2736:/usr/include/c++/14/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2737:/usr/include/c++/14/bits/basic_string.h ****       */
2738:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2739:/usr/include/c++/14/bits/basic_string.h ****       size_type
2740:/usr/include/c++/14/bits/basic_string.h ****       find(const _CharT* __s, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2741:/usr/include/c++/14/bits/basic_string.h ****       {
2742:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2743:/usr/include/c++/14/bits/basic_string.h **** 	return this->find(__s, __pos, traits_type::length(__s));
2744:/usr/include/c++/14/bits/basic_string.h ****       }
2745:/usr/include/c++/14/bits/basic_string.h **** 
2746:/usr/include/c++/14/bits/basic_string.h ****       /**
2747:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character.
2748:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to locate.
2749:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2750:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
2751:/usr/include/c++/14/bits/basic_string.h ****        *
2752:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for @a __c within
2753:/usr/include/c++/14/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
2754:/usr/include/c++/14/bits/basic_string.h ****        *  found.  If not found, returns npos.
2755:/usr/include/c++/14/bits/basic_string.h ****       */
2756:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2757:/usr/include/c++/14/bits/basic_string.h ****       size_type
2758:/usr/include/c++/14/bits/basic_string.h ****       find(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT;
2759:/usr/include/c++/14/bits/basic_string.h **** 
2760:/usr/include/c++/14/bits/basic_string.h ****       /**
2761:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a string.
2762:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String to locate.
2763:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2764:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2765:/usr/include/c++/14/bits/basic_string.h ****        *
2766:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for value of @a
2767:/usr/include/c++/14/bits/basic_string.h ****        *  __str within this string.  If found, returns the index where
2768:/usr/include/c++/14/bits/basic_string.h ****        *  it begins.  If not found, returns npos.
2769:/usr/include/c++/14/bits/basic_string.h ****       */
2770:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2771:/usr/include/c++/14/bits/basic_string.h ****       size_type
2772:/usr/include/c++/14/bits/basic_string.h ****       rfind(const basic_string& __str, size_type __pos = npos) const
2773:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2774:/usr/include/c++/14/bits/basic_string.h ****       { return this->rfind(__str.data(), __pos, __str.size()); }
2775:/usr/include/c++/14/bits/basic_string.h **** 
2776:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
2777:/usr/include/c++/14/bits/basic_string.h ****       /**
2778:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a string_view.
2779:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  The object convertible to string_view to locate.
GAS LISTING linobj/Ch02_03.s 			page 103


2780:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2781:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2782:/usr/include/c++/14/bits/basic_string.h ****       */
2783:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2784:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2785:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2786:/usr/include/c++/14/bits/basic_string.h **** 	rfind(const _Tp& __svt, size_type __pos = npos) const
2787:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2788:/usr/include/c++/14/bits/basic_string.h **** 	{
2789:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2790:/usr/include/c++/14/bits/basic_string.h **** 	  return this->rfind(__sv.data(), __pos, __sv.size());
2791:/usr/include/c++/14/bits/basic_string.h **** 	}
2792:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
2793:/usr/include/c++/14/bits/basic_string.h **** 
2794:/usr/include/c++/14/bits/basic_string.h ****       /**
2795:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a C substring.
2796:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to locate.
2797:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2798:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2799:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of start of last occurrence.
2800:/usr/include/c++/14/bits/basic_string.h ****        *
2801:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the first @a
2802:/usr/include/c++/14/bits/basic_string.h ****        *  __n characters in @a __s within this string.  If found,
2803:/usr/include/c++/14/bits/basic_string.h ****        *  returns the index where it begins.  If not found, returns
2804:/usr/include/c++/14/bits/basic_string.h ****        *  npos.
2805:/usr/include/c++/14/bits/basic_string.h ****       */
2806:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2807:/usr/include/c++/14/bits/basic_string.h ****       size_type
2808:/usr/include/c++/14/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos, size_type __n) const
2809:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2810:/usr/include/c++/14/bits/basic_string.h **** 
2811:/usr/include/c++/14/bits/basic_string.h ****       /**
2812:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a C string.
2813:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to locate.
2814:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to start search at (default end).
2815:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of start of  last occurrence.
2816:/usr/include/c++/14/bits/basic_string.h ****        *
2817:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for the value of
2818:/usr/include/c++/14/bits/basic_string.h ****        *  @a __s within this string.  If found, returns the index
2819:/usr/include/c++/14/bits/basic_string.h ****        *  where it begins.  If not found, returns npos.
2820:/usr/include/c++/14/bits/basic_string.h ****       */
2821:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2822:/usr/include/c++/14/bits/basic_string.h ****       size_type
2823:/usr/include/c++/14/bits/basic_string.h ****       rfind(const _CharT* __s, size_type __pos = npos) const
2824:/usr/include/c++/14/bits/basic_string.h ****       {
2825:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2826:/usr/include/c++/14/bits/basic_string.h **** 	return this->rfind(__s, __pos, traits_type::length(__s));
2827:/usr/include/c++/14/bits/basic_string.h ****       }
2828:/usr/include/c++/14/bits/basic_string.h **** 
2829:/usr/include/c++/14/bits/basic_string.h ****       /**
2830:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character.
2831:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to locate.
2832:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2833:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
2834:/usr/include/c++/14/bits/basic_string.h ****        *
2835:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
2836:/usr/include/c++/14/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
GAS LISTING linobj/Ch02_03.s 			page 104


2837:/usr/include/c++/14/bits/basic_string.h ****        *  found.  If not found, returns npos.
2838:/usr/include/c++/14/bits/basic_string.h ****       */
2839:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2840:/usr/include/c++/14/bits/basic_string.h ****       size_type
2841:/usr/include/c++/14/bits/basic_string.h ****       rfind(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT;
2842:/usr/include/c++/14/bits/basic_string.h **** 
2843:/usr/include/c++/14/bits/basic_string.h ****       /**
2844:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character of string.
2845:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2846:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2847:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
2848:/usr/include/c++/14/bits/basic_string.h ****        *
2849:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2850:/usr/include/c++/14/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2851:/usr/include/c++/14/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2852:/usr/include/c++/14/bits/basic_string.h ****        *  npos.
2853:/usr/include/c++/14/bits/basic_string.h ****       */
2854:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2855:/usr/include/c++/14/bits/basic_string.h ****       size_type
2856:/usr/include/c++/14/bits/basic_string.h ****       find_first_of(const basic_string& __str, size_type __pos = 0) const
2857:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2858:/usr/include/c++/14/bits/basic_string.h ****       { return this->find_first_of(__str.data(), __pos, __str.size()); }
2859:/usr/include/c++/14/bits/basic_string.h **** 
2860:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
2861:/usr/include/c++/14/bits/basic_string.h ****       /**
2862:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character of a string_view.
2863:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2864:/usr/include/c++/14/bits/basic_string.h ****        *                characters to locate.
2865:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2866:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
2867:/usr/include/c++/14/bits/basic_string.h ****       */
2868:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2869:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2870:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2871:/usr/include/c++/14/bits/basic_string.h **** 	find_first_of(const _Tp& __svt, size_type __pos = 0) const
2872:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2873:/usr/include/c++/14/bits/basic_string.h **** 	{
2874:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2875:/usr/include/c++/14/bits/basic_string.h **** 	  return this->find_first_of(__sv.data(), __pos, __sv.size());
2876:/usr/include/c++/14/bits/basic_string.h **** 	}
2877:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
2878:/usr/include/c++/14/bits/basic_string.h **** 
2879:/usr/include/c++/14/bits/basic_string.h ****       /**
2880:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character of C substring.
2881:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2882:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
2883:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2884:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
2885:/usr/include/c++/14/bits/basic_string.h ****        *
2886:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2887:/usr/include/c++/14/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2888:/usr/include/c++/14/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2889:/usr/include/c++/14/bits/basic_string.h ****        *  returns npos.
2890:/usr/include/c++/14/bits/basic_string.h ****       */
2891:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2892:/usr/include/c++/14/bits/basic_string.h ****       size_type
2893:/usr/include/c++/14/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos, size_type __n) const
GAS LISTING linobj/Ch02_03.s 			page 105


2894:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2895:/usr/include/c++/14/bits/basic_string.h **** 
2896:/usr/include/c++/14/bits/basic_string.h ****       /**
2897:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character of C string.
2898:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  String containing characters to locate.
2899:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2900:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
2901:/usr/include/c++/14/bits/basic_string.h ****        *
2902:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for one of the
2903:/usr/include/c++/14/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2904:/usr/include/c++/14/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2905:/usr/include/c++/14/bits/basic_string.h ****       */
2906:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2907:/usr/include/c++/14/bits/basic_string.h ****       size_type
2908:/usr/include/c++/14/bits/basic_string.h ****       find_first_of(const _CharT* __s, size_type __pos = 0) const
2909:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2910:/usr/include/c++/14/bits/basic_string.h ****       {
2911:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
2912:/usr/include/c++/14/bits/basic_string.h **** 	return this->find_first_of(__s, __pos, traits_type::length(__s));
2913:/usr/include/c++/14/bits/basic_string.h ****       }
2914:/usr/include/c++/14/bits/basic_string.h **** 
2915:/usr/include/c++/14/bits/basic_string.h ****       /**
2916:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character.
2917:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to locate.
2918:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
2919:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
2920:/usr/include/c++/14/bits/basic_string.h ****        *
2921:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for the character
2922:/usr/include/c++/14/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index
2923:/usr/include/c++/14/bits/basic_string.h ****        *  where it was found.  If not found, returns npos.
2924:/usr/include/c++/14/bits/basic_string.h ****        *
2925:/usr/include/c++/14/bits/basic_string.h ****        *  Note: equivalent to find(__c, __pos).
2926:/usr/include/c++/14/bits/basic_string.h ****       */
2927:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2928:/usr/include/c++/14/bits/basic_string.h ****       size_type
2929:/usr/include/c++/14/bits/basic_string.h ****       find_first_of(_CharT __c, size_type __pos = 0) const _GLIBCXX_NOEXCEPT
2930:/usr/include/c++/14/bits/basic_string.h ****       { return this->find(__c, __pos); }
2931:/usr/include/c++/14/bits/basic_string.h **** 
2932:/usr/include/c++/14/bits/basic_string.h ****       /**
2933:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2934:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String containing characters to locate.
2935:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2936:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
2937:/usr/include/c++/14/bits/basic_string.h ****        *
2938:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2939:/usr/include/c++/14/bits/basic_string.h ****        *  characters of @a __str within this string.  If found,
2940:/usr/include/c++/14/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
2941:/usr/include/c++/14/bits/basic_string.h ****        *  npos.
2942:/usr/include/c++/14/bits/basic_string.h ****       */
2943:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2944:/usr/include/c++/14/bits/basic_string.h ****       size_type
2945:/usr/include/c++/14/bits/basic_string.h ****       find_last_of(const basic_string& __str, size_type __pos = npos) const
2946:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2947:/usr/include/c++/14/bits/basic_string.h ****       { return this->find_last_of(__str.data(), __pos, __str.size()); }
2948:/usr/include/c++/14/bits/basic_string.h **** 
2949:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
2950:/usr/include/c++/14/bits/basic_string.h ****       /**
GAS LISTING linobj/Ch02_03.s 			page 106


2951:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character of string.
2952:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
2953:/usr/include/c++/14/bits/basic_string.h ****        *                characters to locate.
2954:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2955:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
2956:/usr/include/c++/14/bits/basic_string.h ****       */
2957:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
2958:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2959:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
2960:/usr/include/c++/14/bits/basic_string.h **** 	find_last_of(const _Tp& __svt, size_type __pos = npos) const
2961:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
2962:/usr/include/c++/14/bits/basic_string.h **** 	{
2963:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
2964:/usr/include/c++/14/bits/basic_string.h **** 	  return this->find_last_of(__sv.data(), __pos, __sv.size());
2965:/usr/include/c++/14/bits/basic_string.h **** 	}
2966:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
2967:/usr/include/c++/14/bits/basic_string.h **** 
2968:/usr/include/c++/14/bits/basic_string.h ****       /**
2969:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character of C substring.
2970:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2971:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
2972:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters from s to search for.
2973:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
2974:/usr/include/c++/14/bits/basic_string.h ****        *
2975:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2976:/usr/include/c++/14/bits/basic_string.h ****        *  first @a __n characters of @a __s within this string.  If
2977:/usr/include/c++/14/bits/basic_string.h ****        *  found, returns the index where it was found.  If not found,
2978:/usr/include/c++/14/bits/basic_string.h ****        *  returns npos.
2979:/usr/include/c++/14/bits/basic_string.h ****       */
2980:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2981:/usr/include/c++/14/bits/basic_string.h ****       size_type
2982:/usr/include/c++/14/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos, size_type __n) const
2983:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
2984:/usr/include/c++/14/bits/basic_string.h **** 
2985:/usr/include/c++/14/bits/basic_string.h ****       /**
2986:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character of C string.
2987:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string containing characters to locate.
2988:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
2989:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
2990:/usr/include/c++/14/bits/basic_string.h ****        *
2991:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for one of the
2992:/usr/include/c++/14/bits/basic_string.h ****        *  characters of @a __s within this string.  If found, returns
2993:/usr/include/c++/14/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
2994:/usr/include/c++/14/bits/basic_string.h ****       */
2995:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
2996:/usr/include/c++/14/bits/basic_string.h ****       size_type
2997:/usr/include/c++/14/bits/basic_string.h ****       find_last_of(const _CharT* __s, size_type __pos = npos) const
2998:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
2999:/usr/include/c++/14/bits/basic_string.h ****       {
3000:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3001:/usr/include/c++/14/bits/basic_string.h **** 	return this->find_last_of(__s, __pos, traits_type::length(__s));
3002:/usr/include/c++/14/bits/basic_string.h ****       }
3003:/usr/include/c++/14/bits/basic_string.h **** 
3004:/usr/include/c++/14/bits/basic_string.h ****       /**
3005:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character.
3006:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to locate.
3007:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
GAS LISTING linobj/Ch02_03.s 			page 107


3008:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
3009:/usr/include/c++/14/bits/basic_string.h ****        *
3010:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for @a __c within
3011:/usr/include/c++/14/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
3012:/usr/include/c++/14/bits/basic_string.h ****        *  found.  If not found, returns npos.
3013:/usr/include/c++/14/bits/basic_string.h ****        *
3014:/usr/include/c++/14/bits/basic_string.h ****        *  Note: equivalent to rfind(__c, __pos).
3015:/usr/include/c++/14/bits/basic_string.h ****       */
3016:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3017:/usr/include/c++/14/bits/basic_string.h ****       size_type
3018:/usr/include/c++/14/bits/basic_string.h ****       find_last_of(_CharT __c, size_type __pos = npos) const _GLIBCXX_NOEXCEPT
3019:/usr/include/c++/14/bits/basic_string.h ****       { return this->rfind(__c, __pos); }
3020:/usr/include/c++/14/bits/basic_string.h **** 
3021:/usr/include/c++/14/bits/basic_string.h ****       /**
3022:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character not in string.
3023:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
3024:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
3025:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
3026:/usr/include/c++/14/bits/basic_string.h ****        *
3027:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not contained
3028:/usr/include/c++/14/bits/basic_string.h ****        *  in @a __str within this string.  If found, returns the index where it
3029:/usr/include/c++/14/bits/basic_string.h ****        *  was found.  If not found, returns npos.
3030:/usr/include/c++/14/bits/basic_string.h ****       */
3031:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3032:/usr/include/c++/14/bits/basic_string.h ****       size_type
3033:/usr/include/c++/14/bits/basic_string.h ****       find_first_not_of(const basic_string& __str, size_type __pos = 0) const
3034:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3035:/usr/include/c++/14/bits/basic_string.h ****       { return this->find_first_not_of(__str.data(), __pos, __str.size()); }
3036:/usr/include/c++/14/bits/basic_string.h **** 
3037:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
3038:/usr/include/c++/14/bits/basic_string.h ****       /**
3039:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character not in a string_view.
3040:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  A object convertible to string_view containing
3041:/usr/include/c++/14/bits/basic_string.h ****        *                characters to avoid.
3042:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
3043:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
3044:/usr/include/c++/14/bits/basic_string.h ****        */
3045:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
3046:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3047:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
3048:/usr/include/c++/14/bits/basic_string.h **** 	find_first_not_of(const _Tp& __svt, size_type __pos = 0) const
3049:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
3050:/usr/include/c++/14/bits/basic_string.h **** 	{
3051:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
3052:/usr/include/c++/14/bits/basic_string.h **** 	  return this->find_first_not_of(__sv.data(), __pos, __sv.size());
3053:/usr/include/c++/14/bits/basic_string.h **** 	}
3054:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
3055:/usr/include/c++/14/bits/basic_string.h **** 
3056:/usr/include/c++/14/bits/basic_string.h ****       /**
3057:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character not in C substring.
3058:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
3059:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from.
3060:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters from __s to consider.
3061:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
3062:/usr/include/c++/14/bits/basic_string.h ****        *
3063:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
3064:/usr/include/c++/14/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within
GAS LISTING linobj/Ch02_03.s 			page 108


3065:/usr/include/c++/14/bits/basic_string.h ****        *  this string.  If found, returns the index where it was
3066:/usr/include/c++/14/bits/basic_string.h ****        *  found.  If not found, returns npos.
3067:/usr/include/c++/14/bits/basic_string.h ****       */
3068:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3069:/usr/include/c++/14/bits/basic_string.h ****       size_type
3070:/usr/include/c++/14/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos,
3071:/usr/include/c++/14/bits/basic_string.h **** 			size_type __n) const _GLIBCXX_NOEXCEPT;
3072:/usr/include/c++/14/bits/basic_string.h **** 
3073:/usr/include/c++/14/bits/basic_string.h ****       /**
3074:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a character not in C string.
3075:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
3076:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
3077:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
3078:/usr/include/c++/14/bits/basic_string.h ****        *
3079:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character not
3080:/usr/include/c++/14/bits/basic_string.h ****        *  contained in @a __s within this string.  If found, returns
3081:/usr/include/c++/14/bits/basic_string.h ****        *  the index where it was found.  If not found, returns npos.
3082:/usr/include/c++/14/bits/basic_string.h ****       */
3083:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3084:/usr/include/c++/14/bits/basic_string.h ****       size_type
3085:/usr/include/c++/14/bits/basic_string.h ****       find_first_not_of(const _CharT* __s, size_type __pos = 0) const
3086:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3087:/usr/include/c++/14/bits/basic_string.h ****       {
3088:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3089:/usr/include/c++/14/bits/basic_string.h **** 	return this->find_first_not_of(__s, __pos, traits_type::length(__s));
3090:/usr/include/c++/14/bits/basic_string.h ****       }
3091:/usr/include/c++/14/bits/basic_string.h **** 
3092:/usr/include/c++/14/bits/basic_string.h ****       /**
3093:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find position of a different character.
3094:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to avoid.
3095:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search from (default 0).
3096:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of first occurrence.
3097:/usr/include/c++/14/bits/basic_string.h ****        *
3098:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches forward for a character
3099:/usr/include/c++/14/bits/basic_string.h ****        *  other than @a __c within this string.  If found, returns the
3100:/usr/include/c++/14/bits/basic_string.h ****        *  index where it was found.  If not found, returns npos.
3101:/usr/include/c++/14/bits/basic_string.h ****       */
3102:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3103:/usr/include/c++/14/bits/basic_string.h ****       size_type
3104:/usr/include/c++/14/bits/basic_string.h ****       find_first_not_of(_CharT __c, size_type __pos = 0) const
3105:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
3106:/usr/include/c++/14/bits/basic_string.h **** 
3107:/usr/include/c++/14/bits/basic_string.h ****       /**
3108:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character not in string.
3109:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String containing characters to avoid.
3110:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
3111:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
3112:/usr/include/c++/14/bits/basic_string.h ****        *
3113:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
3114:/usr/include/c++/14/bits/basic_string.h ****        *  not contained in @a __str within this string.  If found,
3115:/usr/include/c++/14/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
3116:/usr/include/c++/14/bits/basic_string.h ****        *  npos.
3117:/usr/include/c++/14/bits/basic_string.h ****       */
3118:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3119:/usr/include/c++/14/bits/basic_string.h ****       size_type
3120:/usr/include/c++/14/bits/basic_string.h ****       find_last_not_of(const basic_string& __str, size_type __pos = npos) const
3121:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
GAS LISTING linobj/Ch02_03.s 			page 109


3122:/usr/include/c++/14/bits/basic_string.h ****       { return this->find_last_not_of(__str.data(), __pos, __str.size()); }
3123:/usr/include/c++/14/bits/basic_string.h **** 
3124:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
3125:/usr/include/c++/14/bits/basic_string.h ****       /**
3126:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character not in a string_view.
3127:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view containing
3128:/usr/include/c++/14/bits/basic_string.h ****        *                characters to avoid.
3129:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
3130:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
3131:/usr/include/c++/14/bits/basic_string.h ****        */
3132:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
3133:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3134:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, size_type>
3135:/usr/include/c++/14/bits/basic_string.h **** 	find_last_not_of(const _Tp& __svt, size_type __pos = npos) const
3136:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
3137:/usr/include/c++/14/bits/basic_string.h **** 	{
3138:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
3139:/usr/include/c++/14/bits/basic_string.h **** 	  return this->find_last_not_of(__sv.data(), __pos, __sv.size());
3140:/usr/include/c++/14/bits/basic_string.h **** 	}
3141:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
3142:/usr/include/c++/14/bits/basic_string.h **** 
3143:/usr/include/c++/14/bits/basic_string.h ****       /**
3144:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character not in C substring.
3145:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
3146:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from.
3147:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters from s to consider.
3148:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
3149:/usr/include/c++/14/bits/basic_string.h ****        *
3150:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character not
3151:/usr/include/c++/14/bits/basic_string.h ****        *  contained in the first @a __n characters of @a __s within this string.
3152:/usr/include/c++/14/bits/basic_string.h ****        *  If found, returns the index where it was found.  If not found,
3153:/usr/include/c++/14/bits/basic_string.h ****        *  returns npos.
3154:/usr/include/c++/14/bits/basic_string.h ****       */
3155:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3156:/usr/include/c++/14/bits/basic_string.h ****       size_type
3157:/usr/include/c++/14/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos,
3158:/usr/include/c++/14/bits/basic_string.h **** 		       size_type __n) const _GLIBCXX_NOEXCEPT;
3159:/usr/include/c++/14/bits/basic_string.h ****       /**
3160:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a character not in C string.
3161:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string containing characters to avoid.
3162:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
3163:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
3164:/usr/include/c++/14/bits/basic_string.h ****        *
3165:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character
3166:/usr/include/c++/14/bits/basic_string.h ****        *  not contained in @a __s within this string.  If found,
3167:/usr/include/c++/14/bits/basic_string.h ****        *  returns the index where it was found.  If not found, returns
3168:/usr/include/c++/14/bits/basic_string.h ****        *  npos.
3169:/usr/include/c++/14/bits/basic_string.h ****       */
3170:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3171:/usr/include/c++/14/bits/basic_string.h ****       size_type
3172:/usr/include/c++/14/bits/basic_string.h ****       find_last_not_of(const _CharT* __s, size_type __pos = npos) const
3173:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT
3174:/usr/include/c++/14/bits/basic_string.h ****       {
3175:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3176:/usr/include/c++/14/bits/basic_string.h **** 	return this->find_last_not_of(__s, __pos, traits_type::length(__s));
3177:/usr/include/c++/14/bits/basic_string.h ****       }
3178:/usr/include/c++/14/bits/basic_string.h **** 
GAS LISTING linobj/Ch02_03.s 			page 110


3179:/usr/include/c++/14/bits/basic_string.h ****       /**
3180:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Find last position of a different character.
3181:/usr/include/c++/14/bits/basic_string.h ****        *  @param __c  Character to avoid.
3182:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of character to search back from (default end).
3183:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Index of last occurrence.
3184:/usr/include/c++/14/bits/basic_string.h ****        *
3185:/usr/include/c++/14/bits/basic_string.h ****        *  Starting from @a __pos, searches backward for a character other than
3186:/usr/include/c++/14/bits/basic_string.h ****        *  @a __c within this string.  If found, returns the index where it was
3187:/usr/include/c++/14/bits/basic_string.h ****        *  found.  If not found, returns npos.
3188:/usr/include/c++/14/bits/basic_string.h ****       */
3189:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3190:/usr/include/c++/14/bits/basic_string.h ****       size_type
3191:/usr/include/c++/14/bits/basic_string.h ****       find_last_not_of(_CharT __c, size_type __pos = npos) const
3192:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NOEXCEPT;
3193:/usr/include/c++/14/bits/basic_string.h **** 
3194:/usr/include/c++/14/bits/basic_string.h ****       /**
3195:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Get a substring.
3196:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character (default 0).
3197:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters in substring (default remainder).
3198:/usr/include/c++/14/bits/basic_string.h ****        *  @return  The new string.
3199:/usr/include/c++/14/bits/basic_string.h ****        *  @throw  std::out_of_range  If __pos > size().
3200:/usr/include/c++/14/bits/basic_string.h ****        *
3201:/usr/include/c++/14/bits/basic_string.h ****        *  Construct and return a new string using the @a __n
3202:/usr/include/c++/14/bits/basic_string.h ****        *  characters starting at @a __pos.  If the string is too
3203:/usr/include/c++/14/bits/basic_string.h ****        *  short, use the remainder of the characters.  If @a __pos is
3204:/usr/include/c++/14/bits/basic_string.h ****        *  beyond the end of the string, out_of_range is thrown.
3205:/usr/include/c++/14/bits/basic_string.h ****       */
3206:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3207:/usr/include/c++/14/bits/basic_string.h ****       basic_string
3208:/usr/include/c++/14/bits/basic_string.h ****       substr(size_type __pos = 0, size_type __n = npos) const
3209:/usr/include/c++/14/bits/basic_string.h ****       { return basic_string(*this,
3210:/usr/include/c++/14/bits/basic_string.h **** 			    _M_check(__pos, "basic_string::substr"), __n); }
3211:/usr/include/c++/14/bits/basic_string.h **** 
3212:/usr/include/c++/14/bits/basic_string.h ****       /**
3213:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare to a string.
3214:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String to compare against.
3215:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3216:/usr/include/c++/14/bits/basic_string.h ****        *
3217:/usr/include/c++/14/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a
3218:/usr/include/c++/14/bits/basic_string.h ****        *  __str, 0 if their values are equivalent, or > 0 if this
3219:/usr/include/c++/14/bits/basic_string.h ****        *  string is ordered after @a __str.  Determines the effective
3220:/usr/include/c++/14/bits/basic_string.h ****        *  length rlen of the strings to compare as the smallest of
3221:/usr/include/c++/14/bits/basic_string.h ****        *  size() and str.size().  The function then compares the two
3222:/usr/include/c++/14/bits/basic_string.h ****        *  strings by calling traits::compare(data(), str.data(),rlen).
3223:/usr/include/c++/14/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
3224:/usr/include/c++/14/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
3225:/usr/include/c++/14/bits/basic_string.h ****       */
3226:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3227:/usr/include/c++/14/bits/basic_string.h ****       int
3228:/usr/include/c++/14/bits/basic_string.h ****       compare(const basic_string& __str) const
3229:/usr/include/c++/14/bits/basic_string.h ****       {
3230:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __size = this->size();
3231:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __osize = __str.size();
3232:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
3233:/usr/include/c++/14/bits/basic_string.h **** 
3234:/usr/include/c++/14/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __str.data(), __len);
3235:/usr/include/c++/14/bits/basic_string.h **** 	if (!__r)
GAS LISTING linobj/Ch02_03.s 			page 111


3236:/usr/include/c++/14/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
3237:/usr/include/c++/14/bits/basic_string.h **** 	return __r;
3238:/usr/include/c++/14/bits/basic_string.h ****       }
3239:/usr/include/c++/14/bits/basic_string.h **** 
3240:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201703L
3241:/usr/include/c++/14/bits/basic_string.h ****       /**
3242:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare to a string_view.
3243:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt An object convertible to string_view to compare against.
3244:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3245:/usr/include/c++/14/bits/basic_string.h ****        */
3246:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
3247:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3248:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, int>
3249:/usr/include/c++/14/bits/basic_string.h **** 	compare(const _Tp& __svt) const
3250:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
3251:/usr/include/c++/14/bits/basic_string.h **** 	{
3252:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
3253:/usr/include/c++/14/bits/basic_string.h **** 	  const size_type __size = this->size();
3254:/usr/include/c++/14/bits/basic_string.h **** 	  const size_type __osize = __sv.size();
3255:/usr/include/c++/14/bits/basic_string.h **** 	  const size_type __len = std::min(__size, __osize);
3256:/usr/include/c++/14/bits/basic_string.h **** 
3257:/usr/include/c++/14/bits/basic_string.h **** 	  int __r = traits_type::compare(_M_data(), __sv.data(), __len);
3258:/usr/include/c++/14/bits/basic_string.h **** 	  if (!__r)
3259:/usr/include/c++/14/bits/basic_string.h **** 	    __r = _S_compare(__size, __osize);
3260:/usr/include/c++/14/bits/basic_string.h **** 	  return __r;
3261:/usr/include/c++/14/bits/basic_string.h **** 	}
3262:/usr/include/c++/14/bits/basic_string.h **** 
3263:/usr/include/c++/14/bits/basic_string.h ****       /**
3264:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare to a string_view.
3265:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  A position in the string to start comparing from.
3266:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  The number of characters to compare.
3267:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
3268:/usr/include/c++/14/bits/basic_string.h ****        *                against.
3269:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3270:/usr/include/c++/14/bits/basic_string.h ****        */
3271:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
3272:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3273:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, int>
3274:/usr/include/c++/14/bits/basic_string.h **** 	compare(size_type __pos, size_type __n, const _Tp& __svt) const
3275:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
3276:/usr/include/c++/14/bits/basic_string.h **** 	{
3277:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
3278:/usr/include/c++/14/bits/basic_string.h **** 	  return __sv_type(*this).substr(__pos, __n).compare(__sv);
3279:/usr/include/c++/14/bits/basic_string.h **** 	}
3280:/usr/include/c++/14/bits/basic_string.h **** 
3281:/usr/include/c++/14/bits/basic_string.h ****       /**
3282:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare to a string_view.
3283:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos1  A position in the string to start comparing from.
3284:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1  The number of characters to compare.
3285:/usr/include/c++/14/bits/basic_string.h ****        *  @param __svt  An object convertible to string_view to compare
3286:/usr/include/c++/14/bits/basic_string.h ****        *                against.
3287:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos2  A position in the string_view to start comparing from.
3288:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n2  The number of characters to compare.
3289:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3290:/usr/include/c++/14/bits/basic_string.h ****        */
3291:/usr/include/c++/14/bits/basic_string.h ****       template<typename _Tp>
3292:/usr/include/c++/14/bits/basic_string.h **** 	_GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
GAS LISTING linobj/Ch02_03.s 			page 112


3293:/usr/include/c++/14/bits/basic_string.h **** 	_If_sv<_Tp, int>
3294:/usr/include/c++/14/bits/basic_string.h **** 	compare(size_type __pos1, size_type __n1, const _Tp& __svt,
3295:/usr/include/c++/14/bits/basic_string.h **** 		size_type __pos2, size_type __n2 = npos) const
3296:/usr/include/c++/14/bits/basic_string.h **** 	noexcept(is_same<_Tp, __sv_type>::value)
3297:/usr/include/c++/14/bits/basic_string.h **** 	{
3298:/usr/include/c++/14/bits/basic_string.h **** 	  __sv_type __sv = __svt;
3299:/usr/include/c++/14/bits/basic_string.h **** 	  return __sv_type(*this)
3300:/usr/include/c++/14/bits/basic_string.h **** 	    .substr(__pos1, __n1).compare(__sv.substr(__pos2, __n2));
3301:/usr/include/c++/14/bits/basic_string.h **** 	}
3302:/usr/include/c++/14/bits/basic_string.h **** #endif // C++17
3303:/usr/include/c++/14/bits/basic_string.h **** 
3304:/usr/include/c++/14/bits/basic_string.h ****       /**
3305:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare substring to a string.
3306:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3307:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n  Number of characters in substring.
3308:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String to compare against.
3309:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3310:/usr/include/c++/14/bits/basic_string.h ****        *
3311:/usr/include/c++/14/bits/basic_string.h ****        *  Form the substring of this string from the @a __n characters
3312:/usr/include/c++/14/bits/basic_string.h ****        *  starting at @a __pos.  Returns an integer < 0 if the
3313:/usr/include/c++/14/bits/basic_string.h ****        *  substring is ordered before @a __str, 0 if their values are
3314:/usr/include/c++/14/bits/basic_string.h ****        *  equivalent, or > 0 if the substring is ordered after @a
3315:/usr/include/c++/14/bits/basic_string.h ****        *  __str.  Determines the effective length rlen of the strings
3316:/usr/include/c++/14/bits/basic_string.h ****        *  to compare as the smallest of the length of the substring
3317:/usr/include/c++/14/bits/basic_string.h ****        *  and @a __str.size().  The function then compares the two
3318:/usr/include/c++/14/bits/basic_string.h ****        *  strings by calling
3319:/usr/include/c++/14/bits/basic_string.h ****        *  traits::compare(substring.data(),str.data(),rlen).  If the
3320:/usr/include/c++/14/bits/basic_string.h ****        *  result of the comparison is nonzero returns it, otherwise
3321:/usr/include/c++/14/bits/basic_string.h ****        *  the shorter one is ordered first.
3322:/usr/include/c++/14/bits/basic_string.h ****       */
3323:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3324:/usr/include/c++/14/bits/basic_string.h ****       int
3325:/usr/include/c++/14/bits/basic_string.h ****       compare(size_type __pos, size_type __n, const basic_string& __str) const
3326:/usr/include/c++/14/bits/basic_string.h ****       {
3327:/usr/include/c++/14/bits/basic_string.h **** 	_M_check(__pos, "basic_string::compare");
3328:/usr/include/c++/14/bits/basic_string.h **** 	__n = _M_limit(__pos, __n);
3329:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __osize = __str.size();
3330:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __len = std::min(__n, __osize);
3331:/usr/include/c++/14/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data() + __pos, __str.data(), __len);
3332:/usr/include/c++/14/bits/basic_string.h **** 	if (!__r)
3333:/usr/include/c++/14/bits/basic_string.h **** 	  __r = _S_compare(__n, __osize);
3334:/usr/include/c++/14/bits/basic_string.h **** 	return __r;
3335:/usr/include/c++/14/bits/basic_string.h ****       }
3336:/usr/include/c++/14/bits/basic_string.h **** 
3337:/usr/include/c++/14/bits/basic_string.h ****       /**
3338:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare substring to a substring.
3339:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos1  Index of first character of substring.
3340:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3341:/usr/include/c++/14/bits/basic_string.h ****        *  @param __str  String to compare against.
3342:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos2  Index of first character of substring of str.
3343:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n2  Number of characters in substring of str.
3344:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3345:/usr/include/c++/14/bits/basic_string.h ****        *
3346:/usr/include/c++/14/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3347:/usr/include/c++/14/bits/basic_string.h ****        *  characters starting at @a __pos1.  Form the substring of @a
3348:/usr/include/c++/14/bits/basic_string.h ****        *  __str from the @a __n2 characters starting at @a __pos2.
3349:/usr/include/c++/14/bits/basic_string.h ****        *  Returns an integer < 0 if this substring is ordered before
GAS LISTING linobj/Ch02_03.s 			page 113


3350:/usr/include/c++/14/bits/basic_string.h ****        *  the substring of @a __str, 0 if their values are equivalent,
3351:/usr/include/c++/14/bits/basic_string.h ****        *  or > 0 if this substring is ordered after the substring of
3352:/usr/include/c++/14/bits/basic_string.h ****        *  @a __str.  Determines the effective length rlen of the
3353:/usr/include/c++/14/bits/basic_string.h ****        *  strings to compare as the smallest of the lengths of the
3354:/usr/include/c++/14/bits/basic_string.h ****        *  substrings.  The function then compares the two strings by
3355:/usr/include/c++/14/bits/basic_string.h ****        *  calling
3356:/usr/include/c++/14/bits/basic_string.h ****        *  traits::compare(substring.data(),str.substr(pos2,n2).data(),rlen).
3357:/usr/include/c++/14/bits/basic_string.h ****        *  If the result of the comparison is nonzero returns it,
3358:/usr/include/c++/14/bits/basic_string.h ****        *  otherwise the shorter one is ordered first.
3359:/usr/include/c++/14/bits/basic_string.h ****       */
3360:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3361:/usr/include/c++/14/bits/basic_string.h ****       int
3362:/usr/include/c++/14/bits/basic_string.h ****       compare(size_type __pos1, size_type __n1, const basic_string& __str,
3363:/usr/include/c++/14/bits/basic_string.h **** 	      size_type __pos2, size_type __n2 = npos) const
3364:/usr/include/c++/14/bits/basic_string.h ****       {
3365:/usr/include/c++/14/bits/basic_string.h **** 	_M_check(__pos1, "basic_string::compare");
3366:/usr/include/c++/14/bits/basic_string.h **** 	__str._M_check(__pos2, "basic_string::compare");
3367:/usr/include/c++/14/bits/basic_string.h **** 	__n1 = _M_limit(__pos1, __n1);
3368:/usr/include/c++/14/bits/basic_string.h **** 	__n2 = __str._M_limit(__pos2, __n2);
3369:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __len = std::min(__n1, __n2);
3370:/usr/include/c++/14/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data() + __pos1,
3371:/usr/include/c++/14/bits/basic_string.h **** 				       __str.data() + __pos2, __len);
3372:/usr/include/c++/14/bits/basic_string.h **** 	if (!__r)
3373:/usr/include/c++/14/bits/basic_string.h **** 	  __r = _S_compare(__n1, __n2);
3374:/usr/include/c++/14/bits/basic_string.h **** 	return __r;
3375:/usr/include/c++/14/bits/basic_string.h ****       }
3376:/usr/include/c++/14/bits/basic_string.h **** 
3377:/usr/include/c++/14/bits/basic_string.h ****       /**
3378:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare to a C string.
3379:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to compare against.
3380:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3381:/usr/include/c++/14/bits/basic_string.h ****        *
3382:/usr/include/c++/14/bits/basic_string.h ****        *  Returns an integer < 0 if this string is ordered before @a __s, 0 if
3383:/usr/include/c++/14/bits/basic_string.h ****        *  their values are equivalent, or > 0 if this string is ordered after
3384:/usr/include/c++/14/bits/basic_string.h ****        *  @a __s.  Determines the effective length rlen of the strings to
3385:/usr/include/c++/14/bits/basic_string.h ****        *  compare as the smallest of size() and the length of a string
3386:/usr/include/c++/14/bits/basic_string.h ****        *  constructed from @a __s.  The function then compares the two strings
3387:/usr/include/c++/14/bits/basic_string.h ****        *  by calling traits::compare(data(),s,rlen).  If the result of the
3388:/usr/include/c++/14/bits/basic_string.h ****        *  comparison is nonzero returns it, otherwise the shorter one is
3389:/usr/include/c++/14/bits/basic_string.h ****        *  ordered first.
3390:/usr/include/c++/14/bits/basic_string.h ****       */
3391:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3392:/usr/include/c++/14/bits/basic_string.h ****       int
3393:/usr/include/c++/14/bits/basic_string.h ****       compare(const _CharT* __s) const _GLIBCXX_NOEXCEPT
3394:/usr/include/c++/14/bits/basic_string.h ****       {
3395:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3396:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __size = this->size();
3397:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __osize = traits_type::length(__s);
3398:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __len = std::min(__size, __osize);
3399:/usr/include/c++/14/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data(), __s, __len);
3400:/usr/include/c++/14/bits/basic_string.h **** 	if (!__r)
3401:/usr/include/c++/14/bits/basic_string.h **** 	  __r = _S_compare(__size, __osize);
3402:/usr/include/c++/14/bits/basic_string.h **** 	return __r;
3403:/usr/include/c++/14/bits/basic_string.h ****       }
3404:/usr/include/c++/14/bits/basic_string.h **** 
3405:/usr/include/c++/14/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
3406:/usr/include/c++/14/bits/basic_string.h ****       // 5 String::compare specification questionable
GAS LISTING linobj/Ch02_03.s 			page 114


3407:/usr/include/c++/14/bits/basic_string.h ****       /**
3408:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare substring to a C string.
3409:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3410:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3411:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  C string to compare against.
3412:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3413:/usr/include/c++/14/bits/basic_string.h ****        *
3414:/usr/include/c++/14/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3415:/usr/include/c++/14/bits/basic_string.h ****        *  characters starting at @a pos.  Returns an integer < 0 if
3416:/usr/include/c++/14/bits/basic_string.h ****        *  the substring is ordered before @a __s, 0 if their values
3417:/usr/include/c++/14/bits/basic_string.h ****        *  are equivalent, or > 0 if the substring is ordered after @a
3418:/usr/include/c++/14/bits/basic_string.h ****        *  __s.  Determines the effective length rlen of the strings to
3419:/usr/include/c++/14/bits/basic_string.h ****        *  compare as the smallest of the length of the substring and
3420:/usr/include/c++/14/bits/basic_string.h ****        *  the length of a string constructed from @a __s.  The
3421:/usr/include/c++/14/bits/basic_string.h ****        *  function then compares the two string by calling
3422:/usr/include/c++/14/bits/basic_string.h ****        *  traits::compare(substring.data(),__s,rlen).  If the result of
3423:/usr/include/c++/14/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3424:/usr/include/c++/14/bits/basic_string.h ****        *  one is ordered first.
3425:/usr/include/c++/14/bits/basic_string.h ****       */
3426:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3427:/usr/include/c++/14/bits/basic_string.h ****       int
3428:/usr/include/c++/14/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s) const
3429:/usr/include/c++/14/bits/basic_string.h ****       {
3430:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string(__s);
3431:/usr/include/c++/14/bits/basic_string.h **** 	_M_check(__pos, "basic_string::compare");
3432:/usr/include/c++/14/bits/basic_string.h **** 	__n1 = _M_limit(__pos, __n1);
3433:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __osize = traits_type::length(__s);
3434:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __len = std::min(__n1, __osize);
3435:/usr/include/c++/14/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data() + __pos, __s, __len);
3436:/usr/include/c++/14/bits/basic_string.h **** 	if (!__r)
3437:/usr/include/c++/14/bits/basic_string.h **** 	  __r = _S_compare(__n1, __osize);
3438:/usr/include/c++/14/bits/basic_string.h **** 	return __r;
3439:/usr/include/c++/14/bits/basic_string.h ****       }
3440:/usr/include/c++/14/bits/basic_string.h **** 
3441:/usr/include/c++/14/bits/basic_string.h ****       /**
3442:/usr/include/c++/14/bits/basic_string.h ****        *  @brief  Compare substring against a character %array.
3443:/usr/include/c++/14/bits/basic_string.h ****        *  @param __pos  Index of first character of substring.
3444:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n1  Number of characters in substring.
3445:/usr/include/c++/14/bits/basic_string.h ****        *  @param __s  character %array to compare against.
3446:/usr/include/c++/14/bits/basic_string.h ****        *  @param __n2  Number of characters of s.
3447:/usr/include/c++/14/bits/basic_string.h ****        *  @return  Integer < 0, 0, or > 0.
3448:/usr/include/c++/14/bits/basic_string.h ****        *
3449:/usr/include/c++/14/bits/basic_string.h ****        *  Form the substring of this string from the @a __n1
3450:/usr/include/c++/14/bits/basic_string.h ****        *  characters starting at @a __pos.  Form a string from the
3451:/usr/include/c++/14/bits/basic_string.h ****        *  first @a __n2 characters of @a __s.  Returns an integer < 0
3452:/usr/include/c++/14/bits/basic_string.h ****        *  if this substring is ordered before the string from @a __s,
3453:/usr/include/c++/14/bits/basic_string.h ****        *  0 if their values are equivalent, or > 0 if this substring
3454:/usr/include/c++/14/bits/basic_string.h ****        *  is ordered after the string from @a __s.  Determines the
3455:/usr/include/c++/14/bits/basic_string.h ****        *  effective length rlen of the strings to compare as the
3456:/usr/include/c++/14/bits/basic_string.h ****        *  smallest of the length of the substring and @a __n2.  The
3457:/usr/include/c++/14/bits/basic_string.h ****        *  function then compares the two strings by calling
3458:/usr/include/c++/14/bits/basic_string.h ****        *  traits::compare(substring.data(),s,rlen).  If the result of
3459:/usr/include/c++/14/bits/basic_string.h ****        *  the comparison is nonzero returns it, otherwise the shorter
3460:/usr/include/c++/14/bits/basic_string.h ****        *  one is ordered first.
3461:/usr/include/c++/14/bits/basic_string.h ****        *
3462:/usr/include/c++/14/bits/basic_string.h ****        *  NB: s must have at least n2 characters, &apos;\\0&apos; has
3463:/usr/include/c++/14/bits/basic_string.h ****        *  no special meaning.
GAS LISTING linobj/Ch02_03.s 			page 115


3464:/usr/include/c++/14/bits/basic_string.h ****       */
3465:/usr/include/c++/14/bits/basic_string.h ****       _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3466:/usr/include/c++/14/bits/basic_string.h ****       int
3467:/usr/include/c++/14/bits/basic_string.h ****       compare(size_type __pos, size_type __n1, const _CharT* __s,
3468:/usr/include/c++/14/bits/basic_string.h **** 	      size_type __n2) const
3469:/usr/include/c++/14/bits/basic_string.h ****       {
3470:/usr/include/c++/14/bits/basic_string.h **** 	__glibcxx_requires_string_len(__s, __n2);
3471:/usr/include/c++/14/bits/basic_string.h **** 	_M_check(__pos, "basic_string::compare");
3472:/usr/include/c++/14/bits/basic_string.h **** 	__n1 = _M_limit(__pos, __n1);
3473:/usr/include/c++/14/bits/basic_string.h **** 	const size_type __len = std::min(__n1, __n2);
3474:/usr/include/c++/14/bits/basic_string.h **** 	int __r = traits_type::compare(_M_data() + __pos, __s, __len);
3475:/usr/include/c++/14/bits/basic_string.h **** 	if (!__r)
3476:/usr/include/c++/14/bits/basic_string.h **** 	  __r = _S_compare(__n1, __n2);
3477:/usr/include/c++/14/bits/basic_string.h **** 	return __r;
3478:/usr/include/c++/14/bits/basic_string.h ****       }
3479:/usr/include/c++/14/bits/basic_string.h **** 
3480:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 202002L
3481:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard]]
3482:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3483:/usr/include/c++/14/bits/basic_string.h ****       starts_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3484:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3485:/usr/include/c++/14/bits/basic_string.h **** 
3486:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard]]
3487:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3488:/usr/include/c++/14/bits/basic_string.h ****       starts_with(_CharT __x) const noexcept
3489:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3490:/usr/include/c++/14/bits/basic_string.h **** 
3491:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard, __gnu__::__nonnull__]]
3492:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3493:/usr/include/c++/14/bits/basic_string.h ****       starts_with(const _CharT* __x) const noexcept
3494:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).starts_with(__x); }
3495:/usr/include/c++/14/bits/basic_string.h **** 
3496:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard]]
3497:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3498:/usr/include/c++/14/bits/basic_string.h ****       ends_with(basic_string_view<_CharT, _Traits> __x) const noexcept
3499:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3500:/usr/include/c++/14/bits/basic_string.h **** 
3501:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard]]
3502:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3503:/usr/include/c++/14/bits/basic_string.h ****       ends_with(_CharT __x) const noexcept
3504:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3505:/usr/include/c++/14/bits/basic_string.h **** 
3506:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard, __gnu__::__nonnull__]]
3507:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3508:/usr/include/c++/14/bits/basic_string.h ****       ends_with(const _CharT* __x) const noexcept
3509:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).ends_with(__x); }
3510:/usr/include/c++/14/bits/basic_string.h **** #endif // C++20
3511:/usr/include/c++/14/bits/basic_string.h **** 
3512:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus > 202002L
3513:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard]]
3514:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3515:/usr/include/c++/14/bits/basic_string.h ****       contains(basic_string_view<_CharT, _Traits> __x) const noexcept
3516:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3517:/usr/include/c++/14/bits/basic_string.h **** 
3518:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard]]
3519:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3520:/usr/include/c++/14/bits/basic_string.h ****       contains(_CharT __x) const noexcept
GAS LISTING linobj/Ch02_03.s 			page 116


3521:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3522:/usr/include/c++/14/bits/basic_string.h **** 
3523:/usr/include/c++/14/bits/basic_string.h ****       [[nodiscard, __gnu__::__nonnull__]]
3524:/usr/include/c++/14/bits/basic_string.h ****       constexpr bool
3525:/usr/include/c++/14/bits/basic_string.h ****       contains(const _CharT* __x) const noexcept
3526:/usr/include/c++/14/bits/basic_string.h ****       { return __sv_type(this->data(), this->size()).contains(__x); }
3527:/usr/include/c++/14/bits/basic_string.h **** #endif // C++23
3528:/usr/include/c++/14/bits/basic_string.h **** 
3529:/usr/include/c++/14/bits/basic_string.h ****       // Allow basic_stringbuf::__xfer_bufptrs to call _M_length:
3530:/usr/include/c++/14/bits/basic_string.h ****       template<typename, typename, typename> friend class basic_stringbuf;
3531:/usr/include/c++/14/bits/basic_string.h ****     };
3532:/usr/include/c++/14/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3533:/usr/include/c++/14/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_VERSION
3534:/usr/include/c++/14/bits/basic_string.h **** } // namespace std
3535:/usr/include/c++/14/bits/basic_string.h **** #endif  // _GLIBCXX_USE_CXX11_ABI
3536:/usr/include/c++/14/bits/basic_string.h **** 
3537:/usr/include/c++/14/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
3538:/usr/include/c++/14/bits/basic_string.h **** {
3539:/usr/include/c++/14/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
3540:/usr/include/c++/14/bits/basic_string.h **** 
3541:/usr/include/c++/14/bits/basic_string.h **** #if __cpp_deduction_guides >= 201606
3542:/usr/include/c++/14/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_CXX11
3543:/usr/include/c++/14/bits/basic_string.h ****   template<typename _InputIterator, typename _CharT
3544:/usr/include/c++/14/bits/basic_string.h **** 	     = typename iterator_traits<_InputIterator>::value_type,
3545:/usr/include/c++/14/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
3546:/usr/include/c++/14/bits/basic_string.h **** 	   typename = _RequireInputIter<_InputIterator>,
3547:/usr/include/c++/14/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
3548:/usr/include/c++/14/bits/basic_string.h ****     basic_string(_InputIterator, _InputIterator, _Allocator = _Allocator())
3549:/usr/include/c++/14/bits/basic_string.h ****       -> basic_string<_CharT, char_traits<_CharT>, _Allocator>;
3550:/usr/include/c++/14/bits/basic_string.h **** 
3551:/usr/include/c++/14/bits/basic_string.h ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
3552:/usr/include/c++/14/bits/basic_string.h ****   // 3075. basic_string needs deduction guides from basic_string_view
3553:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
3554:/usr/include/c++/14/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
3555:/usr/include/c++/14/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
3556:/usr/include/c++/14/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>, const _Allocator& = _Allocator())
3557:/usr/include/c++/14/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
3558:/usr/include/c++/14/bits/basic_string.h **** 
3559:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits,
3560:/usr/include/c++/14/bits/basic_string.h **** 	   typename _Allocator = allocator<_CharT>,
3561:/usr/include/c++/14/bits/basic_string.h **** 	   typename = _RequireAllocator<_Allocator>>
3562:/usr/include/c++/14/bits/basic_string.h ****     basic_string(basic_string_view<_CharT, _Traits>,
3563:/usr/include/c++/14/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
3564:/usr/include/c++/14/bits/basic_string.h **** 		 typename basic_string<_CharT, _Traits, _Allocator>::size_type,
3565:/usr/include/c++/14/bits/basic_string.h **** 		 const _Allocator& = _Allocator())
3566:/usr/include/c++/14/bits/basic_string.h ****       -> basic_string<_CharT, _Traits, _Allocator>;
3567:/usr/include/c++/14/bits/basic_string.h **** _GLIBCXX_END_NAMESPACE_CXX11
3568:/usr/include/c++/14/bits/basic_string.h **** #endif
3569:/usr/include/c++/14/bits/basic_string.h **** 
3570:/usr/include/c++/14/bits/basic_string.h ****   template<typename _Str>
3571:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX20_CONSTEXPR
3572:/usr/include/c++/14/bits/basic_string.h ****     inline _Str
3573:/usr/include/c++/14/bits/basic_string.h ****     __str_concat(typename _Str::value_type const* __lhs,
3574:/usr/include/c++/14/bits/basic_string.h **** 		 typename _Str::size_type __lhs_len,
3575:/usr/include/c++/14/bits/basic_string.h **** 		 typename _Str::value_type const* __rhs,
3576:/usr/include/c++/14/bits/basic_string.h **** 		 typename _Str::size_type __rhs_len,
3577:/usr/include/c++/14/bits/basic_string.h **** 		 typename _Str::allocator_type const& __a)
GAS LISTING linobj/Ch02_03.s 			page 117


3578:/usr/include/c++/14/bits/basic_string.h ****     {
3579:/usr/include/c++/14/bits/basic_string.h ****       typedef typename _Str::allocator_type allocator_type;
3580:/usr/include/c++/14/bits/basic_string.h ****       typedef __gnu_cxx::__alloc_traits<allocator_type> _Alloc_traits;
3581:/usr/include/c++/14/bits/basic_string.h ****       _Str __str(_Alloc_traits::_S_select_on_copy(__a));
3582:/usr/include/c++/14/bits/basic_string.h ****       __str.reserve(__lhs_len + __rhs_len);
3583:/usr/include/c++/14/bits/basic_string.h ****       __str.append(__lhs, __lhs_len);
3584:/usr/include/c++/14/bits/basic_string.h ****       __str.append(__rhs, __rhs_len);
3585:/usr/include/c++/14/bits/basic_string.h ****       return __str;
3586:/usr/include/c++/14/bits/basic_string.h ****     }
3587:/usr/include/c++/14/bits/basic_string.h **** 
3588:/usr/include/c++/14/bits/basic_string.h ****   // operator+
3589:/usr/include/c++/14/bits/basic_string.h ****   /**
3590:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Concatenate two strings.
3591:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3592:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Last string.
3593:/usr/include/c++/14/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
3594:/usr/include/c++/14/bits/basic_string.h ****    */
3595:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3596:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3597:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3598:/usr/include/c++/14/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3599:/usr/include/c++/14/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3600:/usr/include/c++/14/bits/basic_string.h ****     {
3601:/usr/include/c++/14/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc> _Str;
3602:/usr/include/c++/14/bits/basic_string.h ****       return std::__str_concat<_Str>(__lhs.c_str(), __lhs.size(),
3603:/usr/include/c++/14/bits/basic_string.h **** 				     __rhs.c_str(), __rhs.size(),
3604:/usr/include/c++/14/bits/basic_string.h **** 				     __lhs.get_allocator());
3605:/usr/include/c++/14/bits/basic_string.h ****     }
3606:/usr/include/c++/14/bits/basic_string.h **** 
3607:/usr/include/c++/14/bits/basic_string.h ****   /**
3608:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Concatenate C string and string.
3609:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3610:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Last string.
3611:/usr/include/c++/14/bits/basic_string.h ****    *  @return  New string with value of @a __lhs followed by @a __rhs.
3612:/usr/include/c++/14/bits/basic_string.h ****    */
3613:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3614:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3615:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT,_Traits,_Alloc>
3616:/usr/include/c++/14/bits/basic_string.h ****     operator+(const _CharT* __lhs,
3617:/usr/include/c++/14/bits/basic_string.h **** 	      const basic_string<_CharT,_Traits,_Alloc>& __rhs)
3618:/usr/include/c++/14/bits/basic_string.h ****     {
3619:/usr/include/c++/14/bits/basic_string.h ****       __glibcxx_requires_string(__lhs);
3620:/usr/include/c++/14/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc> _Str;
3621:/usr/include/c++/14/bits/basic_string.h ****       return std::__str_concat<_Str>(__lhs, _Traits::length(__lhs),
3622:/usr/include/c++/14/bits/basic_string.h **** 				     __rhs.c_str(), __rhs.size(),
3623:/usr/include/c++/14/bits/basic_string.h **** 				     __rhs.get_allocator());
3624:/usr/include/c++/14/bits/basic_string.h ****     }
3625:/usr/include/c++/14/bits/basic_string.h **** 
3626:/usr/include/c++/14/bits/basic_string.h ****   /**
3627:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Concatenate character and string.
3628:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3629:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Last string.
3630:/usr/include/c++/14/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
3631:/usr/include/c++/14/bits/basic_string.h ****    */
3632:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3633:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3634:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT,_Traits,_Alloc>
GAS LISTING linobj/Ch02_03.s 			page 118


3635:/usr/include/c++/14/bits/basic_string.h ****     operator+(_CharT __lhs, const basic_string<_CharT,_Traits,_Alloc>& __rhs)
3636:/usr/include/c++/14/bits/basic_string.h ****     {
3637:/usr/include/c++/14/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc> _Str;
3638:/usr/include/c++/14/bits/basic_string.h ****       return std::__str_concat<_Str>(__builtin_addressof(__lhs), 1,
3639:/usr/include/c++/14/bits/basic_string.h **** 				     __rhs.c_str(), __rhs.size(),
3640:/usr/include/c++/14/bits/basic_string.h **** 				     __rhs.get_allocator());
3641:/usr/include/c++/14/bits/basic_string.h ****     }
3642:/usr/include/c++/14/bits/basic_string.h **** 
3643:/usr/include/c++/14/bits/basic_string.h ****   /**
3644:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Concatenate string and C string.
3645:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3646:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Last string.
3647:/usr/include/c++/14/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
3648:/usr/include/c++/14/bits/basic_string.h ****    */
3649:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3650:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3651:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3652:/usr/include/c++/14/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3653:/usr/include/c++/14/bits/basic_string.h **** 	      const _CharT* __rhs)
3654:/usr/include/c++/14/bits/basic_string.h ****     {
3655:/usr/include/c++/14/bits/basic_string.h ****       __glibcxx_requires_string(__rhs);
3656:/usr/include/c++/14/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc> _Str;
3657:/usr/include/c++/14/bits/basic_string.h ****       return std::__str_concat<_Str>(__lhs.c_str(), __lhs.size(),
3658:/usr/include/c++/14/bits/basic_string.h **** 				     __rhs, _Traits::length(__rhs),
3659:/usr/include/c++/14/bits/basic_string.h **** 				     __lhs.get_allocator());
3660:/usr/include/c++/14/bits/basic_string.h ****     }
3661:/usr/include/c++/14/bits/basic_string.h ****   /**
3662:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Concatenate string and character.
3663:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3664:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Last string.
3665:/usr/include/c++/14/bits/basic_string.h ****    *  @return  New string with @a __lhs followed by @a __rhs.
3666:/usr/include/c++/14/bits/basic_string.h ****    */
3667:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3668:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3669:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3670:/usr/include/c++/14/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs, _CharT __rhs)
3671:/usr/include/c++/14/bits/basic_string.h ****     {
3672:/usr/include/c++/14/bits/basic_string.h ****       typedef basic_string<_CharT, _Traits, _Alloc> _Str;
3673:/usr/include/c++/14/bits/basic_string.h ****       return std::__str_concat<_Str>(__lhs.c_str(), __lhs.size(),
3674:/usr/include/c++/14/bits/basic_string.h **** 				     __builtin_addressof(__rhs), 1,
3675:/usr/include/c++/14/bits/basic_string.h **** 				     __lhs.get_allocator());
3676:/usr/include/c++/14/bits/basic_string.h ****     }
3677:/usr/include/c++/14/bits/basic_string.h **** 
3678:/usr/include/c++/14/bits/basic_string.h **** #if __cplusplus >= 201103L
3679:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3680:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3681:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3682:/usr/include/c++/14/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
3683:/usr/include/c++/14/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3684:/usr/include/c++/14/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
3685:/usr/include/c++/14/bits/basic_string.h **** 
3686:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3687:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX20_CONSTEXPR
3688:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3689:/usr/include/c++/14/bits/basic_string.h ****     operator+(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3690:/usr/include/c++/14/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
3691:/usr/include/c++/14/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
GAS LISTING linobj/Ch02_03.s 			page 119


3692:/usr/include/c++/14/bits/basic_string.h **** 
3693:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3694:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3695:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3696:/usr/include/c++/14/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
3697:/usr/include/c++/14/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
3698:/usr/include/c++/14/bits/basic_string.h ****     {
3699:/usr/include/c++/14/bits/basic_string.h **** #if _GLIBCXX_USE_CXX11_ABI
3700:/usr/include/c++/14/bits/basic_string.h ****       using _Alloc_traits = allocator_traits<_Alloc>;
3701:/usr/include/c++/14/bits/basic_string.h ****       bool __use_rhs = false;
3702:/usr/include/c++/14/bits/basic_string.h ****       if _GLIBCXX17_CONSTEXPR (typename _Alloc_traits::is_always_equal{})
3703:/usr/include/c++/14/bits/basic_string.h **** 	__use_rhs = true;
3704:/usr/include/c++/14/bits/basic_string.h ****       else if (__lhs.get_allocator() == __rhs.get_allocator())
3705:/usr/include/c++/14/bits/basic_string.h **** 	__use_rhs = true;
3706:/usr/include/c++/14/bits/basic_string.h ****       if (__use_rhs)
3707:/usr/include/c++/14/bits/basic_string.h **** #endif
3708:/usr/include/c++/14/bits/basic_string.h **** 	{
3709:/usr/include/c++/14/bits/basic_string.h **** 	  const auto __size = __lhs.size() + __rhs.size();
3710:/usr/include/c++/14/bits/basic_string.h **** 	  if (__size > __lhs.capacity() && __size <= __rhs.capacity())
3711:/usr/include/c++/14/bits/basic_string.h **** 	    return std::move(__rhs.insert(0, __lhs));
3712:/usr/include/c++/14/bits/basic_string.h **** 	}
3713:/usr/include/c++/14/bits/basic_string.h ****       return std::move(__lhs.append(__rhs));
3714:/usr/include/c++/14/bits/basic_string.h ****     }
3715:/usr/include/c++/14/bits/basic_string.h **** 
3716:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3717:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3718:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3719:/usr/include/c++/14/bits/basic_string.h ****     operator+(const _CharT* __lhs,
3720:/usr/include/c++/14/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
3721:/usr/include/c++/14/bits/basic_string.h ****     { return std::move(__rhs.insert(0, __lhs)); }
3722:/usr/include/c++/14/bits/basic_string.h **** 
3723:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3724:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3725:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3726:/usr/include/c++/14/bits/basic_string.h ****     operator+(_CharT __lhs,
3727:/usr/include/c++/14/bits/basic_string.h **** 	      basic_string<_CharT, _Traits, _Alloc>&& __rhs)
3728:/usr/include/c++/14/bits/basic_string.h ****     { return std::move(__rhs.insert(0, 1, __lhs)); }
3729:/usr/include/c++/14/bits/basic_string.h **** 
3730:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3731:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3732:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3733:/usr/include/c++/14/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
3734:/usr/include/c++/14/bits/basic_string.h **** 	      const _CharT* __rhs)
3735:/usr/include/c++/14/bits/basic_string.h ****     { return std::move(__lhs.append(__rhs)); }
3736:/usr/include/c++/14/bits/basic_string.h **** 
3737:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3738:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3739:/usr/include/c++/14/bits/basic_string.h ****     inline basic_string<_CharT, _Traits, _Alloc>
3740:/usr/include/c++/14/bits/basic_string.h ****     operator+(basic_string<_CharT, _Traits, _Alloc>&& __lhs,
3741:/usr/include/c++/14/bits/basic_string.h **** 	      _CharT __rhs)
3742:/usr/include/c++/14/bits/basic_string.h ****     { return std::move(__lhs.append(1, __rhs)); }
3743:/usr/include/c++/14/bits/basic_string.h **** #endif
3744:/usr/include/c++/14/bits/basic_string.h **** 
3745:/usr/include/c++/14/bits/basic_string.h ****   // operator ==
3746:/usr/include/c++/14/bits/basic_string.h ****   /**
3747:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test equivalence of two strings.
3748:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
GAS LISTING linobj/Ch02_03.s 			page 120


3749:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Second string.
3750:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
3751:/usr/include/c++/14/bits/basic_string.h ****    */
3752:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3753:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3754:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3755:/usr/include/c++/14/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3756:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3757:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
3758:/usr/include/c++/14/bits/basic_string.h ****     {
3759:/usr/include/c++/14/bits/basic_string.h ****       return __lhs.size() == __rhs.size()
3760:/usr/include/c++/14/bits/basic_string.h **** 	       && !_Traits::compare(__lhs.data(), __rhs.data(), __lhs.size());
3761:/usr/include/c++/14/bits/basic_string.h ****     }
3762:/usr/include/c++/14/bits/basic_string.h **** 
3763:/usr/include/c++/14/bits/basic_string.h ****   /**
3764:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test equivalence of string and C string.
3765:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  String.
3766:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  C string.
3767:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) == 0.  False otherwise.
3768:/usr/include/c++/14/bits/basic_string.h ****    */
3769:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3770:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD _GLIBCXX20_CONSTEXPR
3771:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3772:/usr/include/c++/14/bits/basic_string.h ****     operator==(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3773:/usr/include/c++/14/bits/basic_string.h **** 	       const _CharT* __rhs)
3774:/usr/include/c++/14/bits/basic_string.h ****     {
3775:/usr/include/c++/14/bits/basic_string.h ****       return __lhs.size() == _Traits::length(__rhs)
3776:/usr/include/c++/14/bits/basic_string.h **** 	       && !_Traits::compare(__lhs.data(), __rhs, __lhs.size());
3777:/usr/include/c++/14/bits/basic_string.h ****     }
3778:/usr/include/c++/14/bits/basic_string.h **** 
3779:/usr/include/c++/14/bits/basic_string.h **** #if __cpp_lib_three_way_comparison
3780:/usr/include/c++/14/bits/basic_string.h ****   /**
3781:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
3782:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  A string.
3783:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  A null-terminated string.
3784:/usr/include/c++/14/bits/basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
3785:/usr/include/c++/14/bits/basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
3786:/usr/include/c++/14/bits/basic_string.h ****    */
3787:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3788:/usr/include/c++/14/bits/basic_string.h ****     [[nodiscard]]
3789:/usr/include/c++/14/bits/basic_string.h ****     constexpr auto
3790:/usr/include/c++/14/bits/basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3791:/usr/include/c++/14/bits/basic_string.h **** 		const basic_string<_CharT, _Traits, _Alloc>& __rhs) noexcept
3792:/usr/include/c++/14/bits/basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
3793:/usr/include/c++/14/bits/basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
3794:/usr/include/c++/14/bits/basic_string.h **** 
3795:/usr/include/c++/14/bits/basic_string.h ****   /**
3796:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Three-way comparison of a string and a C string.
3797:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  A string.
3798:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  A null-terminated string.
3799:/usr/include/c++/14/bits/basic_string.h ****    *  @return  A value indicating whether `__lhs` is less than, equal to,
3800:/usr/include/c++/14/bits/basic_string.h ****    *	       greater than, or incomparable with `__rhs`.
3801:/usr/include/c++/14/bits/basic_string.h ****    */
3802:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3803:/usr/include/c++/14/bits/basic_string.h ****     [[nodiscard]]
3804:/usr/include/c++/14/bits/basic_string.h ****     constexpr auto
3805:/usr/include/c++/14/bits/basic_string.h ****     operator<=>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
GAS LISTING linobj/Ch02_03.s 			page 121


3806:/usr/include/c++/14/bits/basic_string.h **** 		const _CharT* __rhs) noexcept
3807:/usr/include/c++/14/bits/basic_string.h ****     -> decltype(__detail::__char_traits_cmp_cat<_Traits>(0))
3808:/usr/include/c++/14/bits/basic_string.h ****     { return __detail::__char_traits_cmp_cat<_Traits>(__lhs.compare(__rhs)); }
3809:/usr/include/c++/14/bits/basic_string.h **** #else
3810:/usr/include/c++/14/bits/basic_string.h ****   /**
3811:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test equivalence of C string and string.
3812:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  C string.
3813:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  String.
3814:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) == 0.  False otherwise.
3815:/usr/include/c++/14/bits/basic_string.h ****    */
3816:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3817:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3818:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3819:/usr/include/c++/14/bits/basic_string.h ****     operator==(const _CharT* __lhs,
3820:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3821:/usr/include/c++/14/bits/basic_string.h ****     { return __rhs == __lhs; }
3822:/usr/include/c++/14/bits/basic_string.h **** 
3823:/usr/include/c++/14/bits/basic_string.h ****   // operator !=
3824:/usr/include/c++/14/bits/basic_string.h ****   /**
3825:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test difference of two strings.
3826:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3827:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Second string.
3828:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
3829:/usr/include/c++/14/bits/basic_string.h ****    */
3830:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3831:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3832:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3833:/usr/include/c++/14/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3834:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3835:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
3836:/usr/include/c++/14/bits/basic_string.h ****     { return !(__lhs == __rhs); }
3837:/usr/include/c++/14/bits/basic_string.h **** 
3838:/usr/include/c++/14/bits/basic_string.h ****   /**
3839:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test difference of C string and string.
3840:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  C string.
3841:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  String.
3842:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __rhs.compare(@a __lhs) != 0.  False otherwise.
3843:/usr/include/c++/14/bits/basic_string.h ****    */
3844:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3845:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3846:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3847:/usr/include/c++/14/bits/basic_string.h ****     operator!=(const _CharT* __lhs,
3848:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3849:/usr/include/c++/14/bits/basic_string.h ****     { return !(__rhs == __lhs); }
3850:/usr/include/c++/14/bits/basic_string.h **** 
3851:/usr/include/c++/14/bits/basic_string.h ****   /**
3852:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test difference of string and C string.
3853:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  String.
3854:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  C string.
3855:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs.compare(@a __rhs) != 0.  False otherwise.
3856:/usr/include/c++/14/bits/basic_string.h ****    */
3857:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3858:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3859:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3860:/usr/include/c++/14/bits/basic_string.h ****     operator!=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3861:/usr/include/c++/14/bits/basic_string.h **** 	       const _CharT* __rhs)
3862:/usr/include/c++/14/bits/basic_string.h ****     { return !(__lhs == __rhs); }
GAS LISTING linobj/Ch02_03.s 			page 122


3863:/usr/include/c++/14/bits/basic_string.h **** 
3864:/usr/include/c++/14/bits/basic_string.h ****   // operator <
3865:/usr/include/c++/14/bits/basic_string.h ****   /**
3866:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if string precedes string.
3867:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3868:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Second string.
3869:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
3870:/usr/include/c++/14/bits/basic_string.h ****    */
3871:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3872:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3873:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3874:/usr/include/c++/14/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3875:/usr/include/c++/14/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3876:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
3877:/usr/include/c++/14/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
3878:/usr/include/c++/14/bits/basic_string.h **** 
3879:/usr/include/c++/14/bits/basic_string.h ****   /**
3880:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if string precedes C string.
3881:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  String.
3882:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  C string.
3883:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
3884:/usr/include/c++/14/bits/basic_string.h ****    */
3885:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3886:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3887:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3888:/usr/include/c++/14/bits/basic_string.h ****     operator<(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3889:/usr/include/c++/14/bits/basic_string.h **** 	      const _CharT* __rhs)
3890:/usr/include/c++/14/bits/basic_string.h ****     { return __lhs.compare(__rhs) < 0; }
3891:/usr/include/c++/14/bits/basic_string.h **** 
3892:/usr/include/c++/14/bits/basic_string.h ****   /**
3893:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if C string precedes string.
3894:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  C string.
3895:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  String.
3896:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs precedes @a __rhs.  False otherwise.
3897:/usr/include/c++/14/bits/basic_string.h ****    */
3898:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3899:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3900:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3901:/usr/include/c++/14/bits/basic_string.h ****     operator<(const _CharT* __lhs,
3902:/usr/include/c++/14/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3903:/usr/include/c++/14/bits/basic_string.h ****     { return __rhs.compare(__lhs) > 0; }
3904:/usr/include/c++/14/bits/basic_string.h **** 
3905:/usr/include/c++/14/bits/basic_string.h ****   // operator >
3906:/usr/include/c++/14/bits/basic_string.h ****   /**
3907:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if string follows string.
3908:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3909:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Second string.
3910:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
3911:/usr/include/c++/14/bits/basic_string.h ****    */
3912:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3913:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3914:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3915:/usr/include/c++/14/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3916:/usr/include/c++/14/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3917:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
3918:/usr/include/c++/14/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
3919:/usr/include/c++/14/bits/basic_string.h **** 
GAS LISTING linobj/Ch02_03.s 			page 123


3920:/usr/include/c++/14/bits/basic_string.h ****   /**
3921:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if string follows C string.
3922:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  String.
3923:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  C string.
3924:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
3925:/usr/include/c++/14/bits/basic_string.h ****    */
3926:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3927:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3928:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3929:/usr/include/c++/14/bits/basic_string.h ****     operator>(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3930:/usr/include/c++/14/bits/basic_string.h **** 	      const _CharT* __rhs)
3931:/usr/include/c++/14/bits/basic_string.h ****     { return __lhs.compare(__rhs) > 0; }
3932:/usr/include/c++/14/bits/basic_string.h **** 
3933:/usr/include/c++/14/bits/basic_string.h ****   /**
3934:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if C string follows string.
3935:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  C string.
3936:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  String.
3937:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs follows @a __rhs.  False otherwise.
3938:/usr/include/c++/14/bits/basic_string.h ****    */
3939:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3940:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3941:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3942:/usr/include/c++/14/bits/basic_string.h ****     operator>(const _CharT* __lhs,
3943:/usr/include/c++/14/bits/basic_string.h **** 	      const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3944:/usr/include/c++/14/bits/basic_string.h ****     { return __rhs.compare(__lhs) < 0; }
3945:/usr/include/c++/14/bits/basic_string.h **** 
3946:/usr/include/c++/14/bits/basic_string.h ****   // operator <=
3947:/usr/include/c++/14/bits/basic_string.h ****   /**
3948:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if string doesn't follow string.
3949:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3950:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Second string.
3951:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
3952:/usr/include/c++/14/bits/basic_string.h ****    */
3953:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3954:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3955:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3956:/usr/include/c++/14/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3957:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3958:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
3959:/usr/include/c++/14/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
3960:/usr/include/c++/14/bits/basic_string.h **** 
3961:/usr/include/c++/14/bits/basic_string.h ****   /**
3962:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if string doesn't follow C string.
3963:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  String.
3964:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  C string.
3965:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
3966:/usr/include/c++/14/bits/basic_string.h ****    */
3967:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3968:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3969:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3970:/usr/include/c++/14/bits/basic_string.h ****     operator<=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3971:/usr/include/c++/14/bits/basic_string.h **** 	       const _CharT* __rhs)
3972:/usr/include/c++/14/bits/basic_string.h ****     { return __lhs.compare(__rhs) <= 0; }
3973:/usr/include/c++/14/bits/basic_string.h **** 
3974:/usr/include/c++/14/bits/basic_string.h ****   /**
3975:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if C string doesn't follow string.
3976:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  C string.
GAS LISTING linobj/Ch02_03.s 			page 124


3977:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  String.
3978:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't follow @a __rhs.  False otherwise.
3979:/usr/include/c++/14/bits/basic_string.h ****    */
3980:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3981:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3982:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3983:/usr/include/c++/14/bits/basic_string.h ****     operator<=(const _CharT* __lhs,
3984:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3985:/usr/include/c++/14/bits/basic_string.h ****     { return __rhs.compare(__lhs) >= 0; }
3986:/usr/include/c++/14/bits/basic_string.h **** 
3987:/usr/include/c++/14/bits/basic_string.h ****   // operator >=
3988:/usr/include/c++/14/bits/basic_string.h ****   /**
3989:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if string doesn't precede string.
3990:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
3991:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Second string.
3992:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
3993:/usr/include/c++/14/bits/basic_string.h ****    */
3994:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
3995:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
3996:/usr/include/c++/14/bits/basic_string.h ****     inline bool
3997:/usr/include/c++/14/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
3998:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __rhs)
3999:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT
4000:/usr/include/c++/14/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
4001:/usr/include/c++/14/bits/basic_string.h **** 
4002:/usr/include/c++/14/bits/basic_string.h ****   /**
4003:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if string doesn't precede C string.
4004:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  String.
4005:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  C string.
4006:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
4007:/usr/include/c++/14/bits/basic_string.h ****    */
4008:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4009:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
4010:/usr/include/c++/14/bits/basic_string.h ****     inline bool
4011:/usr/include/c++/14/bits/basic_string.h ****     operator>=(const basic_string<_CharT, _Traits, _Alloc>& __lhs,
4012:/usr/include/c++/14/bits/basic_string.h **** 	       const _CharT* __rhs)
4013:/usr/include/c++/14/bits/basic_string.h ****     { return __lhs.compare(__rhs) >= 0; }
4014:/usr/include/c++/14/bits/basic_string.h **** 
4015:/usr/include/c++/14/bits/basic_string.h ****   /**
4016:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Test if C string doesn't precede string.
4017:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  C string.
4018:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  String.
4019:/usr/include/c++/14/bits/basic_string.h ****    *  @return  True if @a __lhs doesn't precede @a __rhs.  False otherwise.
4020:/usr/include/c++/14/bits/basic_string.h ****    */
4021:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4022:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NODISCARD
4023:/usr/include/c++/14/bits/basic_string.h ****     inline bool
4024:/usr/include/c++/14/bits/basic_string.h ****     operator>=(const _CharT* __lhs,
4025:/usr/include/c++/14/bits/basic_string.h **** 	     const basic_string<_CharT, _Traits, _Alloc>& __rhs)
4026:/usr/include/c++/14/bits/basic_string.h ****     { return __rhs.compare(__lhs) <= 0; }
4027:/usr/include/c++/14/bits/basic_string.h **** #endif // three-way comparison
4028:/usr/include/c++/14/bits/basic_string.h **** 
4029:/usr/include/c++/14/bits/basic_string.h ****   /**
4030:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Swap contents of two strings.
4031:/usr/include/c++/14/bits/basic_string.h ****    *  @param __lhs  First string.
4032:/usr/include/c++/14/bits/basic_string.h ****    *  @param __rhs  Second string.
4033:/usr/include/c++/14/bits/basic_string.h ****    *
GAS LISTING linobj/Ch02_03.s 			page 125


4034:/usr/include/c++/14/bits/basic_string.h ****    *  Exchanges the contents of @a __lhs and @a __rhs in constant time.
4035:/usr/include/c++/14/bits/basic_string.h ****    */
4036:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4037:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX20_CONSTEXPR
4038:/usr/include/c++/14/bits/basic_string.h ****     inline void
4039:/usr/include/c++/14/bits/basic_string.h ****     swap(basic_string<_CharT, _Traits, _Alloc>& __lhs,
4040:/usr/include/c++/14/bits/basic_string.h **** 	 basic_string<_CharT, _Traits, _Alloc>& __rhs)
4041:/usr/include/c++/14/bits/basic_string.h ****     _GLIBCXX_NOEXCEPT_IF(noexcept(__lhs.swap(__rhs)))
4042:/usr/include/c++/14/bits/basic_string.h ****     { __lhs.swap(__rhs); }
4043:/usr/include/c++/14/bits/basic_string.h **** 
4044:/usr/include/c++/14/bits/basic_string.h **** 
4045:/usr/include/c++/14/bits/basic_string.h ****   /**
4046:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Read stream into a string.
4047:/usr/include/c++/14/bits/basic_string.h ****    *  @param __is  Input stream.
4048:/usr/include/c++/14/bits/basic_string.h ****    *  @param __str  Buffer to store into.
4049:/usr/include/c++/14/bits/basic_string.h ****    *  @return  Reference to the input stream.
4050:/usr/include/c++/14/bits/basic_string.h ****    *
4051:/usr/include/c++/14/bits/basic_string.h ****    *  Stores characters from @a __is into @a __str until whitespace is
4052:/usr/include/c++/14/bits/basic_string.h ****    *  found, the end of the stream is encountered, or str.max_size()
4053:/usr/include/c++/14/bits/basic_string.h ****    *  is reached.  If is.width() is non-zero, that is the limit on the
4054:/usr/include/c++/14/bits/basic_string.h ****    *  number of characters stored into @a __str.  Any previous
4055:/usr/include/c++/14/bits/basic_string.h ****    *  contents of @a __str are erased.
4056:/usr/include/c++/14/bits/basic_string.h ****    */
4057:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4058:/usr/include/c++/14/bits/basic_string.h ****     basic_istream<_CharT, _Traits>&
4059:/usr/include/c++/14/bits/basic_string.h ****     operator>>(basic_istream<_CharT, _Traits>& __is,
4060:/usr/include/c++/14/bits/basic_string.h **** 	       basic_string<_CharT, _Traits, _Alloc>& __str);
4061:/usr/include/c++/14/bits/basic_string.h **** 
4062:/usr/include/c++/14/bits/basic_string.h ****   template<>
4063:/usr/include/c++/14/bits/basic_string.h ****     basic_istream<char>&
4064:/usr/include/c++/14/bits/basic_string.h ****     operator>>(basic_istream<char>& __is, basic_string<char>& __str);
4065:/usr/include/c++/14/bits/basic_string.h **** 
4066:/usr/include/c++/14/bits/basic_string.h ****   /**
4067:/usr/include/c++/14/bits/basic_string.h ****    *  @brief  Write string to a stream.
4068:/usr/include/c++/14/bits/basic_string.h ****    *  @param __os  Output stream.
4069:/usr/include/c++/14/bits/basic_string.h ****    *  @param __str  String to write out.
4070:/usr/include/c++/14/bits/basic_string.h ****    *  @return  Reference to the output stream.
4071:/usr/include/c++/14/bits/basic_string.h ****    *
4072:/usr/include/c++/14/bits/basic_string.h ****    *  Output characters of @a __str into os following the same rules as for
4073:/usr/include/c++/14/bits/basic_string.h ****    *  writing a C string.
4074:/usr/include/c++/14/bits/basic_string.h ****    */
4075:/usr/include/c++/14/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
4076:/usr/include/c++/14/bits/basic_string.h ****     inline basic_ostream<_CharT, _Traits>&
4077:/usr/include/c++/14/bits/basic_string.h ****     operator<<(basic_ostream<_CharT, _Traits>& __os,
4078:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
4079:/usr/include/c++/14/bits/basic_string.h ****     {
4080:/usr/include/c++/14/bits/basic_string.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
4081:/usr/include/c++/14/bits/basic_string.h ****       // 586. string inserter not a formatted function
4082:/usr/include/c++/14/bits/basic_string.h ****       return __ostream_insert(__os, __str.data(), __str.size());
 714              		.loc 4 4082 30 discriminator 2 view .LVU187
 715 027a 488B5424 		movq	56(%rsp), %rdx
 715      38
 716 027f 488B7424 		movq	48(%rsp), %rsi
 716      30
 717              	.LBE800:
 718              	.LBE799:
  20:Ch02_03.cpp   ****     MulI32a();
GAS LISTING linobj/Ch02_03.s 			page 126


 719              		.loc 1 20 31 view .LVU188
 720 0284 4889C7   		movq	%rax, %rdi
 721              	.LVL58:
 722              	.LBB805:
 723              	.LBI799:
4077:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 724              		.loc 4 4077 5 is_stmt 1 view .LVU189
 725              	.LBB804:
 726              	.LBB801:
 727              	.LBI801:
1076:/usr/include/c++/14/bits/basic_string.h ****       { return _M_string_length; }
 728              		.loc 4 1076 7 view .LVU190
1076:/usr/include/c++/14/bits/basic_string.h ****       { return _M_string_length; }
 729              		.loc 4 1076 7 is_stmt 0 view .LVU191
 730              	.LBE801:
 731              	.LBB802:
 732              	.LBI802:
2653:/usr/include/c++/14/bits/basic_string.h ****       { return _M_data(); }
 733              		.loc 4 2653 7 is_stmt 1 view .LVU192
 734              	.LBB803:
 735              	.LBI803:
 227:/usr/include/c++/14/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 736              		.loc 4 227 7 view .LVU193
 227:/usr/include/c++/14/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 737              		.loc 4 227 7 is_stmt 0 view .LVU194
 738              	.LBE803:
 739              	.LBE802:
 740              		.loc 4 4082 30 discriminator 2 view .LVU195
 741 0287 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 741      00
 742              	.LVL59:
 743              		.loc 4 4082 30 discriminator 2 view .LVU196
 744 028c 4889C7   		movq	%rax, %rdi
 745              	.LVL60:
 746              		.loc 4 4082 30 discriminator 2 view .LVU197
 747              	.LBE804:
 748              	.LBE805:
  20:Ch02_03.cpp   ****     MulI32a();
 749              		.loc 1 20 31 discriminator 2 view .LVU198
 750 028f BE0A0000 		movl	$10, %esi
 750      00
 751 0294 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
 751      00
 752              	.LVL61:
  21:Ch02_03.cpp   ****     std::cout << nl << sep << nl;
 753              		.loc 1 21 5 is_stmt 1 view .LVU199
 754              	.LBB806:
 755              	.LBI806:
  58:Ch02_03.cpp   ****         }
  59:Ch02_03.cpp   ****     }
  60:Ch02_03.cpp   **** }
  61:Ch02_03.cpp   **** 
  62:Ch02_03.cpp   **** static void MulI32a(void)
 756              		.loc 1 62 13 view .LVU200
 757              	.LBB807:
  63:Ch02_03.cpp   **** {
  64:Ch02_03.cpp   ****     const char nl = '\n';
GAS LISTING linobj/Ch02_03.s 			page 127


 758              		.loc 1 64 5 view .LVU201
  65:Ch02_03.cpp   ****     XmmVal a, b, c;
 759              		.loc 1 65 5 view .LVU202
  66:Ch02_03.cpp   **** 
  67:Ch02_03.cpp   ****     a.m_I32[0] = 10;        b.m_I32[0] = -500;
 760              		.loc 1 67 5 view .LVU203
 761              		.loc 1 67 22 view .LVU204
  68:Ch02_03.cpp   ****     a.m_I32[1] = 3000;      b.m_I32[1] = 100;
 762              		.loc 1 68 5 view .LVU205
 763              		.loc 1 68 24 view .LVU206
  69:Ch02_03.cpp   ****     a.m_I32[2] = -2000;     b.m_I32[2] = -12000;
 764              		.loc 1 69 5 view .LVU207
 765              		.loc 1 69 25 view .LVU208
  70:Ch02_03.cpp   ****     a.m_I32[3] = 4200;      b.m_I32[3] = 1000;
 766              		.loc 1 70 5 view .LVU209
  67:Ch02_03.cpp   ****     a.m_I32[1] = 3000;      b.m_I32[1] = 100;
 767              		.loc 1 67 16 is_stmt 0 view .LVU210
 768 0299 C5F96F05 		vmovdqa	.LC9(%rip), %xmm0
 768      00000000 
  71:Ch02_03.cpp   **** 
  72:Ch02_03.cpp   ****     MulI32a_Iavx(&c, &a, &b);
 769              		.loc 1 72 17 view .LVU211
 770 02a1 4C89EA   		movq	%r13, %rdx
 771 02a4 4C89E6   		movq	%r12, %rsi
 772 02a7 4889EF   		movq	%rbp, %rdi
  67:Ch02_03.cpp   ****     a.m_I32[1] = 3000;      b.m_I32[1] = 100;
 773              		.loc 1 67 16 view .LVU212
 774 02aa C5F97F44 		vmovdqa	%xmm0, 16(%rsp)
 774      2410
  70:Ch02_03.cpp   **** 
 775              		.loc 1 70 24 is_stmt 1 view .LVU213
  67:Ch02_03.cpp   ****     a.m_I32[1] = 3000;      b.m_I32[1] = 100;
 776              		.loc 1 67 33 is_stmt 0 view .LVU214
 777 02b0 C5F96F05 		vmovdqa	.LC10(%rip), %xmm0
 777      00000000 
 778 02b8 C5F97F44 		vmovdqa	%xmm0, 32(%rsp)
 778      2420
 779              		.loc 1 72 5 is_stmt 1 view .LVU215
 780              		.loc 1 72 17 is_stmt 0 view .LVU216
 781 02be E8000000 		call	_Z12MulI32a_IavxP6XmmValPKS_S2_
 781      00
 782              	.LVL62:
  73:Ch02_03.cpp   **** 
  74:Ch02_03.cpp   ****     std::cout << "\nResults for MulI32a_Iavx\n";
 783              		.loc 1 74 5 is_stmt 1 view .LVU217
 784              	.LBB808:
 785              	.LBI808:
 668:/usr/include/c++/14/ostream ****     {
 786              		.loc 5 668 5 view .LVU218
 787              	.LBB809:
 788              		.loc 5 673 18 is_stmt 0 view .LVU219
 789 02c3 BA1A0000 		movl	$26, %edx
 789      00
 790 02c8 BE000000 		movl	$.LC11, %esi
 790      00
 791 02cd BF000000 		movl	$_ZSt4cout, %edi
 791      00
GAS LISTING linobj/Ch02_03.s 			page 128


 792 02d2 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 792      00
 793              	.LVL63:
 794              	.LBE809:
 795              	.LBE808:
 796              	.LBB810:
  75:Ch02_03.cpp   ****     for (size_t i = 0; i < 4; i++)
 797              		.loc 1 75 17 view .LVU220
 798 02d7 31DB     		xorl	%ebx, %ebx
 799              	.LVL64:
 800              	.L11:
  76:Ch02_03.cpp   ****     {
  77:Ch02_03.cpp   ****         std::cout << "a[" << i << "]: " << std::setw(10) << a.m_I32[i] << "  ";
 801              		.loc 1 77 9 is_stmt 1 view .LVU221
 802              	.LBB811:
 803              	.LBI811:
 668:/usr/include/c++/14/ostream ****     {
 804              		.loc 5 668 5 view .LVU222
 805              	.LBB812:
 806              		.loc 5 673 18 is_stmt 0 view .LVU223
 807 02d9 BA020000 		movl	$2, %edx
 807      00
 808 02de BE000000 		movl	$.LC3, %esi
 808      00
 809 02e3 BF000000 		movl	$_ZSt4cout, %edi
 809      00
 810 02e8 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 810      00
 811              	.LVL65:
 812              		.loc 5 673 18 view .LVU224
 813              	.LBE812:
 814              	.LBE811:
 815              	.LBB813:
 816              	.LBI813:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 817              		.loc 5 178 7 is_stmt 1 view .LVU225
 818              	.LBB814:
 179:/usr/include/c++/14/ostream **** 
 819              		.loc 5 179 25 is_stmt 0 view .LVU226
 820 02ed 4889DE   		movq	%rbx, %rsi
 821 02f0 BF000000 		movl	$_ZSt4cout, %edi
 821      00
 822 02f5 E8000000 		call	_ZNSo9_M_insertImEERSoT_
 822      00
 823              	.LVL66:
 824              	.LBE814:
 825              	.LBE813:
 826              	.LBB816:
 827              	.LBB817:
 828              		.loc 5 673 18 view .LVU227
 829 02fa BA030000 		movl	$3, %edx
 829      00
 830 02ff BE000000 		movl	$.LC4, %esi
 830      00
 831 0304 4889C7   		movq	%rax, %rdi
 832              	.LBE817:
 833              	.LBE816:
GAS LISTING linobj/Ch02_03.s 			page 129


 834              	.LBB819:
 835              	.LBB815:
 179:/usr/include/c++/14/ostream **** 
 836              		.loc 5 179 25 view .LVU228
 837 0307 4989C7   		movq	%rax, %r15
 838              	.LVL67:
 179:/usr/include/c++/14/ostream **** 
 839              		.loc 5 179 25 view .LVU229
 840              	.LBE815:
 841              	.LBE819:
 842              	.LBB820:
 843              	.LBI816:
 668:/usr/include/c++/14/ostream ****     {
 844              		.loc 5 668 5 is_stmt 1 view .LVU230
 845              	.LBB818:
 846              		.loc 5 673 18 is_stmt 0 view .LVU231
 847 030a E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 847      00
 848              	.LVL68:
 849              		.loc 5 673 18 view .LVU232
 850              	.LBE818:
 851              	.LBE820:
 852              	.LBB821:
 853              	.LBI821:
 245:/usr/include/c++/14/iomanip ****     {
 854              		.loc 6 245 5 is_stmt 1 view .LVU233
 855              	.LBB822:
 856              	.LBB823:
 857              	.LBI823:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 858              		.loc 7 784 5 view .LVU234
 859              	.LBB824:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 860              		.loc 7 786 7 view .LVU235
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 861              		.loc 7 787 7 view .LVU236
 862              	.LBE824:
 863              	.LBE823:
 864              		.loc 6 247 17 is_stmt 0 view .LVU237
 865 030f 498B07   		movq	(%r15), %rax
 866              	.LBE822:
 867              	.LBE821:
 868              		.loc 1 77 75 discriminator 2 view .LVU238
 869 0312 4C89FF   		movq	%r15, %rdi
 870              	.LBB828:
 871              	.LBB827:
 872              	.LBB826:
 873              	.LBB825:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 874              		.loc 7 787 16 view .LVU239
 875 0315 488B40E8 		movq	-24(%rax), %rax
 876 0319 49C74407 		movq	$10, 16(%r15,%rax)
 876      100A0000 
 876      00
 877              	.LVL69:
 878              		.loc 7 788 7 is_stmt 1 view .LVU240
 879              		.loc 7 788 7 is_stmt 0 view .LVU241
GAS LISTING linobj/Ch02_03.s 			page 130


 880              	.LBE825:
 881              	.LBE826:
 882              	.LBE827:
 883              	.LBE828:
 884              		.loc 1 77 75 discriminator 2 view .LVU242
 885 0322 418B349C 		movl	(%r12,%rbx,4), %esi
 886 0326 E8000000 		call	_ZNSolsEi
 886      00
 887              	.LVL70:
 888 032b 4889C7   		movq	%rax, %rdi
 889              	.LVL71:
 890              	.LBB829:
 891              	.LBI829:
 668:/usr/include/c++/14/ostream ****     {
 892              		.loc 5 668 5 is_stmt 1 view .LVU243
 893              	.LBB830:
 894              		.loc 5 673 18 is_stmt 0 view .LVU244
 895 032e BA020000 		movl	$2, %edx
 895      00
 896 0333 BE000000 		movl	$.LC5, %esi
 896      00
 897 0338 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 897      00
 898              	.LVL72:
 899              		.loc 5 673 18 view .LVU245
 900              	.LBE830:
 901              	.LBE829:
  78:Ch02_03.cpp   ****         std::cout << "b[" << i << "]: " << std::setw(10) << b.m_I32[i] << "  ";
 902              		.loc 1 78 9 is_stmt 1 view .LVU246
 903              	.LBB831:
 904              	.LBI831:
 668:/usr/include/c++/14/ostream ****     {
 905              		.loc 5 668 5 view .LVU247
 906              	.LBB832:
 907              		.loc 5 673 18 is_stmt 0 view .LVU248
 908 033d BA020000 		movl	$2, %edx
 908      00
 909 0342 BE000000 		movl	$.LC6, %esi
 909      00
 910 0347 BF000000 		movl	$_ZSt4cout, %edi
 910      00
 911 034c E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 911      00
 912              	.LVL73:
 913              		.loc 5 673 18 view .LVU249
 914              	.LBE832:
 915              	.LBE831:
 916              	.LBB833:
 917              	.LBI833:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 918              		.loc 5 178 7 is_stmt 1 view .LVU250
 919              	.LBB834:
 179:/usr/include/c++/14/ostream **** 
 920              		.loc 5 179 25 is_stmt 0 view .LVU251
 921 0351 4889DE   		movq	%rbx, %rsi
 922 0354 BF000000 		movl	$_ZSt4cout, %edi
 922      00
GAS LISTING linobj/Ch02_03.s 			page 131


 923 0359 E8000000 		call	_ZNSo9_M_insertImEERSoT_
 923      00
 924              	.LVL74:
 925              	.LBE834:
 926              	.LBE833:
 927              	.LBB836:
 928              	.LBB837:
 929              		.loc 5 673 18 view .LVU252
 930 035e BA030000 		movl	$3, %edx
 930      00
 931 0363 BE000000 		movl	$.LC4, %esi
 931      00
 932 0368 4889C7   		movq	%rax, %rdi
 933              	.LBE837:
 934              	.LBE836:
 935              	.LBB839:
 936              	.LBB835:
 179:/usr/include/c++/14/ostream **** 
 937              		.loc 5 179 25 view .LVU253
 938 036b 4989C7   		movq	%rax, %r15
 939              	.LVL75:
 179:/usr/include/c++/14/ostream **** 
 940              		.loc 5 179 25 view .LVU254
 941              	.LBE835:
 942              	.LBE839:
 943              	.LBB840:
 944              	.LBI836:
 668:/usr/include/c++/14/ostream ****     {
 945              		.loc 5 668 5 is_stmt 1 view .LVU255
 946              	.LBB838:
 947              		.loc 5 673 18 is_stmt 0 view .LVU256
 948 036e E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 948      00
 949              	.LVL76:
 950              		.loc 5 673 18 view .LVU257
 951              	.LBE838:
 952              	.LBE840:
 953              	.LBB841:
 954              	.LBI841:
 245:/usr/include/c++/14/iomanip ****     {
 955              		.loc 6 245 5 is_stmt 1 view .LVU258
 956              	.LBB842:
 957              	.LBB843:
 958              	.LBI843:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 959              		.loc 7 784 5 view .LVU259
 960              	.LBB844:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 961              		.loc 7 786 7 view .LVU260
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 962              		.loc 7 787 7 view .LVU261
 963              	.LBE844:
 964              	.LBE843:
 965              		.loc 6 247 17 is_stmt 0 view .LVU262
 966 0373 498B07   		movq	(%r15), %rax
 967              	.LBE842:
 968              	.LBE841:
GAS LISTING linobj/Ch02_03.s 			page 132


 969              		.loc 1 78 75 discriminator 2 view .LVU263
 970 0376 4C89FF   		movq	%r15, %rdi
 971              	.LBB848:
 972              	.LBB847:
 973              	.LBB846:
 974              	.LBB845:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 975              		.loc 7 787 16 view .LVU264
 976 0379 488B40E8 		movq	-24(%rax), %rax
 977 037d 49C74407 		movq	$10, 16(%r15,%rax)
 977      100A0000 
 977      00
 978              	.LVL77:
 979              		.loc 7 788 7 is_stmt 1 view .LVU265
 980              		.loc 7 788 7 is_stmt 0 view .LVU266
 981              	.LBE845:
 982              	.LBE846:
 983              	.LBE847:
 984              	.LBE848:
 985              		.loc 1 78 75 discriminator 2 view .LVU267
 986 0386 418B749D 		movl	0(%r13,%rbx,4), %esi
 986      00
 987 038b E8000000 		call	_ZNSolsEi
 987      00
 988              	.LVL78:
 989 0390 4889C7   		movq	%rax, %rdi
 990              	.LVL79:
 991              	.LBB849:
 992              	.LBI849:
 668:/usr/include/c++/14/ostream ****     {
 993              		.loc 5 668 5 is_stmt 1 view .LVU268
 994              	.LBB850:
 995              		.loc 5 673 18 is_stmt 0 view .LVU269
 996 0393 BA020000 		movl	$2, %edx
 996      00
 997 0398 BE000000 		movl	$.LC5, %esi
 997      00
 998 039d E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 998      00
 999              	.LVL80:
 1000              		.loc 5 673 18 view .LVU270
 1001              	.LBE850:
 1002              	.LBE849:
  79:Ch02_03.cpp   ****         std::cout << "c[" << i << "]: " << std::setw(10) << c.m_I32[i] << nl;
 1003              		.loc 1 79 9 is_stmt 1 view .LVU271
 1004              	.LBB851:
 1005              	.LBI851:
 668:/usr/include/c++/14/ostream ****     {
 1006              		.loc 5 668 5 view .LVU272
 1007              	.LBB852:
 1008              		.loc 5 673 18 is_stmt 0 view .LVU273
 1009 03a2 BA020000 		movl	$2, %edx
 1009      00
 1010 03a7 BE000000 		movl	$.LC12, %esi
 1010      00
 1011 03ac BF000000 		movl	$_ZSt4cout, %edi
 1011      00
GAS LISTING linobj/Ch02_03.s 			page 133


 1012 03b1 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1012      00
 1013              	.LVL81:
 1014              		.loc 5 673 18 view .LVU274
 1015              	.LBE852:
 1016              	.LBE851:
 1017              	.LBB853:
 1018              	.LBI853:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 1019              		.loc 5 178 7 is_stmt 1 view .LVU275
 1020              	.LBB854:
 179:/usr/include/c++/14/ostream **** 
 1021              		.loc 5 179 25 is_stmt 0 view .LVU276
 1022 03b6 4889DE   		movq	%rbx, %rsi
 1023 03b9 BF000000 		movl	$_ZSt4cout, %edi
 1023      00
 1024 03be E8000000 		call	_ZNSo9_M_insertImEERSoT_
 1024      00
 1025              	.LVL82:
 1026              	.LBE854:
 1027              	.LBE853:
 1028              	.LBB856:
 1029              	.LBB857:
 1030              		.loc 5 673 18 view .LVU277
 1031 03c3 BA030000 		movl	$3, %edx
 1031      00
 1032 03c8 BE000000 		movl	$.LC4, %esi
 1032      00
 1033 03cd 4889C7   		movq	%rax, %rdi
 1034              	.LBE857:
 1035              	.LBE856:
 1036              	.LBB859:
 1037              	.LBB855:
 179:/usr/include/c++/14/ostream **** 
 1038              		.loc 5 179 25 view .LVU278
 1039 03d0 4989C7   		movq	%rax, %r15
 1040              	.LVL83:
 179:/usr/include/c++/14/ostream **** 
 1041              		.loc 5 179 25 view .LVU279
 1042              	.LBE855:
 1043              	.LBE859:
 1044              	.LBB860:
 1045              	.LBI856:
 668:/usr/include/c++/14/ostream ****     {
 1046              		.loc 5 668 5 is_stmt 1 view .LVU280
 1047              	.LBB858:
 1048              		.loc 5 673 18 is_stmt 0 view .LVU281
 1049 03d3 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1049      00
 1050              	.LVL84:
 1051              		.loc 5 673 18 view .LVU282
 1052              	.LBE858:
 1053              	.LBE860:
 1054              	.LBB861:
 1055              	.LBI861:
 245:/usr/include/c++/14/iomanip ****     {
 1056              		.loc 6 245 5 is_stmt 1 view .LVU283
GAS LISTING linobj/Ch02_03.s 			page 134


 1057              	.LBB862:
 1058              	.LBB863:
 1059              	.LBI863:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 1060              		.loc 7 784 5 view .LVU284
 1061              	.LBB864:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 1062              		.loc 7 786 7 view .LVU285
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1063              		.loc 7 787 7 view .LVU286
 1064              	.LBE864:
 1065              	.LBE863:
 1066              		.loc 6 247 17 is_stmt 0 view .LVU287
 1067 03d8 498B07   		movq	(%r15), %rax
 1068              	.LBE862:
 1069              	.LBE861:
 1070              		.loc 1 79 75 discriminator 2 view .LVU288
 1071 03db 4C89FF   		movq	%r15, %rdi
 1072              	.LBB868:
 1073              	.LBB867:
 1074              	.LBB866:
 1075              	.LBB865:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1076              		.loc 7 787 16 view .LVU289
 1077 03de 488B40E8 		movq	-24(%rax), %rax
 1078 03e2 49C74407 		movq	$10, 16(%r15,%rax)
 1078      100A0000 
 1078      00
 1079              	.LVL85:
 1080              		.loc 7 788 7 is_stmt 1 view .LVU290
 1081              		.loc 7 788 7 is_stmt 0 view .LVU291
 1082              	.LBE865:
 1083              	.LBE866:
 1084              	.LBE867:
 1085              	.LBE868:
 1086              		.loc 1 79 75 discriminator 2 view .LVU292
 1087 03eb 8B749D00 		movl	0(%rbp,%rbx,4), %esi
 1088 03ef E8000000 		call	_ZNSolsEi
 1088      00
 1089              	.LVL86:
 1090 03f4 4889C7   		movq	%rax, %rdi
 1091              	.LVL87:
 1092              	.LBB869:
 1093              	.LBB870:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1094              		.loc 5 578 22 view .LVU293
 1095 03f7 488B00   		movq	(%rax), %rax
 1096              	.LVL88:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1097              		.loc 5 578 22 view .LVU294
 1098 03fa C644240D 		movb	$10, 13(%rsp)
 1098      0A
 1099              	.LVL89:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1100              		.loc 5 578 22 view .LVU295
 1101              	.LBE870:
 1102              	.LBI869:
GAS LISTING linobj/Ch02_03.s 			page 135


 576:/usr/include/c++/14/ostream ****     {
 1103              		.loc 5 576 5 is_stmt 1 view .LVU296
 1104              	.LBB873:
 1105              	.LBB871:
 1106              	.LBI871:
 775:/usr/include/c++/14/bits/ios_base.h ****     { return _M_width; }
 1107              		.loc 7 775 5 view .LVU297
 1108              	.LBB872:
 776:/usr/include/c++/14/bits/ios_base.h **** 
 1109              		.loc 7 776 7 view .LVU298
 776:/usr/include/c++/14/bits/ios_base.h **** 
 1110              		.loc 7 776 14 is_stmt 0 view .LVU299
 1111 03ff 488B40E8 		movq	-24(%rax), %rax
 1112              	.LBE872:
 1113              	.LBE871:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1114              		.loc 5 578 7 discriminator 1 view .LVU300
 1115 0403 48837C07 		cmpq	$0, 16(%rdi,%rax)
 1115      1000
 1116 0409 0F84F101 		je	.L10
 1116      0000
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1117              		.loc 5 579 25 view .LVU301
 1118 040f BA010000 		movl	$1, %edx
 1118      00
 1119 0414 488D7424 		leaq	13(%rsp), %rsi
 1119      0D
 1120              	.LVL90:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1121              		.loc 5 579 25 view .LVU302
 1122 0419 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1122      00
 1123              	.LVL91:
 1124              	.L13:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1125              		.loc 5 579 25 view .LVU303
 1126              	.LBE873:
 1127              	.LBE869:
  75:Ch02_03.cpp   ****     {
 1128              		.loc 1 75 5 is_stmt 1 discriminator 2 view .LVU304
 1129 041e 4883C301 		addq	$1, %rbx
 1130              	.LVL92:
  75:Ch02_03.cpp   ****     {
 1131              		.loc 1 75 26 discriminator 1 view .LVU305
 1132 0422 4883FB04 		cmpq	$4, %rbx
 1133 0426 0F85ADFE 		jne	.L11
 1133      FFFF
 1134              	.LVL93:
  75:Ch02_03.cpp   ****     {
 1135              		.loc 1 75 26 is_stmt 0 discriminator 1 view .LVU306
 1136              	.LBE810:
 1137              	.LBE807:
 1138              	.LBE806:
  22:Ch02_03.cpp   ****     MulI32b();
 1139              		.loc 1 22 5 is_stmt 1 view .LVU307
  22:Ch02_03.cpp   ****     MulI32b();
 1140              		.loc 1 22 31 is_stmt 0 view .LVU308
GAS LISTING linobj/Ch02_03.s 			page 136


 1141 042c BE0A0000 		movl	$10, %esi
 1141      00
 1142 0431 BF000000 		movl	$_ZSt4cout, %edi
 1142      00
 1143 0436 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
 1143      00
 1144              	.LVL94:
 1145              	.LBB878:
 1146              	.LBB879:
 1147              		.loc 4 4082 30 discriminator 2 view .LVU309
 1148 043b 488B5424 		movq	56(%rsp), %rdx
 1148      38
 1149 0440 488B7424 		movq	48(%rsp), %rsi
 1149      30
 1150              	.LBE879:
 1151              	.LBE878:
  22:Ch02_03.cpp   ****     MulI32b();
 1152              		.loc 1 22 31 view .LVU310
 1153 0445 4889C7   		movq	%rax, %rdi
 1154              	.LVL95:
 1155              	.LBB884:
 1156              	.LBI878:
4077:/usr/include/c++/14/bits/basic_string.h **** 	       const basic_string<_CharT, _Traits, _Alloc>& __str)
 1157              		.loc 4 4077 5 is_stmt 1 view .LVU311
 1158              	.LBB883:
 1159              	.LBB880:
 1160              	.LBI880:
1076:/usr/include/c++/14/bits/basic_string.h ****       { return _M_string_length; }
 1161              		.loc 4 1076 7 view .LVU312
1076:/usr/include/c++/14/bits/basic_string.h ****       { return _M_string_length; }
 1162              		.loc 4 1076 7 is_stmt 0 view .LVU313
 1163              	.LBE880:
 1164              	.LBB881:
 1165              	.LBI881:
2653:/usr/include/c++/14/bits/basic_string.h ****       { return _M_data(); }
 1166              		.loc 4 2653 7 is_stmt 1 view .LVU314
 1167              	.LBB882:
 1168              	.LBI882:
 227:/usr/include/c++/14/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1169              		.loc 4 227 7 view .LVU315
 227:/usr/include/c++/14/bits/basic_string.h ****       { return _M_dataplus._M_p; }
 1170              		.loc 4 227 7 is_stmt 0 view .LVU316
 1171              	.LBE882:
 1172              	.LBE881:
 1173              		.loc 4 4082 30 discriminator 2 view .LVU317
 1174 0448 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1174      00
 1175              	.LVL96:
 1176              		.loc 4 4082 30 discriminator 2 view .LVU318
 1177 044d 4889C7   		movq	%rax, %rdi
 1178              	.LVL97:
 1179              		.loc 4 4082 30 discriminator 2 view .LVU319
 1180              	.LBE883:
 1181              	.LBE884:
  22:Ch02_03.cpp   ****     MulI32b();
 1182              		.loc 1 22 31 discriminator 2 view .LVU320
 1183 0450 BE0A0000 		movl	$10, %esi
GAS LISTING linobj/Ch02_03.s 			page 137


 1183      00
 1184 0455 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c
 1184      00
 1185              	.LVL98:
  23:Ch02_03.cpp   ****     return 0;
 1186              		.loc 1 23 5 is_stmt 1 view .LVU321
 1187              	.LBB885:
 1188              	.LBI885:
  80:Ch02_03.cpp   ****     }
  81:Ch02_03.cpp   **** }
  82:Ch02_03.cpp   **** 
  83:Ch02_03.cpp   **** static void MulI32b(void)
 1189              		.loc 1 83 13 view .LVU322
 1190              	.LBB886:
  84:Ch02_03.cpp   **** {
  85:Ch02_03.cpp   ****     const char nl = '\n';
 1191              		.loc 1 85 5 view .LVU323
  86:Ch02_03.cpp   ****     XmmVal a, b, c[2];
 1192              		.loc 1 86 5 view .LVU324
  87:Ch02_03.cpp   **** 
  88:Ch02_03.cpp   ****     a.m_I32[0] = 10;        b.m_I32[0] = -500;
 1193              		.loc 1 88 5 view .LVU325
 1194              		.loc 1 88 22 view .LVU326
  89:Ch02_03.cpp   ****     a.m_I32[1] = 3000;      b.m_I32[1] = 100;
 1195              		.loc 1 89 5 view .LVU327
 1196              		.loc 1 89 24 view .LVU328
  90:Ch02_03.cpp   ****     a.m_I32[2] = -40000;    b.m_I32[2] = -120000;
 1197              		.loc 1 90 5 view .LVU329
 1198              		.loc 1 90 26 view .LVU330
  91:Ch02_03.cpp   ****     a.m_I32[3] = 4200;      b.m_I32[3] = 1000;
 1199              		.loc 1 91 5 view .LVU331
  88:Ch02_03.cpp   ****     a.m_I32[1] = 3000;      b.m_I32[1] = 100;
 1200              		.loc 1 88 16 is_stmt 0 view .LVU332
 1201 045a C5F96F05 		vmovdqa	.LC13(%rip), %xmm0
 1201      00000000 
  92:Ch02_03.cpp   **** 
  93:Ch02_03.cpp   ****     MulI32b_Iavx(c, &a, &b);
 1202              		.loc 1 93 17 view .LVU333
 1203 0462 4C89EA   		movq	%r13, %rdx
 1204 0465 4C89E6   		movq	%r12, %rsi
 1205 0468 4889EF   		movq	%rbp, %rdi
  88:Ch02_03.cpp   ****     a.m_I32[1] = 3000;      b.m_I32[1] = 100;
 1206              		.loc 1 88 16 view .LVU334
 1207 046b C5F97F44 		vmovdqa	%xmm0, 16(%rsp)
 1207      2410
  91:Ch02_03.cpp   **** 
 1208              		.loc 1 91 24 is_stmt 1 view .LVU335
  88:Ch02_03.cpp   ****     a.m_I32[1] = 3000;      b.m_I32[1] = 100;
 1209              		.loc 1 88 33 is_stmt 0 view .LVU336
 1210 0471 C5F96F05 		vmovdqa	.LC14(%rip), %xmm0
 1210      00000000 
 1211 0479 C5F97F44 		vmovdqa	%xmm0, 32(%rsp)
 1211      2420
 1212              		.loc 1 93 5 is_stmt 1 view .LVU337
 1213              		.loc 1 93 17 is_stmt 0 view .LVU338
 1214 047f E8000000 		call	_Z12MulI32b_IavxP6XmmValPKS_S2_
 1214      00
GAS LISTING linobj/Ch02_03.s 			page 138


 1215              	.LVL99:
  94:Ch02_03.cpp   **** 
  95:Ch02_03.cpp   ****     std::cout << "\nResults for MulI32b_Iavx\n";
 1216              		.loc 1 95 5 is_stmt 1 view .LVU339
 1217              	.LBB887:
 1218              	.LBI887:
 668:/usr/include/c++/14/ostream ****     {
 1219              		.loc 5 668 5 view .LVU340
 1220              	.LBB888:
 1221              		.loc 5 673 18 is_stmt 0 view .LVU341
 1222 0484 BA1A0000 		movl	$26, %edx
 1222      00
 1223 0489 BE000000 		movl	$.LC15, %esi
 1223      00
 1224 048e BF000000 		movl	$_ZSt4cout, %edi
 1224      00
 1225 0493 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1225      00
 1226              	.LVL100:
 1227              	.LBE888:
 1228              	.LBE887:
 1229              	.LBB889:
  96:Ch02_03.cpp   ****     for (size_t i = 0; i < 4; i++)
 1230              		.loc 1 96 17 view .LVU342
 1231 0498 31DB     		xorl	%ebx, %ebx
 1232              	.LVL101:
 1233              	.L21:
  97:Ch02_03.cpp   ****     {
  98:Ch02_03.cpp   ****         std::cout << "a[" << i << "]: " << std::setw(10) << a.m_I32[i] << "  ";
 1234              		.loc 1 98 9 is_stmt 1 view .LVU343
 1235              	.LBB890:
 1236              	.LBI890:
 668:/usr/include/c++/14/ostream ****     {
 1237              		.loc 5 668 5 view .LVU344
 1238              	.LBB891:
 1239              		.loc 5 673 18 is_stmt 0 view .LVU345
 1240 049a BA020000 		movl	$2, %edx
 1240      00
 1241 049f BE000000 		movl	$.LC3, %esi
 1241      00
 1242 04a4 BF000000 		movl	$_ZSt4cout, %edi
 1242      00
 1243 04a9 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1243      00
 1244              	.LVL102:
 1245              		.loc 5 673 18 view .LVU346
 1246              	.LBE891:
 1247              	.LBE890:
 1248              	.LBB892:
 1249              	.LBI892:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 1250              		.loc 5 178 7 is_stmt 1 view .LVU347
 1251              	.LBB893:
 179:/usr/include/c++/14/ostream **** 
 1252              		.loc 5 179 25 is_stmt 0 view .LVU348
 1253 04ae 4889DE   		movq	%rbx, %rsi
 1254 04b1 BF000000 		movl	$_ZSt4cout, %edi
GAS LISTING linobj/Ch02_03.s 			page 139


 1254      00
 1255 04b6 E8000000 		call	_ZNSo9_M_insertImEERSoT_
 1255      00
 1256              	.LVL103:
 1257              	.LBE893:
 1258              	.LBE892:
 1259              	.LBB895:
 1260              	.LBB896:
 1261              		.loc 5 673 18 view .LVU349
 1262 04bb BA030000 		movl	$3, %edx
 1262      00
 1263 04c0 BE000000 		movl	$.LC4, %esi
 1263      00
 1264 04c5 4889C7   		movq	%rax, %rdi
 1265              	.LBE896:
 1266              	.LBE895:
 1267              	.LBB898:
 1268              	.LBB894:
 179:/usr/include/c++/14/ostream **** 
 1269              		.loc 5 179 25 view .LVU350
 1270 04c8 4989C7   		movq	%rax, %r15
 1271              	.LVL104:
 179:/usr/include/c++/14/ostream **** 
 1272              		.loc 5 179 25 view .LVU351
 1273              	.LBE894:
 1274              	.LBE898:
 1275              	.LBB899:
 1276              	.LBI895:
 668:/usr/include/c++/14/ostream ****     {
 1277              		.loc 5 668 5 is_stmt 1 view .LVU352
 1278              	.LBB897:
 1279              		.loc 5 673 18 is_stmt 0 view .LVU353
 1280 04cb E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1280      00
 1281              	.LVL105:
 1282              		.loc 5 673 18 view .LVU354
 1283              	.LBE897:
 1284              	.LBE899:
 1285              	.LBB900:
 1286              	.LBI900:
 245:/usr/include/c++/14/iomanip ****     {
 1287              		.loc 6 245 5 is_stmt 1 view .LVU355
 1288              	.LBB901:
 1289              	.LBB902:
 1290              	.LBI902:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 1291              		.loc 7 784 5 view .LVU356
 1292              	.LBB903:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 1293              		.loc 7 786 7 view .LVU357
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1294              		.loc 7 787 7 view .LVU358
 1295              	.LBE903:
 1296              	.LBE902:
 1297              		.loc 6 247 17 is_stmt 0 view .LVU359
 1298 04d0 498B07   		movq	(%r15), %rax
 1299              	.LBE901:
GAS LISTING linobj/Ch02_03.s 			page 140


 1300              	.LBE900:
 1301              		.loc 1 98 75 discriminator 2 view .LVU360
 1302 04d3 4C89FF   		movq	%r15, %rdi
 1303              	.LBB907:
 1304              	.LBB906:
 1305              	.LBB905:
 1306              	.LBB904:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1307              		.loc 7 787 16 view .LVU361
 1308 04d6 488B40E8 		movq	-24(%rax), %rax
 1309 04da 49C74407 		movq	$10, 16(%r15,%rax)
 1309      100A0000 
 1309      00
 1310              	.LVL106:
 1311              		.loc 7 788 7 is_stmt 1 view .LVU362
 1312              		.loc 7 788 7 is_stmt 0 view .LVU363
 1313              	.LBE904:
 1314              	.LBE905:
 1315              	.LBE906:
 1316              	.LBE907:
 1317              		.loc 1 98 75 discriminator 2 view .LVU364
 1318 04e3 418B349C 		movl	(%r12,%rbx,4), %esi
 1319 04e7 E8000000 		call	_ZNSolsEi
 1319      00
 1320              	.LVL107:
 1321 04ec 4889C7   		movq	%rax, %rdi
 1322              	.LVL108:
 1323              	.LBB908:
 1324              	.LBI908:
 668:/usr/include/c++/14/ostream ****     {
 1325              		.loc 5 668 5 is_stmt 1 view .LVU365
 1326              	.LBB909:
 1327              		.loc 5 673 18 is_stmt 0 view .LVU366
 1328 04ef BA020000 		movl	$2, %edx
 1328      00
 1329 04f4 BE000000 		movl	$.LC5, %esi
 1329      00
 1330 04f9 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1330      00
 1331              	.LVL109:
 1332              		.loc 5 673 18 view .LVU367
 1333              	.LBE909:
 1334              	.LBE908:
  99:Ch02_03.cpp   ****         std::cout << "b[" << i << "]: " << std::setw(10) << b.m_I32[i] << "  ";
 1335              		.loc 1 99 9 is_stmt 1 view .LVU368
 1336              	.LBB910:
 1337              	.LBI910:
 668:/usr/include/c++/14/ostream ****     {
 1338              		.loc 5 668 5 view .LVU369
 1339              	.LBB911:
 1340              		.loc 5 673 18 is_stmt 0 view .LVU370
 1341 04fe BA020000 		movl	$2, %edx
 1341      00
 1342 0503 BE000000 		movl	$.LC6, %esi
 1342      00
 1343 0508 BF000000 		movl	$_ZSt4cout, %edi
 1343      00
GAS LISTING linobj/Ch02_03.s 			page 141


 1344 050d E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1344      00
 1345              	.LVL110:
 1346              		.loc 5 673 18 view .LVU371
 1347              	.LBE911:
 1348              	.LBE910:
 1349              	.LBB912:
 1350              	.LBI912:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 1351              		.loc 5 178 7 is_stmt 1 view .LVU372
 1352              	.LBB913:
 179:/usr/include/c++/14/ostream **** 
 1353              		.loc 5 179 25 is_stmt 0 view .LVU373
 1354 0512 4889DE   		movq	%rbx, %rsi
 1355 0515 BF000000 		movl	$_ZSt4cout, %edi
 1355      00
 1356 051a E8000000 		call	_ZNSo9_M_insertImEERSoT_
 1356      00
 1357              	.LVL111:
 1358              	.LBE913:
 1359              	.LBE912:
 1360              	.LBB915:
 1361              	.LBB916:
 1362              		.loc 5 673 18 view .LVU374
 1363 051f BA030000 		movl	$3, %edx
 1363      00
 1364 0524 BE000000 		movl	$.LC4, %esi
 1364      00
 1365 0529 4889C7   		movq	%rax, %rdi
 1366              	.LBE916:
 1367              	.LBE915:
 1368              	.LBB918:
 1369              	.LBB914:
 179:/usr/include/c++/14/ostream **** 
 1370              		.loc 5 179 25 view .LVU375
 1371 052c 4989C7   		movq	%rax, %r15
 1372              	.LVL112:
 179:/usr/include/c++/14/ostream **** 
 1373              		.loc 5 179 25 view .LVU376
 1374              	.LBE914:
 1375              	.LBE918:
 1376              	.LBB919:
 1377              	.LBI915:
 668:/usr/include/c++/14/ostream ****     {
 1378              		.loc 5 668 5 is_stmt 1 view .LVU377
 1379              	.LBB917:
 1380              		.loc 5 673 18 is_stmt 0 view .LVU378
 1381 052f E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1381      00
 1382              	.LVL113:
 1383              		.loc 5 673 18 view .LVU379
 1384              	.LBE917:
 1385              	.LBE919:
 1386              	.LBB920:
 1387              	.LBI920:
 245:/usr/include/c++/14/iomanip ****     {
 1388              		.loc 6 245 5 is_stmt 1 view .LVU380
GAS LISTING linobj/Ch02_03.s 			page 142


 1389              	.LBB921:
 1390              	.LBB922:
 1391              	.LBI922:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 1392              		.loc 7 784 5 view .LVU381
 1393              	.LBB923:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 1394              		.loc 7 786 7 view .LVU382
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1395              		.loc 7 787 7 view .LVU383
 1396              	.LBE923:
 1397              	.LBE922:
 1398              		.loc 6 247 17 is_stmt 0 view .LVU384
 1399 0534 498B07   		movq	(%r15), %rax
 1400              	.LBE921:
 1401              	.LBE920:
 1402              		.loc 1 99 75 discriminator 2 view .LVU385
 1403 0537 4C89FF   		movq	%r15, %rdi
 1404              	.LBB927:
 1405              	.LBB926:
 1406              	.LBB925:
 1407              	.LBB924:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1408              		.loc 7 787 16 view .LVU386
 1409 053a 488B40E8 		movq	-24(%rax), %rax
 1410 053e 49C74407 		movq	$10, 16(%r15,%rax)
 1410      100A0000 
 1410      00
 1411              	.LVL114:
 1412              		.loc 7 788 7 is_stmt 1 view .LVU387
 1413              		.loc 7 788 7 is_stmt 0 view .LVU388
 1414              	.LBE924:
 1415              	.LBE925:
 1416              	.LBE926:
 1417              	.LBE927:
 1418              		.loc 1 99 75 discriminator 2 view .LVU389
 1419 0547 418B749D 		movl	0(%r13,%rbx,4), %esi
 1419      00
 1420 054c E8000000 		call	_ZNSolsEi
 1420      00
 1421              	.LVL115:
 1422 0551 4889C7   		movq	%rax, %rdi
 1423              	.LVL116:
 1424              	.LBB928:
 1425              	.LBI928:
 668:/usr/include/c++/14/ostream ****     {
 1426              		.loc 5 668 5 is_stmt 1 view .LVU390
 1427              	.LBB929:
 1428              		.loc 5 673 18 is_stmt 0 view .LVU391
 1429 0554 BA020000 		movl	$2, %edx
 1429      00
 1430 0559 BE000000 		movl	$.LC5, %esi
 1430      00
 1431 055e E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1431      00
 1432              	.LVL117:
 1433              		.loc 5 673 18 view .LVU392
GAS LISTING linobj/Ch02_03.s 			page 143


 1434              	.LBE929:
 1435              	.LBE928:
 100:Ch02_03.cpp   **** 
 101:Ch02_03.cpp   ****         if (i < 2)
 1436              		.loc 1 101 9 is_stmt 1 view .LVU393
 1437              	.LBB930:
 1438              	.LBB931:
 1439              		.loc 5 673 18 is_stmt 0 view .LVU394
 1440 0563 BA050000 		movl	$5, %edx
 1440      00
 1441              	.LBE931:
 1442              	.LBE930:
 1443              		.loc 1 101 9 view .LVU395
 1444 0568 4883FB01 		cmpq	$1, %rbx
 1445 056c 0F879E00 		ja	.L14
 1445      0000
 102:Ch02_03.cpp   ****         {
 103:Ch02_03.cpp   ****             std::cout << "c[0][" << i << "]: ";
 1446              		.loc 1 103 13 is_stmt 1 view .LVU396
 1447              	.LVL118:
 1448              	.LBB933:
 1449              	.LBI930:
 668:/usr/include/c++/14/ostream ****     {
 1450              		.loc 5 668 5 view .LVU397
 1451              	.LBB932:
 1452              		.loc 5 673 18 is_stmt 0 view .LVU398
 1453 0572 BE000000 		movl	$.LC7, %esi
 1453      00
 1454 0577 BF000000 		movl	$_ZSt4cout, %edi
 1454      00
 1455 057c E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1455      00
 1456              	.LVL119:
 1457              		.loc 5 673 18 view .LVU399
 1458              	.LBE932:
 1459              	.LBE933:
 1460              	.LBB934:
 1461              	.LBI934:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 1462              		.loc 5 178 7 is_stmt 1 view .LVU400
 1463              	.LBB935:
 179:/usr/include/c++/14/ostream **** 
 1464              		.loc 5 179 25 is_stmt 0 view .LVU401
 1465 0581 4889DE   		movq	%rbx, %rsi
 1466 0584 BF000000 		movl	$_ZSt4cout, %edi
 1466      00
 1467 0589 E8000000 		call	_ZNSo9_M_insertImEERSoT_
 1467      00
 1468              	.LVL120:
 1469 058e 4889C7   		movq	%rax, %rdi
 1470              	.LVL121:
 179:/usr/include/c++/14/ostream **** 
 1471              		.loc 5 179 25 view .LVU402
 1472              	.LBE935:
 1473              	.LBE934:
 1474              	.LBB936:
 1475              	.LBI936:
GAS LISTING linobj/Ch02_03.s 			page 144


 668:/usr/include/c++/14/ostream ****     {
 1476              		.loc 5 668 5 is_stmt 1 view .LVU403
 1477              	.LBB937:
 1478              		.loc 5 673 18 is_stmt 0 view .LVU404
 1479 0591 BA030000 		movl	$3, %edx
 1479      00
 1480 0596 BE000000 		movl	$.LC4, %esi
 1480      00
 1481 059b E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1481      00
 1482              	.LVL122:
 1483              		.loc 5 673 18 view .LVU405
 1484              	.LBE937:
 1485              	.LBE936:
 104:Ch02_03.cpp   ****             std::cout << std::setw(14) << c[0].m_I64[i] << nl;
 1486              		.loc 1 104 13 is_stmt 1 view .LVU406
 1487              	.LBB938:
 1488              	.LBI938:
 245:/usr/include/c++/14/iomanip ****     {
 1489              		.loc 6 245 5 view .LVU407
 1490              	.LBB939:
 1491              	.LBB940:
 1492              	.LBI940:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 1493              		.loc 7 784 5 view .LVU408
 1494              	.LBB941:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 1495              		.loc 7 786 7 view .LVU409
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1496              		.loc 7 787 7 view .LVU410
 1497              	.LBE941:
 1498              	.LBE940:
 1499              		.loc 6 247 17 is_stmt 0 view .LVU411
 1500 05a0 488B0500 		movq	_ZSt4cout(%rip), %rax
 1500      000000
 1501              	.LBE939:
 1502              	.LBE938:
 1503              	.LBB945:
 1504              	.LBB946:
 175:/usr/include/c++/14/ostream **** 
 1505              		.loc 5 175 25 view .LVU412
 1506 05a7 488B74DD 		movq	0(%rbp,%rbx,8), %rsi
 1506      00
 1507 05ac BF000000 		movl	$_ZSt4cout, %edi
 1507      00
 1508              	.LVL123:
 175:/usr/include/c++/14/ostream **** 
 1509              		.loc 5 175 25 view .LVU413
 1510              	.LBE946:
 1511              	.LBE945:
 1512              	.LBB948:
 1513              	.LBB944:
 1514              	.LBB943:
 1515              	.LBB942:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1516              		.loc 7 787 16 view .LVU414
 1517 05b1 488B40E8 		movq	-24(%rax), %rax
GAS LISTING linobj/Ch02_03.s 			page 145


 1518              	.LVL124:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1519              		.loc 7 787 16 view .LVU415
 1520 05b5 48C78000 		movq	$14, _ZSt4cout+16(%rax)
 1520      0000000E 
 1520      000000
 1521              	.LVL125:
 1522              		.loc 7 788 7 is_stmt 1 view .LVU416
 1523              		.loc 7 788 7 is_stmt 0 view .LVU417
 1524              	.LBE942:
 1525              	.LBE943:
 1526              	.LBE944:
 1527              	.LBE948:
 1528              	.LBB949:
 1529              	.LBI945:
 174:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 1530              		.loc 5 174 7 is_stmt 1 view .LVU418
 1531              	.LBB947:
 175:/usr/include/c++/14/ostream **** 
 1532              		.loc 5 175 25 is_stmt 0 view .LVU419
 1533 05c0 E8000000 		call	_ZNSo9_M_insertIlEERSoT_
 1533      00
 1534              	.LVL126:
 175:/usr/include/c++/14/ostream **** 
 1535              		.loc 5 175 25 view .LVU420
 1536 05c5 4889C7   		movq	%rax, %rdi
 1537              	.LVL127:
 175:/usr/include/c++/14/ostream **** 
 1538              		.loc 5 175 25 view .LVU421
 1539              	.LBE947:
 1540              	.LBE949:
 1541              	.LBB950:
 1542              	.LBB951:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1543              		.loc 5 578 22 view .LVU422
 1544 05c8 488B00   		movq	(%rax), %rax
 1545              	.LVL128:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1546              		.loc 5 578 22 view .LVU423
 1547 05cb C644240E 		movb	$10, 14(%rsp)
 1547      0A
 1548              	.LVL129:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1549              		.loc 5 578 22 view .LVU424
 1550              	.LBE951:
 1551              	.LBI950:
 576:/usr/include/c++/14/ostream ****     {
 1552              		.loc 5 576 5 is_stmt 1 view .LVU425
 1553              	.LBB954:
 1554              	.LBB952:
 1555              	.LBI952:
 775:/usr/include/c++/14/bits/ios_base.h ****     { return _M_width; }
 1556              		.loc 7 775 5 view .LVU426
 1557              	.LBB953:
 776:/usr/include/c++/14/bits/ios_base.h **** 
 1558              		.loc 7 776 7 view .LVU427
 776:/usr/include/c++/14/bits/ios_base.h **** 
GAS LISTING linobj/Ch02_03.s 			page 146


 1559              		.loc 7 776 14 is_stmt 0 view .LVU428
 1560 05d0 488B40E8 		movq	-24(%rax), %rax
 1561              	.LBE953:
 1562              	.LBE952:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1563              		.loc 5 578 7 discriminator 1 view .LVU429
 1564 05d4 48837C07 		cmpq	$0, 16(%rdi,%rax)
 1564      1000
 1565 05da 0F84E000 		je	.L15
 1565      0000
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1566              		.loc 5 579 25 view .LVU430
 1567 05e0 488D7424 		leaq	14(%rsp), %rsi
 1567      0E
 1568              	.LVL130:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1569              		.loc 5 579 25 view .LVU431
 1570 05e5 BA010000 		movl	$1, %edx
 1570      00
 1571 05ea E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1571      00
 1572              	.LVL131:
 1573              	.L17:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1574              		.loc 5 579 25 view .LVU432
 1575              	.LBE954:
 1576              	.LBE950:
  96:Ch02_03.cpp   ****     {
 1577              		.loc 1 96 5 is_stmt 1 discriminator 2 view .LVU433
 1578 05ef 4883C301 		addq	$1, %rbx
 1579              	.LVL132:
  96:Ch02_03.cpp   ****     {
 1580              		.loc 1 96 26 discriminator 1 view .LVU434
 1581 05f3 E9A2FEFF 		jmp	.L21
 1581      FF
 1582              	.LVL133:
 1583 05f8 0F1F8400 		.p2align 4,,10
 1583      00000000 
 1584              		.p2align 3
 1585              	.L10:
  96:Ch02_03.cpp   ****     {
 1586              		.loc 1 96 26 is_stmt 0 discriminator 1 view .LVU435
 1587              	.LBE889:
 1588              	.LBE886:
 1589              	.LBE885:
 1590              	.LBB989:
 1591              	.LBB877:
 1592              	.LBB876:
 1593              	.LBB875:
 1594              	.LBB874:
 580:/usr/include/c++/14/ostream ****       return __out;
 1595              		.loc 5 580 16 view .LVU436
 1596 0600 BE0A0000 		movl	$10, %esi
 1596      00
 1597 0605 E8000000 		call	_ZNSo3putEc
 1597      00
 1598              	.LVL134:
GAS LISTING linobj/Ch02_03.s 			page 147


 580:/usr/include/c++/14/ostream ****       return __out;
 1599              		.loc 5 580 16 view .LVU437
 1600 060a E90FFEFF 		jmp	.L13
 1600      FF
 1601              	.LVL135:
 1602 060f 90       		.p2align 4,,10
 1603              		.p2align 3
 1604              	.L14:
 580:/usr/include/c++/14/ostream ****       return __out;
 1605              		.loc 5 580 16 view .LVU438
 1606              	.LBE874:
 1607              	.LBE875:
 1608              	.LBE876:
 1609              	.LBE877:
 1610              	.LBE989:
 1611              	.LBB990:
 1612              	.LBB986:
 1613              	.LBB983:
 105:Ch02_03.cpp   ****         }
 106:Ch02_03.cpp   ****         else
 107:Ch02_03.cpp   ****         {
 108:Ch02_03.cpp   ****             std::cout << "c[1][" << i - 2 << "]: ";
 1614              		.loc 1 108 13 is_stmt 1 view .LVU439
 1615              	.LBB956:
 1616              	.LBI956:
 668:/usr/include/c++/14/ostream ****     {
 1617              		.loc 5 668 5 view .LVU440
 1618              	.LBB957:
 1619              		.loc 5 673 18 is_stmt 0 view .LVU441
 1620 0610 BE000000 		movl	$.LC8, %esi
 1620      00
 1621 0615 BF000000 		movl	$_ZSt4cout, %edi
 1621      00
 1622 061a E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1622      00
 1623              	.LVL136:
 1624              		.loc 5 673 18 view .LVU442
 1625              	.LBE957:
 1626              	.LBE956:
 1627              	.LBB958:
 1628              	.LBI958:
 178:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 1629              		.loc 5 178 7 is_stmt 1 view .LVU443
 1630              	.LBE958:
 1631              		.loc 1 108 41 is_stmt 0 discriminator 1 view .LVU444
 1632 061f 488D73FE 		leaq	-2(%rbx), %rsi
 1633              	.LVL137:
 1634              	.LBB960:
 1635              	.LBB959:
 179:/usr/include/c++/14/ostream **** 
 1636              		.loc 5 179 25 view .LVU445
 1637 0623 BF000000 		movl	$_ZSt4cout, %edi
 1637      00
 1638 0628 E8000000 		call	_ZNSo9_M_insertImEERSoT_
 1638      00
 1639              	.LVL138:
 179:/usr/include/c++/14/ostream **** 
GAS LISTING linobj/Ch02_03.s 			page 148


 1640              		.loc 5 179 25 view .LVU446
 1641 062d 4889C7   		movq	%rax, %rdi
 1642              	.LVL139:
 179:/usr/include/c++/14/ostream **** 
 1643              		.loc 5 179 25 view .LVU447
 1644              	.LBE959:
 1645              	.LBE960:
 1646              	.LBB961:
 1647              	.LBI961:
 668:/usr/include/c++/14/ostream ****     {
 1648              		.loc 5 668 5 is_stmt 1 view .LVU448
 1649              	.LBB962:
 1650              		.loc 5 673 18 is_stmt 0 view .LVU449
 1651 0630 BA030000 		movl	$3, %edx
 1651      00
 1652 0635 BE000000 		movl	$.LC4, %esi
 1652      00
 1653 063a E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1653      00
 1654              	.LVL140:
 1655              		.loc 5 673 18 view .LVU450
 1656              	.LBE962:
 1657              	.LBE961:
 109:Ch02_03.cpp   ****             std::cout << std::setw(14) << c[1].m_I64[i - 2] << nl;
 1658              		.loc 1 109 13 is_stmt 1 view .LVU451
 1659              	.LBB963:
 1660              	.LBI963:
 245:/usr/include/c++/14/iomanip ****     {
 1661              		.loc 6 245 5 view .LVU452
 1662              	.LBB964:
 1663              	.LBB965:
 1664              	.LBI965:
 784:/usr/include/c++/14/bits/ios_base.h ****     {
 1665              		.loc 7 784 5 view .LVU453
 1666              	.LBB966:
 786:/usr/include/c++/14/bits/ios_base.h ****       _M_width = __wide;
 1667              		.loc 7 786 7 view .LVU454
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1668              		.loc 7 787 7 view .LVU455
 1669              	.LBE966:
 1670              	.LBE965:
 1671              		.loc 6 247 17 is_stmt 0 view .LVU456
 1672 063f 488B0500 		movq	_ZSt4cout(%rip), %rax
 1672      000000
 1673              	.LBE964:
 1674              	.LBE963:
 1675              	.LBB970:
 1676              	.LBB971:
 175:/usr/include/c++/14/ostream **** 
 1677              		.loc 5 175 25 view .LVU457
 1678 0646 488B74DD 		movq	0(%rbp,%rbx,8), %rsi
 1678      00
 1679 064b BF000000 		movl	$_ZSt4cout, %edi
 1679      00
 1680              	.LVL141:
 175:/usr/include/c++/14/ostream **** 
 1681              		.loc 5 175 25 view .LVU458
GAS LISTING linobj/Ch02_03.s 			page 149


 1682              	.LBE971:
 1683              	.LBE970:
 1684              	.LBB973:
 1685              	.LBB969:
 1686              	.LBB968:
 1687              	.LBB967:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1688              		.loc 7 787 16 view .LVU459
 1689 0650 488B40E8 		movq	-24(%rax), %rax
 1690              	.LVL142:
 787:/usr/include/c++/14/bits/ios_base.h ****       return __old;
 1691              		.loc 7 787 16 view .LVU460
 1692 0654 48C78000 		movq	$14, _ZSt4cout+16(%rax)
 1692      0000000E 
 1692      000000
 1693              	.LVL143:
 1694              		.loc 7 788 7 is_stmt 1 view .LVU461
 1695              		.loc 7 788 7 is_stmt 0 view .LVU462
 1696              	.LBE967:
 1697              	.LBE968:
 1698              	.LBE969:
 1699              	.LBE973:
 1700              	.LBB974:
 1701              	.LBI970:
 174:/usr/include/c++/14/ostream ****       { return _M_insert(__n); }
 1702              		.loc 5 174 7 is_stmt 1 view .LVU463
 1703              	.LBB972:
 175:/usr/include/c++/14/ostream **** 
 1704              		.loc 5 175 25 is_stmt 0 view .LVU464
 1705 065f E8000000 		call	_ZNSo9_M_insertIlEERSoT_
 1705      00
 1706              	.LVL144:
 175:/usr/include/c++/14/ostream **** 
 1707              		.loc 5 175 25 view .LVU465
 1708 0664 4889C7   		movq	%rax, %rdi
 1709              	.LVL145:
 175:/usr/include/c++/14/ostream **** 
 1710              		.loc 5 175 25 view .LVU466
 1711              	.LBE972:
 1712              	.LBE974:
 1713              	.LBB975:
 1714              	.LBB976:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1715              		.loc 5 578 22 view .LVU467
 1716 0667 488B00   		movq	(%rax), %rax
 1717              	.LVL146:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1718              		.loc 5 578 22 view .LVU468
 1719 066a C644240F 		movb	$10, 15(%rsp)
 1719      0A
 1720              	.LVL147:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1721              		.loc 5 578 22 view .LVU469
 1722              	.LBE976:
 1723              	.LBI975:
 576:/usr/include/c++/14/ostream ****     {
 1724              		.loc 5 576 5 is_stmt 1 view .LVU470
GAS LISTING linobj/Ch02_03.s 			page 150


 1725              	.LBB979:
 1726              	.LBB977:
 1727              	.LBI977:
 775:/usr/include/c++/14/bits/ios_base.h ****     { return _M_width; }
 1728              		.loc 7 775 5 view .LVU471
 1729              	.LBB978:
 776:/usr/include/c++/14/bits/ios_base.h **** 
 1730              		.loc 7 776 7 view .LVU472
 776:/usr/include/c++/14/bits/ios_base.h **** 
 1731              		.loc 7 776 14 is_stmt 0 view .LVU473
 1732 066f 488B40E8 		movq	-24(%rax), %rax
 1733              	.LBE978:
 1734              	.LBE977:
 578:/usr/include/c++/14/ostream **** 	return __ostream_insert(__out, &__c, 1);
 1735              		.loc 5 578 7 discriminator 1 view .LVU474
 1736 0673 48837C07 		cmpq	$0, 16(%rdi,%rax)
 1736      1000
 1737 0679 7475     		je	.L18
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1738              		.loc 5 579 25 view .LVU475
 1739 067b 488D7424 		leaq	15(%rsp), %rsi
 1739      0F
 1740              	.LVL148:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1741              		.loc 5 579 25 view .LVU476
 1742 0680 BA010000 		movl	$1, %edx
 1742      00
 1743 0685 E8000000 		call	_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l
 1743      00
 1744              	.LVL149:
 1745              	.L20:
 579:/usr/include/c++/14/ostream ****       __out.put(__c);
 1746              		.loc 5 579 25 view .LVU477
 1747              	.LBE979:
 1748              	.LBE975:
  96:Ch02_03.cpp   ****     {
 1749              		.loc 1 96 5 is_stmt 1 discriminator 2 view .LVU478
  96:Ch02_03.cpp   ****     {
 1750              		.loc 1 96 26 discriminator 1 view .LVU479
 1751 068a 4883FB03 		cmpq	$3, %rbx
 1752 068e 7440     		je	.L28
 1753 0690 BB030000 		movl	$3, %ebx
 1753      00
 1754              	.LVL150:
  96:Ch02_03.cpp   ****     {
 1755              		.loc 1 96 26 is_stmt 0 discriminator 1 view .LVU480
 1756 0695 E900FEFF 		jmp	.L21
 1756      FF
 1757              	.LVL151:
 1758 069a 660F1F44 		.p2align 4,,10
 1758      0000
 1759              		.p2align 3
 1760              	.L6:
  96:Ch02_03.cpp   ****     {
 1761              		.loc 1 96 26 discriminator 1 view .LVU481
 1762              	.LBE983:
 1763              	.LBE986:
GAS LISTING linobj/Ch02_03.s 			page 151


 1764              	.LBE990:
 1765              	.LBB991:
 1766              	.LBB794:
 1767              	.LBB792:
 1768              	.LBB790:
 1769              	.LBB789:
 580:/usr/include/c++/14/ostream ****       return __out;
 1770              		.loc 5 580 16 view .LVU482
 1771 06a0 BE0A0000 		movl	$10, %esi
 1771      00
 1772 06a5 E8000000 		call	_ZNSo3putEc
 1772      00
 1773              	.LVL152:
 580:/usr/include/c++/14/ostream ****       return __out;
 1774              		.loc 5 580 16 view .LVU483
 1775 06aa E9AEFBFF 		jmp	.L8
 1775      FF
 1776              	.LVL153:
 1777 06af 90       		.p2align 4,,10
 1778              		.p2align 3
 1779              	.L3:
 580:/usr/include/c++/14/ostream ****       return __out;
 1780              		.loc 5 580 16 view .LVU484
 1781              	.LBE789:
 1782              	.LBE790:
 1783              	.LBB791:
 1784              	.LBB768:
 1785 06b0 BE0A0000 		movl	$10, %esi
 1785      00
 1786 06b5 E8000000 		call	_ZNSo3putEc
 1786      00
 1787              	.LVL154:
 580:/usr/include/c++/14/ostream ****       return __out;
 1788              		.loc 5 580 16 view .LVU485
 1789 06ba E917FBFF 		jmp	.L5
 1789      FF
 1790              	.LVL155:
 1791 06bf 90       		.p2align 4,,10
 1792              		.p2align 3
 1793              	.L15:
 580:/usr/include/c++/14/ostream ****       return __out;
 1794              		.loc 5 580 16 view .LVU486
 1795              	.LBE768:
 1796              	.LBE791:
 1797              	.LBE792:
 1798              	.LBE794:
 1799              	.LBE991:
 1800              	.LBB992:
 1801              	.LBB987:
 1802              	.LBB984:
 1803              	.LBB981:
 1804              	.LBB955:
 1805 06c0 BE0A0000 		movl	$10, %esi
 1805      00
 1806 06c5 E8000000 		call	_ZNSo3putEc
 1806      00
 1807              	.LVL156:
GAS LISTING linobj/Ch02_03.s 			page 152


 580:/usr/include/c++/14/ostream ****       return __out;
 1808              		.loc 5 580 16 view .LVU487
 1809 06ca E920FFFF 		jmp	.L17
 1809      FF
 1810              	.LVL157:
 1811 06cf 90       		.p2align 4,,10
 1812              		.p2align 3
 1813              	.L28:
 580:/usr/include/c++/14/ostream ****       return __out;
 1814              		.loc 5 580 16 view .LVU488
 1815              	.LBE955:
 1816              	.LBE981:
 1817              	.LBE984:
 1818              	.LBE987:
 1819              	.LBE992:
  24:Ch02_03.cpp   **** }
 1820              		.loc 1 24 5 is_stmt 1 view .LVU489
 1821              	.LBB993:
 1822              	.LBI993:
 808:/usr/include/c++/14/bits/basic_string.h ****       { _M_dispose(); }
 1823              		.loc 4 808 7 view .LVU490
 1824              	.LBB994:
 809:/usr/include/c++/14/bits/basic_string.h **** 
 1825              		.loc 4 809 19 is_stmt 0 view .LVU491
 1826 06d0 4C89F7   		movq	%r14, %rdi
 1827 06d3 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1827      00
 1828              	.LVL158:
 1829              	.LBB995:
 1830              	.LBI995:
 186:/usr/include/c++/14/bits/basic_string.h ****       {
 1831              		.loc 4 186 14 is_stmt 1 view .LVU492
 1832              	.LBB996:
 1833              	.LBI996:
 1834              		.loc 2 182 7 view .LVU493
 1835              	.LBB997:
 1836              	.LBI997:
 1837              		.loc 3 104 7 view .LVU494
 1838              		.loc 3 104 7 is_stmt 0 view .LVU495
 1839              	.LBE997:
 1840              	.LBE996:
 1841              	.LBE995:
 1842              	.LBE994:
 1843              	.LBE993:
  25:Ch02_03.cpp   **** 
 1844              		.loc 1 25 1 view .LVU496
 1845 06d8 4883C478 		addq	$120, %rsp
 1846              		.cfi_remember_state
 1847              		.cfi_def_cfa_offset 56
 1848 06dc 31C0     		xorl	%eax, %eax
 1849 06de 5B       		popq	%rbx
 1850              		.cfi_def_cfa_offset 48
 1851 06df 5D       		popq	%rbp
 1852              		.cfi_def_cfa_offset 40
 1853 06e0 415C     		popq	%r12
 1854              		.cfi_def_cfa_offset 32
 1855 06e2 415D     		popq	%r13
GAS LISTING linobj/Ch02_03.s 			page 153


 1856              		.cfi_def_cfa_offset 24
 1857 06e4 415E     		popq	%r14
 1858              		.cfi_def_cfa_offset 16
 1859 06e6 415F     		popq	%r15
 1860              		.cfi_def_cfa_offset 8
 1861 06e8 C3       		ret
 1862              	.LVL159:
 1863 06e9 0F1F8000 		.p2align 4,,10
 1863      000000
 1864              		.p2align 3
 1865              	.L18:
 1866              		.cfi_restore_state
 1867              	.LBB998:
 1868              	.LBB988:
 1869              	.LBB985:
 1870              	.LBB982:
 1871              	.LBB980:
 580:/usr/include/c++/14/ostream ****       return __out;
 1872              		.loc 5 580 16 view .LVU497
 1873 06f0 BE0A0000 		movl	$10, %esi
 1873      00
 1874 06f5 E8000000 		call	_ZNSo3putEc
 1874      00
 1875              	.LVL160:
 1876              	.LEHE1:
 580:/usr/include/c++/14/ostream ****       return __out;
 1877              		.loc 5 580 16 view .LVU498
 1878 06fa EB8E     		jmp	.L20
 1879              	.LVL161:
 1880              	.L24:
 580:/usr/include/c++/14/ostream ****       return __out;
 1881              		.loc 5 580 16 view .LVU499
 1882              	.LBE980:
 1883              	.LBE982:
 1884              	.LBE985:
 1885              	.LBE988:
 1886              	.LBE998:
 1887              	.LBB999:
 1888              	.LBB1000:
 809:/usr/include/c++/14/bits/basic_string.h **** 
 1889              		.loc 4 809 19 view .LVU500
 1890 06fc 4889C3   		movq	%rax, %rbx
 1891 06ff E9000000 		jmp	.L22
 1891      00
 1892              	.LBE1000:
 1893              	.LBE999:
 1894              		.section	.gcc_except_table,"a",@progbits
 1895              	.LLSDA1975:
 1896 0000 FF       		.byte	0xff
 1897 0001 FF       		.byte	0xff
 1898 0002 01       		.byte	0x1
 1899 0003 0A       		.uleb128 .LLSDACSE1975-.LLSDACSB1975
 1900              	.LLSDACSB1975:
 1901 0004 34       		.uleb128 .LEHB0-.LFB1975
 1902 0005 05       		.uleb128 .LEHE0-.LEHB0
 1903 0006 00       		.uleb128 0
 1904 0007 00       		.uleb128 0
GAS LISTING linobj/Ch02_03.s 			page 154


 1905 0008 63       		.uleb128 .LEHB1-.LFB1975
 1906 0009 970D     		.uleb128 .LEHE1-.LEHB1
 1907 000b FC0D     		.uleb128 .L24-.LFB1975
 1908 000d 00       		.uleb128 0
 1909              	.LLSDACSE1975:
 1910              		.section	.text.startup
 1911              		.cfi_endproc
 1912              		.section	.text.unlikely
 1913              		.cfi_startproc
 1914              		.cfi_personality 0x3,__gxx_personality_v0
 1915              		.cfi_lsda 0x3,.LLSDAC1975
 1916              		.type	main.cold, @function
 1917              	main.cold:
 1918              	.LFSB1975:
 1919              	.LBB1006:
 1920              	.LBB1004:
 1921              	.L22:
 1922              		.cfi_def_cfa_offset 176
 1923              		.cfi_offset 3, -56
 1924              		.cfi_offset 6, -48
 1925              		.cfi_offset 12, -40
 1926              		.cfi_offset 13, -32
 1927              		.cfi_offset 14, -24
 1928              		.cfi_offset 15, -16
 1929              	.LVL162:
 809:/usr/include/c++/14/bits/basic_string.h **** 
 1930              		.loc 4 809 19 view -0
 1931              	.LBE1004:
 1932              	.LBI999:
 808:/usr/include/c++/14/bits/basic_string.h ****       { _M_dispose(); }
 1933              		.loc 4 808 7 is_stmt 1 view .LVU502
 1934              	.LBB1005:
 809:/usr/include/c++/14/bits/basic_string.h **** 
 1935              		.loc 4 809 19 is_stmt 0 view .LVU503
 1936 0000 4C89F7   		movq	%r14, %rdi
 1937 0003 C5F877   		vzeroupper
 1938              	.LVL163:
 1939 0006 E8000000 		call	_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv
 1939      00
 1940              	.LVL164:
 1941              	.LBB1001:
 1942              	.LBI1001:
 186:/usr/include/c++/14/bits/basic_string.h ****       {
 1943              		.loc 4 186 14 is_stmt 1 view .LVU504
 1944              	.LBB1002:
 1945              	.LBI1002:
 1946              		.loc 2 182 7 view .LVU505
 1947              	.LBB1003:
 1948              	.LBI1003:
 1949              		.loc 3 104 7 view .LVU506
 1950              		.loc 3 104 7 is_stmt 0 view .LVU507
 1951 000b 4889DF   		movq	%rbx, %rdi
 1952              	.LEHB2:
 1953 000e E8000000 		call	_Unwind_Resume
 1953      00
 1954              	.LVL165:
 1955              	.LEHE2:
GAS LISTING linobj/Ch02_03.s 			page 155


 1956              	.LBE1003:
 1957              	.LBE1002:
 1958              	.LBE1001:
 1959              	.LBE1005:
 1960              	.LBE1006:
 1961              		.cfi_endproc
 1962              	.LFE1975:
 1963              		.section	.gcc_except_table
 1964              	.LLSDAC1975:
 1965 000e FF       		.byte	0xff
 1966 000f FF       		.byte	0xff
 1967 0010 01       		.byte	0x1
 1968 0011 04       		.uleb128 .LLSDACSEC1975-.LLSDACSBC1975
 1969              	.LLSDACSBC1975:
 1970 0012 0E       		.uleb128 .LEHB2-.LCOLDB16
 1971 0013 05       		.uleb128 .LEHE2-.LEHB2
 1972 0014 00       		.uleb128 0
 1973 0015 00       		.uleb128 0
 1974              	.LLSDACSEC1975:
 1975              		.section	.text.unlikely
 1976              		.section	.text.startup
 1977              		.size	main, .-main
 1978              		.section	.text.unlikely
 1979              		.size	main.cold, .-main.cold
 1980              	.LCOLDE16:
 1981              		.section	.text.startup
 1982              	.LHOTE16:
 1983              		.section	.rodata.cst16,"aM",@progbits,16
 1984              		.align 16
 1985              	.LC0:
 1986 0000 0A00     		.value	10
 1987 0002 B80B     		.value	3000
 1988 0004 30F8     		.value	-2000
 1989 0006 2A00     		.value	42
 1990 0008 78EC     		.value	-5000
 1991 000a 0800     		.value	8
 1992 000c 1027     		.value	10000
 1993 000e C4FF     		.value	-60
 1994              		.align 16
 1995              	.LC1:
 1996 0010 FBFF     		.value	-5
 1997 0012 6400     		.value	100
 1998 0014 D8DC     		.value	-9000
 1999 0016 E803     		.value	1000
 2000 0018 A861     		.value	25000
 2001 001a 0040     		.value	16384
 2002 001c AC0D     		.value	3500
 2003 001e 7017     		.value	6000
 2004              		.align 16
 2005              	.LC9:
 2006 0020 0A000000 		.long	10
 2007 0024 B80B0000 		.long	3000
 2008 0028 30F8FFFF 		.long	-2000
 2009 002c 68100000 		.long	4200
 2010              		.align 16
 2011              	.LC10:
 2012 0030 0CFEFFFF 		.long	-500
GAS LISTING linobj/Ch02_03.s 			page 156


 2013 0034 64000000 		.long	100
 2014 0038 20D1FFFF 		.long	-12000
 2015 003c E8030000 		.long	1000
 2016              		.align 16
 2017              	.LC13:
 2018 0040 0A000000 		.long	10
 2019 0044 B80B0000 		.long	3000
 2020 0048 C063FFFF 		.long	-40000
 2021 004c 68100000 		.long	4200
 2022              		.align 16
 2023              	.LC14:
 2024 0050 0CFEFFFF 		.long	-500
 2025 0054 64000000 		.long	100
 2026 0058 402BFEFF 		.long	-120000
 2027 005c E8030000 		.long	1000
 2028              		.text
 2029              	.Letext0:
 2030              		.section	.text.unlikely
 2031              	.Letext_cold0:
 2032              		.file 8 "<built-in>"
 2033              		.file 9 "/usr/lib/gcc/x86_64-redhat-linux/14/include/stddef.h"
 2034              		.file 10 "/usr/include/bits/types/wint_t.h"
 2035              		.file 11 "/usr/include/bits/types/__mbstate_t.h"
 2036              		.file 12 "/usr/include/bits/types/mbstate_t.h"
 2037              		.file 13 "/usr/include/bits/types/__FILE.h"
 2038              		.file 14 "/usr/include/bits/types/struct_FILE.h"
 2039              		.file 15 "/usr/include/bits/types/FILE.h"
 2040              		.file 16 "/usr/include/c++/14/cwchar"
 2041              		.file 17 "/usr/include/c++/14/x86_64-redhat-linux/bits/c++config.h"
 2042              		.file 18 "/usr/include/c++/14/bits/exception_ptr.h"
 2043              		.file 19 "/usr/include/c++/14/bits/char_traits.h"
 2044              		.file 20 "/usr/include/c++/14/clocale"
 2045              		.file 21 "/usr/include/c++/14/bits/stl_pair.h"
 2046              		.file 22 "/usr/include/c++/14/type_traits"
 2047              		.file 23 "/usr/include/c++/14/debug/debug.h"
 2048              		.file 24 "/usr/include/c++/14/cstdlib"
 2049              		.file 25 "/usr/include/c++/14/cstdio"
 2050              		.file 26 "/usr/include/c++/14/bits/alloc_traits.h"
 2051              		.file 27 "/usr/include/c++/14/initializer_list"
 2052              		.file 28 "/usr/include/c++/14/bits/stl_iterator_base_types.h"
 2053              		.file 29 "/usr/include/c++/14/bits/stringfwd.h"
 2054              		.file 30 "/usr/include/c++/14/cwctype"
 2055              		.file 31 "/usr/include/c++/14/bits/ostream.tcc"
 2056              		.file 32 "/usr/include/c++/14/iosfwd"
 2057              		.file 33 "/usr/include/c++/14/iostream"
 2058              		.file 34 "/usr/include/c++/14/ctime"
 2059              		.file 35 "/usr/include/c++/14/cstdint"
 2060              		.file 36 "/usr/include/c++/14/bits/ptr_traits.h"
 2061              		.file 37 "/usr/include/c++/14/bits/charconv.h"
 2062              		.file 38 "/usr/include/c++/14/bits/basic_ios.tcc"
 2063              		.file 39 "/usr/include/c++/14/bits/basic_ios.h"
 2064              		.file 40 "/usr/include/c++/14/bits/ostream_insert.h"
 2065              		.file 41 "/usr/include/c++/14/bits/postypes.h"
 2066              		.file 42 "/usr/include/wchar.h"
 2067              		.file 43 "/usr/include/bits/types/struct_tm.h"
 2068              		.file 44 "/usr/include/c++/14/bits/predefined_ops.h"
 2069              		.file 45 "/usr/include/c++/14/ext/alloc_traits.h"
GAS LISTING linobj/Ch02_03.s 			page 157


 2070              		.file 46 "/usr/include/c++/14/bits/stl_iterator.h"
 2071              		.file 47 "/usr/include/locale.h"
 2072              		.file 48 "/usr/include/bits/types.h"
 2073              		.file 49 "/usr/include/bits/types/time_t.h"
 2074              		.file 50 "/usr/include/bits/types/clock_t.h"
 2075              		.file 51 "/usr/include/stdlib.h"
 2076              		.file 52 "/usr/include/bits/stdint-intn.h"
 2077              		.file 53 "/usr/include/bits/stdlib-float.h"
 2078              		.file 54 "/usr/include/bits/stdlib-bsearch.h"
 2079              		.file 55 "/usr/include/bits/types/__fpos_t.h"
 2080              		.file 56 "/usr/include/stdio.h"
 2081              		.file 57 "/usr/include/bits/stdio.h"
 2082              		.file 58 "/usr/include/bits/wctype-wchar.h"
 2083              		.file 59 "/usr/include/wctype.h"
 2084              		.file 60 "/usr/include/time.h"
 2085              		.file 61 "/usr/include/bits/stdint-uintn.h"
 2086              		.file 62 "/usr/include/bits/stdint-least.h"
 2087              		.file 63 "/usr/include/stdint.h"
 2088              		.file 64 "../../Include/XmmVal.h"
 2089              		.file 65 "/usr/include/c++/14/new"
 2090              		.file 66 "Ch02_03.h"
 2091              		.file 67 "/usr/include/c++/14/system_error"
 2092              		.section	.debug_info,"",@progbits
 2093              	.Ldebug_info0:
 2094 0000 97740000 		.long	0x7497
 2095 0004 0500     		.value	0x5
 2096 0006 01       		.byte	0x1
 2097 0007 08       		.byte	0x8
 2098 0008 00000000 		.long	.Ldebug_abbrev0
 2099 000c 5D       		.uleb128 0x5d
 2100 000d 00000000 		.long	.LASF868
 2101 0011 21       		.byte	0x21
 2102 0012 00000000 		.long	.LASF0
 2103 0016 00000000 		.long	.LASF1
 2104 001a 00000000 		.long	.LLRL201
 2105 001e 00000000 		.quad	0
 2105      00000000 
 2106 0026 00000000 		.long	.Ldebug_line0
 2107 002a 07       		.uleb128 0x7
 2108 002b 00000000 		.long	.LASF8
 2109 002f 09       		.byte	0x9
 2110 0030 D6       		.byte	0xd6
 2111 0031 1B       		.byte	0x1b
 2112 0032 36000000 		.long	0x36
 2113 0036 18       		.uleb128 0x18
 2114 0037 08       		.byte	0x8
 2115 0038 07       		.byte	0x7
 2116 0039 00000000 		.long	.LASF6
 2117 003d 5E       		.uleb128 0x5e
 2118 003e 00000000 		.long	.LASF869
 2119 0042 18       		.byte	0x18
 2120 0043 08       		.byte	0x8
 2121 0044 00       		.byte	0
 2122 0045 72000000 		.long	0x72
 2123 0049 3C       		.uleb128 0x3c
 2124 004a 00000000 		.long	.LASF2
 2125 004e 72000000 		.long	0x72
GAS LISTING linobj/Ch02_03.s 			page 158


 2126 0052 00       		.byte	0
 2127 0053 3C       		.uleb128 0x3c
 2128 0054 00000000 		.long	.LASF3
 2129 0058 72000000 		.long	0x72
 2130 005c 04       		.byte	0x4
 2131 005d 3C       		.uleb128 0x3c
 2132 005e 00000000 		.long	.LASF4
 2133 0062 79000000 		.long	0x79
 2134 0066 08       		.byte	0x8
 2135 0067 3C       		.uleb128 0x3c
 2136 0068 00000000 		.long	.LASF5
 2137 006c 79000000 		.long	0x79
 2138 0070 10       		.byte	0x10
 2139 0071 00       		.byte	0
 2140 0072 18       		.uleb128 0x18
 2141 0073 04       		.byte	0x4
 2142 0074 07       		.byte	0x7
 2143 0075 00000000 		.long	.LASF7
 2144 0079 5F       		.uleb128 0x5f
 2145 007a 08       		.byte	0x8
 2146 007b 07       		.uleb128 0x7
 2147 007c 00000000 		.long	.LASF9
 2148 0080 0A       		.byte	0xa
 2149 0081 14       		.byte	0x14
 2150 0082 16       		.byte	0x16
 2151 0083 72000000 		.long	0x72
 2152 0087 3D       		.uleb128 0x3d
 2153 0088 08       		.byte	0x8
 2154 0089 0B       		.byte	0xb
 2155 008a 0E       		.byte	0xe
 2156 008b 01       		.byte	0x1
 2157 008c 00000000 		.long	.LASF682
 2158 0090 D1000000 		.long	0xd1
 2159 0094 60       		.uleb128 0x60
 2160 0095 04       		.byte	0x4
 2161 0096 0B       		.byte	0xb
 2162 0097 11       		.byte	0x11
 2163 0098 03       		.byte	0x3
 2164 0099 B6000000 		.long	0xb6
 2165 009d 20       		.uleb128 0x20
 2166 009e 00000000 		.long	.LASF10
 2167 00a2 0B       		.byte	0xb
 2168 00a3 12       		.byte	0x12
 2169 00a4 12       		.byte	0x12
 2170 00a5 72000000 		.long	0x72
 2171 00a9 20       		.uleb128 0x20
 2172 00aa 00000000 		.long	.LASF11
 2173 00ae 0B       		.byte	0xb
 2174 00af 13       		.byte	0x13
 2175 00b0 0A       		.byte	0xa
 2176 00b1 D1000000 		.long	0xd1
 2177 00b5 00       		.byte	0
 2178 00b6 08       		.uleb128 0x8
 2179 00b7 00000000 		.long	.LASF12
 2180 00bb 0B       		.byte	0xb
 2181 00bc 0F       		.byte	0xf
 2182 00bd 07       		.byte	0x7
GAS LISTING linobj/Ch02_03.s 			page 159


 2183 00be ED000000 		.long	0xed
 2184 00c2 00       		.byte	0
 2185 00c3 08       		.uleb128 0x8
 2186 00c4 00000000 		.long	.LASF13
 2187 00c8 0B       		.byte	0xb
 2188 00c9 14       		.byte	0x14
 2189 00ca 05       		.byte	0x5
 2190 00cb 94000000 		.long	0x94
 2191 00cf 04       		.byte	0x4
 2192 00d0 00       		.byte	0
 2193 00d1 21       		.uleb128 0x21
 2194 00d2 E1000000 		.long	0xe1
 2195 00d6 E1000000 		.long	0xe1
 2196 00da 1C       		.uleb128 0x1c
 2197 00db 36000000 		.long	0x36
 2198 00df 03       		.byte	0x3
 2199 00e0 00       		.byte	0
 2200 00e1 18       		.uleb128 0x18
 2201 00e2 01       		.byte	0x1
 2202 00e3 06       		.byte	0x6
 2203 00e4 00000000 		.long	.LASF14
 2204 00e8 0E       		.uleb128 0xe
 2205 00e9 E1000000 		.long	0xe1
 2206 00ed 61       		.uleb128 0x61
 2207 00ee 04       		.byte	0x4
 2208 00ef 05       		.byte	0x5
 2209 00f0 696E7400 		.string	"int"
 2210 00f4 0E       		.uleb128 0xe
 2211 00f5 ED000000 		.long	0xed
 2212 00f9 07       		.uleb128 0x7
 2213 00fa 00000000 		.long	.LASF15
 2214 00fe 0B       		.byte	0xb
 2215 00ff 15       		.byte	0x15
 2216 0100 03       		.byte	0x3
 2217 0101 87000000 		.long	0x87
 2218 0105 07       		.uleb128 0x7
 2219 0106 00000000 		.long	.LASF16
 2220 010a 0C       		.byte	0xc
 2221 010b 06       		.byte	0x6
 2222 010c 15       		.byte	0x15
 2223 010d F9000000 		.long	0xf9
 2224 0111 0E       		.uleb128 0xe
 2225 0112 05010000 		.long	0x105
 2226 0116 07       		.uleb128 0x7
 2227 0117 00000000 		.long	.LASF17
 2228 011b 0D       		.byte	0xd
 2229 011c 05       		.byte	0x5
 2230 011d 19       		.byte	0x19
 2231 011e 22010000 		.long	0x122
 2232 0122 25       		.uleb128 0x25
 2233 0123 00000000 		.long	.LASF75
 2234 0127 D8       		.byte	0xd8
 2235 0128 0E       		.byte	0xe
 2236 0129 31       		.byte	0x31
 2237 012a 08       		.byte	0x8
 2238 012b A9020000 		.long	0x2a9
 2239 012f 08       		.uleb128 0x8
GAS LISTING linobj/Ch02_03.s 			page 160


 2240 0130 00000000 		.long	.LASF18
 2241 0134 0E       		.byte	0xe
 2242 0135 33       		.byte	0x33
 2243 0136 07       		.byte	0x7
 2244 0137 ED000000 		.long	0xed
 2245 013b 00       		.byte	0
 2246 013c 08       		.uleb128 0x8
 2247 013d 00000000 		.long	.LASF19
 2248 0141 0E       		.byte	0xe
 2249 0142 36       		.byte	0x36
 2250 0143 09       		.byte	0x9
 2251 0144 CB330000 		.long	0x33cb
 2252 0148 08       		.byte	0x8
 2253 0149 08       		.uleb128 0x8
 2254 014a 00000000 		.long	.LASF20
 2255 014e 0E       		.byte	0xe
 2256 014f 37       		.byte	0x37
 2257 0150 09       		.byte	0x9
 2258 0151 CB330000 		.long	0x33cb
 2259 0155 10       		.byte	0x10
 2260 0156 08       		.uleb128 0x8
 2261 0157 00000000 		.long	.LASF21
 2262 015b 0E       		.byte	0xe
 2263 015c 38       		.byte	0x38
 2264 015d 09       		.byte	0x9
 2265 015e CB330000 		.long	0x33cb
 2266 0162 18       		.byte	0x18
 2267 0163 08       		.uleb128 0x8
 2268 0164 00000000 		.long	.LASF22
 2269 0168 0E       		.byte	0xe
 2270 0169 39       		.byte	0x39
 2271 016a 09       		.byte	0x9
 2272 016b CB330000 		.long	0x33cb
 2273 016f 20       		.byte	0x20
 2274 0170 08       		.uleb128 0x8
 2275 0171 00000000 		.long	.LASF23
 2276 0175 0E       		.byte	0xe
 2277 0176 3A       		.byte	0x3a
 2278 0177 09       		.byte	0x9
 2279 0178 CB330000 		.long	0x33cb
 2280 017c 28       		.byte	0x28
 2281 017d 08       		.uleb128 0x8
 2282 017e 00000000 		.long	.LASF24
 2283 0182 0E       		.byte	0xe
 2284 0183 3B       		.byte	0x3b
 2285 0184 09       		.byte	0x9
 2286 0185 CB330000 		.long	0x33cb
 2287 0189 30       		.byte	0x30
 2288 018a 08       		.uleb128 0x8
 2289 018b 00000000 		.long	.LASF25
 2290 018f 0E       		.byte	0xe
 2291 0190 3C       		.byte	0x3c
 2292 0191 09       		.byte	0x9
 2293 0192 CB330000 		.long	0x33cb
 2294 0196 38       		.byte	0x38
 2295 0197 08       		.uleb128 0x8
 2296 0198 00000000 		.long	.LASF26
GAS LISTING linobj/Ch02_03.s 			page 161


 2297 019c 0E       		.byte	0xe
 2298 019d 3D       		.byte	0x3d
 2299 019e 09       		.byte	0x9
 2300 019f CB330000 		.long	0x33cb
 2301 01a3 40       		.byte	0x40
 2302 01a4 08       		.uleb128 0x8
 2303 01a5 00000000 		.long	.LASF27
 2304 01a9 0E       		.byte	0xe
 2305 01aa 40       		.byte	0x40
 2306 01ab 09       		.byte	0x9
 2307 01ac CB330000 		.long	0x33cb
 2308 01b0 48       		.byte	0x48
 2309 01b1 08       		.uleb128 0x8
 2310 01b2 00000000 		.long	.LASF28
 2311 01b6 0E       		.byte	0xe
 2312 01b7 41       		.byte	0x41
 2313 01b8 09       		.byte	0x9
 2314 01b9 CB330000 		.long	0x33cb
 2315 01bd 50       		.byte	0x50
 2316 01be 08       		.uleb128 0x8
 2317 01bf 00000000 		.long	.LASF29
 2318 01c3 0E       		.byte	0xe
 2319 01c4 42       		.byte	0x42
 2320 01c5 09       		.byte	0x9
 2321 01c6 CB330000 		.long	0x33cb
 2322 01ca 58       		.byte	0x58
 2323 01cb 08       		.uleb128 0x8
 2324 01cc 00000000 		.long	.LASF30
 2325 01d0 0E       		.byte	0xe
 2326 01d1 44       		.byte	0x44
 2327 01d2 16       		.byte	0x16
 2328 01d3 E7460000 		.long	0x46e7
 2329 01d7 60       		.byte	0x60
 2330 01d8 08       		.uleb128 0x8
 2331 01d9 00000000 		.long	.LASF31
 2332 01dd 0E       		.byte	0xe
 2333 01de 46       		.byte	0x46
 2334 01df 14       		.byte	0x14
 2335 01e0 EC460000 		.long	0x46ec
 2336 01e4 68       		.byte	0x68
 2337 01e5 08       		.uleb128 0x8
 2338 01e6 00000000 		.long	.LASF32
 2339 01ea 0E       		.byte	0xe
 2340 01eb 48       		.byte	0x48
 2341 01ec 07       		.byte	0x7
 2342 01ed ED000000 		.long	0xed
 2343 01f1 70       		.byte	0x70
 2344 01f2 08       		.uleb128 0x8
 2345 01f3 00000000 		.long	.LASF33
 2346 01f7 0E       		.byte	0xe
 2347 01f8 49       		.byte	0x49
 2348 01f9 07       		.byte	0x7
 2349 01fa ED000000 		.long	0xed
 2350 01fe 74       		.byte	0x74
 2351 01ff 08       		.uleb128 0x8
 2352 0200 00000000 		.long	.LASF34
 2353 0204 0E       		.byte	0xe
GAS LISTING linobj/Ch02_03.s 			page 162


 2354 0205 4A       		.byte	0x4a
 2355 0206 0B       		.byte	0xb
 2356 0207 F8410000 		.long	0x41f8
 2357 020b 78       		.byte	0x78
 2358 020c 08       		.uleb128 0x8
 2359 020d 00000000 		.long	.LASF35
 2360 0211 0E       		.byte	0xe
 2361 0212 4D       		.byte	0x4d
 2362 0213 12       		.byte	0x12
 2363 0214 B5020000 		.long	0x2b5
 2364 0218 80       		.byte	0x80
 2365 0219 08       		.uleb128 0x8
 2366 021a 00000000 		.long	.LASF36
 2367 021e 0E       		.byte	0xe
 2368 021f 4E       		.byte	0x4e
 2369 0220 0F       		.byte	0xf
 2370 0221 563F0000 		.long	0x3f56
 2371 0225 82       		.byte	0x82
 2372 0226 08       		.uleb128 0x8
 2373 0227 00000000 		.long	.LASF37
 2374 022b 0E       		.byte	0xe
 2375 022c 4F       		.byte	0x4f
 2376 022d 08       		.byte	0x8
 2377 022e F1460000 		.long	0x46f1
 2378 0232 83       		.byte	0x83
 2379 0233 08       		.uleb128 0x8
 2380 0234 00000000 		.long	.LASF38
 2381 0238 0E       		.byte	0xe
 2382 0239 51       		.byte	0x51
 2383 023a 0F       		.byte	0xf
 2384 023b 01470000 		.long	0x4701
 2385 023f 88       		.byte	0x88
 2386 0240 08       		.uleb128 0x8
 2387 0241 00000000 		.long	.LASF39
 2388 0245 0E       		.byte	0xe
 2389 0246 59       		.byte	0x59
 2390 0247 0D       		.byte	0xd
 2391 0248 04420000 		.long	0x4204
 2392 024c 90       		.byte	0x90
 2393 024d 08       		.uleb128 0x8
 2394 024e 00000000 		.long	.LASF40
 2395 0252 0E       		.byte	0xe
 2396 0253 5B       		.byte	0x5b
 2397 0254 17       		.byte	0x17
 2398 0255 0B470000 		.long	0x470b
 2399 0259 98       		.byte	0x98
 2400 025a 08       		.uleb128 0x8
 2401 025b 00000000 		.long	.LASF41
 2402 025f 0E       		.byte	0xe
 2403 0260 5C       		.byte	0x5c
 2404 0261 19       		.byte	0x19
 2405 0262 15470000 		.long	0x4715
 2406 0266 A0       		.byte	0xa0
 2407 0267 08       		.uleb128 0x8
 2408 0268 00000000 		.long	.LASF42
 2409 026c 0E       		.byte	0xe
 2410 026d 5D       		.byte	0x5d
GAS LISTING linobj/Ch02_03.s 			page 163


 2411 026e 14       		.byte	0x14
 2412 026f EC460000 		.long	0x46ec
 2413 0273 A8       		.byte	0xa8
 2414 0274 08       		.uleb128 0x8
 2415 0275 00000000 		.long	.LASF43
 2416 0279 0E       		.byte	0xe
 2417 027a 5E       		.byte	0x5e
 2418 027b 09       		.byte	0x9
 2419 027c 79000000 		.long	0x79
 2420 0280 B0       		.byte	0xb0
 2421 0281 08       		.uleb128 0x8
 2422 0282 00000000 		.long	.LASF44
 2423 0286 0E       		.byte	0xe
 2424 0287 5F       		.byte	0x5f
 2425 0288 0A       		.byte	0xa
 2426 0289 2A000000 		.long	0x2a
 2427 028d B8       		.byte	0xb8
 2428 028e 08       		.uleb128 0x8
 2429 028f 00000000 		.long	.LASF45
 2430 0293 0E       		.byte	0xe
 2431 0294 60       		.byte	0x60
 2432 0295 07       		.byte	0x7
 2433 0296 ED000000 		.long	0xed
 2434 029a C0       		.byte	0xc0
 2435 029b 08       		.uleb128 0x8
 2436 029c 00000000 		.long	.LASF46
 2437 02a0 0E       		.byte	0xe
 2438 02a1 62       		.byte	0x62
 2439 02a2 08       		.byte	0x8
 2440 02a3 1A470000 		.long	0x471a
 2441 02a7 C4       		.byte	0xc4
 2442 02a8 00       		.byte	0
 2443 02a9 07       		.uleb128 0x7
 2444 02aa 00000000 		.long	.LASF47
 2445 02ae 0F       		.byte	0xf
 2446 02af 07       		.byte	0x7
 2447 02b0 19       		.byte	0x19
 2448 02b1 22010000 		.long	0x122
 2449 02b5 18       		.uleb128 0x18
 2450 02b6 02       		.byte	0x2
 2451 02b7 07       		.byte	0x7
 2452 02b8 00000000 		.long	.LASF48
 2453 02bc 0B       		.uleb128 0xb
 2454 02bd E8000000 		.long	0xe8
 2455 02c1 0E       		.uleb128 0xe
 2456 02c2 BC020000 		.long	0x2bc
 2457 02c6 62       		.uleb128 0x62
 2458 02c7 73746400 		.string	"std"
 2459 02cb 11       		.byte	0x11
 2460 02cc 6508     		.value	0x865
 2461 02ce 0B       		.byte	0xb
 2462 02cf 93300000 		.long	0x3093
 2463 02d3 03       		.uleb128 0x3
 2464 02d4 10       		.byte	0x10
 2465 02d5 40       		.byte	0x40
 2466 02d6 0B       		.byte	0xb
 2467 02d7 05010000 		.long	0x105
GAS LISTING linobj/Ch02_03.s 			page 164


 2468 02db 03       		.uleb128 0x3
 2469 02dc 10       		.byte	0x10
 2470 02dd 8D       		.byte	0x8d
 2471 02de 0B       		.byte	0xb
 2472 02df 7B000000 		.long	0x7b
 2473 02e3 03       		.uleb128 0x3
 2474 02e4 10       		.byte	0x10
 2475 02e5 8F       		.byte	0x8f
 2476 02e6 0B       		.byte	0xb
 2477 02e7 93300000 		.long	0x3093
 2478 02eb 03       		.uleb128 0x3
 2479 02ec 10       		.byte	0x10
 2480 02ed 90       		.byte	0x90
 2481 02ee 0B       		.byte	0xb
 2482 02ef AA300000 		.long	0x30aa
 2483 02f3 03       		.uleb128 0x3
 2484 02f4 10       		.byte	0x10
 2485 02f5 91       		.byte	0x91
 2486 02f6 0B       		.byte	0xb
 2487 02f7 C6300000 		.long	0x30c6
 2488 02fb 03       		.uleb128 0x3
 2489 02fc 10       		.byte	0x10
 2490 02fd 92       		.byte	0x92
 2491 02fe 0B       		.byte	0xb
 2492 02ff F8300000 		.long	0x30f8
 2493 0303 03       		.uleb128 0x3
 2494 0304 10       		.byte	0x10
 2495 0305 93       		.byte	0x93
 2496 0306 0B       		.byte	0xb
 2497 0307 14310000 		.long	0x3114
 2498 030b 03       		.uleb128 0x3
 2499 030c 10       		.byte	0x10
 2500 030d 94       		.byte	0x94
 2501 030e 0B       		.byte	0xb
 2502 030f 35310000 		.long	0x3135
 2503 0313 03       		.uleb128 0x3
 2504 0314 10       		.byte	0x10
 2505 0315 95       		.byte	0x95
 2506 0316 0B       		.byte	0xb
 2507 0317 51310000 		.long	0x3151
 2508 031b 03       		.uleb128 0x3
 2509 031c 10       		.byte	0x10
 2510 031d 96       		.byte	0x96
 2511 031e 0B       		.byte	0xb
 2512 031f 6E310000 		.long	0x316e
 2513 0323 03       		.uleb128 0x3
 2514 0324 10       		.byte	0x10
 2515 0325 97       		.byte	0x97
 2516 0326 0B       		.byte	0xb
 2517 0327 8F310000 		.long	0x318f
 2518 032b 03       		.uleb128 0x3
 2519 032c 10       		.byte	0x10
 2520 032d 98       		.byte	0x98
 2521 032e 0B       		.byte	0xb
 2522 032f A6310000 		.long	0x31a6
 2523 0333 03       		.uleb128 0x3
 2524 0334 10       		.byte	0x10
GAS LISTING linobj/Ch02_03.s 			page 165


 2525 0335 99       		.byte	0x99
 2526 0336 0B       		.byte	0xb
 2527 0337 B3310000 		.long	0x31b3
 2528 033b 03       		.uleb128 0x3
 2529 033c 10       		.byte	0x10
 2530 033d 9A       		.byte	0x9a
 2531 033e 0B       		.byte	0xb
 2532 033f D9310000 		.long	0x31d9
 2533 0343 03       		.uleb128 0x3
 2534 0344 10       		.byte	0x10
 2535 0345 9B       		.byte	0x9b
 2536 0346 0B       		.byte	0xb
 2537 0347 FF310000 		.long	0x31ff
 2538 034b 03       		.uleb128 0x3
 2539 034c 10       		.byte	0x10
 2540 034d 9C       		.byte	0x9c
 2541 034e 0B       		.byte	0xb
 2542 034f 1B320000 		.long	0x321b
 2543 0353 03       		.uleb128 0x3
 2544 0354 10       		.byte	0x10
 2545 0355 9D       		.byte	0x9d
 2546 0356 0B       		.byte	0xb
 2547 0357 46320000 		.long	0x3246
 2548 035b 03       		.uleb128 0x3
 2549 035c 10       		.byte	0x10
 2550 035d 9E       		.byte	0x9e
 2551 035e 0B       		.byte	0xb
 2552 035f 62320000 		.long	0x3262
 2553 0363 03       		.uleb128 0x3
 2554 0364 10       		.byte	0x10
 2555 0365 A0       		.byte	0xa0
 2556 0366 0B       		.byte	0xb
 2557 0367 79320000 		.long	0x3279
 2558 036b 03       		.uleb128 0x3
 2559 036c 10       		.byte	0x10
 2560 036d A2       		.byte	0xa2
 2561 036e 0B       		.byte	0xb
 2562 036f 9B320000 		.long	0x329b
 2563 0373 03       		.uleb128 0x3
 2564 0374 10       		.byte	0x10
 2565 0375 A3       		.byte	0xa3
 2566 0376 0B       		.byte	0xb
 2567 0377 BC320000 		.long	0x32bc
 2568 037b 03       		.uleb128 0x3
 2569 037c 10       		.byte	0x10
 2570 037d A4       		.byte	0xa4
 2571 037e 0B       		.byte	0xb
 2572 037f D8320000 		.long	0x32d8
 2573 0383 03       		.uleb128 0x3
 2574 0384 10       		.byte	0x10
 2575 0385 A6       		.byte	0xa6
 2576 0386 0B       		.byte	0xb
 2577 0387 FE320000 		.long	0x32fe
 2578 038b 03       		.uleb128 0x3
 2579 038c 10       		.byte	0x10
 2580 038d A9       		.byte	0xa9
 2581 038e 0B       		.byte	0xb
GAS LISTING linobj/Ch02_03.s 			page 166


 2582 038f 23330000 		.long	0x3323
 2583 0393 03       		.uleb128 0x3
 2584 0394 10       		.byte	0x10
 2585 0395 AC       		.byte	0xac
 2586 0396 0B       		.byte	0xb
 2587 0397 49330000 		.long	0x3349
 2588 039b 03       		.uleb128 0x3
 2589 039c 10       		.byte	0x10
 2590 039d AE       		.byte	0xae
 2591 039e 0B       		.byte	0xb
 2592 039f 6E330000 		.long	0x336e
 2593 03a3 03       		.uleb128 0x3
 2594 03a4 10       		.byte	0x10
 2595 03a5 B0       		.byte	0xb0
 2596 03a6 0B       		.byte	0xb
 2597 03a7 8A330000 		.long	0x338a
 2598 03ab 03       		.uleb128 0x3
 2599 03ac 10       		.byte	0x10
 2600 03ad B2       		.byte	0xb2
 2601 03ae 0B       		.byte	0xb
 2602 03af AA330000 		.long	0x33aa
 2603 03b3 03       		.uleb128 0x3
 2604 03b4 10       		.byte	0x10
 2605 03b5 B3       		.byte	0xb3
 2606 03b6 0B       		.byte	0xb
 2607 03b7 D5330000 		.long	0x33d5
 2608 03bb 03       		.uleb128 0x3
 2609 03bc 10       		.byte	0x10
 2610 03bd B4       		.byte	0xb4
 2611 03be 0B       		.byte	0xb
 2612 03bf F0330000 		.long	0x33f0
 2613 03c3 03       		.uleb128 0x3
 2614 03c4 10       		.byte	0x10
 2615 03c5 B5       		.byte	0xb5
 2616 03c6 0B       		.byte	0xb
 2617 03c7 0B340000 		.long	0x340b
 2618 03cb 03       		.uleb128 0x3
 2619 03cc 10       		.byte	0x10
 2620 03cd B6       		.byte	0xb6
 2621 03ce 0B       		.byte	0xb
 2622 03cf 26340000 		.long	0x3426
 2623 03d3 03       		.uleb128 0x3
 2624 03d4 10       		.byte	0x10
 2625 03d5 B7       		.byte	0xb7
 2626 03d6 0B       		.byte	0xb
 2627 03d7 41340000 		.long	0x3441
 2628 03db 03       		.uleb128 0x3
 2629 03dc 10       		.byte	0x10
 2630 03dd B8       		.byte	0xb8
 2631 03de 0B       		.byte	0xb
 2632 03df 5C340000 		.long	0x345c
 2633 03e3 03       		.uleb128 0x3
 2634 03e4 10       		.byte	0x10
 2635 03e5 B9       		.byte	0xb9
 2636 03e6 0B       		.byte	0xb
 2637 03e7 28350000 		.long	0x3528
 2638 03eb 03       		.uleb128 0x3
GAS LISTING linobj/Ch02_03.s 			page 167


 2639 03ec 10       		.byte	0x10
 2640 03ed BA       		.byte	0xba
 2641 03ee 0B       		.byte	0xb
 2642 03ef 3E350000 		.long	0x353e
 2643 03f3 03       		.uleb128 0x3
 2644 03f4 10       		.byte	0x10
 2645 03f5 BB       		.byte	0xbb
 2646 03f6 0B       		.byte	0xb
 2647 03f7 5E350000 		.long	0x355e
 2648 03fb 03       		.uleb128 0x3
 2649 03fc 10       		.byte	0x10
 2650 03fd BC       		.byte	0xbc
 2651 03fe 0B       		.byte	0xb
 2652 03ff 7E350000 		.long	0x357e
 2653 0403 03       		.uleb128 0x3
 2654 0404 10       		.byte	0x10
 2655 0405 BD       		.byte	0xbd
 2656 0406 0B       		.byte	0xb
 2657 0407 9E350000 		.long	0x359e
 2658 040b 03       		.uleb128 0x3
 2659 040c 10       		.byte	0x10
 2660 040d BE       		.byte	0xbe
 2661 040e 0B       		.byte	0xb
 2662 040f C9350000 		.long	0x35c9
 2663 0413 03       		.uleb128 0x3
 2664 0414 10       		.byte	0x10
 2665 0415 BF       		.byte	0xbf
 2666 0416 0B       		.byte	0xb
 2667 0417 E4350000 		.long	0x35e4
 2668 041b 03       		.uleb128 0x3
 2669 041c 10       		.byte	0x10
 2670 041d C1       		.byte	0xc1
 2671 041e 0B       		.byte	0xb
 2672 041f 0C360000 		.long	0x360c
 2673 0423 03       		.uleb128 0x3
 2674 0424 10       		.byte	0x10
 2675 0425 C3       		.byte	0xc3
 2676 0426 0B       		.byte	0xb
 2677 0427 2F360000 		.long	0x362f
 2678 042b 03       		.uleb128 0x3
 2679 042c 10       		.byte	0x10
 2680 042d C4       		.byte	0xc4
 2681 042e 0B       		.byte	0xb
 2682 042f 4F360000 		.long	0x364f
 2683 0433 03       		.uleb128 0x3
 2684 0434 10       		.byte	0x10
 2685 0435 C5       		.byte	0xc5
 2686 0436 0B       		.byte	0xb
 2687 0437 7B360000 		.long	0x367b
 2688 043b 03       		.uleb128 0x3
 2689 043c 10       		.byte	0x10
 2690 043d C6       		.byte	0xc6
 2691 043e 0B       		.byte	0xb
 2692 043f A0360000 		.long	0x36a0
 2693 0443 03       		.uleb128 0x3
 2694 0444 10       		.byte	0x10
 2695 0445 C7       		.byte	0xc7
GAS LISTING linobj/Ch02_03.s 			page 168


 2696 0446 0B       		.byte	0xb
 2697 0447 C0360000 		.long	0x36c0
 2698 044b 03       		.uleb128 0x3
 2699 044c 10       		.byte	0x10
 2700 044d C8       		.byte	0xc8
 2701 044e 0B       		.byte	0xb
 2702 044f D7360000 		.long	0x36d7
 2703 0453 03       		.uleb128 0x3
 2704 0454 10       		.byte	0x10
 2705 0455 C9       		.byte	0xc9
 2706 0456 0B       		.byte	0xb
 2707 0457 F8360000 		.long	0x36f8
 2708 045b 03       		.uleb128 0x3
 2709 045c 10       		.byte	0x10
 2710 045d CA       		.byte	0xca
 2711 045e 0B       		.byte	0xb
 2712 045f 19370000 		.long	0x3719
 2713 0463 03       		.uleb128 0x3
 2714 0464 10       		.byte	0x10
 2715 0465 CB       		.byte	0xcb
 2716 0466 0B       		.byte	0xb
 2717 0467 3A370000 		.long	0x373a
 2718 046b 03       		.uleb128 0x3
 2719 046c 10       		.byte	0x10
 2720 046d CC       		.byte	0xcc
 2721 046e 0B       		.byte	0xb
 2722 046f 5B370000 		.long	0x375b
 2723 0473 03       		.uleb128 0x3
 2724 0474 10       		.byte	0x10
 2725 0475 CD       		.byte	0xcd
 2726 0476 0B       		.byte	0xb
 2727 0477 73370000 		.long	0x3773
 2728 047b 03       		.uleb128 0x3
 2729 047c 10       		.byte	0x10
 2730 047d CE       		.byte	0xce
 2731 047e 0B       		.byte	0xb
 2732 047f 8F370000 		.long	0x378f
 2733 0483 03       		.uleb128 0x3
 2734 0484 10       		.byte	0x10
 2735 0485 CE       		.byte	0xce
 2736 0486 0B       		.byte	0xb
 2737 0487 AE370000 		.long	0x37ae
 2738 048b 03       		.uleb128 0x3
 2739 048c 10       		.byte	0x10
 2740 048d CF       		.byte	0xcf
 2741 048e 0B       		.byte	0xb
 2742 048f CD370000 		.long	0x37cd
 2743 0493 03       		.uleb128 0x3
 2744 0494 10       		.byte	0x10
 2745 0495 CF       		.byte	0xcf
 2746 0496 0B       		.byte	0xb
 2747 0497 EC370000 		.long	0x37ec
 2748 049b 03       		.uleb128 0x3
 2749 049c 10       		.byte	0x10
 2750 049d D0       		.byte	0xd0
 2751 049e 0B       		.byte	0xb
 2752 049f 0B380000 		.long	0x380b
GAS LISTING linobj/Ch02_03.s 			page 169


 2753 04a3 03       		.uleb128 0x3
 2754 04a4 10       		.byte	0x10
 2755 04a5 D0       		.byte	0xd0
 2756 04a6 0B       		.byte	0xb
 2757 04a7 2A380000 		.long	0x382a
 2758 04ab 03       		.uleb128 0x3
 2759 04ac 10       		.byte	0x10
 2760 04ad D1       		.byte	0xd1
 2761 04ae 0B       		.byte	0xb
 2762 04af 49380000 		.long	0x3849
 2763 04b3 03       		.uleb128 0x3
 2764 04b4 10       		.byte	0x10
 2765 04b5 D1       		.byte	0xd1
 2766 04b6 0B       		.byte	0xb
 2767 04b7 68380000 		.long	0x3868
 2768 04bb 03       		.uleb128 0x3
 2769 04bc 10       		.byte	0x10
 2770 04bd D2       		.byte	0xd2
 2771 04be 0B       		.byte	0xb
 2772 04bf 87380000 		.long	0x3887
 2773 04c3 03       		.uleb128 0x3
 2774 04c4 10       		.byte	0x10
 2775 04c5 D2       		.byte	0xd2
 2776 04c6 0B       		.byte	0xb
 2777 04c7 AC380000 		.long	0x38ac
 2778 04cb 23       		.uleb128 0x23
 2779 04cc 10       		.byte	0x10
 2780 04cd 0B01     		.value	0x10b
 2781 04cf 16       		.byte	0x16
 2782 04d0 C33E0000 		.long	0x3ec3
 2783 04d4 23       		.uleb128 0x23
 2784 04d5 10       		.byte	0x10
 2785 04d6 0C01     		.value	0x10c
 2786 04d8 16       		.byte	0x16
 2787 04d9 E63E0000 		.long	0x3ee6
 2788 04dd 23       		.uleb128 0x23
 2789 04de 10       		.byte	0x10
 2790 04df 0D01     		.value	0x10d
 2791 04e1 16       		.byte	0x16
 2792 04e2 123F0000 		.long	0x3f12
 2793 04e6 23       		.uleb128 0x23
 2794 04e7 10       		.byte	0x10
 2795 04e8 1B01     		.value	0x11b
 2796 04ea 0E       		.byte	0xe
 2797 04eb 0C360000 		.long	0x360c
 2798 04ef 23       		.uleb128 0x23
 2799 04f0 10       		.byte	0x10
 2800 04f1 1E01     		.value	0x11e
 2801 04f3 0E       		.byte	0xe
 2802 04f4 FE320000 		.long	0x32fe
 2803 04f8 23       		.uleb128 0x23
 2804 04f9 10       		.byte	0x10
 2805 04fa 2101     		.value	0x121
 2806 04fc 0E       		.byte	0xe
 2807 04fd 49330000 		.long	0x3349
 2808 0501 23       		.uleb128 0x23
 2809 0502 10       		.byte	0x10
GAS LISTING linobj/Ch02_03.s 			page 170


 2810 0503 2401     		.value	0x124
 2811 0505 0E       		.byte	0xe
 2812 0506 8A330000 		.long	0x338a
 2813 050a 23       		.uleb128 0x23
 2814 050b 10       		.byte	0x10
 2815 050c 2801     		.value	0x128
 2816 050e 0E       		.byte	0xe
 2817 050f C33E0000 		.long	0x3ec3
 2818 0513 23       		.uleb128 0x23
 2819 0514 10       		.byte	0x10
 2820 0515 2901     		.value	0x129
 2821 0517 0E       		.byte	0xe
 2822 0518 E63E0000 		.long	0x3ee6
 2823 051c 23       		.uleb128 0x23
 2824 051d 10       		.byte	0x10
 2825 051e 2A01     		.value	0x12a
 2826 0520 0E       		.byte	0xe
 2827 0521 123F0000 		.long	0x3f12
 2828 0525 24       		.uleb128 0x24
 2829 0526 00000000 		.long	.LASF8
 2830 052a 11       		.byte	0x11
 2831 052b 6708     		.value	0x867
 2832 052d 1D       		.byte	0x1d
 2833 052e 36000000 		.long	0x36
 2834 0532 63       		.uleb128 0x63
 2835 0533 00000000 		.long	.LASF137
 2836 0537 16       		.byte	0x16
 2837 0538 050B     		.value	0xb05
 2838 053a 0D       		.byte	0xd
 2839 053b 43       		.uleb128 0x43
 2840 053c 00000000 		.long	.LASF49
 2841 0540 12       		.byte	0x12
 2842 0541 3D       		.byte	0x3d
 2843 0542 0D       		.byte	0xd
 2844 0543 2E070000 		.long	0x72e
 2845 0547 38       		.uleb128 0x38
 2846 0548 00000000 		.long	.LASF55
 2847 054c 08       		.byte	0x8
 2848 054d 12       		.byte	0x12
 2849 054e 61       		.byte	0x61
 2850 054f 09070000 		.long	0x709
 2851 0553 08       		.uleb128 0x8
 2852 0554 00000000 		.long	.LASF50
 2853 0558 12       		.byte	0x12
 2854 0559 63       		.byte	0x63
 2855 055a 0D       		.byte	0xd
 2856 055b 79000000 		.long	0x79
 2857 055f 00       		.byte	0
 2858 0560 64       		.uleb128 0x64
 2859 0561 00000000 		.long	.LASF55
 2860 0565 12       		.byte	0x12
 2861 0566 65       		.byte	0x65
 2862 0567 10       		.byte	0x10
 2863 0568 00000000 		.long	.LASF57
 2864 056c 74050000 		.long	0x574
 2865 0570 7F050000 		.long	0x57f
 2866 0574 02       		.uleb128 0x2
GAS LISTING linobj/Ch02_03.s 			page 171


 2867 0575 723F0000 		.long	0x3f72
 2868 0579 01       		.uleb128 0x1
 2869 057a 79000000 		.long	0x79
 2870 057e 00       		.byte	0
 2871 057f 31       		.uleb128 0x31
 2872 0580 00000000 		.long	.LASF51
 2873 0584 12       		.byte	0x12
 2874 0585 67       		.byte	0x67
 2875 0586 0C       		.byte	0xc
 2876 0587 00000000 		.long	.LASF53
 2877 058b 93050000 		.long	0x593
 2878 058f 99050000 		.long	0x599
 2879 0593 02       		.uleb128 0x2
 2880 0594 723F0000 		.long	0x3f72
 2881 0598 00       		.byte	0
 2882 0599 31       		.uleb128 0x31
 2883 059a 00000000 		.long	.LASF52
 2884 059e 12       		.byte	0x12
 2885 059f 68       		.byte	0x68
 2886 05a0 0C       		.byte	0xc
 2887 05a1 00000000 		.long	.LASF54
 2888 05a5 AD050000 		.long	0x5ad
 2889 05a9 B3050000 		.long	0x5b3
 2890 05ad 02       		.uleb128 0x2
 2891 05ae 723F0000 		.long	0x3f72
 2892 05b2 00       		.byte	0
 2893 05b3 1A       		.uleb128 0x1a
 2894 05b4 00000000 		.long	.LASF56
 2895 05b8 12       		.byte	0x12
 2896 05b9 6A       		.byte	0x6a
 2897 05ba 0D       		.byte	0xd
 2898 05bb 00000000 		.long	.LASF58
 2899 05bf 79000000 		.long	0x79
 2900 05c3 CB050000 		.long	0x5cb
 2901 05c7 D1050000 		.long	0x5d1
 2902 05cb 02       		.uleb128 0x2
 2903 05cc 773F0000 		.long	0x3f77
 2904 05d0 00       		.byte	0
 2905 05d1 1D       		.uleb128 0x1d
 2906 05d2 00000000 		.long	.LASF55
 2907 05d6 12       		.byte	0x12
 2908 05d7 72       		.byte	0x72
 2909 05d8 07       		.byte	0x7
 2910 05d9 00000000 		.long	.LASF59
 2911 05dd E5050000 		.long	0x5e5
 2912 05e1 EB050000 		.long	0x5eb
 2913 05e5 02       		.uleb128 0x2
 2914 05e6 723F0000 		.long	0x3f72
 2915 05ea 00       		.byte	0
 2916 05eb 1D       		.uleb128 0x1d
 2917 05ec 00000000 		.long	.LASF55
 2918 05f0 12       		.byte	0x12
 2919 05f1 74       		.byte	0x74
 2920 05f2 07       		.byte	0x7
 2921 05f3 00000000 		.long	.LASF60
 2922 05f7 FF050000 		.long	0x5ff
 2923 05fb 0A060000 		.long	0x60a
GAS LISTING linobj/Ch02_03.s 			page 172


 2924 05ff 02       		.uleb128 0x2
 2925 0600 723F0000 		.long	0x3f72
 2926 0604 01       		.uleb128 0x1
 2927 0605 7C3F0000 		.long	0x3f7c
 2928 0609 00       		.byte	0
 2929 060a 1D       		.uleb128 0x1d
 2930 060b 00000000 		.long	.LASF55
 2931 060f 12       		.byte	0x12
 2932 0610 77       		.byte	0x77
 2933 0611 07       		.byte	0x7
 2934 0612 00000000 		.long	.LASF61
 2935 0616 1E060000 		.long	0x61e
 2936 061a 29060000 		.long	0x629
 2937 061e 02       		.uleb128 0x2
 2938 061f 723F0000 		.long	0x3f72
 2939 0623 01       		.uleb128 0x1
 2940 0624 4C070000 		.long	0x74c
 2941 0628 00       		.byte	0
 2942 0629 1D       		.uleb128 0x1d
 2943 062a 00000000 		.long	.LASF55
 2944 062e 12       		.byte	0x12
 2945 062f 7B       		.byte	0x7b
 2946 0630 07       		.byte	0x7
 2947 0631 00000000 		.long	.LASF62
 2948 0635 3D060000 		.long	0x63d
 2949 0639 48060000 		.long	0x648
 2950 063d 02       		.uleb128 0x2
 2951 063e 723F0000 		.long	0x3f72
 2952 0642 01       		.uleb128 0x1
 2953 0643 813F0000 		.long	0x3f81
 2954 0647 00       		.byte	0
 2955 0648 1E       		.uleb128 0x1e
 2956 0649 00000000 		.long	.LASF63
 2957 064d 12       		.byte	0x12
 2958 064e 88       		.byte	0x88
 2959 064f 07       		.byte	0x7
 2960 0650 00000000 		.long	.LASF64
 2961 0654 863F0000 		.long	0x3f86
 2962 0658 01       		.byte	0x1
 2963 0659 61060000 		.long	0x661
 2964 065d 6C060000 		.long	0x66c
 2965 0661 02       		.uleb128 0x2
 2966 0662 723F0000 		.long	0x3f72
 2967 0666 01       		.uleb128 0x1
 2968 0667 7C3F0000 		.long	0x3f7c
 2969 066b 00       		.byte	0
 2970 066c 1E       		.uleb128 0x1e
 2971 066d 00000000 		.long	.LASF63
 2972 0671 12       		.byte	0x12
 2973 0672 8C       		.byte	0x8c
 2974 0673 07       		.byte	0x7
 2975 0674 00000000 		.long	.LASF65
 2976 0678 863F0000 		.long	0x3f86
 2977 067c 01       		.byte	0x1
 2978 067d 85060000 		.long	0x685
 2979 0681 90060000 		.long	0x690
 2980 0685 02       		.uleb128 0x2
GAS LISTING linobj/Ch02_03.s 			page 173


 2981 0686 723F0000 		.long	0x3f72
 2982 068a 01       		.uleb128 0x1
 2983 068b 813F0000 		.long	0x3f81
 2984 068f 00       		.byte	0
 2985 0690 1D       		.uleb128 0x1d
 2986 0691 00000000 		.long	.LASF66
 2987 0695 12       		.byte	0x12
 2988 0696 93       		.byte	0x93
 2989 0697 07       		.byte	0x7
 2990 0698 00000000 		.long	.LASF67
 2991 069c A4060000 		.long	0x6a4
 2992 06a0 AF060000 		.long	0x6af
 2993 06a4 02       		.uleb128 0x2
 2994 06a5 723F0000 		.long	0x3f72
 2995 06a9 02       		.uleb128 0x2
 2996 06aa ED000000 		.long	0xed
 2997 06ae 00       		.byte	0
 2998 06af 1D       		.uleb128 0x1d
 2999 06b0 00000000 		.long	.LASF68
 3000 06b4 12       		.byte	0x12
 3001 06b5 96       		.byte	0x96
 3002 06b6 07       		.byte	0x7
 3003 06b7 00000000 		.long	.LASF69
 3004 06bb C3060000 		.long	0x6c3
 3005 06bf CE060000 		.long	0x6ce
 3006 06c3 02       		.uleb128 0x2
 3007 06c4 723F0000 		.long	0x3f72
 3008 06c8 01       		.uleb128 0x1
 3009 06c9 863F0000 		.long	0x3f86
 3010 06cd 00       		.byte	0
 3011 06ce 65       		.uleb128 0x65
 3012 06cf 00000000 		.long	.LASF106
 3013 06d3 12       		.byte	0x12
 3014 06d4 A2       		.byte	0xa2
 3015 06d5 10       		.byte	0x10
 3016 06d6 00000000 		.long	.LASF107
 3017 06da 433F0000 		.long	0x3f43
 3018 06de 01       		.byte	0x1
 3019 06df E7060000 		.long	0x6e7
 3020 06e3 ED060000 		.long	0x6ed
 3021 06e7 02       		.uleb128 0x2
 3022 06e8 773F0000 		.long	0x3f77
 3023 06ec 00       		.byte	0
 3024 06ed 66       		.uleb128 0x66
 3025 06ee 00000000 		.long	.LASF70
 3026 06f2 12       		.byte	0x12
 3027 06f3 B7       		.byte	0xb7
 3028 06f4 07       		.byte	0x7
 3029 06f5 00000000 		.long	.LASF71
 3030 06f9 8B3F0000 		.long	0x3f8b
 3031 06fd 01       		.byte	0x1
 3032 06fe 02070000 		.long	0x702
 3033 0702 02       		.uleb128 0x2
 3034 0703 773F0000 		.long	0x3f77
 3035 0707 00       		.byte	0
 3036 0708 00       		.byte	0
 3037 0709 0E       		.uleb128 0xe
GAS LISTING linobj/Ch02_03.s 			page 174


 3038 070a 47050000 		.long	0x547
 3039 070e 03       		.uleb128 0x3
 3040 070f 12       		.byte	0x12
 3041 0710 55       		.byte	0x55
 3042 0711 10       		.byte	0x10
 3043 0712 36070000 		.long	0x736
 3044 0716 67       		.uleb128 0x67
 3045 0717 00000000 		.long	.LASF68
 3046 071b 12       		.byte	0x12
 3047 071c E6       		.byte	0xe6
 3048 071d 05       		.byte	0x5
 3049 071e 00000000 		.long	.LASF870
 3050 0722 01       		.uleb128 0x1
 3051 0723 863F0000 		.long	0x3f86
 3052 0727 01       		.uleb128 0x1
 3053 0728 863F0000 		.long	0x3f86
 3054 072c 00       		.byte	0
 3055 072d 00       		.byte	0
 3056 072e 03       		.uleb128 0x3
 3057 072f 12       		.byte	0x12
 3058 0730 42       		.byte	0x42
 3059 0731 1A       		.byte	0x1a
 3060 0732 47050000 		.long	0x547
 3061 0736 68       		.uleb128 0x68
 3062 0737 00000000 		.long	.LASF72
 3063 073b 12       		.byte	0x12
 3064 073c 51       		.byte	0x51
 3065 073d 08       		.byte	0x8
 3066 073e 00000000 		.long	.LASF73
 3067 0742 4C070000 		.long	0x74c
 3068 0746 01       		.uleb128 0x1
 3069 0747 47050000 		.long	0x547
 3070 074b 00       		.byte	0
 3071 074c 24       		.uleb128 0x24
 3072 074d 00000000 		.long	.LASF74
 3073 0751 11       		.byte	0x11
 3074 0752 6B08     		.value	0x86b
 3075 0754 1D       		.byte	0x1d
 3076 0755 3E3F0000 		.long	0x3f3e
 3077 0759 44       		.uleb128 0x44
 3078 075a 00000000 		.long	.LASF407
 3079 075e 0E       		.uleb128 0xe
 3080 075f 59070000 		.long	0x759
 3081 0763 03       		.uleb128 0x3
 3082 0764 12       		.byte	0x12
 3083 0765 F3       		.byte	0xf3
 3084 0766 1A       		.byte	0x1a
 3085 0767 16070000 		.long	0x716
 3086 076b 50       		.uleb128 0x50
 3087 076c 00000000 		.long	.LASF76
 3088 0770 13       		.byte	0x13
 3089 0771 4901     		.value	0x149
 3090 0773 50090000 		.long	0x950
 3091 0777 2E       		.uleb128 0x2e
 3092 0778 00000000 		.long	.LASF90
 3093 077c 13       		.byte	0x13
 3094 077d 5701     		.value	0x157
GAS LISTING linobj/Ch02_03.s 			page 175


 3095 077f 00000000 		.long	.LASF144
 3096 0783 92070000 		.long	0x792
 3097 0787 01       		.uleb128 0x1
 3098 0788 903F0000 		.long	0x3f90
 3099 078c 01       		.uleb128 0x1
 3100 078d 953F0000 		.long	0x3f95
 3101 0791 00       		.byte	0
 3102 0792 24       		.uleb128 0x24
 3103 0793 00000000 		.long	.LASF77
 3104 0797 13       		.byte	0x13
 3105 0798 4B01     		.value	0x14b
 3106 079a 14       		.byte	0x14
 3107 079b E1000000 		.long	0xe1
 3108 079f 0E       		.uleb128 0xe
 3109 07a0 92070000 		.long	0x792
 3110 07a4 51       		.uleb128 0x51
 3111 07a5 657100   		.string	"eq"
 3112 07a8 6201     		.value	0x162
 3113 07aa 00000000 		.long	.LASF78
 3114 07ae 433F0000 		.long	0x3f43
 3115 07b2 C1070000 		.long	0x7c1
 3116 07b6 01       		.uleb128 0x1
 3117 07b7 953F0000 		.long	0x3f95
 3118 07bb 01       		.uleb128 0x1
 3119 07bc 953F0000 		.long	0x3f95
 3120 07c0 00       		.byte	0
 3121 07c1 51       		.uleb128 0x51
 3122 07c2 6C7400   		.string	"lt"
 3123 07c5 6601     		.value	0x166
 3124 07c7 00000000 		.long	.LASF79
 3125 07cb 433F0000 		.long	0x3f43
 3126 07cf DE070000 		.long	0x7de
 3127 07d3 01       		.uleb128 0x1
 3128 07d4 953F0000 		.long	0x3f95
 3129 07d8 01       		.uleb128 0x1
 3130 07d9 953F0000 		.long	0x3f95
 3131 07dd 00       		.byte	0
 3132 07de 10       		.uleb128 0x10
 3133 07df 00000000 		.long	.LASF80
 3134 07e3 13       		.byte	0x13
 3135 07e4 6E01     		.value	0x16e
 3136 07e6 07       		.byte	0x7
 3137 07e7 00000000 		.long	.LASF82
 3138 07eb ED000000 		.long	0xed
 3139 07ef 03080000 		.long	0x803
 3140 07f3 01       		.uleb128 0x1
 3141 07f4 9A3F0000 		.long	0x3f9a
 3142 07f8 01       		.uleb128 0x1
 3143 07f9 9A3F0000 		.long	0x3f9a
 3144 07fd 01       		.uleb128 0x1
 3145 07fe 25050000 		.long	0x525
 3146 0802 00       		.byte	0
 3147 0803 10       		.uleb128 0x10
 3148 0804 00000000 		.long	.LASF81
 3149 0808 13       		.byte	0x13
 3150 0809 8101     		.value	0x181
 3151 080b 07       		.byte	0x7
GAS LISTING linobj/Ch02_03.s 			page 176


 3152 080c 00000000 		.long	.LASF83
 3153 0810 25050000 		.long	0x525
 3154 0814 1E080000 		.long	0x81e
 3155 0818 01       		.uleb128 0x1
 3156 0819 9A3F0000 		.long	0x3f9a
 3157 081d 00       		.byte	0
 3158 081e 10       		.uleb128 0x10
 3159 081f 00000000 		.long	.LASF84
 3160 0823 13       		.byte	0x13
 3161 0824 8B01     		.value	0x18b
 3162 0826 07       		.byte	0x7
 3163 0827 00000000 		.long	.LASF85
 3164 082b 9A3F0000 		.long	0x3f9a
 3165 082f 43080000 		.long	0x843
 3166 0833 01       		.uleb128 0x1
 3167 0834 9A3F0000 		.long	0x3f9a
 3168 0838 01       		.uleb128 0x1
 3169 0839 25050000 		.long	0x525
 3170 083d 01       		.uleb128 0x1
 3171 083e 953F0000 		.long	0x3f95
 3172 0842 00       		.byte	0
 3173 0843 10       		.uleb128 0x10
 3174 0844 00000000 		.long	.LASF86
 3175 0848 13       		.byte	0x13
 3176 0849 9701     		.value	0x197
 3177 084b 07       		.byte	0x7
 3178 084c 00000000 		.long	.LASF87
 3179 0850 9F3F0000 		.long	0x3f9f
 3180 0854 68080000 		.long	0x868
 3181 0858 01       		.uleb128 0x1
 3182 0859 9F3F0000 		.long	0x3f9f
 3183 085d 01       		.uleb128 0x1
 3184 085e 9A3F0000 		.long	0x3f9a
 3185 0862 01       		.uleb128 0x1
 3186 0863 25050000 		.long	0x525
 3187 0867 00       		.byte	0
 3188 0868 10       		.uleb128 0x10
 3189 0869 00000000 		.long	.LASF88
 3190 086d 13       		.byte	0x13
 3191 086e A301     		.value	0x1a3
 3192 0870 07       		.byte	0x7
 3193 0871 00000000 		.long	.LASF89
 3194 0875 9F3F0000 		.long	0x3f9f
 3195 0879 8D080000 		.long	0x88d
 3196 087d 01       		.uleb128 0x1
 3197 087e 9F3F0000 		.long	0x3f9f
 3198 0882 01       		.uleb128 0x1
 3199 0883 9A3F0000 		.long	0x3f9a
 3200 0887 01       		.uleb128 0x1
 3201 0888 25050000 		.long	0x525
 3202 088c 00       		.byte	0
 3203 088d 10       		.uleb128 0x10
 3204 088e 00000000 		.long	.LASF90
 3205 0892 13       		.byte	0x13
 3206 0893 AF01     		.value	0x1af
 3207 0895 07       		.byte	0x7
 3208 0896 00000000 		.long	.LASF91
GAS LISTING linobj/Ch02_03.s 			page 177


 3209 089a 9F3F0000 		.long	0x3f9f
 3210 089e B2080000 		.long	0x8b2
 3211 08a2 01       		.uleb128 0x1
 3212 08a3 9F3F0000 		.long	0x3f9f
 3213 08a7 01       		.uleb128 0x1
 3214 08a8 25050000 		.long	0x525
 3215 08ac 01       		.uleb128 0x1
 3216 08ad 92070000 		.long	0x792
 3217 08b1 00       		.byte	0
 3218 08b2 10       		.uleb128 0x10
 3219 08b3 00000000 		.long	.LASF92
 3220 08b7 13       		.byte	0x13
 3221 08b8 BB01     		.value	0x1bb
 3222 08ba 07       		.byte	0x7
 3223 08bb 00000000 		.long	.LASF93
 3224 08bf 92070000 		.long	0x792
 3225 08c3 CD080000 		.long	0x8cd
 3226 08c7 01       		.uleb128 0x1
 3227 08c8 A43F0000 		.long	0x3fa4
 3228 08cc 00       		.byte	0
 3229 08cd 24       		.uleb128 0x24
 3230 08ce 00000000 		.long	.LASF94
 3231 08d2 13       		.byte	0x13
 3232 08d3 4C01     		.value	0x14c
 3233 08d5 13       		.byte	0x13
 3234 08d6 ED000000 		.long	0xed
 3235 08da 0E       		.uleb128 0xe
 3236 08db CD080000 		.long	0x8cd
 3237 08df 10       		.uleb128 0x10
 3238 08e0 00000000 		.long	.LASF95
 3239 08e4 13       		.byte	0x13
 3240 08e5 C101     		.value	0x1c1
 3241 08e7 07       		.byte	0x7
 3242 08e8 00000000 		.long	.LASF96
 3243 08ec CD080000 		.long	0x8cd
 3244 08f0 FA080000 		.long	0x8fa
 3245 08f4 01       		.uleb128 0x1
 3246 08f5 953F0000 		.long	0x3f95
 3247 08f9 00       		.byte	0
 3248 08fa 10       		.uleb128 0x10
 3249 08fb 00000000 		.long	.LASF97
 3250 08ff 13       		.byte	0x13
 3251 0900 C501     		.value	0x1c5
 3252 0902 07       		.byte	0x7
 3253 0903 00000000 		.long	.LASF98
 3254 0907 433F0000 		.long	0x3f43
 3255 090b 1A090000 		.long	0x91a
 3256 090f 01       		.uleb128 0x1
 3257 0910 A43F0000 		.long	0x3fa4
 3258 0914 01       		.uleb128 0x1
 3259 0915 A43F0000 		.long	0x3fa4
 3260 0919 00       		.byte	0
 3261 091a 69       		.uleb128 0x69
 3262 091b 656F6600 		.string	"eof"
 3263 091f 13       		.byte	0x13
 3264 0920 CA01     		.value	0x1ca
 3265 0922 07       		.byte	0x7
GAS LISTING linobj/Ch02_03.s 			page 178


 3266 0923 00000000 		.long	.LASF871
 3267 0927 CD080000 		.long	0x8cd
 3268 092b 10       		.uleb128 0x10
 3269 092c 00000000 		.long	.LASF99
 3270 0930 13       		.byte	0x13
 3271 0931 CE01     		.value	0x1ce
 3272 0933 07       		.byte	0x7
 3273 0934 00000000 		.long	.LASF100
 3274 0938 CD080000 		.long	0x8cd
 3275 093c 46090000 		.long	0x946
 3276 0940 01       		.uleb128 0x1
 3277 0941 A43F0000 		.long	0x3fa4
 3278 0945 00       		.byte	0
 3279 0946 11       		.uleb128 0x11
 3280 0947 00000000 		.long	.LASF127
 3281 094b E1000000 		.long	0xe1
 3282 094f 00       		.byte	0
 3283 0950 03       		.uleb128 0x3
 3284 0951 14       		.byte	0x14
 3285 0952 35       		.byte	0x35
 3286 0953 0B       		.byte	0xb
 3287 0954 A93F0000 		.long	0x3fa9
 3288 0958 03       		.uleb128 0x3
 3289 0959 14       		.byte	0x14
 3290 095a 36       		.byte	0x36
 3291 095b 0B       		.byte	0xb
 3292 095c EF400000 		.long	0x40ef
 3293 0960 03       		.uleb128 0x3
 3294 0961 14       		.byte	0x14
 3295 0962 37       		.byte	0x37
 3296 0963 0B       		.byte	0xb
 3297 0964 0A410000 		.long	0x410a
 3298 0968 24       		.uleb128 0x24
 3299 0969 00000000 		.long	.LASF101
 3300 096d 11       		.byte	0x11
 3301 096e 6808     		.value	0x868
 3302 0970 14       		.byte	0x14
 3303 0971 74360000 		.long	0x3674
 3304 0975 38       		.uleb128 0x38
 3305 0976 00000000 		.long	.LASF102
 3306 097a 01       		.byte	0x1
 3307 097b 03       		.byte	0x3
 3308 097c 3F       		.byte	0x3f
 3309 097d 190B0000 		.long	0xb19
 3310 0981 1D       		.uleb128 0x1d
 3311 0982 00000000 		.long	.LASF103
 3312 0986 03       		.byte	0x3
 3313 0987 58       		.byte	0x58
 3314 0988 07       		.byte	0x7
 3315 0989 00000000 		.long	.LASF104
 3316 098d 95090000 		.long	0x995
 3317 0991 9B090000 		.long	0x99b
 3318 0995 02       		.uleb128 0x2
 3319 0996 4B420000 		.long	0x424b
 3320 099a 00       		.byte	0
 3321 099b 1D       		.uleb128 0x1d
 3322 099c 00000000 		.long	.LASF103
GAS LISTING linobj/Ch02_03.s 			page 179


 3323 09a0 03       		.byte	0x3
 3324 09a1 5C       		.byte	0x5c
 3325 09a2 07       		.byte	0x7
 3326 09a3 00000000 		.long	.LASF105
 3327 09a7 AF090000 		.long	0x9af
 3328 09ab BA090000 		.long	0x9ba
 3329 09af 02       		.uleb128 0x2
 3330 09b0 4B420000 		.long	0x424b
 3331 09b4 01       		.uleb128 0x1
 3332 09b5 55420000 		.long	0x4255
 3333 09b9 00       		.byte	0
 3334 09ba 52       		.uleb128 0x52
 3335 09bb 00000000 		.long	.LASF63
 3336 09bf 03       		.byte	0x3
 3337 09c0 64       		.byte	0x64
 3338 09c1 18       		.byte	0x18
 3339 09c2 00000000 		.long	.LASF108
 3340 09c6 5A420000 		.long	0x425a
 3341 09ca D2090000 		.long	0x9d2
 3342 09ce DD090000 		.long	0x9dd
 3343 09d2 02       		.uleb128 0x2
 3344 09d3 4B420000 		.long	0x424b
 3345 09d7 01       		.uleb128 0x1
 3346 09d8 55420000 		.long	0x4255
 3347 09dc 00       		.byte	0
 3348 09dd 1D       		.uleb128 0x1d
 3349 09de 00000000 		.long	.LASF109
 3350 09e2 03       		.byte	0x3
 3351 09e3 68       		.byte	0x68
 3352 09e4 07       		.byte	0x7
 3353 09e5 00000000 		.long	.LASF110
 3354 09e9 F1090000 		.long	0x9f1
 3355 09ed FC090000 		.long	0x9fc
 3356 09f1 02       		.uleb128 0x2
 3357 09f2 4B420000 		.long	0x424b
 3358 09f6 02       		.uleb128 0x2
 3359 09f7 ED000000 		.long	0xed
 3360 09fb 00       		.byte	0
 3361 09fc 17       		.uleb128 0x17
 3362 09fd 00000000 		.long	.LASF113
 3363 0a01 03       		.byte	0x3
 3364 0a02 46       		.byte	0x46
 3365 0a03 14       		.byte	0x14
 3366 0a04 CB330000 		.long	0x33cb
 3367 0a08 01       		.byte	0x1
 3368 0a09 1E       		.uleb128 0x1e
 3369 0a0a 00000000 		.long	.LASF111
 3370 0a0e 03       		.byte	0x3
 3371 0a0f 6B       		.byte	0x6b
 3372 0a10 07       		.byte	0x7
 3373 0a11 00000000 		.long	.LASF112
 3374 0a15 FC090000 		.long	0x9fc
 3375 0a19 01       		.byte	0x1
 3376 0a1a 220A0000 		.long	0xa22
 3377 0a1e 2D0A0000 		.long	0xa2d
 3378 0a22 02       		.uleb128 0x2
 3379 0a23 5F420000 		.long	0x425f
GAS LISTING linobj/Ch02_03.s 			page 180


 3380 0a27 01       		.uleb128 0x1
 3381 0a28 2D0A0000 		.long	0xa2d
 3382 0a2c 00       		.byte	0
 3383 0a2d 17       		.uleb128 0x17
 3384 0a2e 00000000 		.long	.LASF114
 3385 0a32 03       		.byte	0x3
 3386 0a33 48       		.byte	0x48
 3387 0a34 14       		.byte	0x14
 3388 0a35 64420000 		.long	0x4264
 3389 0a39 01       		.byte	0x1
 3390 0a3a 17       		.uleb128 0x17
 3391 0a3b 00000000 		.long	.LASF115
 3392 0a3f 03       		.byte	0x3
 3393 0a40 47       		.byte	0x47
 3394 0a41 1A       		.byte	0x1a
 3395 0a42 BC020000 		.long	0x2bc
 3396 0a46 01       		.byte	0x1
 3397 0a47 1E       		.uleb128 0x1e
 3398 0a48 00000000 		.long	.LASF111
 3399 0a4c 03       		.byte	0x3
 3400 0a4d 6F       		.byte	0x6f
 3401 0a4e 07       		.byte	0x7
 3402 0a4f 00000000 		.long	.LASF116
 3403 0a53 3A0A0000 		.long	0xa3a
 3404 0a57 01       		.byte	0x1
 3405 0a58 600A0000 		.long	0xa60
 3406 0a5c 6B0A0000 		.long	0xa6b
 3407 0a60 02       		.uleb128 0x2
 3408 0a61 5F420000 		.long	0x425f
 3409 0a65 01       		.uleb128 0x1
 3410 0a66 6B0A0000 		.long	0xa6b
 3411 0a6a 00       		.byte	0
 3412 0a6b 17       		.uleb128 0x17
 3413 0a6c 00000000 		.long	.LASF117
 3414 0a70 03       		.byte	0x3
 3415 0a71 49       		.byte	0x49
 3416 0a72 1A       		.byte	0x1a
 3417 0a73 69420000 		.long	0x4269
 3418 0a77 01       		.byte	0x1
 3419 0a78 1E       		.uleb128 0x1e
 3420 0a79 00000000 		.long	.LASF118
 3421 0a7d 03       		.byte	0x3
 3422 0a7e 7E       		.byte	0x7e
 3423 0a7f 07       		.byte	0x7
 3424 0a80 00000000 		.long	.LASF119
 3425 0a84 CB330000 		.long	0x33cb
 3426 0a88 01       		.byte	0x1
 3427 0a89 910A0000 		.long	0xa91
 3428 0a8d A10A0000 		.long	0xaa1
 3429 0a91 02       		.uleb128 0x2
 3430 0a92 4B420000 		.long	0x424b
 3431 0a96 01       		.uleb128 0x1
 3432 0a97 A10A0000 		.long	0xaa1
 3433 0a9b 01       		.uleb128 0x1
 3434 0a9c 45420000 		.long	0x4245
 3435 0aa0 00       		.byte	0
 3436 0aa1 17       		.uleb128 0x17
GAS LISTING linobj/Ch02_03.s 			page 181


 3437 0aa2 00000000 		.long	.LASF120
 3438 0aa6 03       		.byte	0x3
 3439 0aa7 43       		.byte	0x43
 3440 0aa8 1B       		.byte	0x1b
 3441 0aa9 25050000 		.long	0x525
 3442 0aad 01       		.byte	0x1
 3443 0aae 1D       		.uleb128 0x1d
 3444 0aaf 00000000 		.long	.LASF121
 3445 0ab3 03       		.byte	0x3
 3446 0ab4 9C       		.byte	0x9c
 3447 0ab5 07       		.byte	0x7
 3448 0ab6 00000000 		.long	.LASF122
 3449 0aba C20A0000 		.long	0xac2
 3450 0abe D20A0000 		.long	0xad2
 3451 0ac2 02       		.uleb128 0x2
 3452 0ac3 4B420000 		.long	0x424b
 3453 0ac7 01       		.uleb128 0x1
 3454 0ac8 CB330000 		.long	0x33cb
 3455 0acc 01       		.uleb128 0x1
 3456 0acd A10A0000 		.long	0xaa1
 3457 0ad1 00       		.byte	0
 3458 0ad2 1E       		.uleb128 0x1e
 3459 0ad3 00000000 		.long	.LASF123
 3460 0ad7 03       		.byte	0x3
 3461 0ad8 B6       		.byte	0xb6
 3462 0ad9 07       		.byte	0x7
 3463 0ada 00000000 		.long	.LASF124
 3464 0ade A10A0000 		.long	0xaa1
 3465 0ae2 01       		.byte	0x1
 3466 0ae3 EB0A0000 		.long	0xaeb
 3467 0ae7 F10A0000 		.long	0xaf1
 3468 0aeb 02       		.uleb128 0x2
 3469 0aec 5F420000 		.long	0x425f
 3470 0af0 00       		.byte	0
 3471 0af1 1A       		.uleb128 0x1a
 3472 0af2 00000000 		.long	.LASF125
 3473 0af6 03       		.byte	0x3
 3474 0af7 E6       		.byte	0xe6
 3475 0af8 07       		.byte	0x7
 3476 0af9 00000000 		.long	.LASF126
 3477 0afd A10A0000 		.long	0xaa1
 3478 0b01 090B0000 		.long	0xb09
 3479 0b05 0F0B0000 		.long	0xb0f
 3480 0b09 02       		.uleb128 0x2
 3481 0b0a 5F420000 		.long	0x425f
 3482 0b0e 00       		.byte	0
 3483 0b0f 45       		.uleb128 0x45
 3484 0b10 5F547000 		.string	"_Tp"
 3485 0b14 E1000000 		.long	0xe1
 3486 0b18 00       		.byte	0
 3487 0b19 0E       		.uleb128 0xe
 3488 0b1a 75090000 		.long	0x975
 3489 0b1e 38       		.uleb128 0x38
 3490 0b1f 00000000 		.long	.LASF128
 3491 0b23 01       		.byte	0x1
 3492 0b24 02       		.byte	0x2
 3493 0b25 80       		.byte	0x80
GAS LISTING linobj/Ch02_03.s 			page 182


 3494 0b26 AA0B0000 		.long	0xbaa
 3495 0b2a 6A       		.uleb128 0x6a
 3496 0b2b 75090000 		.long	0x975
 3497 0b2f 00       		.byte	0
 3498 0b30 01       		.byte	0x1
 3499 0b31 1D       		.uleb128 0x1d
 3500 0b32 00000000 		.long	.LASF129
 3501 0b36 02       		.byte	0x2
 3502 0b37 A1       		.byte	0xa1
 3503 0b38 07       		.byte	0x7
 3504 0b39 00000000 		.long	.LASF130
 3505 0b3d 450B0000 		.long	0xb45
 3506 0b41 4B0B0000 		.long	0xb4b
 3507 0b45 02       		.uleb128 0x2
 3508 0b46 6E420000 		.long	0x426e
 3509 0b4a 00       		.byte	0
 3510 0b4b 1D       		.uleb128 0x1d
 3511 0b4c 00000000 		.long	.LASF129
 3512 0b50 02       		.byte	0x2
 3513 0b51 A5       		.byte	0xa5
 3514 0b52 07       		.byte	0x7
 3515 0b53 00000000 		.long	.LASF131
 3516 0b57 5F0B0000 		.long	0xb5f
 3517 0b5b 6A0B0000 		.long	0xb6a
 3518 0b5f 02       		.uleb128 0x2
 3519 0b60 6E420000 		.long	0x426e
 3520 0b64 01       		.uleb128 0x1
 3521 0b65 78420000 		.long	0x4278
 3522 0b69 00       		.byte	0
 3523 0b6a 52       		.uleb128 0x52
 3524 0b6b 00000000 		.long	.LASF63
 3525 0b6f 02       		.byte	0x2
 3526 0b70 AA       		.byte	0xaa
 3527 0b71 12       		.byte	0x12
 3528 0b72 00000000 		.long	.LASF132
 3529 0b76 7D420000 		.long	0x427d
 3530 0b7a 820B0000 		.long	0xb82
 3531 0b7e 8D0B0000 		.long	0xb8d
 3532 0b82 02       		.uleb128 0x2
 3533 0b83 6E420000 		.long	0x426e
 3534 0b87 01       		.uleb128 0x1
 3535 0b88 78420000 		.long	0x4278
 3536 0b8c 00       		.byte	0
 3537 0b8d 6B       		.uleb128 0x6b
 3538 0b8e 00000000 		.long	.LASF133
 3539 0b92 02       		.byte	0x2
 3540 0b93 B6       		.byte	0xb6
 3541 0b94 07       		.byte	0x7
 3542 0b95 00000000 		.long	.LASF134
 3543 0b99 01       		.byte	0x1
 3544 0b9a 9E0B0000 		.long	0xb9e
 3545 0b9e 02       		.uleb128 0x2
 3546 0b9f 6E420000 		.long	0x426e
 3547 0ba3 02       		.uleb128 0x2
 3548 0ba4 ED000000 		.long	0xed
 3549 0ba8 00       		.byte	0
 3550 0ba9 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 183


 3551 0baa 0E       		.uleb128 0xe
 3552 0bab 1E0B0000 		.long	0xb1e
 3553 0baf 25       		.uleb128 0x25
 3554 0bb0 00000000 		.long	.LASF135
 3555 0bb4 01       		.byte	0x1
 3556 0bb5 15       		.byte	0x15
 3557 0bb6 4F       		.byte	0x4f
 3558 0bb7 0A       		.byte	0xa
 3559 0bb8 D40B0000 		.long	0xbd4
 3560 0bbc 6C       		.uleb128 0x6c
 3561 0bbd 00000000 		.long	.LASF135
 3562 0bc1 15       		.byte	0x15
 3563 0bc2 4F       		.byte	0x4f
 3564 0bc3 2B       		.byte	0x2b
 3565 0bc4 00000000 		.long	.LASF136
 3566 0bc8 01       		.byte	0x1
 3567 0bc9 CD0B0000 		.long	0xbcd
 3568 0bcd 02       		.uleb128 0x2
 3569 0bce 82420000 		.long	0x4282
 3570 0bd2 00       		.byte	0
 3571 0bd3 00       		.byte	0
 3572 0bd4 0E       		.uleb128 0xe
 3573 0bd5 AF0B0000 		.long	0xbaf
 3574 0bd9 6D       		.uleb128 0x6d
 3575 0bda 00000000 		.long	.LASF441
 3576 0bde 15       		.byte	0x15
 3577 0bdf 52       		.byte	0x52
 3578 0be0 23       		.byte	0x23
 3579 0be1 D40B0000 		.long	0xbd4
 3580 0be5 01       		.byte	0x1
 3581 0be6 00       		.byte	0
 3582 0be7 53       		.uleb128 0x53
 3583 0be8 00000000 		.long	.LASF138
 3584 0bec 17       		.byte	0x17
 3585 0bed 32       		.byte	0x32
 3586 0bee 0D       		.byte	0xd
 3587 0bef 03       		.uleb128 0x3
 3588 0bf0 18       		.byte	0x18
 3589 0bf1 83       		.byte	0x83
 3590 0bf2 0B       		.byte	0xb
 3591 0bf3 C8420000 		.long	0x42c8
 3592 0bf7 03       		.uleb128 0x3
 3593 0bf8 18       		.byte	0x18
 3594 0bf9 84       		.byte	0x84
 3595 0bfa 0B       		.byte	0xb
 3596 0bfb FB420000 		.long	0x42fb
 3597 0bff 03       		.uleb128 0x3
 3598 0c00 18       		.byte	0x18
 3599 0c01 8A       		.byte	0x8a
 3600 0c02 0B       		.byte	0xb
 3601 0c03 90430000 		.long	0x4390
 3602 0c07 03       		.uleb128 0x3
 3603 0c08 18       		.byte	0x18
 3604 0c09 8D       		.byte	0x8d
 3605 0c0a 0B       		.byte	0xb
 3606 0c0b AD430000 		.long	0x43ad
 3607 0c0f 03       		.uleb128 0x3
GAS LISTING linobj/Ch02_03.s 			page 184


 3608 0c10 18       		.byte	0x18
 3609 0c11 90       		.byte	0x90
 3610 0c12 0B       		.byte	0xb
 3611 0c13 C8430000 		.long	0x43c8
 3612 0c17 03       		.uleb128 0x3
 3613 0c18 18       		.byte	0x18
 3614 0c19 91       		.byte	0x91
 3615 0c1a 0B       		.byte	0xb
 3616 0c1b DE430000 		.long	0x43de
 3617 0c1f 03       		.uleb128 0x3
 3618 0c20 18       		.byte	0x18
 3619 0c21 92       		.byte	0x92
 3620 0c22 0B       		.byte	0xb
 3621 0c23 F5430000 		.long	0x43f5
 3622 0c27 03       		.uleb128 0x3
 3623 0c28 18       		.byte	0x18
 3624 0c29 93       		.byte	0x93
 3625 0c2a 0B       		.byte	0xb
 3626 0c2b 0C440000 		.long	0x440c
 3627 0c2f 03       		.uleb128 0x3
 3628 0c30 18       		.byte	0x18
 3629 0c31 95       		.byte	0x95
 3630 0c32 0B       		.byte	0xb
 3631 0c33 36440000 		.long	0x4436
 3632 0c37 03       		.uleb128 0x3
 3633 0c38 18       		.byte	0x18
 3634 0c39 98       		.byte	0x98
 3635 0c3a 0B       		.byte	0xb
 3636 0c3b 53440000 		.long	0x4453
 3637 0c3f 03       		.uleb128 0x3
 3638 0c40 18       		.byte	0x18
 3639 0c41 9A       		.byte	0x9a
 3640 0c42 0B       		.byte	0xb
 3641 0c43 6A440000 		.long	0x446a
 3642 0c47 03       		.uleb128 0x3
 3643 0c48 18       		.byte	0x18
 3644 0c49 9D       		.byte	0x9d
 3645 0c4a 0B       		.byte	0xb
 3646 0c4b 86440000 		.long	0x4486
 3647 0c4f 03       		.uleb128 0x3
 3648 0c50 18       		.byte	0x18
 3649 0c51 9E       		.byte	0x9e
 3650 0c52 0B       		.byte	0xb
 3651 0c53 A2440000 		.long	0x44a2
 3652 0c57 03       		.uleb128 0x3
 3653 0c58 18       		.byte	0x18
 3654 0c59 9F       		.byte	0x9f
 3655 0c5a 0B       		.byte	0xb
 3656 0c5b C3440000 		.long	0x44c3
 3657 0c5f 03       		.uleb128 0x3
 3658 0c60 18       		.byte	0x18
 3659 0c61 A1       		.byte	0xa1
 3660 0c62 0B       		.byte	0xb
 3661 0c63 E4440000 		.long	0x44e4
 3662 0c67 03       		.uleb128 0x3
 3663 0c68 18       		.byte	0x18
 3664 0c69 A4       		.byte	0xa4
GAS LISTING linobj/Ch02_03.s 			page 185


 3665 0c6a 0B       		.byte	0xb
 3666 0c6b 05450000 		.long	0x4505
 3667 0c6f 03       		.uleb128 0x3
 3668 0c70 18       		.byte	0x18
 3669 0c71 A7       		.byte	0xa7
 3670 0c72 0B       		.byte	0xb
 3671 0c73 19450000 		.long	0x4519
 3672 0c77 03       		.uleb128 0x3
 3673 0c78 18       		.byte	0x18
 3674 0c79 A9       		.byte	0xa9
 3675 0c7a 0B       		.byte	0xb
 3676 0c7b 26450000 		.long	0x4526
 3677 0c7f 03       		.uleb128 0x3
 3678 0c80 18       		.byte	0x18
 3679 0c81 AA       		.byte	0xaa
 3680 0c82 0B       		.byte	0xb
 3681 0c83 38450000 		.long	0x4538
 3682 0c87 03       		.uleb128 0x3
 3683 0c88 18       		.byte	0x18
 3684 0c89 AB       		.byte	0xab
 3685 0c8a 0B       		.byte	0xb
 3686 0c8b 58450000 		.long	0x4558
 3687 0c8f 03       		.uleb128 0x3
 3688 0c90 18       		.byte	0x18
 3689 0c91 AC       		.byte	0xac
 3690 0c92 0B       		.byte	0xb
 3691 0c93 7C450000 		.long	0x457c
 3692 0c97 03       		.uleb128 0x3
 3693 0c98 18       		.byte	0x18
 3694 0c99 AD       		.byte	0xad
 3695 0c9a 0B       		.byte	0xb
 3696 0c9b A0450000 		.long	0x45a0
 3697 0c9f 03       		.uleb128 0x3
 3698 0ca0 18       		.byte	0x18
 3699 0ca1 AF       		.byte	0xaf
 3700 0ca2 0B       		.byte	0xb
 3701 0ca3 B7450000 		.long	0x45b7
 3702 0ca7 03       		.uleb128 0x3
 3703 0ca8 18       		.byte	0x18
 3704 0ca9 B0       		.byte	0xb0
 3705 0caa 0B       		.byte	0xb
 3706 0cab D8450000 		.long	0x45d8
 3707 0caf 03       		.uleb128 0x3
 3708 0cb0 18       		.byte	0x18
 3709 0cb1 F4       		.byte	0xf4
 3710 0cb2 16       		.byte	0x16
 3711 0cb3 2E430000 		.long	0x432e
 3712 0cb7 03       		.uleb128 0x3
 3713 0cb8 18       		.byte	0x18
 3714 0cb9 F9       		.byte	0xf9
 3715 0cba 16       		.byte	0x16
 3716 0cbb 38390000 		.long	0x3938
 3717 0cbf 03       		.uleb128 0x3
 3718 0cc0 18       		.byte	0x18
 3719 0cc1 FA       		.byte	0xfa
 3720 0cc2 16       		.byte	0x16
 3721 0cc3 F4450000 		.long	0x45f4
GAS LISTING linobj/Ch02_03.s 			page 186


 3722 0cc7 03       		.uleb128 0x3
 3723 0cc8 18       		.byte	0x18
 3724 0cc9 FC       		.byte	0xfc
 3725 0cca 16       		.byte	0x16
 3726 0ccb 10460000 		.long	0x4610
 3727 0ccf 03       		.uleb128 0x3
 3728 0cd0 18       		.byte	0x18
 3729 0cd1 FD       		.byte	0xfd
 3730 0cd2 16       		.byte	0x16
 3731 0cd3 6F460000 		.long	0x466f
 3732 0cd7 03       		.uleb128 0x3
 3733 0cd8 18       		.byte	0x18
 3734 0cd9 FE       		.byte	0xfe
 3735 0cda 16       		.byte	0x16
 3736 0cdb 27460000 		.long	0x4627
 3737 0cdf 03       		.uleb128 0x3
 3738 0ce0 18       		.byte	0x18
 3739 0ce1 FF       		.byte	0xff
 3740 0ce2 16       		.byte	0x16
 3741 0ce3 4B460000 		.long	0x464b
 3742 0ce7 23       		.uleb128 0x23
 3743 0ce8 18       		.byte	0x18
 3744 0ce9 0001     		.value	0x100
 3745 0ceb 16       		.byte	0x16
 3746 0cec 8A460000 		.long	0x468a
 3747 0cf0 03       		.uleb128 0x3
 3748 0cf1 19       		.byte	0x19
 3749 0cf2 62       		.byte	0x62
 3750 0cf3 0B       		.byte	0xb
 3751 0cf4 A9020000 		.long	0x2a9
 3752 0cf8 03       		.uleb128 0x3
 3753 0cf9 19       		.byte	0x19
 3754 0cfa 63       		.byte	0x63
 3755 0cfb 0B       		.byte	0xb
 3756 0cfc 2A470000 		.long	0x472a
 3757 0d00 03       		.uleb128 0x3
 3758 0d01 19       		.byte	0x19
 3759 0d02 65       		.byte	0x65
 3760 0d03 0B       		.byte	0xb
 3761 0d04 40470000 		.long	0x4740
 3762 0d08 03       		.uleb128 0x3
 3763 0d09 19       		.byte	0x19
 3764 0d0a 66       		.byte	0x66
 3765 0d0b 0B       		.byte	0xb
 3766 0d0c 52470000 		.long	0x4752
 3767 0d10 03       		.uleb128 0x3
 3768 0d11 19       		.byte	0x19
 3769 0d12 67       		.byte	0x67
 3770 0d13 0B       		.byte	0xb
 3771 0d14 68470000 		.long	0x4768
 3772 0d18 03       		.uleb128 0x3
 3773 0d19 19       		.byte	0x19
 3774 0d1a 68       		.byte	0x68
 3775 0d1b 0B       		.byte	0xb
 3776 0d1c 7F470000 		.long	0x477f
 3777 0d20 03       		.uleb128 0x3
 3778 0d21 19       		.byte	0x19
GAS LISTING linobj/Ch02_03.s 			page 187


 3779 0d22 69       		.byte	0x69
 3780 0d23 0B       		.byte	0xb
 3781 0d24 96470000 		.long	0x4796
 3782 0d28 03       		.uleb128 0x3
 3783 0d29 19       		.byte	0x19
 3784 0d2a 6A       		.byte	0x6a
 3785 0d2b 0B       		.byte	0xb
 3786 0d2c AC470000 		.long	0x47ac
 3787 0d30 03       		.uleb128 0x3
 3788 0d31 19       		.byte	0x19
 3789 0d32 6B       		.byte	0x6b
 3790 0d33 0B       		.byte	0xb
 3791 0d34 C3470000 		.long	0x47c3
 3792 0d38 03       		.uleb128 0x3
 3793 0d39 19       		.byte	0x19
 3794 0d3a 6C       		.byte	0x6c
 3795 0d3b 0B       		.byte	0xb
 3796 0d3c E4470000 		.long	0x47e4
 3797 0d40 03       		.uleb128 0x3
 3798 0d41 19       		.byte	0x19
 3799 0d42 6D       		.byte	0x6d
 3800 0d43 0B       		.byte	0xb
 3801 0d44 05480000 		.long	0x4805
 3802 0d48 03       		.uleb128 0x3
 3803 0d49 19       		.byte	0x19
 3804 0d4a 71       		.byte	0x71
 3805 0d4b 0B       		.byte	0xb
 3806 0d4c 21480000 		.long	0x4821
 3807 0d50 03       		.uleb128 0x3
 3808 0d51 19       		.byte	0x19
 3809 0d52 72       		.byte	0x72
 3810 0d53 0B       		.byte	0xb
 3811 0d54 47480000 		.long	0x4847
 3812 0d58 03       		.uleb128 0x3
 3813 0d59 19       		.byte	0x19
 3814 0d5a 74       		.byte	0x74
 3815 0d5b 0B       		.byte	0xb
 3816 0d5c 68480000 		.long	0x4868
 3817 0d60 03       		.uleb128 0x3
 3818 0d61 19       		.byte	0x19
 3819 0d62 75       		.byte	0x75
 3820 0d63 0B       		.byte	0xb
 3821 0d64 89480000 		.long	0x4889
 3822 0d68 03       		.uleb128 0x3
 3823 0d69 19       		.byte	0x19
 3824 0d6a 76       		.byte	0x76
 3825 0d6b 0B       		.byte	0xb
 3826 0d6c AA480000 		.long	0x48aa
 3827 0d70 03       		.uleb128 0x3
 3828 0d71 19       		.byte	0x19
 3829 0d72 78       		.byte	0x78
 3830 0d73 0B       		.byte	0xb
 3831 0d74 C1480000 		.long	0x48c1
 3832 0d78 03       		.uleb128 0x3
 3833 0d79 19       		.byte	0x19
 3834 0d7a 79       		.byte	0x79
 3835 0d7b 0B       		.byte	0xb
GAS LISTING linobj/Ch02_03.s 			page 188


 3836 0d7c D8480000 		.long	0x48d8
 3837 0d80 03       		.uleb128 0x3
 3838 0d81 19       		.byte	0x19
 3839 0d82 7E       		.byte	0x7e
 3840 0d83 0B       		.byte	0xb
 3841 0d84 E4480000 		.long	0x48e4
 3842 0d88 03       		.uleb128 0x3
 3843 0d89 19       		.byte	0x19
 3844 0d8a 83       		.byte	0x83
 3845 0d8b 0B       		.byte	0xb
 3846 0d8c F6480000 		.long	0x48f6
 3847 0d90 03       		.uleb128 0x3
 3848 0d91 19       		.byte	0x19
 3849 0d92 84       		.byte	0x84
 3850 0d93 0B       		.byte	0xb
 3851 0d94 0C490000 		.long	0x490c
 3852 0d98 03       		.uleb128 0x3
 3853 0d99 19       		.byte	0x19
 3854 0d9a 85       		.byte	0x85
 3855 0d9b 0B       		.byte	0xb
 3856 0d9c 27490000 		.long	0x4927
 3857 0da0 03       		.uleb128 0x3
 3858 0da1 19       		.byte	0x19
 3859 0da2 87       		.byte	0x87
 3860 0da3 0B       		.byte	0xb
 3861 0da4 39490000 		.long	0x4939
 3862 0da8 03       		.uleb128 0x3
 3863 0da9 19       		.byte	0x19
 3864 0daa 88       		.byte	0x88
 3865 0dab 0B       		.byte	0xb
 3866 0dac 50490000 		.long	0x4950
 3867 0db0 03       		.uleb128 0x3
 3868 0db1 19       		.byte	0x19
 3869 0db2 8B       		.byte	0x8b
 3870 0db3 0B       		.byte	0xb
 3871 0db4 76490000 		.long	0x4976
 3872 0db8 03       		.uleb128 0x3
 3873 0db9 19       		.byte	0x19
 3874 0dba 8D       		.byte	0x8d
 3875 0dbb 0B       		.byte	0xb
 3876 0dbc 82490000 		.long	0x4982
 3877 0dc0 03       		.uleb128 0x3
 3878 0dc1 19       		.byte	0x19
 3879 0dc2 8F       		.byte	0x8f
 3880 0dc3 0B       		.byte	0xb
 3881 0dc4 98490000 		.long	0x4998
 3882 0dc8 50       		.uleb128 0x50
 3883 0dc9 00000000 		.long	.LASF139
 3884 0dcd 1A       		.byte	0x1a
 3885 0dce A801     		.value	0x1a8
 3886 0dd0 D00E0000 		.long	0xed0
 3887 0dd4 24       		.uleb128 0x24
 3888 0dd5 00000000 		.long	.LASF113
 3889 0dd9 1A       		.byte	0x1a
 3890 0dda B101     		.value	0x1b1
 3891 0ddc 0D       		.byte	0xd
 3892 0ddd CB330000 		.long	0x33cb
GAS LISTING linobj/Ch02_03.s 			page 189


 3893 0de1 10       		.uleb128 0x10
 3894 0de2 00000000 		.long	.LASF118
 3895 0de6 1A       		.byte	0x1a
 3896 0de7 DD01     		.value	0x1dd
 3897 0de9 07       		.byte	0x7
 3898 0dea 00000000 		.long	.LASF140
 3899 0dee D40D0000 		.long	0xdd4
 3900 0df2 010E0000 		.long	0xe01
 3901 0df6 01       		.uleb128 0x1
 3902 0df7 B4490000 		.long	0x49b4
 3903 0dfb 01       		.uleb128 0x1
 3904 0dfc 130E0000 		.long	0xe13
 3905 0e00 00       		.byte	0
 3906 0e01 24       		.uleb128 0x24
 3907 0e02 00000000 		.long	.LASF141
 3908 0e06 1A       		.byte	0x1a
 3909 0e07 AB01     		.value	0x1ab
 3910 0e09 0D       		.byte	0xd
 3911 0e0a 1E0B0000 		.long	0xb1e
 3912 0e0e 0E       		.uleb128 0xe
 3913 0e0f 010E0000 		.long	0xe01
 3914 0e13 24       		.uleb128 0x24
 3915 0e14 00000000 		.long	.LASF120
 3916 0e18 1A       		.byte	0x1a
 3917 0e19 C001     		.value	0x1c0
 3918 0e1b 0D       		.byte	0xd
 3919 0e1c 25050000 		.long	0x525
 3920 0e20 10       		.uleb128 0x10
 3921 0e21 00000000 		.long	.LASF118
 3922 0e25 1A       		.byte	0x1a
 3923 0e26 EC01     		.value	0x1ec
 3924 0e28 07       		.byte	0x7
 3925 0e29 00000000 		.long	.LASF142
 3926 0e2d D40D0000 		.long	0xdd4
 3927 0e31 450E0000 		.long	0xe45
 3928 0e35 01       		.uleb128 0x1
 3929 0e36 B4490000 		.long	0x49b4
 3930 0e3a 01       		.uleb128 0x1
 3931 0e3b 130E0000 		.long	0xe13
 3932 0e3f 01       		.uleb128 0x1
 3933 0e40 450E0000 		.long	0xe45
 3934 0e44 00       		.byte	0
 3935 0e45 24       		.uleb128 0x24
 3936 0e46 00000000 		.long	.LASF143
 3937 0e4a 1A       		.byte	0x1a
 3938 0e4b BA01     		.value	0x1ba
 3939 0e4d 0D       		.byte	0xd
 3940 0e4e 45420000 		.long	0x4245
 3941 0e52 2E       		.uleb128 0x2e
 3942 0e53 00000000 		.long	.LASF121
 3943 0e57 1A       		.byte	0x1a
 3944 0e58 0002     		.value	0x200
 3945 0e5a 00000000 		.long	.LASF145
 3946 0e5e 720E0000 		.long	0xe72
 3947 0e62 01       		.uleb128 0x1
 3948 0e63 B4490000 		.long	0x49b4
 3949 0e67 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 190


 3950 0e68 D40D0000 		.long	0xdd4
 3951 0e6c 01       		.uleb128 0x1
 3952 0e6d 130E0000 		.long	0xe13
 3953 0e71 00       		.byte	0
 3954 0e72 10       		.uleb128 0x10
 3955 0e73 00000000 		.long	.LASF123
 3956 0e77 1A       		.byte	0x1a
 3957 0e78 3702     		.value	0x237
 3958 0e7a 07       		.byte	0x7
 3959 0e7b 00000000 		.long	.LASF146
 3960 0e7f 130E0000 		.long	0xe13
 3961 0e83 8D0E0000 		.long	0xe8d
 3962 0e87 01       		.uleb128 0x1
 3963 0e88 B9490000 		.long	0x49b9
 3964 0e8c 00       		.byte	0
 3965 0e8d 10       		.uleb128 0x10
 3966 0e8e 00000000 		.long	.LASF147
 3967 0e92 1A       		.byte	0x1a
 3968 0e93 4702     		.value	0x247
 3969 0e95 07       		.byte	0x7
 3970 0e96 00000000 		.long	.LASF148
 3971 0e9a 010E0000 		.long	0xe01
 3972 0e9e A80E0000 		.long	0xea8
 3973 0ea2 01       		.uleb128 0x1
 3974 0ea3 B9490000 		.long	0x49b9
 3975 0ea7 00       		.byte	0
 3976 0ea8 24       		.uleb128 0x24
 3977 0ea9 00000000 		.long	.LASF149
 3978 0ead 1A       		.byte	0x1a
 3979 0eae AE01     		.value	0x1ae
 3980 0eb0 0D       		.byte	0xd
 3981 0eb1 E1000000 		.long	0xe1
 3982 0eb5 24       		.uleb128 0x24
 3983 0eb6 00000000 		.long	.LASF115
 3984 0eba 1A       		.byte	0x1a
 3985 0ebb B401     		.value	0x1b4
 3986 0ebd 0D       		.byte	0xd
 3987 0ebe BC020000 		.long	0x2bc
 3988 0ec2 24       		.uleb128 0x24
 3989 0ec3 00000000 		.long	.LASF150
 3990 0ec7 1A       		.byte	0x1a
 3991 0ec8 CF01     		.value	0x1cf
 3992 0eca 08       		.byte	0x8
 3993 0ecb 1E0B0000 		.long	0xb1e
 3994 0ecf 00       		.byte	0
 3995 0ed0 6E       		.uleb128 0x6e
 3996 0ed1 00000000 		.long	.LASF872
 3997 0ed5 11       		.byte	0x11
 3998 0ed6 8808     		.value	0x888
 3999 0ed8 41       		.byte	0x41
 4000 0ed9 0F290000 		.long	0x290f
 4001 0edd 38       		.uleb128 0x38
 4002 0ede 00000000 		.long	.LASF151
 4003 0ee2 20       		.byte	0x20
 4004 0ee3 04       		.byte	0x4
 4005 0ee4 56       		.byte	0x56
 4006 0ee5 09290000 		.long	0x2909
GAS LISTING linobj/Ch02_03.s 			page 191


 4007 0ee9 25       		.uleb128 0x25
 4008 0eea 00000000 		.long	.LASF152
 4009 0eee 08       		.byte	0x8
 4010 0eef 04       		.byte	0x4
 4011 0ef0 BA       		.byte	0xba
 4012 0ef1 0E       		.byte	0xe
 4013 0ef2 690F0000 		.long	0xf69
 4014 0ef6 54       		.uleb128 0x54
 4015 0ef7 1E0B0000 		.long	0xb1e
 4016 0efb 31       		.uleb128 0x31
 4017 0efc 00000000 		.long	.LASF152
 4018 0f00 04       		.byte	0x4
 4019 0f01 C1       		.byte	0xc1
 4020 0f02 02       		.byte	0x2
 4021 0f03 00000000 		.long	.LASF153
 4022 0f07 0F0F0000 		.long	0xf0f
 4023 0f0b 1F0F0000 		.long	0xf1f
 4024 0f0f 02       		.uleb128 0x2
 4025 0f10 C8490000 		.long	0x49c8
 4026 0f14 01       		.uleb128 0x1
 4027 0f15 690F0000 		.long	0xf69
 4028 0f19 01       		.uleb128 0x1
 4029 0f1a 78420000 		.long	0x4278
 4030 0f1e 00       		.byte	0
 4031 0f1f 31       		.uleb128 0x31
 4032 0f20 00000000 		.long	.LASF152
 4033 0f24 04       		.byte	0x4
 4034 0f25 C5       		.byte	0xc5
 4035 0f26 02       		.byte	0x2
 4036 0f27 00000000 		.long	.LASF154
 4037 0f2b 330F0000 		.long	0xf33
 4038 0f2f 430F0000 		.long	0xf43
 4039 0f33 02       		.uleb128 0x2
 4040 0f34 C8490000 		.long	0x49c8
 4041 0f38 01       		.uleb128 0x1
 4042 0f39 690F0000 		.long	0xf69
 4043 0f3d 01       		.uleb128 0x1
 4044 0f3e D2490000 		.long	0x49d2
 4045 0f42 00       		.byte	0
 4046 0f43 08       		.uleb128 0x8
 4047 0f44 00000000 		.long	.LASF155
 4048 0f48 04       		.byte	0x4
 4049 0f49 C9       		.byte	0xc9
 4050 0f4a 0A       		.byte	0xa
 4051 0f4b 690F0000 		.long	0xf69
 4052 0f4f 00       		.byte	0
 4053 0f50 6F       		.uleb128 0x6f
 4054 0f51 00000000 		.long	.LASF873
 4055 0f55 00000000 		.long	.LASF874
 4056 0f59 5D0F0000 		.long	0xf5d
 4057 0f5d 02       		.uleb128 0x2
 4058 0f5e C8490000 		.long	0x49c8
 4059 0f62 02       		.uleb128 0x2
 4060 0f63 ED000000 		.long	0xed
 4061 0f67 00       		.byte	0
 4062 0f68 00       		.byte	0
 4063 0f69 17       		.uleb128 0x17
GAS LISTING linobj/Ch02_03.s 			page 192


 4064 0f6a 00000000 		.long	.LASF113
 4065 0f6e 04       		.byte	0x4
 4066 0f6f 6C       		.byte	0x6c
 4067 0f70 2F       		.byte	0x2f
 4068 0f71 153A0000 		.long	0x3a15
 4069 0f75 01       		.byte	0x1
 4070 0f76 70       		.uleb128 0x70
 4071 0f77 07       		.byte	0x7
 4072 0f78 04       		.byte	0x4
 4073 0f79 72000000 		.long	0x72
 4074 0f7d 04       		.byte	0x4
 4075 0f7e CF       		.byte	0xcf
 4076 0f7f 0C       		.byte	0xc
 4077 0f80 8B0F0000 		.long	0xf8b
 4078 0f84 39       		.uleb128 0x39
 4079 0f85 00000000 		.long	.LASF413
 4080 0f89 0F       		.byte	0xf
 4081 0f8a 00       		.byte	0
 4082 0f8b 55       		.uleb128 0x55
 4083 0f8c 04       		.byte	0x4
 4084 0f8d D2       		.byte	0xd2
 4085 0f8e 07       		.byte	0x7
 4086 0f8f AC0F0000 		.long	0xfac
 4087 0f93 20       		.uleb128 0x20
 4088 0f94 00000000 		.long	.LASF156
 4089 0f98 04       		.byte	0x4
 4090 0f99 D3       		.byte	0xd3
 4091 0f9a 09       		.byte	0x9
 4092 0f9b D7490000 		.long	0x49d7
 4093 0f9f 20       		.uleb128 0x20
 4094 0fa0 00000000 		.long	.LASF157
 4095 0fa4 04       		.byte	0x4
 4096 0fa5 D4       		.byte	0xd4
 4097 0fa6 0C       		.byte	0xc
 4098 0fa7 AC0F0000 		.long	0xfac
 4099 0fab 00       		.byte	0
 4100 0fac 17       		.uleb128 0x17
 4101 0fad 00000000 		.long	.LASF120
 4102 0fb1 04       		.byte	0x4
 4103 0fb2 68       		.byte	0x68
 4104 0fb3 31       		.byte	0x31
 4105 0fb4 2D3A0000 		.long	0x3a2d
 4106 0fb8 01       		.byte	0x1
 4107 0fb9 0E       		.uleb128 0xe
 4108 0fba AC0F0000 		.long	0xfac
 4109 0fbe 71       		.uleb128 0x71
 4110 0fbf 00000000 		.long	.LASF875
 4111 0fc3 04       		.byte	0x4
 4112 0fc4 75       		.byte	0x75
 4113 0fc5 1E       		.byte	0x1e
 4114 0fc6 00000000 		.long	.LASF876
 4115 0fca B90F0000 		.long	0xfb9
 4116 0fce 01       		.byte	0x1
 4117 0fcf FFFFFFFF 		.quad	0xffffffffffffffff
 4117      FFFFFFFF 
 4118 0fd7 19       		.uleb128 0x19
 4119 0fd8 00000000 		.long	.LASF158
GAS LISTING linobj/Ch02_03.s 			page 193


 4120 0fdc 04       		.byte	0x4
 4121 0fdd 81       		.byte	0x81
 4122 0fde 07       		.byte	0x7
 4123 0fdf 00000000 		.long	.LASF159
 4124 0fe3 690F0000 		.long	0xf69
 4125 0fe7 F60F0000 		.long	0xff6
 4126 0feb 01       		.uleb128 0x1
 4127 0fec E7490000 		.long	0x49e7
 4128 0ff0 01       		.uleb128 0x1
 4129 0ff1 AC0F0000 		.long	0xfac
 4130 0ff5 00       		.byte	0
 4131 0ff6 07       		.uleb128 0x7
 4132 0ff7 00000000 		.long	.LASF160
 4133 0ffb 04       		.byte	0x4
 4134 0ffc 5E       		.byte	0x5e
 4135 0ffd 18       		.byte	0x18
 4136 0ffe 5E3A0000 		.long	0x3a5e
 4137 1002 08       		.uleb128 0x8
 4138 1003 00000000 		.long	.LASF161
 4139 1007 04       		.byte	0x4
 4140 1008 CC       		.byte	0xcc
 4141 1009 14       		.byte	0x14
 4142 100a E90E0000 		.long	0xee9
 4143 100e 00       		.byte	0
 4144 100f 08       		.uleb128 0x8
 4145 1010 00000000 		.long	.LASF162
 4146 1014 04       		.byte	0x4
 4147 1015 CD       		.byte	0xcd
 4148 1016 11       		.byte	0x11
 4149 1017 AC0F0000 		.long	0xfac
 4150 101b 08       		.byte	0x8
 4151 101c 56       		.uleb128 0x56
 4152 101d 8B0F0000 		.long	0xf8b
 4153 1021 10       		.byte	0x10
 4154 1022 31       		.uleb128 0x31
 4155 1023 00000000 		.long	.LASF163
 4156 1027 04       		.byte	0x4
 4157 1028 D9       		.byte	0xd9
 4158 1029 07       		.byte	0x7
 4159 102a 00000000 		.long	.LASF164
 4160 102e 36100000 		.long	0x1036
 4161 1032 41100000 		.long	0x1041
 4162 1036 02       		.uleb128 0x2
 4163 1037 EC490000 		.long	0x49ec
 4164 103b 01       		.uleb128 0x1
 4165 103c 690F0000 		.long	0xf69
 4166 1040 00       		.byte	0
 4167 1041 31       		.uleb128 0x31
 4168 1042 00000000 		.long	.LASF165
 4169 1046 04       		.byte	0x4
 4170 1047 DE       		.byte	0xde
 4171 1048 07       		.byte	0x7
 4172 1049 00000000 		.long	.LASF166
 4173 104d 55100000 		.long	0x1055
 4174 1051 60100000 		.long	0x1060
 4175 1055 02       		.uleb128 0x2
 4176 1056 EC490000 		.long	0x49ec
GAS LISTING linobj/Ch02_03.s 			page 194


 4177 105a 01       		.uleb128 0x1
 4178 105b AC0F0000 		.long	0xfac
 4179 105f 00       		.byte	0
 4180 1060 1A       		.uleb128 0x1a
 4181 1061 00000000 		.long	.LASF163
 4182 1065 04       		.byte	0x4
 4183 1066 E3       		.byte	0xe3
 4184 1067 07       		.byte	0x7
 4185 1068 00000000 		.long	.LASF167
 4186 106c 690F0000 		.long	0xf69
 4187 1070 78100000 		.long	0x1078
 4188 1074 7E100000 		.long	0x107e
 4189 1078 02       		.uleb128 0x2
 4190 1079 F6490000 		.long	0x49f6
 4191 107d 00       		.byte	0
 4192 107e 1A       		.uleb128 0x1a
 4193 107f 00000000 		.long	.LASF168
 4194 1083 04       		.byte	0x4
 4195 1084 E8       		.byte	0xe8
 4196 1085 07       		.byte	0x7
 4197 1086 00000000 		.long	.LASF169
 4198 108a 690F0000 		.long	0xf69
 4199 108e 96100000 		.long	0x1096
 4200 1092 9C100000 		.long	0x109c
 4201 1096 02       		.uleb128 0x2
 4202 1097 EC490000 		.long	0x49ec
 4203 109b 00       		.byte	0
 4204 109c 17       		.uleb128 0x17
 4205 109d 00000000 		.long	.LASF115
 4206 10a1 04       		.byte	0x4
 4207 10a2 6D       		.byte	0x6d
 4208 10a3 35       		.byte	0x35
 4209 10a4 213A0000 		.long	0x3a21
 4210 10a8 01       		.byte	0x1
 4211 10a9 1A       		.uleb128 0x1a
 4212 10aa 00000000 		.long	.LASF168
 4213 10ae 04       		.byte	0x4
 4214 10af F3       		.byte	0xf3
 4215 10b0 07       		.byte	0x7
 4216 10b1 00000000 		.long	.LASF170
 4217 10b5 9C100000 		.long	0x109c
 4218 10b9 C1100000 		.long	0x10c1
 4219 10bd C7100000 		.long	0x10c7
 4220 10c1 02       		.uleb128 0x2
 4221 10c2 F6490000 		.long	0x49f6
 4222 10c6 00       		.byte	0
 4223 10c7 31       		.uleb128 0x31
 4224 10c8 00000000 		.long	.LASF171
 4225 10cc 04       		.byte	0x4
 4226 10cd FE       		.byte	0xfe
 4227 10ce 07       		.byte	0x7
 4228 10cf 00000000 		.long	.LASF172
 4229 10d3 DB100000 		.long	0x10db
 4230 10d7 E6100000 		.long	0x10e6
 4231 10db 02       		.uleb128 0x2
 4232 10dc EC490000 		.long	0x49ec
 4233 10e0 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 195


 4234 10e1 AC0F0000 		.long	0xfac
 4235 10e5 00       		.byte	0
 4236 10e6 2B       		.uleb128 0x2b
 4237 10e7 00000000 		.long	.LASF173
 4238 10eb 0301     		.value	0x103
 4239 10ed 00000000 		.long	.LASF174
 4240 10f1 F9100000 		.long	0x10f9
 4241 10f5 04110000 		.long	0x1104
 4242 10f9 02       		.uleb128 0x2
 4243 10fa EC490000 		.long	0x49ec
 4244 10fe 01       		.uleb128 0x1
 4245 10ff AC0F0000 		.long	0xfac
 4246 1103 00       		.byte	0
 4247 1104 29       		.uleb128 0x29
 4248 1105 00000000 		.long	.LASF175
 4249 1109 0B01     		.value	0x10b
 4250 110b 00000000 		.long	.LASF177
 4251 110f 433F0000 		.long	0x3f43
 4252 1113 1B110000 		.long	0x111b
 4253 1117 21110000 		.long	0x1121
 4254 111b 02       		.uleb128 0x2
 4255 111c F6490000 		.long	0x49f6
 4256 1120 00       		.byte	0
 4257 1121 29       		.uleb128 0x29
 4258 1122 00000000 		.long	.LASF176
 4259 1126 1901     		.value	0x119
 4260 1128 00000000 		.long	.LASF178
 4261 112c 690F0000 		.long	0xf69
 4262 1130 38110000 		.long	0x1138
 4263 1134 48110000 		.long	0x1148
 4264 1138 02       		.uleb128 0x2
 4265 1139 EC490000 		.long	0x49ec
 4266 113d 01       		.uleb128 0x1
 4267 113e 004A0000 		.long	0x4a00
 4268 1142 01       		.uleb128 0x1
 4269 1143 AC0F0000 		.long	0xfac
 4270 1147 00       		.byte	0
 4271 1148 2B       		.uleb128 0x2b
 4272 1149 00000000 		.long	.LASF179
 4273 114d 1D01     		.value	0x11d
 4274 114f 00000000 		.long	.LASF180
 4275 1153 5B110000 		.long	0x115b
 4276 1157 61110000 		.long	0x1161
 4277 115b 02       		.uleb128 0x2
 4278 115c EC490000 		.long	0x49ec
 4279 1160 00       		.byte	0
 4280 1161 2B       		.uleb128 0x2b
 4281 1162 00000000 		.long	.LASF181
 4282 1166 2501     		.value	0x125
 4283 1168 00000000 		.long	.LASF182
 4284 116c 74110000 		.long	0x1174
 4285 1170 7F110000 		.long	0x117f
 4286 1174 02       		.uleb128 0x2
 4287 1175 EC490000 		.long	0x49ec
 4288 1179 01       		.uleb128 0x1
 4289 117a AC0F0000 		.long	0xfac
 4290 117e 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 196


 4291 117f 2B       		.uleb128 0x2b
 4292 1180 00000000 		.long	.LASF183
 4293 1184 5101     		.value	0x151
 4294 1186 00000000 		.long	.LASF184
 4295 118a 92110000 		.long	0x1192
 4296 118e A2110000 		.long	0x11a2
 4297 1192 02       		.uleb128 0x2
 4298 1193 EC490000 		.long	0x49ec
 4299 1197 01       		.uleb128 0x1
 4300 1198 AC0F0000 		.long	0xfac
 4301 119c 01       		.uleb128 0x1
 4302 119d E1000000 		.long	0xe1
 4303 11a1 00       		.byte	0
 4304 11a2 17       		.uleb128 0x17
 4305 11a3 00000000 		.long	.LASF141
 4306 11a7 04       		.byte	0x4
 4307 11a8 67       		.byte	0x67
 4308 11a9 20       		.byte	0x20
 4309 11aa F60F0000 		.long	0xff6
 4310 11ae 01       		.byte	0x1
 4311 11af 0E       		.uleb128 0xe
 4312 11b0 A2110000 		.long	0x11a2
 4313 11b4 29       		.uleb128 0x29
 4314 11b5 00000000 		.long	.LASF185
 4315 11b9 5501     		.value	0x155
 4316 11bb 00000000 		.long	.LASF186
 4317 11bf 054A0000 		.long	0x4a05
 4318 11c3 CB110000 		.long	0x11cb
 4319 11c7 D1110000 		.long	0x11d1
 4320 11cb 02       		.uleb128 0x2
 4321 11cc EC490000 		.long	0x49ec
 4322 11d0 00       		.byte	0
 4323 11d1 29       		.uleb128 0x29
 4324 11d2 00000000 		.long	.LASF185
 4325 11d6 5A01     		.value	0x15a
 4326 11d8 00000000 		.long	.LASF187
 4327 11dc 0A4A0000 		.long	0x4a0a
 4328 11e0 E8110000 		.long	0x11e8
 4329 11e4 EE110000 		.long	0x11ee
 4330 11e8 02       		.uleb128 0x2
 4331 11e9 F6490000 		.long	0x49f6
 4332 11ed 00       		.byte	0
 4333 11ee 2B       		.uleb128 0x2b
 4334 11ef 00000000 		.long	.LASF188
 4335 11f3 6101     		.value	0x161
 4336 11f5 00000000 		.long	.LASF189
 4337 11f9 01120000 		.long	0x1201
 4338 11fd 07120000 		.long	0x1207
 4339 1201 02       		.uleb128 0x2
 4340 1202 EC490000 		.long	0x49ec
 4341 1206 00       		.byte	0
 4342 1207 29       		.uleb128 0x29
 4343 1208 00000000 		.long	.LASF190
 4344 120c 6D01     		.value	0x16d
 4345 120e 00000000 		.long	.LASF191
 4346 1212 690F0000 		.long	0xf69
 4347 1216 1E120000 		.long	0x121e
GAS LISTING linobj/Ch02_03.s 			page 197


 4348 121a 24120000 		.long	0x1224
 4349 121e 02       		.uleb128 0x2
 4350 121f EC490000 		.long	0x49ec
 4351 1223 00       		.byte	0
 4352 1224 29       		.uleb128 0x29
 4353 1225 00000000 		.long	.LASF192
 4354 1229 8701     		.value	0x187
 4355 122b 00000000 		.long	.LASF193
 4356 122f AC0F0000 		.long	0xfac
 4357 1233 3B120000 		.long	0x123b
 4358 1237 4B120000 		.long	0x124b
 4359 123b 02       		.uleb128 0x2
 4360 123c F6490000 		.long	0x49f6
 4361 1240 01       		.uleb128 0x1
 4362 1241 AC0F0000 		.long	0xfac
 4363 1245 01       		.uleb128 0x1
 4364 1246 BC020000 		.long	0x2bc
 4365 124a 00       		.byte	0
 4366 124b 2B       		.uleb128 0x2b
 4367 124c 00000000 		.long	.LASF194
 4368 1250 9201     		.value	0x192
 4369 1252 00000000 		.long	.LASF195
 4370 1256 5E120000 		.long	0x125e
 4371 125a 73120000 		.long	0x1273
 4372 125e 02       		.uleb128 0x2
 4373 125f F6490000 		.long	0x49f6
 4374 1263 01       		.uleb128 0x1
 4375 1264 AC0F0000 		.long	0xfac
 4376 1268 01       		.uleb128 0x1
 4377 1269 AC0F0000 		.long	0xfac
 4378 126d 01       		.uleb128 0x1
 4379 126e BC020000 		.long	0x2bc
 4380 1272 00       		.byte	0
 4381 1273 29       		.uleb128 0x29
 4382 1274 00000000 		.long	.LASF196
 4383 1278 9C01     		.value	0x19c
 4384 127a 00000000 		.long	.LASF197
 4385 127e AC0F0000 		.long	0xfac
 4386 1282 8A120000 		.long	0x128a
 4387 1286 9A120000 		.long	0x129a
 4388 128a 02       		.uleb128 0x2
 4389 128b F6490000 		.long	0x49f6
 4390 128f 01       		.uleb128 0x1
 4391 1290 AC0F0000 		.long	0xfac
 4392 1294 01       		.uleb128 0x1
 4393 1295 AC0F0000 		.long	0xfac
 4394 1299 00       		.byte	0
 4395 129a 29       		.uleb128 0x29
 4396 129b 00000000 		.long	.LASF198
 4397 129f A401     		.value	0x1a4
 4398 12a1 00000000 		.long	.LASF199
 4399 12a5 433F0000 		.long	0x3f43
 4400 12a9 B1120000 		.long	0x12b1
 4401 12ad BC120000 		.long	0x12bc
 4402 12b1 02       		.uleb128 0x2
 4403 12b2 F6490000 		.long	0x49f6
 4404 12b6 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 198


 4405 12b7 BC020000 		.long	0x2bc
 4406 12bb 00       		.byte	0
 4407 12bc 2E       		.uleb128 0x2e
 4408 12bd 00000000 		.long	.LASF200
 4409 12c1 04       		.byte	0x4
 4410 12c2 AE01     		.value	0x1ae
 4411 12c4 00000000 		.long	.LASF201
 4412 12c8 DC120000 		.long	0x12dc
 4413 12cc 01       		.uleb128 0x1
 4414 12cd CB330000 		.long	0x33cb
 4415 12d1 01       		.uleb128 0x1
 4416 12d2 BC020000 		.long	0x2bc
 4417 12d6 01       		.uleb128 0x1
 4418 12d7 AC0F0000 		.long	0xfac
 4419 12db 00       		.byte	0
 4420 12dc 2E       		.uleb128 0x2e
 4421 12dd 00000000 		.long	.LASF202
 4422 12e1 04       		.byte	0x4
 4423 12e2 B801     		.value	0x1b8
 4424 12e4 00000000 		.long	.LASF203
 4425 12e8 FC120000 		.long	0x12fc
 4426 12ec 01       		.uleb128 0x1
 4427 12ed CB330000 		.long	0x33cb
 4428 12f1 01       		.uleb128 0x1
 4429 12f2 BC020000 		.long	0x2bc
 4430 12f6 01       		.uleb128 0x1
 4431 12f7 AC0F0000 		.long	0xfac
 4432 12fb 00       		.byte	0
 4433 12fc 2E       		.uleb128 0x2e
 4434 12fd 00000000 		.long	.LASF204
 4435 1301 04       		.byte	0x4
 4436 1302 C201     		.value	0x1c2
 4437 1304 00000000 		.long	.LASF205
 4438 1308 1C130000 		.long	0x131c
 4439 130c 01       		.uleb128 0x1
 4440 130d CB330000 		.long	0x33cb
 4441 1311 01       		.uleb128 0x1
 4442 1312 AC0F0000 		.long	0xfac
 4443 1316 01       		.uleb128 0x1
 4444 1317 E1000000 		.long	0xe1
 4445 131b 00       		.byte	0
 4446 131c 2E       		.uleb128 0x2e
 4447 131d 00000000 		.long	.LASF206
 4448 1321 04       		.byte	0x4
 4449 1322 D701     		.value	0x1d7
 4450 1324 00000000 		.long	.LASF207
 4451 1328 3C130000 		.long	0x133c
 4452 132c 01       		.uleb128 0x1
 4453 132d CB330000 		.long	0x33cb
 4454 1331 01       		.uleb128 0x1
 4455 1332 3C130000 		.long	0x133c
 4456 1336 01       		.uleb128 0x1
 4457 1337 3C130000 		.long	0x133c
 4458 133b 00       		.byte	0
 4459 133c 17       		.uleb128 0x17
 4460 133d 00000000 		.long	.LASF208
 4461 1341 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 199


 4462 1342 6E       		.byte	0x6e
 4463 1343 43       		.byte	0x43
 4464 1344 7E3A0000 		.long	0x3a7e
 4465 1348 01       		.byte	0x1
 4466 1349 2E       		.uleb128 0x2e
 4467 134a 00000000 		.long	.LASF206
 4468 134e 04       		.byte	0x4
 4469 134f DC01     		.value	0x1dc
 4470 1351 00000000 		.long	.LASF209
 4471 1355 69130000 		.long	0x1369
 4472 1359 01       		.uleb128 0x1
 4473 135a CB330000 		.long	0x33cb
 4474 135e 01       		.uleb128 0x1
 4475 135f 69130000 		.long	0x1369
 4476 1363 01       		.uleb128 0x1
 4477 1364 69130000 		.long	0x1369
 4478 1368 00       		.byte	0
 4479 1369 17       		.uleb128 0x17
 4480 136a 00000000 		.long	.LASF210
 4481 136e 04       		.byte	0x4
 4482 136f 70       		.byte	0x70
 4483 1370 08       		.byte	0x8
 4484 1371 A03C0000 		.long	0x3ca0
 4485 1375 01       		.byte	0x1
 4486 1376 2E       		.uleb128 0x2e
 4487 1377 00000000 		.long	.LASF206
 4488 137b 04       		.byte	0x4
 4489 137c E201     		.value	0x1e2
 4490 137e 00000000 		.long	.LASF211
 4491 1382 96130000 		.long	0x1396
 4492 1386 01       		.uleb128 0x1
 4493 1387 CB330000 		.long	0x33cb
 4494 138b 01       		.uleb128 0x1
 4495 138c CB330000 		.long	0x33cb
 4496 1390 01       		.uleb128 0x1
 4497 1391 CB330000 		.long	0x33cb
 4498 1395 00       		.byte	0
 4499 1396 2E       		.uleb128 0x2e
 4500 1397 00000000 		.long	.LASF206
 4501 139b 04       		.byte	0x4
 4502 139c E701     		.value	0x1e7
 4503 139e 00000000 		.long	.LASF212
 4504 13a2 B6130000 		.long	0x13b6
 4505 13a6 01       		.uleb128 0x1
 4506 13a7 CB330000 		.long	0x33cb
 4507 13ab 01       		.uleb128 0x1
 4508 13ac BC020000 		.long	0x2bc
 4509 13b0 01       		.uleb128 0x1
 4510 13b1 BC020000 		.long	0x2bc
 4511 13b5 00       		.byte	0
 4512 13b6 10       		.uleb128 0x10
 4513 13b7 00000000 		.long	.LASF213
 4514 13bb 04       		.byte	0x4
 4515 13bc ED01     		.value	0x1ed
 4516 13be 07       		.byte	0x7
 4517 13bf 00000000 		.long	.LASF214
 4518 13c3 ED000000 		.long	0xed
GAS LISTING linobj/Ch02_03.s 			page 200


 4519 13c7 D6130000 		.long	0x13d6
 4520 13cb 01       		.uleb128 0x1
 4521 13cc AC0F0000 		.long	0xfac
 4522 13d0 01       		.uleb128 0x1
 4523 13d1 AC0F0000 		.long	0xfac
 4524 13d5 00       		.byte	0
 4525 13d6 2B       		.uleb128 0x2b
 4526 13d7 00000000 		.long	.LASF215
 4527 13db FB01     		.value	0x1fb
 4528 13dd 00000000 		.long	.LASF216
 4529 13e1 E9130000 		.long	0x13e9
 4530 13e5 F4130000 		.long	0x13f4
 4531 13e9 02       		.uleb128 0x2
 4532 13ea EC490000 		.long	0x49ec
 4533 13ee 01       		.uleb128 0x1
 4534 13ef 0F4A0000 		.long	0x4a0f
 4535 13f3 00       		.byte	0
 4536 13f4 2B       		.uleb128 0x2b
 4537 13f5 00000000 		.long	.LASF217
 4538 13f9 FF01     		.value	0x1ff
 4539 13fb 00000000 		.long	.LASF218
 4540 13ff 07140000 		.long	0x1407
 4541 1403 21140000 		.long	0x1421
 4542 1407 02       		.uleb128 0x2
 4543 1408 EC490000 		.long	0x49ec
 4544 140c 01       		.uleb128 0x1
 4545 140d AC0F0000 		.long	0xfac
 4546 1411 01       		.uleb128 0x1
 4547 1412 AC0F0000 		.long	0xfac
 4548 1416 01       		.uleb128 0x1
 4549 1417 BC020000 		.long	0x2bc
 4550 141b 01       		.uleb128 0x1
 4551 141c AC0F0000 		.long	0xfac
 4552 1420 00       		.byte	0
 4553 1421 2B       		.uleb128 0x2b
 4554 1422 00000000 		.long	.LASF219
 4555 1426 0402     		.value	0x204
 4556 1428 00000000 		.long	.LASF220
 4557 142c 34140000 		.long	0x1434
 4558 1430 44140000 		.long	0x1444
 4559 1434 02       		.uleb128 0x2
 4560 1435 EC490000 		.long	0x49ec
 4561 1439 01       		.uleb128 0x1
 4562 143a AC0F0000 		.long	0xfac
 4563 143e 01       		.uleb128 0x1
 4564 143f AC0F0000 		.long	0xfac
 4565 1443 00       		.byte	0
 4566 1444 16       		.uleb128 0x16
 4567 1445 00000000 		.long	.LASF221
 4568 1449 04       		.byte	0x4
 4569 144a 0F02     		.value	0x20f
 4570 144c 07       		.byte	0x7
 4571 144d 00000000 		.long	.LASF222
 4572 1451 59140000 		.long	0x1459
 4573 1455 5F140000 		.long	0x145f
 4574 1459 02       		.uleb128 0x2
 4575 145a EC490000 		.long	0x49ec
GAS LISTING linobj/Ch02_03.s 			page 201


 4576 145e 00       		.byte	0
 4577 145f 46       		.uleb128 0x46
 4578 1460 00000000 		.long	.LASF221
 4579 1464 04       		.byte	0x4
 4580 1465 1C02     		.value	0x21c
 4581 1467 00000000 		.long	.LASF236
 4582 146b 73140000 		.long	0x1473
 4583 146f 7E140000 		.long	0x147e
 4584 1473 02       		.uleb128 0x2
 4585 1474 EC490000 		.long	0x49ec
 4586 1478 01       		.uleb128 0x1
 4587 1479 78420000 		.long	0x4278
 4588 147d 00       		.byte	0
 4589 147e 16       		.uleb128 0x16
 4590 147f 00000000 		.long	.LASF221
 4591 1483 04       		.byte	0x4
 4592 1484 2802     		.value	0x228
 4593 1486 07       		.byte	0x7
 4594 1487 00000000 		.long	.LASF223
 4595 148b 93140000 		.long	0x1493
 4596 148f 9E140000 		.long	0x149e
 4597 1493 02       		.uleb128 0x2
 4598 1494 EC490000 		.long	0x49ec
 4599 1498 01       		.uleb128 0x1
 4600 1499 0F4A0000 		.long	0x4a0f
 4601 149d 00       		.byte	0
 4602 149e 16       		.uleb128 0x16
 4603 149f 00000000 		.long	.LASF221
 4604 14a3 04       		.byte	0x4
 4605 14a4 3902     		.value	0x239
 4606 14a6 07       		.byte	0x7
 4607 14a7 00000000 		.long	.LASF224
 4608 14ab B3140000 		.long	0x14b3
 4609 14af C8140000 		.long	0x14c8
 4610 14b3 02       		.uleb128 0x2
 4611 14b4 EC490000 		.long	0x49ec
 4612 14b8 01       		.uleb128 0x1
 4613 14b9 0F4A0000 		.long	0x4a0f
 4614 14bd 01       		.uleb128 0x1
 4615 14be AC0F0000 		.long	0xfac
 4616 14c2 01       		.uleb128 0x1
 4617 14c3 78420000 		.long	0x4278
 4618 14c7 00       		.byte	0
 4619 14c8 16       		.uleb128 0x16
 4620 14c9 00000000 		.long	.LASF221
 4621 14cd 04       		.byte	0x4
 4622 14ce 4A02     		.value	0x24a
 4623 14d0 07       		.byte	0x7
 4624 14d1 00000000 		.long	.LASF225
 4625 14d5 DD140000 		.long	0x14dd
 4626 14d9 F2140000 		.long	0x14f2
 4627 14dd 02       		.uleb128 0x2
 4628 14de EC490000 		.long	0x49ec
 4629 14e2 01       		.uleb128 0x1
 4630 14e3 0F4A0000 		.long	0x4a0f
 4631 14e7 01       		.uleb128 0x1
 4632 14e8 AC0F0000 		.long	0xfac
GAS LISTING linobj/Ch02_03.s 			page 202


 4633 14ec 01       		.uleb128 0x1
 4634 14ed AC0F0000 		.long	0xfac
 4635 14f1 00       		.byte	0
 4636 14f2 16       		.uleb128 0x16
 4637 14f3 00000000 		.long	.LASF221
 4638 14f7 04       		.byte	0x4
 4639 14f8 5C02     		.value	0x25c
 4640 14fa 07       		.byte	0x7
 4641 14fb 00000000 		.long	.LASF226
 4642 14ff 07150000 		.long	0x1507
 4643 1503 21150000 		.long	0x1521
 4644 1507 02       		.uleb128 0x2
 4645 1508 EC490000 		.long	0x49ec
 4646 150c 01       		.uleb128 0x1
 4647 150d 0F4A0000 		.long	0x4a0f
 4648 1511 01       		.uleb128 0x1
 4649 1512 AC0F0000 		.long	0xfac
 4650 1516 01       		.uleb128 0x1
 4651 1517 AC0F0000 		.long	0xfac
 4652 151b 01       		.uleb128 0x1
 4653 151c 78420000 		.long	0x4278
 4654 1520 00       		.byte	0
 4655 1521 16       		.uleb128 0x16
 4656 1522 00000000 		.long	.LASF221
 4657 1526 04       		.byte	0x4
 4658 1527 7002     		.value	0x270
 4659 1529 07       		.byte	0x7
 4660 152a 00000000 		.long	.LASF227
 4661 152e 36150000 		.long	0x1536
 4662 1532 4B150000 		.long	0x154b
 4663 1536 02       		.uleb128 0x2
 4664 1537 EC490000 		.long	0x49ec
 4665 153b 01       		.uleb128 0x1
 4666 153c BC020000 		.long	0x2bc
 4667 1540 01       		.uleb128 0x1
 4668 1541 AC0F0000 		.long	0xfac
 4669 1545 01       		.uleb128 0x1
 4670 1546 78420000 		.long	0x4278
 4671 154a 00       		.byte	0
 4672 154b 16       		.uleb128 0x16
 4673 154c 00000000 		.long	.LASF221
 4674 1550 04       		.byte	0x4
 4675 1551 8602     		.value	0x286
 4676 1553 07       		.byte	0x7
 4677 1554 00000000 		.long	.LASF228
 4678 1558 60150000 		.long	0x1560
 4679 155c 70150000 		.long	0x1570
 4680 1560 02       		.uleb128 0x2
 4681 1561 EC490000 		.long	0x49ec
 4682 1565 01       		.uleb128 0x1
 4683 1566 BC020000 		.long	0x2bc
 4684 156a 01       		.uleb128 0x1
 4685 156b 78420000 		.long	0x4278
 4686 156f 00       		.byte	0
 4687 1570 16       		.uleb128 0x16
 4688 1571 00000000 		.long	.LASF221
 4689 1575 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 203


 4690 1576 9D02     		.value	0x29d
 4691 1578 07       		.byte	0x7
 4692 1579 00000000 		.long	.LASF229
 4693 157d 85150000 		.long	0x1585
 4694 1581 9A150000 		.long	0x159a
 4695 1585 02       		.uleb128 0x2
 4696 1586 EC490000 		.long	0x49ec
 4697 158a 01       		.uleb128 0x1
 4698 158b AC0F0000 		.long	0xfac
 4699 158f 01       		.uleb128 0x1
 4700 1590 E1000000 		.long	0xe1
 4701 1594 01       		.uleb128 0x1
 4702 1595 78420000 		.long	0x4278
 4703 1599 00       		.byte	0
 4704 159a 16       		.uleb128 0x16
 4705 159b 00000000 		.long	.LASF221
 4706 159f 04       		.byte	0x4
 4707 15a0 AA02     		.value	0x2aa
 4708 15a2 07       		.byte	0x7
 4709 15a3 00000000 		.long	.LASF230
 4710 15a7 AF150000 		.long	0x15af
 4711 15ab BA150000 		.long	0x15ba
 4712 15af 02       		.uleb128 0x2
 4713 15b0 EC490000 		.long	0x49ec
 4714 15b4 01       		.uleb128 0x1
 4715 15b5 144A0000 		.long	0x4a14
 4716 15b9 00       		.byte	0
 4717 15ba 16       		.uleb128 0x16
 4718 15bb 00000000 		.long	.LASF221
 4719 15bf 04       		.byte	0x4
 4720 15c0 C702     		.value	0x2c7
 4721 15c2 07       		.byte	0x7
 4722 15c3 00000000 		.long	.LASF231
 4723 15c7 CF150000 		.long	0x15cf
 4724 15cb DF150000 		.long	0x15df
 4725 15cf 02       		.uleb128 0x2
 4726 15d0 EC490000 		.long	0x49ec
 4727 15d4 01       		.uleb128 0x1
 4728 15d5 0F290000 		.long	0x290f
 4729 15d9 01       		.uleb128 0x1
 4730 15da 78420000 		.long	0x4278
 4731 15de 00       		.byte	0
 4732 15df 16       		.uleb128 0x16
 4733 15e0 00000000 		.long	.LASF221
 4734 15e4 04       		.byte	0x4
 4735 15e5 CC02     		.value	0x2cc
 4736 15e7 07       		.byte	0x7
 4737 15e8 00000000 		.long	.LASF232
 4738 15ec F4150000 		.long	0x15f4
 4739 15f0 04160000 		.long	0x1604
 4740 15f4 02       		.uleb128 0x2
 4741 15f5 EC490000 		.long	0x49ec
 4742 15f9 01       		.uleb128 0x1
 4743 15fa 0F4A0000 		.long	0x4a0f
 4744 15fe 01       		.uleb128 0x1
 4745 15ff 78420000 		.long	0x4278
 4746 1603 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 204


 4747 1604 16       		.uleb128 0x16
 4748 1605 00000000 		.long	.LASF221
 4749 1609 04       		.byte	0x4
 4750 160a D102     		.value	0x2d1
 4751 160c 07       		.byte	0x7
 4752 160d 00000000 		.long	.LASF233
 4753 1611 19160000 		.long	0x1619
 4754 1615 29160000 		.long	0x1629
 4755 1619 02       		.uleb128 0x2
 4756 161a EC490000 		.long	0x49ec
 4757 161e 01       		.uleb128 0x1
 4758 161f 144A0000 		.long	0x4a14
 4759 1623 01       		.uleb128 0x1
 4760 1624 78420000 		.long	0x4278
 4761 1628 00       		.byte	0
 4762 1629 16       		.uleb128 0x16
 4763 162a 00000000 		.long	.LASF234
 4764 162e 04       		.byte	0x4
 4765 162f 2803     		.value	0x328
 4766 1631 07       		.byte	0x7
 4767 1632 00000000 		.long	.LASF235
 4768 1636 3E160000 		.long	0x163e
 4769 163a 49160000 		.long	0x1649
 4770 163e 02       		.uleb128 0x2
 4771 163f EC490000 		.long	0x49ec
 4772 1643 02       		.uleb128 0x2
 4773 1644 ED000000 		.long	0xed
 4774 1648 00       		.byte	0
 4775 1649 04       		.uleb128 0x4
 4776 164a 00000000 		.long	.LASF63
 4777 164e 04       		.byte	0x4
 4778 164f 3103     		.value	0x331
 4779 1651 07       		.byte	0x7
 4780 1652 00000000 		.long	.LASF237
 4781 1656 194A0000 		.long	0x4a19
 4782 165a 62160000 		.long	0x1662
 4783 165e 6D160000 		.long	0x166d
 4784 1662 02       		.uleb128 0x2
 4785 1663 EC490000 		.long	0x49ec
 4786 1667 01       		.uleb128 0x1
 4787 1668 0F4A0000 		.long	0x4a0f
 4788 166c 00       		.byte	0
 4789 166d 04       		.uleb128 0x4
 4790 166e 00000000 		.long	.LASF63
 4791 1672 04       		.byte	0x4
 4792 1673 3C03     		.value	0x33c
 4793 1675 07       		.byte	0x7
 4794 1676 00000000 		.long	.LASF238
 4795 167a 194A0000 		.long	0x4a19
 4796 167e 86160000 		.long	0x1686
 4797 1682 91160000 		.long	0x1691
 4798 1686 02       		.uleb128 0x2
 4799 1687 EC490000 		.long	0x49ec
 4800 168b 01       		.uleb128 0x1
 4801 168c BC020000 		.long	0x2bc
 4802 1690 00       		.byte	0
 4803 1691 04       		.uleb128 0x4
GAS LISTING linobj/Ch02_03.s 			page 205


 4804 1692 00000000 		.long	.LASF63
 4805 1696 04       		.byte	0x4
 4806 1697 4803     		.value	0x348
 4807 1699 07       		.byte	0x7
 4808 169a 00000000 		.long	.LASF239
 4809 169e 194A0000 		.long	0x4a19
 4810 16a2 AA160000 		.long	0x16aa
 4811 16a6 B5160000 		.long	0x16b5
 4812 16aa 02       		.uleb128 0x2
 4813 16ab EC490000 		.long	0x49ec
 4814 16af 01       		.uleb128 0x1
 4815 16b0 E1000000 		.long	0xe1
 4816 16b4 00       		.byte	0
 4817 16b5 04       		.uleb128 0x4
 4818 16b6 00000000 		.long	.LASF63
 4819 16ba 04       		.byte	0x4
 4820 16bb 5A03     		.value	0x35a
 4821 16bd 07       		.byte	0x7
 4822 16be 00000000 		.long	.LASF240
 4823 16c2 194A0000 		.long	0x4a19
 4824 16c6 CE160000 		.long	0x16ce
 4825 16ca D9160000 		.long	0x16d9
 4826 16ce 02       		.uleb128 0x2
 4827 16cf EC490000 		.long	0x49ec
 4828 16d3 01       		.uleb128 0x1
 4829 16d4 144A0000 		.long	0x4a14
 4830 16d8 00       		.byte	0
 4831 16d9 04       		.uleb128 0x4
 4832 16da 00000000 		.long	.LASF63
 4833 16de 04       		.byte	0x4
 4834 16df 9E03     		.value	0x39e
 4835 16e1 07       		.byte	0x7
 4836 16e2 00000000 		.long	.LASF241
 4837 16e6 194A0000 		.long	0x4a19
 4838 16ea F2160000 		.long	0x16f2
 4839 16ee FD160000 		.long	0x16fd
 4840 16f2 02       		.uleb128 0x2
 4841 16f3 EC490000 		.long	0x49ec
 4842 16f7 01       		.uleb128 0x1
 4843 16f8 0F290000 		.long	0x290f
 4844 16fc 00       		.byte	0
 4845 16fd 04       		.uleb128 0x4
 4846 16fe 00000000 		.long	.LASF242
 4847 1702 04       		.byte	0x4
 4848 1703 C003     		.value	0x3c0
 4849 1705 07       		.byte	0x7
 4850 1706 00000000 		.long	.LASF243
 4851 170a 3C130000 		.long	0x133c
 4852 170e 16170000 		.long	0x1716
 4853 1712 1C170000 		.long	0x171c
 4854 1716 02       		.uleb128 0x2
 4855 1717 EC490000 		.long	0x49ec
 4856 171b 00       		.byte	0
 4857 171c 04       		.uleb128 0x4
 4858 171d 00000000 		.long	.LASF242
 4859 1721 04       		.byte	0x4
 4860 1722 C903     		.value	0x3c9
GAS LISTING linobj/Ch02_03.s 			page 206


 4861 1724 07       		.byte	0x7
 4862 1725 00000000 		.long	.LASF244
 4863 1729 69130000 		.long	0x1369
 4864 172d 35170000 		.long	0x1735
 4865 1731 3B170000 		.long	0x173b
 4866 1735 02       		.uleb128 0x2
 4867 1736 F6490000 		.long	0x49f6
 4868 173a 00       		.byte	0
 4869 173b 3E       		.uleb128 0x3e
 4870 173c 656E6400 		.string	"end"
 4871 1740 D203     		.value	0x3d2
 4872 1742 00000000 		.long	.LASF245
 4873 1746 3C130000 		.long	0x133c
 4874 174a 52170000 		.long	0x1752
 4875 174e 58170000 		.long	0x1758
 4876 1752 02       		.uleb128 0x2
 4877 1753 EC490000 		.long	0x49ec
 4878 1757 00       		.byte	0
 4879 1758 3E       		.uleb128 0x3e
 4880 1759 656E6400 		.string	"end"
 4881 175d DB03     		.value	0x3db
 4882 175f 00000000 		.long	.LASF246
 4883 1763 69130000 		.long	0x1369
 4884 1767 6F170000 		.long	0x176f
 4885 176b 75170000 		.long	0x1775
 4886 176f 02       		.uleb128 0x2
 4887 1770 F6490000 		.long	0x49f6
 4888 1774 00       		.byte	0
 4889 1775 17       		.uleb128 0x17
 4890 1776 00000000 		.long	.LASF247
 4891 177a 04       		.byte	0x4
 4892 177b 72       		.byte	0x72
 4893 177c 2F       		.byte	0x2f
 4894 177d 042A0000 		.long	0x2a04
 4895 1781 01       		.byte	0x1
 4896 1782 04       		.uleb128 0x4
 4897 1783 00000000 		.long	.LASF248
 4898 1787 04       		.byte	0x4
 4899 1788 E503     		.value	0x3e5
 4900 178a 07       		.byte	0x7
 4901 178b 00000000 		.long	.LASF249
 4902 178f 75170000 		.long	0x1775
 4903 1793 9B170000 		.long	0x179b
 4904 1797 A1170000 		.long	0x17a1
 4905 179b 02       		.uleb128 0x2
 4906 179c EC490000 		.long	0x49ec
 4907 17a0 00       		.byte	0
 4908 17a1 17       		.uleb128 0x17
 4909 17a2 00000000 		.long	.LASF250
 4910 17a6 04       		.byte	0x4
 4911 17a7 71       		.byte	0x71
 4912 17a8 35       		.byte	0x35
 4913 17a9 092A0000 		.long	0x2a09
 4914 17ad 01       		.byte	0x1
 4915 17ae 04       		.uleb128 0x4
 4916 17af 00000000 		.long	.LASF248
 4917 17b3 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 207


 4918 17b4 EF03     		.value	0x3ef
 4919 17b6 07       		.byte	0x7
 4920 17b7 00000000 		.long	.LASF251
 4921 17bb A1170000 		.long	0x17a1
 4922 17bf C7170000 		.long	0x17c7
 4923 17c3 CD170000 		.long	0x17cd
 4924 17c7 02       		.uleb128 0x2
 4925 17c8 F6490000 		.long	0x49f6
 4926 17cc 00       		.byte	0
 4927 17cd 04       		.uleb128 0x4
 4928 17ce 00000000 		.long	.LASF252
 4929 17d2 04       		.byte	0x4
 4930 17d3 F903     		.value	0x3f9
 4931 17d5 07       		.byte	0x7
 4932 17d6 00000000 		.long	.LASF253
 4933 17da 75170000 		.long	0x1775
 4934 17de E6170000 		.long	0x17e6
 4935 17e2 EC170000 		.long	0x17ec
 4936 17e6 02       		.uleb128 0x2
 4937 17e7 EC490000 		.long	0x49ec
 4938 17eb 00       		.byte	0
 4939 17ec 04       		.uleb128 0x4
 4940 17ed 00000000 		.long	.LASF252
 4941 17f1 04       		.byte	0x4
 4942 17f2 0304     		.value	0x403
 4943 17f4 07       		.byte	0x7
 4944 17f5 00000000 		.long	.LASF254
 4945 17f9 A1170000 		.long	0x17a1
 4946 17fd 05180000 		.long	0x1805
 4947 1801 0B180000 		.long	0x180b
 4948 1805 02       		.uleb128 0x2
 4949 1806 F6490000 		.long	0x49f6
 4950 180a 00       		.byte	0
 4951 180b 04       		.uleb128 0x4
 4952 180c 00000000 		.long	.LASF255
 4953 1810 04       		.byte	0x4
 4954 1811 0D04     		.value	0x40d
 4955 1813 07       		.byte	0x7
 4956 1814 00000000 		.long	.LASF256
 4957 1818 69130000 		.long	0x1369
 4958 181c 24180000 		.long	0x1824
 4959 1820 2A180000 		.long	0x182a
 4960 1824 02       		.uleb128 0x2
 4961 1825 F6490000 		.long	0x49f6
 4962 1829 00       		.byte	0
 4963 182a 04       		.uleb128 0x4
 4964 182b 00000000 		.long	.LASF257
 4965 182f 04       		.byte	0x4
 4966 1830 1604     		.value	0x416
 4967 1832 07       		.byte	0x7
 4968 1833 00000000 		.long	.LASF258
 4969 1837 69130000 		.long	0x1369
 4970 183b 43180000 		.long	0x1843
 4971 183f 49180000 		.long	0x1849
 4972 1843 02       		.uleb128 0x2
 4973 1844 F6490000 		.long	0x49f6
 4974 1848 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 208


 4975 1849 04       		.uleb128 0x4
 4976 184a 00000000 		.long	.LASF259
 4977 184e 04       		.byte	0x4
 4978 184f 2004     		.value	0x420
 4979 1851 07       		.byte	0x7
 4980 1852 00000000 		.long	.LASF260
 4981 1856 A1170000 		.long	0x17a1
 4982 185a 62180000 		.long	0x1862
 4983 185e 68180000 		.long	0x1868
 4984 1862 02       		.uleb128 0x2
 4985 1863 F6490000 		.long	0x49f6
 4986 1867 00       		.byte	0
 4987 1868 04       		.uleb128 0x4
 4988 1869 00000000 		.long	.LASF261
 4989 186d 04       		.byte	0x4
 4990 186e 2A04     		.value	0x42a
 4991 1870 07       		.byte	0x7
 4992 1871 00000000 		.long	.LASF262
 4993 1875 A1170000 		.long	0x17a1
 4994 1879 81180000 		.long	0x1881
 4995 187d 87180000 		.long	0x1887
 4996 1881 02       		.uleb128 0x2
 4997 1882 F6490000 		.long	0x49f6
 4998 1886 00       		.byte	0
 4999 1887 04       		.uleb128 0x4
 5000 1888 00000000 		.long	.LASF263
 5001 188c 04       		.byte	0x4
 5002 188d 3404     		.value	0x434
 5003 188f 07       		.byte	0x7
 5004 1890 00000000 		.long	.LASF264
 5005 1894 AC0F0000 		.long	0xfac
 5006 1898 A0180000 		.long	0x18a0
 5007 189c A6180000 		.long	0x18a6
 5008 18a0 02       		.uleb128 0x2
 5009 18a1 F6490000 		.long	0x49f6
 5010 18a5 00       		.byte	0
 5011 18a6 04       		.uleb128 0x4
 5012 18a7 00000000 		.long	.LASF81
 5013 18ab 04       		.byte	0x4
 5014 18ac 3B04     		.value	0x43b
 5015 18ae 07       		.byte	0x7
 5016 18af 00000000 		.long	.LASF265
 5017 18b3 AC0F0000 		.long	0xfac
 5018 18b7 BF180000 		.long	0x18bf
 5019 18bb C5180000 		.long	0x18c5
 5020 18bf 02       		.uleb128 0x2
 5021 18c0 F6490000 		.long	0x49f6
 5022 18c4 00       		.byte	0
 5023 18c5 04       		.uleb128 0x4
 5024 18c6 00000000 		.long	.LASF123
 5025 18ca 04       		.byte	0x4
 5026 18cb 4104     		.value	0x441
 5027 18cd 07       		.byte	0x7
 5028 18ce 00000000 		.long	.LASF266
 5029 18d2 AC0F0000 		.long	0xfac
 5030 18d6 DE180000 		.long	0x18de
 5031 18da E4180000 		.long	0x18e4
GAS LISTING linobj/Ch02_03.s 			page 209


 5032 18de 02       		.uleb128 0x2
 5033 18df F6490000 		.long	0x49f6
 5034 18e3 00       		.byte	0
 5035 18e4 16       		.uleb128 0x16
 5036 18e5 00000000 		.long	.LASF267
 5037 18e9 04       		.byte	0x4
 5038 18ea 5004     		.value	0x450
 5039 18ec 07       		.byte	0x7
 5040 18ed 00000000 		.long	.LASF268
 5041 18f1 F9180000 		.long	0x18f9
 5042 18f5 09190000 		.long	0x1909
 5043 18f9 02       		.uleb128 0x2
 5044 18fa EC490000 		.long	0x49ec
 5045 18fe 01       		.uleb128 0x1
 5046 18ff AC0F0000 		.long	0xfac
 5047 1903 01       		.uleb128 0x1
 5048 1904 E1000000 		.long	0xe1
 5049 1908 00       		.byte	0
 5050 1909 16       		.uleb128 0x16
 5051 190a 00000000 		.long	.LASF267
 5052 190e 04       		.byte	0x4
 5053 190f 5E04     		.value	0x45e
 5054 1911 07       		.byte	0x7
 5055 1912 00000000 		.long	.LASF269
 5056 1916 1E190000 		.long	0x191e
 5057 191a 29190000 		.long	0x1929
 5058 191e 02       		.uleb128 0x2
 5059 191f EC490000 		.long	0x49ec
 5060 1923 01       		.uleb128 0x1
 5061 1924 AC0F0000 		.long	0xfac
 5062 1928 00       		.byte	0
 5063 1929 16       		.uleb128 0x16
 5064 192a 00000000 		.long	.LASF270
 5065 192e 04       		.byte	0x4
 5066 192f 6704     		.value	0x467
 5067 1931 07       		.byte	0x7
 5068 1932 00000000 		.long	.LASF271
 5069 1936 3E190000 		.long	0x193e
 5070 193a 44190000 		.long	0x1944
 5071 193e 02       		.uleb128 0x2
 5072 193f EC490000 		.long	0x49ec
 5073 1943 00       		.byte	0
 5074 1944 04       		.uleb128 0x4
 5075 1945 00000000 		.long	.LASF272
 5076 1949 04       		.byte	0x4
 5077 194a 9C04     		.value	0x49c
 5078 194c 07       		.byte	0x7
 5079 194d 00000000 		.long	.LASF273
 5080 1951 AC0F0000 		.long	0xfac
 5081 1955 5D190000 		.long	0x195d
 5082 1959 63190000 		.long	0x1963
 5083 195d 02       		.uleb128 0x2
 5084 195e F6490000 		.long	0x49f6
 5085 1962 00       		.byte	0
 5086 1963 16       		.uleb128 0x16
 5087 1964 00000000 		.long	.LASF274
 5088 1968 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 210


 5089 1969 B504     		.value	0x4b5
 5090 196b 07       		.byte	0x7
 5091 196c 00000000 		.long	.LASF275
 5092 1970 78190000 		.long	0x1978
 5093 1974 83190000 		.long	0x1983
 5094 1978 02       		.uleb128 0x2
 5095 1979 EC490000 		.long	0x49ec
 5096 197d 01       		.uleb128 0x1
 5097 197e AC0F0000 		.long	0xfac
 5098 1982 00       		.byte	0
 5099 1983 16       		.uleb128 0x16
 5100 1984 00000000 		.long	.LASF274
 5101 1988 04       		.byte	0x4
 5102 1989 BF04     		.value	0x4bf
 5103 198b 07       		.byte	0x7
 5104 198c 00000000 		.long	.LASF276
 5105 1990 98190000 		.long	0x1998
 5106 1994 9E190000 		.long	0x199e
 5107 1998 02       		.uleb128 0x2
 5108 1999 EC490000 		.long	0x49ec
 5109 199d 00       		.byte	0
 5110 199e 16       		.uleb128 0x16
 5111 199f 00000000 		.long	.LASF277
 5112 19a3 04       		.byte	0x4
 5113 19a4 C604     		.value	0x4c6
 5114 19a6 07       		.byte	0x7
 5115 19a7 00000000 		.long	.LASF278
 5116 19ab B3190000 		.long	0x19b3
 5117 19af B9190000 		.long	0x19b9
 5118 19b3 02       		.uleb128 0x2
 5119 19b4 EC490000 		.long	0x49ec
 5120 19b8 00       		.byte	0
 5121 19b9 04       		.uleb128 0x4
 5122 19ba 00000000 		.long	.LASF279
 5123 19be 04       		.byte	0x4
 5124 19bf CF04     		.value	0x4cf
 5125 19c1 07       		.byte	0x7
 5126 19c2 00000000 		.long	.LASF280
 5127 19c6 433F0000 		.long	0x3f43
 5128 19ca D2190000 		.long	0x19d2
 5129 19ce D8190000 		.long	0x19d8
 5130 19d2 02       		.uleb128 0x2
 5131 19d3 F6490000 		.long	0x49f6
 5132 19d7 00       		.byte	0
 5133 19d8 17       		.uleb128 0x17
 5134 19d9 00000000 		.long	.LASF117
 5135 19dd 04       		.byte	0x4
 5136 19de 6B       		.byte	0x6b
 5137 19df 37       		.byte	0x37
 5138 19e0 453A0000 		.long	0x3a45
 5139 19e4 01       		.byte	0x1
 5140 19e5 04       		.uleb128 0x4
 5141 19e6 00000000 		.long	.LASF281
 5142 19ea 04       		.byte	0x4
 5143 19eb DF04     		.value	0x4df
 5144 19ed 07       		.byte	0x7
 5145 19ee 00000000 		.long	.LASF282
GAS LISTING linobj/Ch02_03.s 			page 211


 5146 19f2 D8190000 		.long	0x19d8
 5147 19f6 FE190000 		.long	0x19fe
 5148 19fa 091A0000 		.long	0x1a09
 5149 19fe 02       		.uleb128 0x2
 5150 19ff F6490000 		.long	0x49f6
 5151 1a03 01       		.uleb128 0x1
 5152 1a04 AC0F0000 		.long	0xfac
 5153 1a08 00       		.byte	0
 5154 1a09 17       		.uleb128 0x17
 5155 1a0a 00000000 		.long	.LASF114
 5156 1a0e 04       		.byte	0x4
 5157 1a0f 6A       		.byte	0x6a
 5158 1a10 31       		.byte	0x31
 5159 1a11 393A0000 		.long	0x3a39
 5160 1a15 01       		.byte	0x1
 5161 1a16 04       		.uleb128 0x4
 5162 1a17 00000000 		.long	.LASF281
 5163 1a1b 04       		.byte	0x4
 5164 1a1c F104     		.value	0x4f1
 5165 1a1e 07       		.byte	0x7
 5166 1a1f 00000000 		.long	.LASF283
 5167 1a23 091A0000 		.long	0x1a09
 5168 1a27 2F1A0000 		.long	0x1a2f
 5169 1a2b 3A1A0000 		.long	0x1a3a
 5170 1a2f 02       		.uleb128 0x2
 5171 1a30 EC490000 		.long	0x49ec
 5172 1a34 01       		.uleb128 0x1
 5173 1a35 AC0F0000 		.long	0xfac
 5174 1a39 00       		.byte	0
 5175 1a3a 3E       		.uleb128 0x3e
 5176 1a3b 617400   		.string	"at"
 5177 1a3e 0705     		.value	0x507
 5178 1a40 00000000 		.long	.LASF284
 5179 1a44 D8190000 		.long	0x19d8
 5180 1a48 501A0000 		.long	0x1a50
 5181 1a4c 5B1A0000 		.long	0x1a5b
 5182 1a50 02       		.uleb128 0x2
 5183 1a51 F6490000 		.long	0x49f6
 5184 1a55 01       		.uleb128 0x1
 5185 1a56 AC0F0000 		.long	0xfac
 5186 1a5a 00       		.byte	0
 5187 1a5b 3E       		.uleb128 0x3e
 5188 1a5c 617400   		.string	"at"
 5189 1a5f 1D05     		.value	0x51d
 5190 1a61 00000000 		.long	.LASF285
 5191 1a65 091A0000 		.long	0x1a09
 5192 1a69 711A0000 		.long	0x1a71
 5193 1a6d 7C1A0000 		.long	0x1a7c
 5194 1a71 02       		.uleb128 0x2
 5195 1a72 EC490000 		.long	0x49ec
 5196 1a76 01       		.uleb128 0x1
 5197 1a77 AC0F0000 		.long	0xfac
 5198 1a7b 00       		.byte	0
 5199 1a7c 04       		.uleb128 0x4
 5200 1a7d 00000000 		.long	.LASF286
 5201 1a81 04       		.byte	0x4
 5202 1a82 2E05     		.value	0x52e
GAS LISTING linobj/Ch02_03.s 			page 212


 5203 1a84 07       		.byte	0x7
 5204 1a85 00000000 		.long	.LASF287
 5205 1a89 091A0000 		.long	0x1a09
 5206 1a8d 951A0000 		.long	0x1a95
 5207 1a91 9B1A0000 		.long	0x1a9b
 5208 1a95 02       		.uleb128 0x2
 5209 1a96 EC490000 		.long	0x49ec
 5210 1a9a 00       		.byte	0
 5211 1a9b 04       		.uleb128 0x4
 5212 1a9c 00000000 		.long	.LASF286
 5213 1aa0 04       		.byte	0x4
 5214 1aa1 3A05     		.value	0x53a
 5215 1aa3 07       		.byte	0x7
 5216 1aa4 00000000 		.long	.LASF288
 5217 1aa8 D8190000 		.long	0x19d8
 5218 1aac B41A0000 		.long	0x1ab4
 5219 1ab0 BA1A0000 		.long	0x1aba
 5220 1ab4 02       		.uleb128 0x2
 5221 1ab5 F6490000 		.long	0x49f6
 5222 1ab9 00       		.byte	0
 5223 1aba 04       		.uleb128 0x4
 5224 1abb 00000000 		.long	.LASF289
 5225 1abf 04       		.byte	0x4
 5226 1ac0 4605     		.value	0x546
 5227 1ac2 07       		.byte	0x7
 5228 1ac3 00000000 		.long	.LASF290
 5229 1ac7 091A0000 		.long	0x1a09
 5230 1acb D31A0000 		.long	0x1ad3
 5231 1acf D91A0000 		.long	0x1ad9
 5232 1ad3 02       		.uleb128 0x2
 5233 1ad4 EC490000 		.long	0x49ec
 5234 1ad8 00       		.byte	0
 5235 1ad9 04       		.uleb128 0x4
 5236 1ada 00000000 		.long	.LASF289
 5237 1ade 04       		.byte	0x4
 5238 1adf 5205     		.value	0x552
 5239 1ae1 07       		.byte	0x7
 5240 1ae2 00000000 		.long	.LASF291
 5241 1ae6 D8190000 		.long	0x19d8
 5242 1aea F21A0000 		.long	0x1af2
 5243 1aee F81A0000 		.long	0x1af8
 5244 1af2 02       		.uleb128 0x2
 5245 1af3 F6490000 		.long	0x49f6
 5246 1af7 00       		.byte	0
 5247 1af8 04       		.uleb128 0x4
 5248 1af9 00000000 		.long	.LASF292
 5249 1afd 04       		.byte	0x4
 5250 1afe 6105     		.value	0x561
 5251 1b00 07       		.byte	0x7
 5252 1b01 00000000 		.long	.LASF293
 5253 1b05 194A0000 		.long	0x4a19
 5254 1b09 111B0000 		.long	0x1b11
 5255 1b0d 1C1B0000 		.long	0x1b1c
 5256 1b11 02       		.uleb128 0x2
 5257 1b12 EC490000 		.long	0x49ec
 5258 1b16 01       		.uleb128 0x1
 5259 1b17 0F4A0000 		.long	0x4a0f
GAS LISTING linobj/Ch02_03.s 			page 213


 5260 1b1b 00       		.byte	0
 5261 1b1c 04       		.uleb128 0x4
 5262 1b1d 00000000 		.long	.LASF292
 5263 1b21 04       		.byte	0x4
 5264 1b22 6B05     		.value	0x56b
 5265 1b24 07       		.byte	0x7
 5266 1b25 00000000 		.long	.LASF294
 5267 1b29 194A0000 		.long	0x4a19
 5268 1b2d 351B0000 		.long	0x1b35
 5269 1b31 401B0000 		.long	0x1b40
 5270 1b35 02       		.uleb128 0x2
 5271 1b36 EC490000 		.long	0x49ec
 5272 1b3a 01       		.uleb128 0x1
 5273 1b3b BC020000 		.long	0x2bc
 5274 1b3f 00       		.byte	0
 5275 1b40 04       		.uleb128 0x4
 5276 1b41 00000000 		.long	.LASF292
 5277 1b45 04       		.byte	0x4
 5278 1b46 7505     		.value	0x575
 5279 1b48 07       		.byte	0x7
 5280 1b49 00000000 		.long	.LASF295
 5281 1b4d 194A0000 		.long	0x4a19
 5282 1b51 591B0000 		.long	0x1b59
 5283 1b55 641B0000 		.long	0x1b64
 5284 1b59 02       		.uleb128 0x2
 5285 1b5a EC490000 		.long	0x49ec
 5286 1b5e 01       		.uleb128 0x1
 5287 1b5f E1000000 		.long	0xe1
 5288 1b63 00       		.byte	0
 5289 1b64 04       		.uleb128 0x4
 5290 1b65 00000000 		.long	.LASF292
 5291 1b69 04       		.byte	0x4
 5292 1b6a 8305     		.value	0x583
 5293 1b6c 07       		.byte	0x7
 5294 1b6d 00000000 		.long	.LASF296
 5295 1b71 194A0000 		.long	0x4a19
 5296 1b75 7D1B0000 		.long	0x1b7d
 5297 1b79 881B0000 		.long	0x1b88
 5298 1b7d 02       		.uleb128 0x2
 5299 1b7e EC490000 		.long	0x49ec
 5300 1b82 01       		.uleb128 0x1
 5301 1b83 0F290000 		.long	0x290f
 5302 1b87 00       		.byte	0
 5303 1b88 04       		.uleb128 0x4
 5304 1b89 00000000 		.long	.LASF297
 5305 1b8d 04       		.byte	0x4
 5306 1b8e 9B05     		.value	0x59b
 5307 1b90 07       		.byte	0x7
 5308 1b91 00000000 		.long	.LASF298
 5309 1b95 194A0000 		.long	0x4a19
 5310 1b99 A11B0000 		.long	0x1ba1
 5311 1b9d AC1B0000 		.long	0x1bac
 5312 1ba1 02       		.uleb128 0x2
 5313 1ba2 EC490000 		.long	0x49ec
 5314 1ba6 01       		.uleb128 0x1
 5315 1ba7 0F4A0000 		.long	0x4a0f
 5316 1bab 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 214


 5317 1bac 04       		.uleb128 0x4
 5318 1bad 00000000 		.long	.LASF297
 5319 1bb1 04       		.byte	0x4
 5320 1bb2 AD05     		.value	0x5ad
 5321 1bb4 07       		.byte	0x7
 5322 1bb5 00000000 		.long	.LASF299
 5323 1bb9 194A0000 		.long	0x4a19
 5324 1bbd C51B0000 		.long	0x1bc5
 5325 1bc1 DA1B0000 		.long	0x1bda
 5326 1bc5 02       		.uleb128 0x2
 5327 1bc6 EC490000 		.long	0x49ec
 5328 1bca 01       		.uleb128 0x1
 5329 1bcb 0F4A0000 		.long	0x4a0f
 5330 1bcf 01       		.uleb128 0x1
 5331 1bd0 AC0F0000 		.long	0xfac
 5332 1bd4 01       		.uleb128 0x1
 5333 1bd5 AC0F0000 		.long	0xfac
 5334 1bd9 00       		.byte	0
 5335 1bda 04       		.uleb128 0x4
 5336 1bdb 00000000 		.long	.LASF297
 5337 1bdf 04       		.byte	0x4
 5338 1be0 BA05     		.value	0x5ba
 5339 1be2 07       		.byte	0x7
 5340 1be3 00000000 		.long	.LASF300
 5341 1be7 194A0000 		.long	0x4a19
 5342 1beb F31B0000 		.long	0x1bf3
 5343 1bef 031C0000 		.long	0x1c03
 5344 1bf3 02       		.uleb128 0x2
 5345 1bf4 EC490000 		.long	0x49ec
 5346 1bf8 01       		.uleb128 0x1
 5347 1bf9 BC020000 		.long	0x2bc
 5348 1bfd 01       		.uleb128 0x1
 5349 1bfe AC0F0000 		.long	0xfac
 5350 1c02 00       		.byte	0
 5351 1c03 04       		.uleb128 0x4
 5352 1c04 00000000 		.long	.LASF297
 5353 1c08 04       		.byte	0x4
 5354 1c09 C805     		.value	0x5c8
 5355 1c0b 07       		.byte	0x7
 5356 1c0c 00000000 		.long	.LASF301
 5357 1c10 194A0000 		.long	0x4a19
 5358 1c14 1C1C0000 		.long	0x1c1c
 5359 1c18 271C0000 		.long	0x1c27
 5360 1c1c 02       		.uleb128 0x2
 5361 1c1d EC490000 		.long	0x49ec
 5362 1c21 01       		.uleb128 0x1
 5363 1c22 BC020000 		.long	0x2bc
 5364 1c26 00       		.byte	0
 5365 1c27 04       		.uleb128 0x4
 5366 1c28 00000000 		.long	.LASF297
 5367 1c2c 04       		.byte	0x4
 5368 1c2d DA05     		.value	0x5da
 5369 1c2f 07       		.byte	0x7
 5370 1c30 00000000 		.long	.LASF302
 5371 1c34 194A0000 		.long	0x4a19
 5372 1c38 401C0000 		.long	0x1c40
 5373 1c3c 501C0000 		.long	0x1c50
GAS LISTING linobj/Ch02_03.s 			page 215


 5374 1c40 02       		.uleb128 0x2
 5375 1c41 EC490000 		.long	0x49ec
 5376 1c45 01       		.uleb128 0x1
 5377 1c46 AC0F0000 		.long	0xfac
 5378 1c4a 01       		.uleb128 0x1
 5379 1c4b E1000000 		.long	0xe1
 5380 1c4f 00       		.byte	0
 5381 1c50 04       		.uleb128 0x4
 5382 1c51 00000000 		.long	.LASF297
 5383 1c55 04       		.byte	0x4
 5384 1c56 E505     		.value	0x5e5
 5385 1c58 07       		.byte	0x7
 5386 1c59 00000000 		.long	.LASF303
 5387 1c5d 194A0000 		.long	0x4a19
 5388 1c61 691C0000 		.long	0x1c69
 5389 1c65 741C0000 		.long	0x1c74
 5390 1c69 02       		.uleb128 0x2
 5391 1c6a EC490000 		.long	0x49ec
 5392 1c6e 01       		.uleb128 0x1
 5393 1c6f 0F290000 		.long	0x290f
 5394 1c73 00       		.byte	0
 5395 1c74 16       		.uleb128 0x16
 5396 1c75 00000000 		.long	.LASF304
 5397 1c79 04       		.byte	0x4
 5398 1c7a 2406     		.value	0x624
 5399 1c7c 07       		.byte	0x7
 5400 1c7d 00000000 		.long	.LASF305
 5401 1c81 891C0000 		.long	0x1c89
 5402 1c85 941C0000 		.long	0x1c94
 5403 1c89 02       		.uleb128 0x2
 5404 1c8a EC490000 		.long	0x49ec
 5405 1c8e 01       		.uleb128 0x1
 5406 1c8f E1000000 		.long	0xe1
 5407 1c93 00       		.byte	0
 5408 1c94 04       		.uleb128 0x4
 5409 1c95 00000000 		.long	.LASF90
 5410 1c99 04       		.byte	0x4
 5411 1c9a 3406     		.value	0x634
 5412 1c9c 07       		.byte	0x7
 5413 1c9d 00000000 		.long	.LASF306
 5414 1ca1 194A0000 		.long	0x4a19
 5415 1ca5 AD1C0000 		.long	0x1cad
 5416 1ca9 B81C0000 		.long	0x1cb8
 5417 1cad 02       		.uleb128 0x2
 5418 1cae EC490000 		.long	0x49ec
 5419 1cb2 01       		.uleb128 0x1
 5420 1cb3 0F4A0000 		.long	0x4a0f
 5421 1cb7 00       		.byte	0
 5422 1cb8 04       		.uleb128 0x4
 5423 1cb9 00000000 		.long	.LASF90
 5424 1cbd 04       		.byte	0x4
 5425 1cbe 6206     		.value	0x662
 5426 1cc0 07       		.byte	0x7
 5427 1cc1 00000000 		.long	.LASF307
 5428 1cc5 194A0000 		.long	0x4a19
 5429 1cc9 D11C0000 		.long	0x1cd1
 5430 1ccd DC1C0000 		.long	0x1cdc
GAS LISTING linobj/Ch02_03.s 			page 216


 5431 1cd1 02       		.uleb128 0x2
 5432 1cd2 EC490000 		.long	0x49ec
 5433 1cd6 01       		.uleb128 0x1
 5434 1cd7 144A0000 		.long	0x4a14
 5435 1cdb 00       		.byte	0
 5436 1cdc 04       		.uleb128 0x4
 5437 1cdd 00000000 		.long	.LASF90
 5438 1ce1 04       		.byte	0x4
 5439 1ce2 7A06     		.value	0x67a
 5440 1ce4 07       		.byte	0x7
 5441 1ce5 00000000 		.long	.LASF308
 5442 1ce9 194A0000 		.long	0x4a19
 5443 1ced F51C0000 		.long	0x1cf5
 5444 1cf1 0A1D0000 		.long	0x1d0a
 5445 1cf5 02       		.uleb128 0x2
 5446 1cf6 EC490000 		.long	0x49ec
 5447 1cfa 01       		.uleb128 0x1
 5448 1cfb 0F4A0000 		.long	0x4a0f
 5449 1cff 01       		.uleb128 0x1
 5450 1d00 AC0F0000 		.long	0xfac
 5451 1d04 01       		.uleb128 0x1
 5452 1d05 AC0F0000 		.long	0xfac
 5453 1d09 00       		.byte	0
 5454 1d0a 04       		.uleb128 0x4
 5455 1d0b 00000000 		.long	.LASF90
 5456 1d0f 04       		.byte	0x4
 5457 1d10 8B06     		.value	0x68b
 5458 1d12 07       		.byte	0x7
 5459 1d13 00000000 		.long	.LASF309
 5460 1d17 194A0000 		.long	0x4a19
 5461 1d1b 231D0000 		.long	0x1d23
 5462 1d1f 331D0000 		.long	0x1d33
 5463 1d23 02       		.uleb128 0x2
 5464 1d24 EC490000 		.long	0x49ec
 5465 1d28 01       		.uleb128 0x1
 5466 1d29 BC020000 		.long	0x2bc
 5467 1d2d 01       		.uleb128 0x1
 5468 1d2e AC0F0000 		.long	0xfac
 5469 1d32 00       		.byte	0
 5470 1d33 04       		.uleb128 0x4
 5471 1d34 00000000 		.long	.LASF90
 5472 1d38 04       		.byte	0x4
 5473 1d39 9C06     		.value	0x69c
 5474 1d3b 07       		.byte	0x7
 5475 1d3c 00000000 		.long	.LASF310
 5476 1d40 194A0000 		.long	0x4a19
 5477 1d44 4C1D0000 		.long	0x1d4c
 5478 1d48 571D0000 		.long	0x1d57
 5479 1d4c 02       		.uleb128 0x2
 5480 1d4d EC490000 		.long	0x49ec
 5481 1d51 01       		.uleb128 0x1
 5482 1d52 BC020000 		.long	0x2bc
 5483 1d56 00       		.byte	0
 5484 1d57 04       		.uleb128 0x4
 5485 1d58 00000000 		.long	.LASF90
 5486 1d5c 04       		.byte	0x4
 5487 1d5d AE06     		.value	0x6ae
GAS LISTING linobj/Ch02_03.s 			page 217


 5488 1d5f 07       		.byte	0x7
 5489 1d60 00000000 		.long	.LASF311
 5490 1d64 194A0000 		.long	0x4a19
 5491 1d68 701D0000 		.long	0x1d70
 5492 1d6c 801D0000 		.long	0x1d80
 5493 1d70 02       		.uleb128 0x2
 5494 1d71 EC490000 		.long	0x49ec
 5495 1d75 01       		.uleb128 0x1
 5496 1d76 AC0F0000 		.long	0xfac
 5497 1d7a 01       		.uleb128 0x1
 5498 1d7b E1000000 		.long	0xe1
 5499 1d7f 00       		.byte	0
 5500 1d80 04       		.uleb128 0x4
 5501 1d81 00000000 		.long	.LASF90
 5502 1d85 04       		.byte	0x4
 5503 1d86 E106     		.value	0x6e1
 5504 1d88 07       		.byte	0x7
 5505 1d89 00000000 		.long	.LASF312
 5506 1d8d 194A0000 		.long	0x4a19
 5507 1d91 991D0000 		.long	0x1d99
 5508 1d95 A41D0000 		.long	0x1da4
 5509 1d99 02       		.uleb128 0x2
 5510 1d9a EC490000 		.long	0x49ec
 5511 1d9e 01       		.uleb128 0x1
 5512 1d9f 0F290000 		.long	0x290f
 5513 1da3 00       		.byte	0
 5514 1da4 04       		.uleb128 0x4
 5515 1da5 00000000 		.long	.LASF313
 5516 1da9 04       		.byte	0x4
 5517 1daa 2707     		.value	0x727
 5518 1dac 07       		.byte	0x7
 5519 1dad 00000000 		.long	.LASF314
 5520 1db1 3C130000 		.long	0x133c
 5521 1db5 BD1D0000 		.long	0x1dbd
 5522 1db9 D21D0000 		.long	0x1dd2
 5523 1dbd 02       		.uleb128 0x2
 5524 1dbe EC490000 		.long	0x49ec
 5525 1dc2 01       		.uleb128 0x1
 5526 1dc3 69130000 		.long	0x1369
 5527 1dc7 01       		.uleb128 0x1
 5528 1dc8 AC0F0000 		.long	0xfac
 5529 1dcc 01       		.uleb128 0x1
 5530 1dcd E1000000 		.long	0xe1
 5531 1dd1 00       		.byte	0
 5532 1dd2 04       		.uleb128 0x4
 5533 1dd3 00000000 		.long	.LASF313
 5534 1dd7 04       		.byte	0x4
 5535 1dd8 7707     		.value	0x777
 5536 1dda 07       		.byte	0x7
 5537 1ddb 00000000 		.long	.LASF315
 5538 1ddf 3C130000 		.long	0x133c
 5539 1de3 EB1D0000 		.long	0x1deb
 5540 1de7 FB1D0000 		.long	0x1dfb
 5541 1deb 02       		.uleb128 0x2
 5542 1dec EC490000 		.long	0x49ec
 5543 1df0 01       		.uleb128 0x1
 5544 1df1 69130000 		.long	0x1369
GAS LISTING linobj/Ch02_03.s 			page 218


 5545 1df5 01       		.uleb128 0x1
 5546 1df6 0F290000 		.long	0x290f
 5547 1dfa 00       		.byte	0
 5548 1dfb 04       		.uleb128 0x4
 5549 1dfc 00000000 		.long	.LASF313
 5550 1e00 04       		.byte	0x4
 5551 1e01 9307     		.value	0x793
 5552 1e03 07       		.byte	0x7
 5553 1e04 00000000 		.long	.LASF316
 5554 1e08 194A0000 		.long	0x4a19
 5555 1e0c 141E0000 		.long	0x1e14
 5556 1e10 241E0000 		.long	0x1e24
 5557 1e14 02       		.uleb128 0x2
 5558 1e15 EC490000 		.long	0x49ec
 5559 1e19 01       		.uleb128 0x1
 5560 1e1a AC0F0000 		.long	0xfac
 5561 1e1e 01       		.uleb128 0x1
 5562 1e1f 0F4A0000 		.long	0x4a0f
 5563 1e23 00       		.byte	0
 5564 1e24 04       		.uleb128 0x4
 5565 1e25 00000000 		.long	.LASF313
 5566 1e29 04       		.byte	0x4
 5567 1e2a AB07     		.value	0x7ab
 5568 1e2c 07       		.byte	0x7
 5569 1e2d 00000000 		.long	.LASF317
 5570 1e31 194A0000 		.long	0x4a19
 5571 1e35 3D1E0000 		.long	0x1e3d
 5572 1e39 571E0000 		.long	0x1e57
 5573 1e3d 02       		.uleb128 0x2
 5574 1e3e EC490000 		.long	0x49ec
 5575 1e42 01       		.uleb128 0x1
 5576 1e43 AC0F0000 		.long	0xfac
 5577 1e47 01       		.uleb128 0x1
 5578 1e48 0F4A0000 		.long	0x4a0f
 5579 1e4c 01       		.uleb128 0x1
 5580 1e4d AC0F0000 		.long	0xfac
 5581 1e51 01       		.uleb128 0x1
 5582 1e52 AC0F0000 		.long	0xfac
 5583 1e56 00       		.byte	0
 5584 1e57 04       		.uleb128 0x4
 5585 1e58 00000000 		.long	.LASF313
 5586 1e5c 04       		.byte	0x4
 5587 1e5d C307     		.value	0x7c3
 5588 1e5f 07       		.byte	0x7
 5589 1e60 00000000 		.long	.LASF318
 5590 1e64 194A0000 		.long	0x4a19
 5591 1e68 701E0000 		.long	0x1e70
 5592 1e6c 851E0000 		.long	0x1e85
 5593 1e70 02       		.uleb128 0x2
 5594 1e71 EC490000 		.long	0x49ec
 5595 1e75 01       		.uleb128 0x1
 5596 1e76 AC0F0000 		.long	0xfac
 5597 1e7a 01       		.uleb128 0x1
 5598 1e7b BC020000 		.long	0x2bc
 5599 1e7f 01       		.uleb128 0x1
 5600 1e80 AC0F0000 		.long	0xfac
 5601 1e84 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 219


 5602 1e85 04       		.uleb128 0x4
 5603 1e86 00000000 		.long	.LASF313
 5604 1e8a 04       		.byte	0x4
 5605 1e8b D707     		.value	0x7d7
 5606 1e8d 07       		.byte	0x7
 5607 1e8e 00000000 		.long	.LASF319
 5608 1e92 194A0000 		.long	0x4a19
 5609 1e96 9E1E0000 		.long	0x1e9e
 5610 1e9a AE1E0000 		.long	0x1eae
 5611 1e9e 02       		.uleb128 0x2
 5612 1e9f EC490000 		.long	0x49ec
 5613 1ea3 01       		.uleb128 0x1
 5614 1ea4 AC0F0000 		.long	0xfac
 5615 1ea8 01       		.uleb128 0x1
 5616 1ea9 BC020000 		.long	0x2bc
 5617 1ead 00       		.byte	0
 5618 1eae 04       		.uleb128 0x4
 5619 1eaf 00000000 		.long	.LASF313
 5620 1eb3 04       		.byte	0x4
 5621 1eb4 F007     		.value	0x7f0
 5622 1eb6 07       		.byte	0x7
 5623 1eb7 00000000 		.long	.LASF320
 5624 1ebb 194A0000 		.long	0x4a19
 5625 1ebf C71E0000 		.long	0x1ec7
 5626 1ec3 DC1E0000 		.long	0x1edc
 5627 1ec7 02       		.uleb128 0x2
 5628 1ec8 EC490000 		.long	0x49ec
 5629 1ecc 01       		.uleb128 0x1
 5630 1ecd AC0F0000 		.long	0xfac
 5631 1ed1 01       		.uleb128 0x1
 5632 1ed2 AC0F0000 		.long	0xfac
 5633 1ed6 01       		.uleb128 0x1
 5634 1ed7 E1000000 		.long	0xe1
 5635 1edb 00       		.byte	0
 5636 1edc 04       		.uleb128 0x4
 5637 1edd 00000000 		.long	.LASF313
 5638 1ee1 04       		.byte	0x4
 5639 1ee2 0308     		.value	0x803
 5640 1ee4 07       		.byte	0x7
 5641 1ee5 00000000 		.long	.LASF321
 5642 1ee9 3C130000 		.long	0x133c
 5643 1eed F51E0000 		.long	0x1ef5
 5644 1ef1 051F0000 		.long	0x1f05
 5645 1ef5 02       		.uleb128 0x2
 5646 1ef6 EC490000 		.long	0x49ec
 5647 1efa 01       		.uleb128 0x1
 5648 1efb 051F0000 		.long	0x1f05
 5649 1eff 01       		.uleb128 0x1
 5650 1f00 E1000000 		.long	0xe1
 5651 1f04 00       		.byte	0
 5652 1f05 17       		.uleb128 0x17
 5653 1f06 00000000 		.long	.LASF322
 5654 1f0a 04       		.byte	0x4
 5655 1f0b 7C       		.byte	0x7c
 5656 1f0c 1E       		.byte	0x1e
 5657 1f0d 69130000 		.long	0x1369
 5658 1f11 02       		.byte	0x2
GAS LISTING linobj/Ch02_03.s 			page 220


 5659 1f12 04       		.uleb128 0x4
 5660 1f13 00000000 		.long	.LASF323
 5661 1f17 04       		.byte	0x4
 5662 1f18 4208     		.value	0x842
 5663 1f1a 07       		.byte	0x7
 5664 1f1b 00000000 		.long	.LASF324
 5665 1f1f 194A0000 		.long	0x4a19
 5666 1f23 2B1F0000 		.long	0x1f2b
 5667 1f27 3B1F0000 		.long	0x1f3b
 5668 1f2b 02       		.uleb128 0x2
 5669 1f2c EC490000 		.long	0x49ec
 5670 1f30 01       		.uleb128 0x1
 5671 1f31 AC0F0000 		.long	0xfac
 5672 1f35 01       		.uleb128 0x1
 5673 1f36 AC0F0000 		.long	0xfac
 5674 1f3a 00       		.byte	0
 5675 1f3b 04       		.uleb128 0x4
 5676 1f3c 00000000 		.long	.LASF323
 5677 1f40 04       		.byte	0x4
 5678 1f41 5608     		.value	0x856
 5679 1f43 07       		.byte	0x7
 5680 1f44 00000000 		.long	.LASF325
 5681 1f48 3C130000 		.long	0x133c
 5682 1f4c 541F0000 		.long	0x1f54
 5683 1f50 5F1F0000 		.long	0x1f5f
 5684 1f54 02       		.uleb128 0x2
 5685 1f55 EC490000 		.long	0x49ec
 5686 1f59 01       		.uleb128 0x1
 5687 1f5a 051F0000 		.long	0x1f05
 5688 1f5e 00       		.byte	0
 5689 1f5f 04       		.uleb128 0x4
 5690 1f60 00000000 		.long	.LASF323
 5691 1f64 04       		.byte	0x4
 5692 1f65 6A08     		.value	0x86a
 5693 1f67 07       		.byte	0x7
 5694 1f68 00000000 		.long	.LASF326
 5695 1f6c 3C130000 		.long	0x133c
 5696 1f70 781F0000 		.long	0x1f78
 5697 1f74 881F0000 		.long	0x1f88
 5698 1f78 02       		.uleb128 0x2
 5699 1f79 EC490000 		.long	0x49ec
 5700 1f7d 01       		.uleb128 0x1
 5701 1f7e 051F0000 		.long	0x1f05
 5702 1f82 01       		.uleb128 0x1
 5703 1f83 051F0000 		.long	0x1f05
 5704 1f87 00       		.byte	0
 5705 1f88 16       		.uleb128 0x16
 5706 1f89 00000000 		.long	.LASF327
 5707 1f8d 04       		.byte	0x4
 5708 1f8e 7E08     		.value	0x87e
 5709 1f90 07       		.byte	0x7
 5710 1f91 00000000 		.long	.LASF328
 5711 1f95 9D1F0000 		.long	0x1f9d
 5712 1f99 A31F0000 		.long	0x1fa3
 5713 1f9d 02       		.uleb128 0x2
 5714 1f9e EC490000 		.long	0x49ec
 5715 1fa2 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 221


 5716 1fa3 04       		.uleb128 0x4
 5717 1fa4 00000000 		.long	.LASF329
 5718 1fa8 04       		.byte	0x4
 5719 1fa9 9808     		.value	0x898
 5720 1fab 07       		.byte	0x7
 5721 1fac 00000000 		.long	.LASF330
 5722 1fb0 194A0000 		.long	0x4a19
 5723 1fb4 BC1F0000 		.long	0x1fbc
 5724 1fb8 D11F0000 		.long	0x1fd1
 5725 1fbc 02       		.uleb128 0x2
 5726 1fbd EC490000 		.long	0x49ec
 5727 1fc1 01       		.uleb128 0x1
 5728 1fc2 AC0F0000 		.long	0xfac
 5729 1fc6 01       		.uleb128 0x1
 5730 1fc7 AC0F0000 		.long	0xfac
 5731 1fcb 01       		.uleb128 0x1
 5732 1fcc 0F4A0000 		.long	0x4a0f
 5733 1fd0 00       		.byte	0
 5734 1fd1 04       		.uleb128 0x4
 5735 1fd2 00000000 		.long	.LASF329
 5736 1fd6 04       		.byte	0x4
 5737 1fd7 AF08     		.value	0x8af
 5738 1fd9 07       		.byte	0x7
 5739 1fda 00000000 		.long	.LASF331
 5740 1fde 194A0000 		.long	0x4a19
 5741 1fe2 EA1F0000 		.long	0x1fea
 5742 1fe6 09200000 		.long	0x2009
 5743 1fea 02       		.uleb128 0x2
 5744 1feb EC490000 		.long	0x49ec
 5745 1fef 01       		.uleb128 0x1
 5746 1ff0 AC0F0000 		.long	0xfac
 5747 1ff4 01       		.uleb128 0x1
 5748 1ff5 AC0F0000 		.long	0xfac
 5749 1ff9 01       		.uleb128 0x1
 5750 1ffa 0F4A0000 		.long	0x4a0f
 5751 1ffe 01       		.uleb128 0x1
 5752 1fff AC0F0000 		.long	0xfac
 5753 2003 01       		.uleb128 0x1
 5754 2004 AC0F0000 		.long	0xfac
 5755 2008 00       		.byte	0
 5756 2009 04       		.uleb128 0x4
 5757 200a 00000000 		.long	.LASF329
 5758 200e 04       		.byte	0x4
 5759 200f C908     		.value	0x8c9
 5760 2011 07       		.byte	0x7
 5761 2012 00000000 		.long	.LASF332
 5762 2016 194A0000 		.long	0x4a19
 5763 201a 22200000 		.long	0x2022
 5764 201e 3C200000 		.long	0x203c
 5765 2022 02       		.uleb128 0x2
 5766 2023 EC490000 		.long	0x49ec
 5767 2027 01       		.uleb128 0x1
 5768 2028 AC0F0000 		.long	0xfac
 5769 202c 01       		.uleb128 0x1
 5770 202d AC0F0000 		.long	0xfac
 5771 2031 01       		.uleb128 0x1
 5772 2032 BC020000 		.long	0x2bc
GAS LISTING linobj/Ch02_03.s 			page 222


 5773 2036 01       		.uleb128 0x1
 5774 2037 AC0F0000 		.long	0xfac
 5775 203b 00       		.byte	0
 5776 203c 04       		.uleb128 0x4
 5777 203d 00000000 		.long	.LASF329
 5778 2041 04       		.byte	0x4
 5779 2042 E308     		.value	0x8e3
 5780 2044 07       		.byte	0x7
 5781 2045 00000000 		.long	.LASF333
 5782 2049 194A0000 		.long	0x4a19
 5783 204d 55200000 		.long	0x2055
 5784 2051 6A200000 		.long	0x206a
 5785 2055 02       		.uleb128 0x2
 5786 2056 EC490000 		.long	0x49ec
 5787 205a 01       		.uleb128 0x1
 5788 205b AC0F0000 		.long	0xfac
 5789 205f 01       		.uleb128 0x1
 5790 2060 AC0F0000 		.long	0xfac
 5791 2064 01       		.uleb128 0x1
 5792 2065 BC020000 		.long	0x2bc
 5793 2069 00       		.byte	0
 5794 206a 04       		.uleb128 0x4
 5795 206b 00000000 		.long	.LASF329
 5796 206f 04       		.byte	0x4
 5797 2070 FC08     		.value	0x8fc
 5798 2072 07       		.byte	0x7
 5799 2073 00000000 		.long	.LASF334
 5800 2077 194A0000 		.long	0x4a19
 5801 207b 83200000 		.long	0x2083
 5802 207f 9D200000 		.long	0x209d
 5803 2083 02       		.uleb128 0x2
 5804 2084 EC490000 		.long	0x49ec
 5805 2088 01       		.uleb128 0x1
 5806 2089 AC0F0000 		.long	0xfac
 5807 208d 01       		.uleb128 0x1
 5808 208e AC0F0000 		.long	0xfac
 5809 2092 01       		.uleb128 0x1
 5810 2093 AC0F0000 		.long	0xfac
 5811 2097 01       		.uleb128 0x1
 5812 2098 E1000000 		.long	0xe1
 5813 209c 00       		.byte	0
 5814 209d 04       		.uleb128 0x4
 5815 209e 00000000 		.long	.LASF329
 5816 20a2 04       		.byte	0x4
 5817 20a3 0F09     		.value	0x90f
 5818 20a5 07       		.byte	0x7
 5819 20a6 00000000 		.long	.LASF335
 5820 20aa 194A0000 		.long	0x4a19
 5821 20ae B6200000 		.long	0x20b6
 5822 20b2 CB200000 		.long	0x20cb
 5823 20b6 02       		.uleb128 0x2
 5824 20b7 EC490000 		.long	0x49ec
 5825 20bb 01       		.uleb128 0x1
 5826 20bc 051F0000 		.long	0x1f05
 5827 20c0 01       		.uleb128 0x1
 5828 20c1 051F0000 		.long	0x1f05
 5829 20c5 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 223


 5830 20c6 0F4A0000 		.long	0x4a0f
 5831 20ca 00       		.byte	0
 5832 20cb 04       		.uleb128 0x4
 5833 20cc 00000000 		.long	.LASF329
 5834 20d0 04       		.byte	0x4
 5835 20d1 2409     		.value	0x924
 5836 20d3 07       		.byte	0x7
 5837 20d4 00000000 		.long	.LASF336
 5838 20d8 194A0000 		.long	0x4a19
 5839 20dc E4200000 		.long	0x20e4
 5840 20e0 FE200000 		.long	0x20fe
 5841 20e4 02       		.uleb128 0x2
 5842 20e5 EC490000 		.long	0x49ec
 5843 20e9 01       		.uleb128 0x1
 5844 20ea 051F0000 		.long	0x1f05
 5845 20ee 01       		.uleb128 0x1
 5846 20ef 051F0000 		.long	0x1f05
 5847 20f3 01       		.uleb128 0x1
 5848 20f4 BC020000 		.long	0x2bc
 5849 20f8 01       		.uleb128 0x1
 5850 20f9 AC0F0000 		.long	0xfac
 5851 20fd 00       		.byte	0
 5852 20fe 04       		.uleb128 0x4
 5853 20ff 00000000 		.long	.LASF329
 5854 2103 04       		.byte	0x4
 5855 2104 3B09     		.value	0x93b
 5856 2106 07       		.byte	0x7
 5857 2107 00000000 		.long	.LASF337
 5858 210b 194A0000 		.long	0x4a19
 5859 210f 17210000 		.long	0x2117
 5860 2113 2C210000 		.long	0x212c
 5861 2117 02       		.uleb128 0x2
 5862 2118 EC490000 		.long	0x49ec
 5863 211c 01       		.uleb128 0x1
 5864 211d 051F0000 		.long	0x1f05
 5865 2121 01       		.uleb128 0x1
 5866 2122 051F0000 		.long	0x1f05
 5867 2126 01       		.uleb128 0x1
 5868 2127 BC020000 		.long	0x2bc
 5869 212b 00       		.byte	0
 5870 212c 04       		.uleb128 0x4
 5871 212d 00000000 		.long	.LASF329
 5872 2131 04       		.byte	0x4
 5873 2132 5109     		.value	0x951
 5874 2134 07       		.byte	0x7
 5875 2135 00000000 		.long	.LASF338
 5876 2139 194A0000 		.long	0x4a19
 5877 213d 45210000 		.long	0x2145
 5878 2141 5F210000 		.long	0x215f
 5879 2145 02       		.uleb128 0x2
 5880 2146 EC490000 		.long	0x49ec
 5881 214a 01       		.uleb128 0x1
 5882 214b 051F0000 		.long	0x1f05
 5883 214f 01       		.uleb128 0x1
 5884 2150 051F0000 		.long	0x1f05
 5885 2154 01       		.uleb128 0x1
 5886 2155 AC0F0000 		.long	0xfac
GAS LISTING linobj/Ch02_03.s 			page 224


 5887 2159 01       		.uleb128 0x1
 5888 215a E1000000 		.long	0xe1
 5889 215e 00       		.byte	0
 5890 215f 04       		.uleb128 0x4
 5891 2160 00000000 		.long	.LASF329
 5892 2164 04       		.byte	0x4
 5893 2165 8C09     		.value	0x98c
 5894 2167 07       		.byte	0x7
 5895 2168 00000000 		.long	.LASF339
 5896 216c 194A0000 		.long	0x4a19
 5897 2170 78210000 		.long	0x2178
 5898 2174 92210000 		.long	0x2192
 5899 2178 02       		.uleb128 0x2
 5900 2179 EC490000 		.long	0x49ec
 5901 217d 01       		.uleb128 0x1
 5902 217e 051F0000 		.long	0x1f05
 5903 2182 01       		.uleb128 0x1
 5904 2183 051F0000 		.long	0x1f05
 5905 2187 01       		.uleb128 0x1
 5906 2188 CB330000 		.long	0x33cb
 5907 218c 01       		.uleb128 0x1
 5908 218d CB330000 		.long	0x33cb
 5909 2191 00       		.byte	0
 5910 2192 04       		.uleb128 0x4
 5911 2193 00000000 		.long	.LASF329
 5912 2197 04       		.byte	0x4
 5913 2198 9809     		.value	0x998
 5914 219a 07       		.byte	0x7
 5915 219b 00000000 		.long	.LASF340
 5916 219f 194A0000 		.long	0x4a19
 5917 21a3 AB210000 		.long	0x21ab
 5918 21a7 C5210000 		.long	0x21c5
 5919 21ab 02       		.uleb128 0x2
 5920 21ac EC490000 		.long	0x49ec
 5921 21b0 01       		.uleb128 0x1
 5922 21b1 051F0000 		.long	0x1f05
 5923 21b5 01       		.uleb128 0x1
 5924 21b6 051F0000 		.long	0x1f05
 5925 21ba 01       		.uleb128 0x1
 5926 21bb BC020000 		.long	0x2bc
 5927 21bf 01       		.uleb128 0x1
 5928 21c0 BC020000 		.long	0x2bc
 5929 21c4 00       		.byte	0
 5930 21c5 04       		.uleb128 0x4
 5931 21c6 00000000 		.long	.LASF329
 5932 21ca 04       		.byte	0x4
 5933 21cb A409     		.value	0x9a4
 5934 21cd 07       		.byte	0x7
 5935 21ce 00000000 		.long	.LASF341
 5936 21d2 194A0000 		.long	0x4a19
 5937 21d6 DE210000 		.long	0x21de
 5938 21da F8210000 		.long	0x21f8
 5939 21de 02       		.uleb128 0x2
 5940 21df EC490000 		.long	0x49ec
 5941 21e3 01       		.uleb128 0x1
 5942 21e4 051F0000 		.long	0x1f05
 5943 21e8 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 225


 5944 21e9 051F0000 		.long	0x1f05
 5945 21ed 01       		.uleb128 0x1
 5946 21ee 3C130000 		.long	0x133c
 5947 21f2 01       		.uleb128 0x1
 5948 21f3 3C130000 		.long	0x133c
 5949 21f7 00       		.byte	0
 5950 21f8 04       		.uleb128 0x4
 5951 21f9 00000000 		.long	.LASF329
 5952 21fd 04       		.byte	0x4
 5953 21fe B009     		.value	0x9b0
 5954 2200 07       		.byte	0x7
 5955 2201 00000000 		.long	.LASF342
 5956 2205 194A0000 		.long	0x4a19
 5957 2209 11220000 		.long	0x2211
 5958 220d 2B220000 		.long	0x222b
 5959 2211 02       		.uleb128 0x2
 5960 2212 EC490000 		.long	0x49ec
 5961 2216 01       		.uleb128 0x1
 5962 2217 051F0000 		.long	0x1f05
 5963 221b 01       		.uleb128 0x1
 5964 221c 051F0000 		.long	0x1f05
 5965 2220 01       		.uleb128 0x1
 5966 2221 69130000 		.long	0x1369
 5967 2225 01       		.uleb128 0x1
 5968 2226 69130000 		.long	0x1369
 5969 222a 00       		.byte	0
 5970 222b 04       		.uleb128 0x4
 5971 222c 00000000 		.long	.LASF329
 5972 2230 04       		.byte	0x4
 5973 2231 CA09     		.value	0x9ca
 5974 2233 15       		.byte	0x15
 5975 2234 00000000 		.long	.LASF343
 5976 2238 194A0000 		.long	0x4a19
 5977 223c 44220000 		.long	0x2244
 5978 2240 59220000 		.long	0x2259
 5979 2244 02       		.uleb128 0x2
 5980 2245 EC490000 		.long	0x49ec
 5981 2249 01       		.uleb128 0x1
 5982 224a 69130000 		.long	0x1369
 5983 224e 01       		.uleb128 0x1
 5984 224f 69130000 		.long	0x1369
 5985 2253 01       		.uleb128 0x1
 5986 2254 0F290000 		.long	0x290f
 5987 2258 00       		.byte	0
 5988 2259 29       		.uleb128 0x29
 5989 225a 00000000 		.long	.LASF344
 5990 225e 1A0A     		.value	0xa1a
 5991 2260 00000000 		.long	.LASF345
 5992 2264 194A0000 		.long	0x4a19
 5993 2268 70220000 		.long	0x2270
 5994 226c 8A220000 		.long	0x228a
 5995 2270 02       		.uleb128 0x2
 5996 2271 EC490000 		.long	0x49ec
 5997 2275 01       		.uleb128 0x1
 5998 2276 AC0F0000 		.long	0xfac
 5999 227a 01       		.uleb128 0x1
 6000 227b AC0F0000 		.long	0xfac
GAS LISTING linobj/Ch02_03.s 			page 226


 6001 227f 01       		.uleb128 0x1
 6002 2280 AC0F0000 		.long	0xfac
 6003 2284 01       		.uleb128 0x1
 6004 2285 E1000000 		.long	0xe1
 6005 2289 00       		.byte	0
 6006 228a 2B       		.uleb128 0x2b
 6007 228b 00000000 		.long	.LASF346
 6008 228f 1E0A     		.value	0xa1e
 6009 2291 00000000 		.long	.LASF347
 6010 2295 9D220000 		.long	0x229d
 6011 2299 BC220000 		.long	0x22bc
 6012 229d 02       		.uleb128 0x2
 6013 229e EC490000 		.long	0x49ec
 6014 22a2 01       		.uleb128 0x1
 6015 22a3 690F0000 		.long	0xf69
 6016 22a7 01       		.uleb128 0x1
 6017 22a8 AC0F0000 		.long	0xfac
 6018 22ac 01       		.uleb128 0x1
 6019 22ad BC020000 		.long	0x2bc
 6020 22b1 01       		.uleb128 0x1
 6021 22b2 AC0F0000 		.long	0xfac
 6022 22b6 01       		.uleb128 0x1
 6023 22b7 AC0F0000 		.long	0xfac
 6024 22bb 00       		.byte	0
 6025 22bc 29       		.uleb128 0x29
 6026 22bd 00000000 		.long	.LASF348
 6027 22c1 230A     		.value	0xa23
 6028 22c3 00000000 		.long	.LASF349
 6029 22c7 194A0000 		.long	0x4a19
 6030 22cb D3220000 		.long	0x22d3
 6031 22cf ED220000 		.long	0x22ed
 6032 22d3 02       		.uleb128 0x2
 6033 22d4 EC490000 		.long	0x49ec
 6034 22d8 01       		.uleb128 0x1
 6035 22d9 AC0F0000 		.long	0xfac
 6036 22dd 01       		.uleb128 0x1
 6037 22de AC0F0000 		.long	0xfac
 6038 22e2 01       		.uleb128 0x1
 6039 22e3 BC020000 		.long	0x2bc
 6040 22e7 01       		.uleb128 0x1
 6041 22e8 AC0F0000 		.long	0xfac
 6042 22ec 00       		.byte	0
 6043 22ed 29       		.uleb128 0x29
 6044 22ee 00000000 		.long	.LASF350
 6045 22f2 280A     		.value	0xa28
 6046 22f4 00000000 		.long	.LASF351
 6047 22f8 194A0000 		.long	0x4a19
 6048 22fc 04230000 		.long	0x2304
 6049 2300 14230000 		.long	0x2314
 6050 2304 02       		.uleb128 0x2
 6051 2305 EC490000 		.long	0x49ec
 6052 2309 01       		.uleb128 0x1
 6053 230a BC020000 		.long	0x2bc
 6054 230e 01       		.uleb128 0x1
 6055 230f AC0F0000 		.long	0xfac
 6056 2313 00       		.byte	0
 6057 2314 04       		.uleb128 0x4
GAS LISTING linobj/Ch02_03.s 			page 227


 6058 2315 00000000 		.long	.LASF88
 6059 2319 04       		.byte	0x4
 6060 231a 3A0A     		.value	0xa3a
 6061 231c 07       		.byte	0x7
 6062 231d 00000000 		.long	.LASF352
 6063 2321 AC0F0000 		.long	0xfac
 6064 2325 2D230000 		.long	0x232d
 6065 2329 42230000 		.long	0x2342
 6066 232d 02       		.uleb128 0x2
 6067 232e F6490000 		.long	0x49f6
 6068 2332 01       		.uleb128 0x1
 6069 2333 CB330000 		.long	0x33cb
 6070 2337 01       		.uleb128 0x1
 6071 2338 AC0F0000 		.long	0xfac
 6072 233c 01       		.uleb128 0x1
 6073 233d AC0F0000 		.long	0xfac
 6074 2341 00       		.byte	0
 6075 2342 16       		.uleb128 0x16
 6076 2343 00000000 		.long	.LASF68
 6077 2347 04       		.byte	0x4
 6078 2348 450A     		.value	0xa45
 6079 234a 07       		.byte	0x7
 6080 234b 00000000 		.long	.LASF353
 6081 234f 57230000 		.long	0x2357
 6082 2353 62230000 		.long	0x2362
 6083 2357 02       		.uleb128 0x2
 6084 2358 EC490000 		.long	0x49ec
 6085 235c 01       		.uleb128 0x1
 6086 235d 194A0000 		.long	0x4a19
 6087 2361 00       		.byte	0
 6088 2362 04       		.uleb128 0x4
 6089 2363 00000000 		.long	.LASF354
 6090 2367 04       		.byte	0x4
 6091 2368 500A     		.value	0xa50
 6092 236a 07       		.byte	0x7
 6093 236b 00000000 		.long	.LASF355
 6094 236f BC020000 		.long	0x2bc
 6095 2373 7B230000 		.long	0x237b
 6096 2377 81230000 		.long	0x2381
 6097 237b 02       		.uleb128 0x2
 6098 237c F6490000 		.long	0x49f6
 6099 2380 00       		.byte	0
 6100 2381 04       		.uleb128 0x4
 6101 2382 00000000 		.long	.LASF356
 6102 2386 04       		.byte	0x4
 6103 2387 5D0A     		.value	0xa5d
 6104 2389 07       		.byte	0x7
 6105 238a 00000000 		.long	.LASF357
 6106 238e BC020000 		.long	0x2bc
 6107 2392 9A230000 		.long	0x239a
 6108 2396 A0230000 		.long	0x23a0
 6109 239a 02       		.uleb128 0x2
 6110 239b F6490000 		.long	0x49f6
 6111 239f 00       		.byte	0
 6112 23a0 04       		.uleb128 0x4
 6113 23a1 00000000 		.long	.LASF358
 6114 23a5 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 228


 6115 23a6 720A     		.value	0xa72
 6116 23a8 07       		.byte	0x7
 6117 23a9 00000000 		.long	.LASF359
 6118 23ad A2110000 		.long	0x11a2
 6119 23b1 B9230000 		.long	0x23b9
 6120 23b5 BF230000 		.long	0x23bf
 6121 23b9 02       		.uleb128 0x2
 6122 23ba F6490000 		.long	0x49f6
 6123 23be 00       		.byte	0
 6124 23bf 04       		.uleb128 0x4
 6125 23c0 00000000 		.long	.LASF84
 6126 23c4 04       		.byte	0x4
 6127 23c5 830A     		.value	0xa83
 6128 23c7 07       		.byte	0x7
 6129 23c8 00000000 		.long	.LASF360
 6130 23cc AC0F0000 		.long	0xfac
 6131 23d0 D8230000 		.long	0x23d8
 6132 23d4 ED230000 		.long	0x23ed
 6133 23d8 02       		.uleb128 0x2
 6134 23d9 F6490000 		.long	0x49f6
 6135 23dd 01       		.uleb128 0x1
 6136 23de BC020000 		.long	0x2bc
 6137 23e2 01       		.uleb128 0x1
 6138 23e3 AC0F0000 		.long	0xfac
 6139 23e7 01       		.uleb128 0x1
 6140 23e8 AC0F0000 		.long	0xfac
 6141 23ec 00       		.byte	0
 6142 23ed 04       		.uleb128 0x4
 6143 23ee 00000000 		.long	.LASF84
 6144 23f2 04       		.byte	0x4
 6145 23f3 920A     		.value	0xa92
 6146 23f5 07       		.byte	0x7
 6147 23f6 00000000 		.long	.LASF361
 6148 23fa AC0F0000 		.long	0xfac
 6149 23fe 06240000 		.long	0x2406
 6150 2402 16240000 		.long	0x2416
 6151 2406 02       		.uleb128 0x2
 6152 2407 F6490000 		.long	0x49f6
 6153 240b 01       		.uleb128 0x1
 6154 240c 0F4A0000 		.long	0x4a0f
 6155 2410 01       		.uleb128 0x1
 6156 2411 AC0F0000 		.long	0xfac
 6157 2415 00       		.byte	0
 6158 2416 04       		.uleb128 0x4
 6159 2417 00000000 		.long	.LASF84
 6160 241b 04       		.byte	0x4
 6161 241c B40A     		.value	0xab4
 6162 241e 07       		.byte	0x7
 6163 241f 00000000 		.long	.LASF362
 6164 2423 AC0F0000 		.long	0xfac
 6165 2427 2F240000 		.long	0x242f
 6166 242b 3F240000 		.long	0x243f
 6167 242f 02       		.uleb128 0x2
 6168 2430 F6490000 		.long	0x49f6
 6169 2434 01       		.uleb128 0x1
 6170 2435 BC020000 		.long	0x2bc
 6171 2439 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 229


 6172 243a AC0F0000 		.long	0xfac
 6173 243e 00       		.byte	0
 6174 243f 04       		.uleb128 0x4
 6175 2440 00000000 		.long	.LASF84
 6176 2444 04       		.byte	0x4
 6177 2445 C60A     		.value	0xac6
 6178 2447 07       		.byte	0x7
 6179 2448 00000000 		.long	.LASF363
 6180 244c AC0F0000 		.long	0xfac
 6181 2450 58240000 		.long	0x2458
 6182 2454 68240000 		.long	0x2468
 6183 2458 02       		.uleb128 0x2
 6184 2459 F6490000 		.long	0x49f6
 6185 245d 01       		.uleb128 0x1
 6186 245e E1000000 		.long	0xe1
 6187 2462 01       		.uleb128 0x1
 6188 2463 AC0F0000 		.long	0xfac
 6189 2467 00       		.byte	0
 6190 2468 04       		.uleb128 0x4
 6191 2469 00000000 		.long	.LASF364
 6192 246d 04       		.byte	0x4
 6193 246e D40A     		.value	0xad4
 6194 2470 07       		.byte	0x7
 6195 2471 00000000 		.long	.LASF365
 6196 2475 AC0F0000 		.long	0xfac
 6197 2479 81240000 		.long	0x2481
 6198 247d 91240000 		.long	0x2491
 6199 2481 02       		.uleb128 0x2
 6200 2482 F6490000 		.long	0x49f6
 6201 2486 01       		.uleb128 0x1
 6202 2487 0F4A0000 		.long	0x4a0f
 6203 248b 01       		.uleb128 0x1
 6204 248c AC0F0000 		.long	0xfac
 6205 2490 00       		.byte	0
 6206 2491 04       		.uleb128 0x4
 6207 2492 00000000 		.long	.LASF364
 6208 2496 04       		.byte	0x4
 6209 2497 F80A     		.value	0xaf8
 6210 2499 07       		.byte	0x7
 6211 249a 00000000 		.long	.LASF366
 6212 249e AC0F0000 		.long	0xfac
 6213 24a2 AA240000 		.long	0x24aa
 6214 24a6 BF240000 		.long	0x24bf
 6215 24aa 02       		.uleb128 0x2
 6216 24ab F6490000 		.long	0x49f6
 6217 24af 01       		.uleb128 0x1
 6218 24b0 BC020000 		.long	0x2bc
 6219 24b4 01       		.uleb128 0x1
 6220 24b5 AC0F0000 		.long	0xfac
 6221 24b9 01       		.uleb128 0x1
 6222 24ba AC0F0000 		.long	0xfac
 6223 24be 00       		.byte	0
 6224 24bf 04       		.uleb128 0x4
 6225 24c0 00000000 		.long	.LASF364
 6226 24c4 04       		.byte	0x4
 6227 24c5 070B     		.value	0xb07
 6228 24c7 07       		.byte	0x7
GAS LISTING linobj/Ch02_03.s 			page 230


 6229 24c8 00000000 		.long	.LASF367
 6230 24cc AC0F0000 		.long	0xfac
 6231 24d0 D8240000 		.long	0x24d8
 6232 24d4 E8240000 		.long	0x24e8
 6233 24d8 02       		.uleb128 0x2
 6234 24d9 F6490000 		.long	0x49f6
 6235 24dd 01       		.uleb128 0x1
 6236 24de BC020000 		.long	0x2bc
 6237 24e2 01       		.uleb128 0x1
 6238 24e3 AC0F0000 		.long	0xfac
 6239 24e7 00       		.byte	0
 6240 24e8 04       		.uleb128 0x4
 6241 24e9 00000000 		.long	.LASF364
 6242 24ed 04       		.byte	0x4
 6243 24ee 190B     		.value	0xb19
 6244 24f0 07       		.byte	0x7
 6245 24f1 00000000 		.long	.LASF368
 6246 24f5 AC0F0000 		.long	0xfac
 6247 24f9 01250000 		.long	0x2501
 6248 24fd 11250000 		.long	0x2511
 6249 2501 02       		.uleb128 0x2
 6250 2502 F6490000 		.long	0x49f6
 6251 2506 01       		.uleb128 0x1
 6252 2507 E1000000 		.long	0xe1
 6253 250b 01       		.uleb128 0x1
 6254 250c AC0F0000 		.long	0xfac
 6255 2510 00       		.byte	0
 6256 2511 04       		.uleb128 0x4
 6257 2512 00000000 		.long	.LASF369
 6258 2516 04       		.byte	0x4
 6259 2517 280B     		.value	0xb28
 6260 2519 07       		.byte	0x7
 6261 251a 00000000 		.long	.LASF370
 6262 251e AC0F0000 		.long	0xfac
 6263 2522 2A250000 		.long	0x252a
 6264 2526 3A250000 		.long	0x253a
 6265 252a 02       		.uleb128 0x2
 6266 252b F6490000 		.long	0x49f6
 6267 252f 01       		.uleb128 0x1
 6268 2530 0F4A0000 		.long	0x4a0f
 6269 2534 01       		.uleb128 0x1
 6270 2535 AC0F0000 		.long	0xfac
 6271 2539 00       		.byte	0
 6272 253a 04       		.uleb128 0x4
 6273 253b 00000000 		.long	.LASF369
 6274 253f 04       		.byte	0x4
 6275 2540 4D0B     		.value	0xb4d
 6276 2542 07       		.byte	0x7
 6277 2543 00000000 		.long	.LASF371
 6278 2547 AC0F0000 		.long	0xfac
 6279 254b 53250000 		.long	0x2553
 6280 254f 68250000 		.long	0x2568
 6281 2553 02       		.uleb128 0x2
 6282 2554 F6490000 		.long	0x49f6
 6283 2558 01       		.uleb128 0x1
 6284 2559 BC020000 		.long	0x2bc
 6285 255d 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 231


 6286 255e AC0F0000 		.long	0xfac
 6287 2562 01       		.uleb128 0x1
 6288 2563 AC0F0000 		.long	0xfac
 6289 2567 00       		.byte	0
 6290 2568 04       		.uleb128 0x4
 6291 2569 00000000 		.long	.LASF369
 6292 256d 04       		.byte	0x4
 6293 256e 5C0B     		.value	0xb5c
 6294 2570 07       		.byte	0x7
 6295 2571 00000000 		.long	.LASF372
 6296 2575 AC0F0000 		.long	0xfac
 6297 2579 81250000 		.long	0x2581
 6298 257d 91250000 		.long	0x2591
 6299 2581 02       		.uleb128 0x2
 6300 2582 F6490000 		.long	0x49f6
 6301 2586 01       		.uleb128 0x1
 6302 2587 BC020000 		.long	0x2bc
 6303 258b 01       		.uleb128 0x1
 6304 258c AC0F0000 		.long	0xfac
 6305 2590 00       		.byte	0
 6306 2591 04       		.uleb128 0x4
 6307 2592 00000000 		.long	.LASF369
 6308 2596 04       		.byte	0x4
 6309 2597 710B     		.value	0xb71
 6310 2599 07       		.byte	0x7
 6311 259a 00000000 		.long	.LASF373
 6312 259e AC0F0000 		.long	0xfac
 6313 25a2 AA250000 		.long	0x25aa
 6314 25a6 BA250000 		.long	0x25ba
 6315 25aa 02       		.uleb128 0x2
 6316 25ab F6490000 		.long	0x49f6
 6317 25af 01       		.uleb128 0x1
 6318 25b0 E1000000 		.long	0xe1
 6319 25b4 01       		.uleb128 0x1
 6320 25b5 AC0F0000 		.long	0xfac
 6321 25b9 00       		.byte	0
 6322 25ba 04       		.uleb128 0x4
 6323 25bb 00000000 		.long	.LASF374
 6324 25bf 04       		.byte	0x4
 6325 25c0 810B     		.value	0xb81
 6326 25c2 07       		.byte	0x7
 6327 25c3 00000000 		.long	.LASF375
 6328 25c7 AC0F0000 		.long	0xfac
 6329 25cb D3250000 		.long	0x25d3
 6330 25cf E3250000 		.long	0x25e3
 6331 25d3 02       		.uleb128 0x2
 6332 25d4 F6490000 		.long	0x49f6
 6333 25d8 01       		.uleb128 0x1
 6334 25d9 0F4A0000 		.long	0x4a0f
 6335 25dd 01       		.uleb128 0x1
 6336 25de AC0F0000 		.long	0xfac
 6337 25e2 00       		.byte	0
 6338 25e3 04       		.uleb128 0x4
 6339 25e4 00000000 		.long	.LASF374
 6340 25e8 04       		.byte	0x4
 6341 25e9 A60B     		.value	0xba6
 6342 25eb 07       		.byte	0x7
GAS LISTING linobj/Ch02_03.s 			page 232


 6343 25ec 00000000 		.long	.LASF376
 6344 25f0 AC0F0000 		.long	0xfac
 6345 25f4 FC250000 		.long	0x25fc
 6346 25f8 11260000 		.long	0x2611
 6347 25fc 02       		.uleb128 0x2
 6348 25fd F6490000 		.long	0x49f6
 6349 2601 01       		.uleb128 0x1
 6350 2602 BC020000 		.long	0x2bc
 6351 2606 01       		.uleb128 0x1
 6352 2607 AC0F0000 		.long	0xfac
 6353 260b 01       		.uleb128 0x1
 6354 260c AC0F0000 		.long	0xfac
 6355 2610 00       		.byte	0
 6356 2611 04       		.uleb128 0x4
 6357 2612 00000000 		.long	.LASF374
 6358 2616 04       		.byte	0x4
 6359 2617 B50B     		.value	0xbb5
 6360 2619 07       		.byte	0x7
 6361 261a 00000000 		.long	.LASF377
 6362 261e AC0F0000 		.long	0xfac
 6363 2622 2A260000 		.long	0x262a
 6364 2626 3A260000 		.long	0x263a
 6365 262a 02       		.uleb128 0x2
 6366 262b F6490000 		.long	0x49f6
 6367 262f 01       		.uleb128 0x1
 6368 2630 BC020000 		.long	0x2bc
 6369 2634 01       		.uleb128 0x1
 6370 2635 AC0F0000 		.long	0xfac
 6371 2639 00       		.byte	0
 6372 263a 04       		.uleb128 0x4
 6373 263b 00000000 		.long	.LASF374
 6374 263f 04       		.byte	0x4
 6375 2640 CA0B     		.value	0xbca
 6376 2642 07       		.byte	0x7
 6377 2643 00000000 		.long	.LASF378
 6378 2647 AC0F0000 		.long	0xfac
 6379 264b 53260000 		.long	0x2653
 6380 264f 63260000 		.long	0x2663
 6381 2653 02       		.uleb128 0x2
 6382 2654 F6490000 		.long	0x49f6
 6383 2658 01       		.uleb128 0x1
 6384 2659 E1000000 		.long	0xe1
 6385 265d 01       		.uleb128 0x1
 6386 265e AC0F0000 		.long	0xfac
 6387 2662 00       		.byte	0
 6388 2663 04       		.uleb128 0x4
 6389 2664 00000000 		.long	.LASF379
 6390 2668 04       		.byte	0x4
 6391 2669 D90B     		.value	0xbd9
 6392 266b 07       		.byte	0x7
 6393 266c 00000000 		.long	.LASF380
 6394 2670 AC0F0000 		.long	0xfac
 6395 2674 7C260000 		.long	0x267c
 6396 2678 8C260000 		.long	0x268c
 6397 267c 02       		.uleb128 0x2
 6398 267d F6490000 		.long	0x49f6
 6399 2681 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 233


 6400 2682 0F4A0000 		.long	0x4a0f
 6401 2686 01       		.uleb128 0x1
 6402 2687 AC0F0000 		.long	0xfac
 6403 268b 00       		.byte	0
 6404 268c 04       		.uleb128 0x4
 6405 268d 00000000 		.long	.LASF379
 6406 2691 04       		.byte	0x4
 6407 2692 FE0B     		.value	0xbfe
 6408 2694 07       		.byte	0x7
 6409 2695 00000000 		.long	.LASF381
 6410 2699 AC0F0000 		.long	0xfac
 6411 269d A5260000 		.long	0x26a5
 6412 26a1 BA260000 		.long	0x26ba
 6413 26a5 02       		.uleb128 0x2
 6414 26a6 F6490000 		.long	0x49f6
 6415 26aa 01       		.uleb128 0x1
 6416 26ab BC020000 		.long	0x2bc
 6417 26af 01       		.uleb128 0x1
 6418 26b0 AC0F0000 		.long	0xfac
 6419 26b4 01       		.uleb128 0x1
 6420 26b5 AC0F0000 		.long	0xfac
 6421 26b9 00       		.byte	0
 6422 26ba 04       		.uleb128 0x4
 6423 26bb 00000000 		.long	.LASF379
 6424 26bf 04       		.byte	0x4
 6425 26c0 0D0C     		.value	0xc0d
 6426 26c2 07       		.byte	0x7
 6427 26c3 00000000 		.long	.LASF382
 6428 26c7 AC0F0000 		.long	0xfac
 6429 26cb D3260000 		.long	0x26d3
 6430 26cf E3260000 		.long	0x26e3
 6431 26d3 02       		.uleb128 0x2
 6432 26d4 F6490000 		.long	0x49f6
 6433 26d8 01       		.uleb128 0x1
 6434 26d9 BC020000 		.long	0x2bc
 6435 26dd 01       		.uleb128 0x1
 6436 26de AC0F0000 		.long	0xfac
 6437 26e2 00       		.byte	0
 6438 26e3 04       		.uleb128 0x4
 6439 26e4 00000000 		.long	.LASF379
 6440 26e8 04       		.byte	0x4
 6441 26e9 200C     		.value	0xc20
 6442 26eb 07       		.byte	0x7
 6443 26ec 00000000 		.long	.LASF383
 6444 26f0 AC0F0000 		.long	0xfac
 6445 26f4 FC260000 		.long	0x26fc
 6446 26f8 0C270000 		.long	0x270c
 6447 26fc 02       		.uleb128 0x2
 6448 26fd F6490000 		.long	0x49f6
 6449 2701 01       		.uleb128 0x1
 6450 2702 E1000000 		.long	0xe1
 6451 2706 01       		.uleb128 0x1
 6452 2707 AC0F0000 		.long	0xfac
 6453 270b 00       		.byte	0
 6454 270c 04       		.uleb128 0x4
 6455 270d 00000000 		.long	.LASF384
 6456 2711 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 234


 6457 2712 300C     		.value	0xc30
 6458 2714 07       		.byte	0x7
 6459 2715 00000000 		.long	.LASF385
 6460 2719 AC0F0000 		.long	0xfac
 6461 271d 25270000 		.long	0x2725
 6462 2721 35270000 		.long	0x2735
 6463 2725 02       		.uleb128 0x2
 6464 2726 F6490000 		.long	0x49f6
 6465 272a 01       		.uleb128 0x1
 6466 272b 0F4A0000 		.long	0x4a0f
 6467 272f 01       		.uleb128 0x1
 6468 2730 AC0F0000 		.long	0xfac
 6469 2734 00       		.byte	0
 6470 2735 04       		.uleb128 0x4
 6471 2736 00000000 		.long	.LASF384
 6472 273a 04       		.byte	0x4
 6473 273b 550C     		.value	0xc55
 6474 273d 07       		.byte	0x7
 6475 273e 00000000 		.long	.LASF386
 6476 2742 AC0F0000 		.long	0xfac
 6477 2746 4E270000 		.long	0x274e
 6478 274a 63270000 		.long	0x2763
 6479 274e 02       		.uleb128 0x2
 6480 274f F6490000 		.long	0x49f6
 6481 2753 01       		.uleb128 0x1
 6482 2754 BC020000 		.long	0x2bc
 6483 2758 01       		.uleb128 0x1
 6484 2759 AC0F0000 		.long	0xfac
 6485 275d 01       		.uleb128 0x1
 6486 275e AC0F0000 		.long	0xfac
 6487 2762 00       		.byte	0
 6488 2763 04       		.uleb128 0x4
 6489 2764 00000000 		.long	.LASF384
 6490 2768 04       		.byte	0x4
 6491 2769 640C     		.value	0xc64
 6492 276b 07       		.byte	0x7
 6493 276c 00000000 		.long	.LASF387
 6494 2770 AC0F0000 		.long	0xfac
 6495 2774 7C270000 		.long	0x277c
 6496 2778 8C270000 		.long	0x278c
 6497 277c 02       		.uleb128 0x2
 6498 277d F6490000 		.long	0x49f6
 6499 2781 01       		.uleb128 0x1
 6500 2782 BC020000 		.long	0x2bc
 6501 2786 01       		.uleb128 0x1
 6502 2787 AC0F0000 		.long	0xfac
 6503 278b 00       		.byte	0
 6504 278c 04       		.uleb128 0x4
 6505 278d 00000000 		.long	.LASF384
 6506 2791 04       		.byte	0x4
 6507 2792 770C     		.value	0xc77
 6508 2794 07       		.byte	0x7
 6509 2795 00000000 		.long	.LASF388
 6510 2799 AC0F0000 		.long	0xfac
 6511 279d A5270000 		.long	0x27a5
 6512 27a1 B5270000 		.long	0x27b5
 6513 27a5 02       		.uleb128 0x2
GAS LISTING linobj/Ch02_03.s 			page 235


 6514 27a6 F6490000 		.long	0x49f6
 6515 27aa 01       		.uleb128 0x1
 6516 27ab E1000000 		.long	0xe1
 6517 27af 01       		.uleb128 0x1
 6518 27b0 AC0F0000 		.long	0xfac
 6519 27b4 00       		.byte	0
 6520 27b5 04       		.uleb128 0x4
 6521 27b6 00000000 		.long	.LASF389
 6522 27ba 04       		.byte	0x4
 6523 27bb 880C     		.value	0xc88
 6524 27bd 07       		.byte	0x7
 6525 27be 00000000 		.long	.LASF390
 6526 27c2 DD0E0000 		.long	0xedd
 6527 27c6 CE270000 		.long	0x27ce
 6528 27ca DE270000 		.long	0x27de
 6529 27ce 02       		.uleb128 0x2
 6530 27cf F6490000 		.long	0x49f6
 6531 27d3 01       		.uleb128 0x1
 6532 27d4 AC0F0000 		.long	0xfac
 6533 27d8 01       		.uleb128 0x1
 6534 27d9 AC0F0000 		.long	0xfac
 6535 27dd 00       		.byte	0
 6536 27de 04       		.uleb128 0x4
 6537 27df 00000000 		.long	.LASF80
 6538 27e3 04       		.byte	0x4
 6539 27e4 9C0C     		.value	0xc9c
 6540 27e6 07       		.byte	0x7
 6541 27e7 00000000 		.long	.LASF391
 6542 27eb ED000000 		.long	0xed
 6543 27ef F7270000 		.long	0x27f7
 6544 27f3 02280000 		.long	0x2802
 6545 27f7 02       		.uleb128 0x2
 6546 27f8 F6490000 		.long	0x49f6
 6547 27fc 01       		.uleb128 0x1
 6548 27fd 0F4A0000 		.long	0x4a0f
 6549 2801 00       		.byte	0
 6550 2802 04       		.uleb128 0x4
 6551 2803 00000000 		.long	.LASF80
 6552 2807 04       		.byte	0x4
 6553 2808 FD0C     		.value	0xcfd
 6554 280a 07       		.byte	0x7
 6555 280b 00000000 		.long	.LASF392
 6556 280f ED000000 		.long	0xed
 6557 2813 1B280000 		.long	0x281b
 6558 2817 30280000 		.long	0x2830
 6559 281b 02       		.uleb128 0x2
 6560 281c F6490000 		.long	0x49f6
 6561 2820 01       		.uleb128 0x1
 6562 2821 AC0F0000 		.long	0xfac
 6563 2825 01       		.uleb128 0x1
 6564 2826 AC0F0000 		.long	0xfac
 6565 282a 01       		.uleb128 0x1
 6566 282b 0F4A0000 		.long	0x4a0f
 6567 282f 00       		.byte	0
 6568 2830 04       		.uleb128 0x4
 6569 2831 00000000 		.long	.LASF80
 6570 2835 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 236


 6571 2836 220D     		.value	0xd22
 6572 2838 07       		.byte	0x7
 6573 2839 00000000 		.long	.LASF393
 6574 283d ED000000 		.long	0xed
 6575 2841 49280000 		.long	0x2849
 6576 2845 68280000 		.long	0x2868
 6577 2849 02       		.uleb128 0x2
 6578 284a F6490000 		.long	0x49f6
 6579 284e 01       		.uleb128 0x1
 6580 284f AC0F0000 		.long	0xfac
 6581 2853 01       		.uleb128 0x1
 6582 2854 AC0F0000 		.long	0xfac
 6583 2858 01       		.uleb128 0x1
 6584 2859 0F4A0000 		.long	0x4a0f
 6585 285d 01       		.uleb128 0x1
 6586 285e AC0F0000 		.long	0xfac
 6587 2862 01       		.uleb128 0x1
 6588 2863 AC0F0000 		.long	0xfac
 6589 2867 00       		.byte	0
 6590 2868 04       		.uleb128 0x4
 6591 2869 00000000 		.long	.LASF80
 6592 286d 04       		.byte	0x4
 6593 286e 410D     		.value	0xd41
 6594 2870 07       		.byte	0x7
 6595 2871 00000000 		.long	.LASF394
 6596 2875 ED000000 		.long	0xed
 6597 2879 81280000 		.long	0x2881
 6598 287d 8C280000 		.long	0x288c
 6599 2881 02       		.uleb128 0x2
 6600 2882 F6490000 		.long	0x49f6
 6601 2886 01       		.uleb128 0x1
 6602 2887 BC020000 		.long	0x2bc
 6603 288b 00       		.byte	0
 6604 288c 04       		.uleb128 0x4
 6605 288d 00000000 		.long	.LASF80
 6606 2891 04       		.byte	0x4
 6607 2892 640D     		.value	0xd64
 6608 2894 07       		.byte	0x7
 6609 2895 00000000 		.long	.LASF395
 6610 2899 ED000000 		.long	0xed
 6611 289d A5280000 		.long	0x28a5
 6612 28a1 BA280000 		.long	0x28ba
 6613 28a5 02       		.uleb128 0x2
 6614 28a6 F6490000 		.long	0x49f6
 6615 28aa 01       		.uleb128 0x1
 6616 28ab AC0F0000 		.long	0xfac
 6617 28af 01       		.uleb128 0x1
 6618 28b0 AC0F0000 		.long	0xfac
 6619 28b4 01       		.uleb128 0x1
 6620 28b5 BC020000 		.long	0x2bc
 6621 28b9 00       		.byte	0
 6622 28ba 04       		.uleb128 0x4
 6623 28bb 00000000 		.long	.LASF80
 6624 28bf 04       		.byte	0x4
 6625 28c0 8B0D     		.value	0xd8b
 6626 28c2 07       		.byte	0x7
 6627 28c3 00000000 		.long	.LASF396
GAS LISTING linobj/Ch02_03.s 			page 237


 6628 28c7 ED000000 		.long	0xed
 6629 28cb D3280000 		.long	0x28d3
 6630 28cf ED280000 		.long	0x28ed
 6631 28d3 02       		.uleb128 0x2
 6632 28d4 F6490000 		.long	0x49f6
 6633 28d8 01       		.uleb128 0x1
 6634 28d9 AC0F0000 		.long	0xfac
 6635 28dd 01       		.uleb128 0x1
 6636 28de AC0F0000 		.long	0xfac
 6637 28e2 01       		.uleb128 0x1
 6638 28e3 BC020000 		.long	0x2bc
 6639 28e7 01       		.uleb128 0x1
 6640 28e8 AC0F0000 		.long	0xfac
 6641 28ec 00       		.byte	0
 6642 28ed 11       		.uleb128 0x11
 6643 28ee 00000000 		.long	.LASF127
 6644 28f2 E1000000 		.long	0xe1
 6645 28f6 3F       		.uleb128 0x3f
 6646 28f7 00000000 		.long	.LASF397
 6647 28fb 6B070000 		.long	0x76b
 6648 28ff 3F       		.uleb128 0x3f
 6649 2900 00000000 		.long	.LASF398
 6650 2904 1E0B0000 		.long	0xb1e
 6651 2908 00       		.byte	0
 6652 2909 0E       		.uleb128 0xe
 6653 290a DD0E0000 		.long	0xedd
 6654 290e 00       		.byte	0
 6655 290f 38       		.uleb128 0x38
 6656 2910 00000000 		.long	.LASF399
 6657 2914 10       		.byte	0x10
 6658 2915 1B       		.byte	0x1b
 6659 2916 2D       		.byte	0x2d
 6660 2917 FF290000 		.long	0x29ff
 6661 291b 17       		.uleb128 0x17
 6662 291c 00000000 		.long	.LASF208
 6663 2920 1B       		.byte	0x1b
 6664 2921 34       		.byte	0x34
 6665 2922 19       		.byte	0x19
 6666 2923 BC020000 		.long	0x2bc
 6667 2927 01       		.byte	0x1
 6668 2928 08       		.uleb128 0x8
 6669 2929 00000000 		.long	.LASF400
 6670 292d 1B       		.byte	0x1b
 6671 292e 38       		.byte	0x38
 6672 292f 10       		.byte	0x10
 6673 2930 1B290000 		.long	0x291b
 6674 2934 00       		.byte	0
 6675 2935 17       		.uleb128 0x17
 6676 2936 00000000 		.long	.LASF120
 6677 293a 1B       		.byte	0x1b
 6678 293b 33       		.byte	0x33
 6679 293c 16       		.byte	0x16
 6680 293d 25050000 		.long	0x525
 6681 2941 01       		.byte	0x1
 6682 2942 08       		.uleb128 0x8
 6683 2943 00000000 		.long	.LASF401
 6684 2947 1B       		.byte	0x1b
GAS LISTING linobj/Ch02_03.s 			page 238


 6685 2948 39       		.byte	0x39
 6686 2949 11       		.byte	0x11
 6687 294a 35290000 		.long	0x2935
 6688 294e 08       		.byte	0x8
 6689 294f 31       		.uleb128 0x31
 6690 2950 00000000 		.long	.LASF402
 6691 2954 1B       		.byte	0x1b
 6692 2955 3C       		.byte	0x3c
 6693 2956 11       		.byte	0x11
 6694 2957 00000000 		.long	.LASF403
 6695 295b 63290000 		.long	0x2963
 6696 295f 73290000 		.long	0x2973
 6697 2963 02       		.uleb128 0x2
 6698 2964 1E4A0000 		.long	0x4a1e
 6699 2968 01       		.uleb128 0x1
 6700 2969 73290000 		.long	0x2973
 6701 296d 01       		.uleb128 0x1
 6702 296e 35290000 		.long	0x2935
 6703 2972 00       		.byte	0
 6704 2973 17       		.uleb128 0x17
 6705 2974 00000000 		.long	.LASF210
 6706 2978 1B       		.byte	0x1b
 6707 2979 35       		.byte	0x35
 6708 297a 19       		.byte	0x19
 6709 297b BC020000 		.long	0x2bc
 6710 297f 01       		.byte	0x1
 6711 2980 1D       		.uleb128 0x1d
 6712 2981 00000000 		.long	.LASF402
 6713 2985 1B       		.byte	0x1b
 6714 2986 40       		.byte	0x40
 6715 2987 11       		.byte	0x11
 6716 2988 00000000 		.long	.LASF404
 6717 298c 94290000 		.long	0x2994
 6718 2990 9A290000 		.long	0x299a
 6719 2994 02       		.uleb128 0x2
 6720 2995 1E4A0000 		.long	0x4a1e
 6721 2999 00       		.byte	0
 6722 299a 1E       		.uleb128 0x1e
 6723 299b 00000000 		.long	.LASF263
 6724 299f 1B       		.byte	0x1b
 6725 29a0 45       		.byte	0x45
 6726 29a1 07       		.byte	0x7
 6727 29a2 00000000 		.long	.LASF405
 6728 29a6 35290000 		.long	0x2935
 6729 29aa 01       		.byte	0x1
 6730 29ab B3290000 		.long	0x29b3
 6731 29af B9290000 		.long	0x29b9
 6732 29b3 02       		.uleb128 0x2
 6733 29b4 234A0000 		.long	0x4a23
 6734 29b8 00       		.byte	0
 6735 29b9 1E       		.uleb128 0x1e
 6736 29ba 00000000 		.long	.LASF242
 6737 29be 1B       		.byte	0x1b
 6738 29bf 49       		.byte	0x49
 6739 29c0 07       		.byte	0x7
 6740 29c1 00000000 		.long	.LASF406
 6741 29c5 73290000 		.long	0x2973
GAS LISTING linobj/Ch02_03.s 			page 239


 6742 29c9 01       		.byte	0x1
 6743 29ca D2290000 		.long	0x29d2
 6744 29ce D8290000 		.long	0x29d8
 6745 29d2 02       		.uleb128 0x2
 6746 29d3 234A0000 		.long	0x4a23
 6747 29d7 00       		.byte	0
 6748 29d8 57       		.uleb128 0x57
 6749 29d9 656E6400 		.string	"end"
 6750 29dd 1B       		.byte	0x1b
 6751 29de 4D       		.byte	0x4d
 6752 29df 07       		.byte	0x7
 6753 29e0 00000000 		.long	.LASF430
 6754 29e4 73290000 		.long	0x2973
 6755 29e8 F0290000 		.long	0x29f0
 6756 29ec F6290000 		.long	0x29f6
 6757 29f0 02       		.uleb128 0x2
 6758 29f1 234A0000 		.long	0x4a23
 6759 29f5 00       		.byte	0
 6760 29f6 45       		.uleb128 0x45
 6761 29f7 5F4500   		.string	"_E"
 6762 29fa E1000000 		.long	0xe1
 6763 29fe 00       		.byte	0
 6764 29ff 0E       		.uleb128 0xe
 6765 2a00 0F290000 		.long	0x290f
 6766 2a04 44       		.uleb128 0x44
 6767 2a05 00000000 		.long	.LASF408
 6768 2a09 44       		.uleb128 0x44
 6769 2a0a 00000000 		.long	.LASF409
 6770 2a0e 25       		.uleb128 0x25
 6771 2a0f 00000000 		.long	.LASF410
 6772 2a13 01       		.byte	0x1
 6773 2a14 1C       		.byte	0x1c
 6774 2a15 DD       		.byte	0xdd
 6775 2a16 0C       		.byte	0xc
 6776 2a17 402A0000 		.long	0x2a40
 6777 2a1b 07       		.uleb128 0x7
 6778 2a1c 00000000 		.long	.LASF411
 6779 2a20 1C       		.byte	0x1c
 6780 2a21 E1       		.byte	0xe1
 6781 2a22 19       		.byte	0x19
 6782 2a23 68090000 		.long	0x968
 6783 2a27 07       		.uleb128 0x7
 6784 2a28 00000000 		.long	.LASF113
 6785 2a2c 1C       		.byte	0x1c
 6786 2a2d E2       		.byte	0xe2
 6787 2a2e 1A       		.byte	0x1a
 6788 2a2f BC020000 		.long	0x2bc
 6789 2a33 07       		.uleb128 0x7
 6790 2a34 00000000 		.long	.LASF114
 6791 2a38 1C       		.byte	0x1c
 6792 2a39 E3       		.byte	0xe3
 6793 2a3a 1A       		.byte	0x1a
 6794 2a3b 69420000 		.long	0x4269
 6795 2a3f 00       		.byte	0
 6796 2a40 07       		.uleb128 0x7
 6797 2a41 00000000 		.long	.LASF412
 6798 2a45 1D       		.byte	0x1d
GAS LISTING linobj/Ch02_03.s 			page 240


 6799 2a46 4D       		.byte	0x4d
 6800 2a47 1E       		.byte	0x1e
 6801 2a48 DD0E0000 		.long	0xedd
 6802 2a4c 72       		.uleb128 0x72
 6803 2a4d 5F563200 		.string	"_V2"
 6804 2a51 43       		.byte	0x43
 6805 2a52 52       		.byte	0x52
 6806 2a53 12       		.byte	0x12
 6807 2a54 73       		.uleb128 0x73
 6808 2a55 00000000 		.long	.LASF877
 6809 2a59 05       		.byte	0x5
 6810 2a5a 04       		.byte	0x4
 6811 2a5b ED000000 		.long	0xed
 6812 2a5f 07       		.byte	0x7
 6813 2a60 A8       		.byte	0xa8
 6814 2a61 08       		.byte	0x8
 6815 2a62 9B2A0000 		.long	0x2a9b
 6816 2a66 39       		.uleb128 0x39
 6817 2a67 00000000 		.long	.LASF414
 6818 2a6b 00       		.byte	0
 6819 2a6c 39       		.uleb128 0x39
 6820 2a6d 00000000 		.long	.LASF415
 6821 2a71 01       		.byte	0x1
 6822 2a72 39       		.uleb128 0x39
 6823 2a73 00000000 		.long	.LASF416
 6824 2a77 02       		.byte	0x2
 6825 2a78 39       		.uleb128 0x39
 6826 2a79 00000000 		.long	.LASF417
 6827 2a7d 04       		.byte	0x4
 6828 2a7e 58       		.uleb128 0x58
 6829 2a7f 00000000 		.long	.LASF418
 6830 2a83 00000100 		.long	0x10000
 6831 2a87 58       		.uleb128 0x58
 6832 2a88 00000000 		.long	.LASF419
 6833 2a8c FFFFFF7F 		.long	0x7fffffff
 6834 2a90 74       		.uleb128 0x74
 6835 2a91 00000000 		.long	.LASF420
 6836 2a95 80808080 		.sleb128 -2147483648
 6836      78
 6837 2a9a 00       		.byte	0
 6838 2a9b 47       		.uleb128 0x47
 6839 2a9c 00000000 		.long	.LASF425
 6840 2aa0 F22A0000 		.long	0x2af2
 6841 2aa4 33       		.uleb128 0x33
 6842 2aa5 00000000 		.long	.LASF421
 6843 2aa9 07       		.byte	0x7
 6844 2aaa BA01     		.value	0x1ba
 6845 2aac 1A       		.byte	0x1a
 6846 2aad 542A0000 		.long	0x2a54
 6847 2ab1 04       		.uleb128 0x4
 6848 2ab2 00000000 		.long	.LASF422
 6849 2ab6 07       		.byte	0x7
 6850 2ab7 1003     		.value	0x310
 6851 2ab9 05       		.byte	0x5
 6852 2aba 00000000 		.long	.LASF423
 6853 2abe 932F0000 		.long	0x2f93
 6854 2ac2 CA2A0000 		.long	0x2aca
GAS LISTING linobj/Ch02_03.s 			page 241


 6855 2ac6 D52A0000 		.long	0x2ad5
 6856 2aca 02       		.uleb128 0x2
 6857 2acb EA730000 		.long	0x73ea
 6858 2acf 01       		.uleb128 0x1
 6859 2ad0 932F0000 		.long	0x2f93
 6860 2ad4 00       		.byte	0
 6861 2ad5 75       		.uleb128 0x75
 6862 2ad6 00000000 		.long	.LASF422
 6863 2ada 07       		.byte	0x7
 6864 2adb 0703     		.value	0x307
 6865 2add 05       		.byte	0x5
 6866 2ade 00000000 		.long	.LASF424
 6867 2ae2 932F0000 		.long	0x2f93
 6868 2ae6 01       		.byte	0x1
 6869 2ae7 EB2A0000 		.long	0x2aeb
 6870 2aeb 02       		.uleb128 0x2
 6871 2aec 27740000 		.long	0x7427
 6872 2af0 00       		.byte	0
 6873 2af1 00       		.byte	0
 6874 2af2 0E       		.uleb128 0xe
 6875 2af3 9B2A0000 		.long	0x2a9b
 6876 2af7 03       		.uleb128 0x3
 6877 2af8 1E       		.byte	0x1e
 6878 2af9 52       		.byte	0x52
 6879 2afa 0B       		.byte	0xb
 6880 2afb 344A0000 		.long	0x4a34
 6881 2aff 03       		.uleb128 0x3
 6882 2b00 1E       		.byte	0x1e
 6883 2b01 53       		.byte	0x53
 6884 2b02 0B       		.byte	0xb
 6885 2b03 284A0000 		.long	0x4a28
 6886 2b07 03       		.uleb128 0x3
 6887 2b08 1E       		.byte	0x1e
 6888 2b09 54       		.byte	0x54
 6889 2b0a 0B       		.byte	0xb
 6890 2b0b 7B000000 		.long	0x7b
 6891 2b0f 03       		.uleb128 0x3
 6892 2b10 1E       		.byte	0x1e
 6893 2b11 5C       		.byte	0x5c
 6894 2b12 0B       		.byte	0xb
 6895 2b13 454A0000 		.long	0x4a45
 6896 2b17 03       		.uleb128 0x3
 6897 2b18 1E       		.byte	0x1e
 6898 2b19 65       		.byte	0x65
 6899 2b1a 0B       		.byte	0xb
 6900 2b1b 604A0000 		.long	0x4a60
 6901 2b1f 03       		.uleb128 0x3
 6902 2b20 1E       		.byte	0x1e
 6903 2b21 68       		.byte	0x68
 6904 2b22 0B       		.byte	0xb
 6905 2b23 7B4A0000 		.long	0x4a7b
 6906 2b27 03       		.uleb128 0x3
 6907 2b28 1E       		.byte	0x1e
 6908 2b29 69       		.byte	0x69
 6909 2b2a 0B       		.byte	0xb
 6910 2b2b 914A0000 		.long	0x4a91
 6911 2b2f 47       		.uleb128 0x47
GAS LISTING linobj/Ch02_03.s 			page 242


 6912 2b30 00000000 		.long	.LASF426
 6913 2b34 722C0000 		.long	0x2c72
 6914 2b38 1E       		.uleb128 0x1e
 6915 2b39 00000000 		.long	.LASF427
 6916 2b3d 1F       		.byte	0x1f
 6917 2b3e 3F       		.byte	0x3f
 6918 2b3f 07       		.byte	0x7
 6919 2b40 00000000 		.long	.LASF428
 6920 2b44 A74A0000 		.long	0x4aa7
 6921 2b48 02       		.byte	0x2
 6922 2b49 5A2B0000 		.long	0x2b5a
 6923 2b4d 652B0000 		.long	0x2b65
 6924 2b51 11       		.uleb128 0x11
 6925 2b52 00000000 		.long	.LASF429
 6926 2b56 74360000 		.long	0x3674
 6927 2b5a 02       		.uleb128 0x2
 6928 2b5b 904F0000 		.long	0x4f90
 6929 2b5f 01       		.uleb128 0x1
 6930 2b60 74360000 		.long	0x3674
 6931 2b64 00       		.byte	0
 6932 2b65 57       		.uleb128 0x57
 6933 2b66 70757400 		.string	"put"
 6934 2b6a 1F       		.byte	0x1f
 6935 2b6b 99       		.byte	0x99
 6936 2b6c 05       		.byte	0x5
 6937 2b6d 00000000 		.long	.LASF431
 6938 2b71 A74A0000 		.long	0x4aa7
 6939 2b75 7D2B0000 		.long	0x2b7d
 6940 2b79 882B0000 		.long	0x2b88
 6941 2b7d 02       		.uleb128 0x2
 6942 2b7e 904F0000 		.long	0x4f90
 6943 2b82 01       		.uleb128 0x1
 6944 2b83 882B0000 		.long	0x2b88
 6945 2b87 00       		.byte	0
 6946 2b88 17       		.uleb128 0x17
 6947 2b89 00000000 		.long	.LASF77
 6948 2b8d 05       		.byte	0x5
 6949 2b8e 46       		.byte	0x46
 6950 2b8f 16       		.byte	0x16
 6951 2b90 E1000000 		.long	0xe1
 6952 2b94 01       		.byte	0x1
 6953 2b95 1E       		.uleb128 0x1e
 6954 2b96 00000000 		.long	.LASF432
 6955 2b9a 1F       		.byte	0x1f
 6956 2b9b 3F       		.byte	0x3f
 6957 2b9c 07       		.byte	0x7
 6958 2b9d 00000000 		.long	.LASF433
 6959 2ba1 A74A0000 		.long	0x4aa7
 6960 2ba5 02       		.byte	0x2
 6961 2ba6 B72B0000 		.long	0x2bb7
 6962 2baa C22B0000 		.long	0x2bc2
 6963 2bae 11       		.uleb128 0x11
 6964 2baf 00000000 		.long	.LASF429
 6965 2bb3 36000000 		.long	0x36
 6966 2bb7 02       		.uleb128 0x2
 6967 2bb8 904F0000 		.long	0x4f90
 6968 2bbc 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 243


 6969 2bbd 36000000 		.long	0x36
 6970 2bc1 00       		.byte	0
 6971 2bc2 1E       		.uleb128 0x1e
 6972 2bc3 00000000 		.long	.LASF434
 6973 2bc7 1F       		.byte	0x1f
 6974 2bc8 6E       		.byte	0x6e
 6975 2bc9 05       		.byte	0x5
 6976 2bca 00000000 		.long	.LASF435
 6977 2bce A74A0000 		.long	0x4aa7
 6978 2bd2 01       		.byte	0x1
 6979 2bd3 DB2B0000 		.long	0x2bdb
 6980 2bd7 E62B0000 		.long	0x2be6
 6981 2bdb 02       		.uleb128 0x2
 6982 2bdc 904F0000 		.long	0x4f90
 6983 2be0 01       		.uleb128 0x1
 6984 2be1 ED000000 		.long	0xed
 6985 2be5 00       		.byte	0
 6986 2be6 1E       		.uleb128 0x1e
 6987 2be7 00000000 		.long	.LASF434
 6988 2beb 1F       		.byte	0x1f
 6989 2bec 60       		.byte	0x60
 6990 2bed 05       		.byte	0x5
 6991 2bee 00000000 		.long	.LASF436
 6992 2bf2 A74A0000 		.long	0x4aa7
 6993 2bf6 01       		.byte	0x1
 6994 2bf7 FF2B0000 		.long	0x2bff
 6995 2bfb 0A2C0000 		.long	0x2c0a
 6996 2bff 02       		.uleb128 0x2
 6997 2c00 904F0000 		.long	0x4f90
 6998 2c04 01       		.uleb128 0x1
 6999 2c05 5D3F0000 		.long	0x3f5d
 7000 2c09 00       		.byte	0
 7001 2c0a 17       		.uleb128 0x17
 7002 2c0b 00000000 		.long	.LASF437
 7003 2c0f 05       		.byte	0x5
 7004 2c10 4F       		.byte	0x4f
 7005 2c11 2E       		.byte	0x2e
 7006 2c12 2F2B0000 		.long	0x2b2f
 7007 2c16 01       		.byte	0x1
 7008 2c17 1E       		.uleb128 0x1e
 7009 2c18 00000000 		.long	.LASF434
 7010 2c1c 05       		.byte	0x5
 7011 2c1d AE       		.byte	0xae
 7012 2c1e 07       		.byte	0x7
 7013 2c1f 00000000 		.long	.LASF438
 7014 2c23 F6520000 		.long	0x52f6
 7015 2c27 01       		.byte	0x1
 7016 2c28 302C0000 		.long	0x2c30
 7017 2c2c 3B2C0000 		.long	0x2c3b
 7018 2c30 02       		.uleb128 0x2
 7019 2c31 904F0000 		.long	0x4f90
 7020 2c35 01       		.uleb128 0x1
 7021 2c36 74360000 		.long	0x3674
 7022 2c3a 00       		.byte	0
 7023 2c3b 1E       		.uleb128 0x1e
 7024 2c3c 00000000 		.long	.LASF434
 7025 2c40 05       		.byte	0x5
GAS LISTING linobj/Ch02_03.s 			page 244


 7026 2c41 B2       		.byte	0xb2
 7027 2c42 07       		.byte	0x7
 7028 2c43 00000000 		.long	.LASF439
 7029 2c47 F6520000 		.long	0x52f6
 7030 2c4b 01       		.byte	0x1
 7031 2c4c 542C0000 		.long	0x2c54
 7032 2c50 5F2C0000 		.long	0x2c5f
 7033 2c54 02       		.uleb128 0x2
 7034 2c55 904F0000 		.long	0x4f90
 7035 2c59 01       		.uleb128 0x1
 7036 2c5a 36000000 		.long	0x36
 7037 2c5e 00       		.byte	0
 7038 2c5f 11       		.uleb128 0x11
 7039 2c60 00000000 		.long	.LASF127
 7040 2c64 E1000000 		.long	0xe1
 7041 2c68 3F       		.uleb128 0x3f
 7042 2c69 00000000 		.long	.LASF397
 7043 2c6d 6B070000 		.long	0x76b
 7044 2c71 00       		.byte	0
 7045 2c72 07       		.uleb128 0x7
 7046 2c73 00000000 		.long	.LASF440
 7047 2c77 20       		.byte	0x20
 7048 2c78 8F       		.byte	0x8f
 7049 2c79 1F       		.byte	0x1f
 7050 2c7a 2F2B0000 		.long	0x2b2f
 7051 2c7e 76       		.uleb128 0x76
 7052 2c7f 00000000 		.long	.LASF442
 7053 2c83 21       		.byte	0x21
 7054 2c84 3F       		.byte	0x3f
 7055 2c85 12       		.byte	0x12
 7056 2c86 00000000 		.long	.LASF878
 7057 2c8a 722C0000 		.long	0x2c72
 7058 2c8e 03       		.uleb128 0x3
 7059 2c8f 22       		.byte	0x22
 7060 2c90 3C       		.byte	0x3c
 7061 2c91 0B       		.byte	0xb
 7062 2c92 39420000 		.long	0x4239
 7063 2c96 03       		.uleb128 0x3
 7064 2c97 22       		.byte	0x22
 7065 2c98 3D       		.byte	0x3d
 7066 2c99 0B       		.byte	0xb
 7067 2c9a 28420000 		.long	0x4228
 7068 2c9e 03       		.uleb128 0x3
 7069 2c9f 22       		.byte	0x22
 7070 2ca0 3E       		.byte	0x3e
 7071 2ca1 0B       		.byte	0xb
 7072 2ca2 87340000 		.long	0x3487
 7073 2ca6 03       		.uleb128 0x3
 7074 2ca7 22       		.byte	0x22
 7075 2ca8 40       		.byte	0x40
 7076 2ca9 0B       		.byte	0xb
 7077 2caa AC4A0000 		.long	0x4aac
 7078 2cae 03       		.uleb128 0x3
 7079 2caf 22       		.byte	0x22
 7080 2cb0 41       		.byte	0x41
 7081 2cb1 0B       		.byte	0xb
 7082 2cb2 B84A0000 		.long	0x4ab8
GAS LISTING linobj/Ch02_03.s 			page 245


 7083 2cb6 03       		.uleb128 0x3
 7084 2cb7 22       		.byte	0x22
 7085 2cb8 42       		.byte	0x42
 7086 2cb9 0B       		.byte	0xb
 7087 2cba D34A0000 		.long	0x4ad3
 7088 2cbe 03       		.uleb128 0x3
 7089 2cbf 22       		.byte	0x22
 7090 2cc0 43       		.byte	0x43
 7091 2cc1 0B       		.byte	0xb
 7092 2cc2 EE4A0000 		.long	0x4aee
 7093 2cc6 03       		.uleb128 0x3
 7094 2cc7 22       		.byte	0x22
 7095 2cc8 44       		.byte	0x44
 7096 2cc9 0B       		.byte	0xb
 7097 2cca 094B0000 		.long	0x4b09
 7098 2cce 03       		.uleb128 0x3
 7099 2ccf 22       		.byte	0x22
 7100 2cd0 45       		.byte	0x45
 7101 2cd1 0B       		.byte	0xb
 7102 2cd2 1F4B0000 		.long	0x4b1f
 7103 2cd6 03       		.uleb128 0x3
 7104 2cd7 22       		.byte	0x22
 7105 2cd8 46       		.byte	0x46
 7106 2cd9 0B       		.byte	0xb
 7107 2cda 3A4B0000 		.long	0x4b3a
 7108 2cde 03       		.uleb128 0x3
 7109 2cdf 22       		.byte	0x22
 7110 2ce0 47       		.byte	0x47
 7111 2ce1 0B       		.byte	0xb
 7112 2ce2 504B0000 		.long	0x4b50
 7113 2ce6 25       		.uleb128 0x25
 7114 2ce7 00000000 		.long	.LASF443
 7115 2ceb 01       		.byte	0x1
 7116 2cec 1C       		.byte	0x1c
 7117 2ced D2       		.byte	0xd2
 7118 2cee 0C       		.byte	0xc
 7119 2cef 182D0000 		.long	0x2d18
 7120 2cf3 07       		.uleb128 0x7
 7121 2cf4 00000000 		.long	.LASF411
 7122 2cf8 1C       		.byte	0x1c
 7123 2cf9 D6       		.byte	0xd6
 7124 2cfa 19       		.byte	0x19
 7125 2cfb 68090000 		.long	0x968
 7126 2cff 07       		.uleb128 0x7
 7127 2d00 00000000 		.long	.LASF113
 7128 2d04 1C       		.byte	0x1c
 7129 2d05 D7       		.byte	0xd7
 7130 2d06 14       		.byte	0x14
 7131 2d07 CB330000 		.long	0x33cb
 7132 2d0b 07       		.uleb128 0x7
 7133 2d0c 00000000 		.long	.LASF114
 7134 2d10 1C       		.byte	0x1c
 7135 2d11 D8       		.byte	0xd8
 7136 2d12 14       		.byte	0x14
 7137 2d13 64420000 		.long	0x4264
 7138 2d17 00       		.byte	0
 7139 2d18 25       		.uleb128 0x25
GAS LISTING linobj/Ch02_03.s 			page 246


 7140 2d19 00000000 		.long	.LASF444
 7141 2d1d 04       		.byte	0x4
 7142 2d1e 06       		.byte	0x6
 7143 2d1f DE       		.byte	0xde
 7144 2d20 0A       		.byte	0xa
 7145 2d21 332D0000 		.long	0x2d33
 7146 2d25 08       		.uleb128 0x8
 7147 2d26 00000000 		.long	.LASF445
 7148 2d2a 06       		.byte	0x6
 7149 2d2b DE       		.byte	0xde
 7150 2d2c 16       		.byte	0x16
 7151 2d2d ED000000 		.long	0xed
 7152 2d31 00       		.byte	0
 7153 2d32 00       		.byte	0
 7154 2d33 03       		.uleb128 0x3
 7155 2d34 23       		.byte	0x23
 7156 2d35 33       		.byte	0x33
 7157 2d36 0B       		.byte	0xb
 7158 2d37 3A430000 		.long	0x433a
 7159 2d3b 03       		.uleb128 0x3
 7160 2d3c 23       		.byte	0x23
 7161 2d3d 34       		.byte	0x34
 7162 2d3e 0B       		.byte	0xb
 7163 2d3f 46430000 		.long	0x4346
 7164 2d43 03       		.uleb128 0x3
 7165 2d44 23       		.byte	0x23
 7166 2d45 35       		.byte	0x35
 7167 2d46 0B       		.byte	0xb
 7168 2d47 52430000 		.long	0x4352
 7169 2d4b 03       		.uleb128 0x3
 7170 2d4c 23       		.byte	0x23
 7171 2d4d 36       		.byte	0x36
 7172 2d4e 0B       		.byte	0xb
 7173 2d4f 5E430000 		.long	0x435e
 7174 2d53 03       		.uleb128 0x3
 7175 2d54 23       		.byte	0x23
 7176 2d55 38       		.byte	0x38
 7177 2d56 0B       		.byte	0xb
 7178 2d57 1E4C0000 		.long	0x4c1e
 7179 2d5b 03       		.uleb128 0x3
 7180 2d5c 23       		.byte	0x23
 7181 2d5d 39       		.byte	0x39
 7182 2d5e 0B       		.byte	0xb
 7183 2d5f 2A4C0000 		.long	0x4c2a
 7184 2d63 03       		.uleb128 0x3
 7185 2d64 23       		.byte	0x23
 7186 2d65 3A       		.byte	0x3a
 7187 2d66 0B       		.byte	0xb
 7188 2d67 364C0000 		.long	0x4c36
 7189 2d6b 03       		.uleb128 0x3
 7190 2d6c 23       		.byte	0x23
 7191 2d6d 3B       		.byte	0x3b
 7192 2d6e 0B       		.byte	0xb
 7193 2d6f 424C0000 		.long	0x4c42
 7194 2d73 03       		.uleb128 0x3
 7195 2d74 23       		.byte	0x23
 7196 2d75 3D       		.byte	0x3d
GAS LISTING linobj/Ch02_03.s 			page 247


 7197 2d76 0B       		.byte	0xb
 7198 2d77 BE4B0000 		.long	0x4bbe
 7199 2d7b 03       		.uleb128 0x3
 7200 2d7c 23       		.byte	0x23
 7201 2d7d 3E       		.byte	0x3e
 7202 2d7e 0B       		.byte	0xb
 7203 2d7f CA4B0000 		.long	0x4bca
 7204 2d83 03       		.uleb128 0x3
 7205 2d84 23       		.byte	0x23
 7206 2d85 3F       		.byte	0x3f
 7207 2d86 0B       		.byte	0xb
 7208 2d87 D64B0000 		.long	0x4bd6
 7209 2d8b 03       		.uleb128 0x3
 7210 2d8c 23       		.byte	0x23
 7211 2d8d 40       		.byte	0x40
 7212 2d8e 0B       		.byte	0xb
 7213 2d8f E24B0000 		.long	0x4be2
 7214 2d93 03       		.uleb128 0x3
 7215 2d94 23       		.byte	0x23
 7216 2d95 42       		.byte	0x42
 7217 2d96 0B       		.byte	0xb
 7218 2d97 964C0000 		.long	0x4c96
 7219 2d9b 03       		.uleb128 0x3
 7220 2d9c 23       		.byte	0x23
 7221 2d9d 43       		.byte	0x43
 7222 2d9e 0B       		.byte	0xb
 7223 2d9f 7E4C0000 		.long	0x4c7e
 7224 2da3 03       		.uleb128 0x3
 7225 2da4 23       		.byte	0x23
 7226 2da5 45       		.byte	0x45
 7227 2da6 0B       		.byte	0xb
 7228 2da7 8E4B0000 		.long	0x4b8e
 7229 2dab 03       		.uleb128 0x3
 7230 2dac 23       		.byte	0x23
 7231 2dad 46       		.byte	0x46
 7232 2dae 0B       		.byte	0xb
 7233 2daf 9A4B0000 		.long	0x4b9a
 7234 2db3 03       		.uleb128 0x3
 7235 2db4 23       		.byte	0x23
 7236 2db5 47       		.byte	0x47
 7237 2db6 0B       		.byte	0xb
 7238 2db7 A64B0000 		.long	0x4ba6
 7239 2dbb 03       		.uleb128 0x3
 7240 2dbc 23       		.byte	0x23
 7241 2dbd 48       		.byte	0x48
 7242 2dbe 0B       		.byte	0xb
 7243 2dbf B24B0000 		.long	0x4bb2
 7244 2dc3 03       		.uleb128 0x3
 7245 2dc4 23       		.byte	0x23
 7246 2dc5 4A       		.byte	0x4a
 7247 2dc6 0B       		.byte	0xb
 7248 2dc7 4E4C0000 		.long	0x4c4e
 7249 2dcb 03       		.uleb128 0x3
 7250 2dcc 23       		.byte	0x23
 7251 2dcd 4B       		.byte	0x4b
 7252 2dce 0B       		.byte	0xb
 7253 2dcf 5A4C0000 		.long	0x4c5a
GAS LISTING linobj/Ch02_03.s 			page 248


 7254 2dd3 03       		.uleb128 0x3
 7255 2dd4 23       		.byte	0x23
 7256 2dd5 4C       		.byte	0x4c
 7257 2dd6 0B       		.byte	0xb
 7258 2dd7 664C0000 		.long	0x4c66
 7259 2ddb 03       		.uleb128 0x3
 7260 2ddc 23       		.byte	0x23
 7261 2ddd 4D       		.byte	0x4d
 7262 2dde 0B       		.byte	0xb
 7263 2ddf 724C0000 		.long	0x4c72
 7264 2de3 03       		.uleb128 0x3
 7265 2de4 23       		.byte	0x23
 7266 2de5 4F       		.byte	0x4f
 7267 2de6 0B       		.byte	0xb
 7268 2de7 EE4B0000 		.long	0x4bee
 7269 2deb 03       		.uleb128 0x3
 7270 2dec 23       		.byte	0x23
 7271 2ded 50       		.byte	0x50
 7272 2dee 0B       		.byte	0xb
 7273 2def FA4B0000 		.long	0x4bfa
 7274 2df3 03       		.uleb128 0x3
 7275 2df4 23       		.byte	0x23
 7276 2df5 51       		.byte	0x51
 7277 2df6 0B       		.byte	0xb
 7278 2df7 064C0000 		.long	0x4c06
 7279 2dfb 03       		.uleb128 0x3
 7280 2dfc 23       		.byte	0x23
 7281 2dfd 52       		.byte	0x52
 7282 2dfe 0B       		.byte	0xb
 7283 2dff 124C0000 		.long	0x4c12
 7284 2e03 03       		.uleb128 0x3
 7285 2e04 23       		.byte	0x23
 7286 2e05 54       		.byte	0x54
 7287 2e06 0B       		.byte	0xb
 7288 2e07 A24C0000 		.long	0x4ca2
 7289 2e0b 03       		.uleb128 0x3
 7290 2e0c 23       		.byte	0x23
 7291 2e0d 55       		.byte	0x55
 7292 2e0e 0B       		.byte	0xb
 7293 2e0f 8A4C0000 		.long	0x4c8a
 7294 2e13 25       		.uleb128 0x25
 7295 2e14 00000000 		.long	.LASF446
 7296 2e18 01       		.byte	0x1
 7297 2e19 24       		.byte	0x24
 7298 2e1a 7B       		.byte	0x7b
 7299 2e1b 0C       		.byte	0xc
 7300 2e1c 652E0000 		.long	0x2e65
 7301 2e20 07       		.uleb128 0x7
 7302 2e21 00000000 		.long	.LASF113
 7303 2e25 24       		.byte	0x24
 7304 2e26 7D       		.byte	0x7d
 7305 2e27 0D       		.byte	0xd
 7306 2e28 CB330000 		.long	0x33cb
 7307 2e2c 19       		.uleb128 0x19
 7308 2e2d 00000000 		.long	.LASF447
 7309 2e31 24       		.byte	0x24
 7310 2e32 86       		.byte	0x86
GAS LISTING linobj/Ch02_03.s 			page 249


 7311 2e33 07       		.byte	0x7
 7312 2e34 00000000 		.long	.LASF448
 7313 2e38 202E0000 		.long	0x2e20
 7314 2e3c 462E0000 		.long	0x2e46
 7315 2e40 01       		.uleb128 0x1
 7316 2e41 9A4F0000 		.long	0x4f9a
 7317 2e45 00       		.byte	0
 7318 2e46 07       		.uleb128 0x7
 7319 2e47 00000000 		.long	.LASF449
 7320 2e4b 24       		.byte	0x24
 7321 2e4c 7E       		.byte	0x7e
 7322 2e4d 0D       		.byte	0xd
 7323 2e4e E1000000 		.long	0xe1
 7324 2e52 11       		.uleb128 0x11
 7325 2e53 00000000 		.long	.LASF450
 7326 2e57 CB330000 		.long	0x33cb
 7327 2e5b 11       		.uleb128 0x11
 7328 2e5c 00000000 		.long	.LASF451
 7329 2e60 E1000000 		.long	0xe1
 7330 2e64 00       		.byte	0
 7331 2e65 25       		.uleb128 0x25
 7332 2e66 00000000 		.long	.LASF452
 7333 2e6a 01       		.byte	0x1
 7334 2e6b 24       		.byte	0x24
 7335 2e6c 7B       		.byte	0x7b
 7336 2e6d 0C       		.byte	0xc
 7337 2e6e B72E0000 		.long	0x2eb7
 7338 2e72 07       		.uleb128 0x7
 7339 2e73 00000000 		.long	.LASF113
 7340 2e77 24       		.byte	0x24
 7341 2e78 7D       		.byte	0x7d
 7342 2e79 0D       		.byte	0xd
 7343 2e7a BC020000 		.long	0x2bc
 7344 2e7e 19       		.uleb128 0x19
 7345 2e7f 00000000 		.long	.LASF447
 7346 2e83 24       		.byte	0x24
 7347 2e84 86       		.byte	0x86
 7348 2e85 07       		.byte	0x7
 7349 2e86 00000000 		.long	.LASF453
 7350 2e8a 722E0000 		.long	0x2e72
 7351 2e8e 982E0000 		.long	0x2e98
 7352 2e92 01       		.uleb128 0x1
 7353 2e93 9F4F0000 		.long	0x4f9f
 7354 2e97 00       		.byte	0
 7355 2e98 07       		.uleb128 0x7
 7356 2e99 00000000 		.long	.LASF449
 7357 2e9d 24       		.byte	0x24
 7358 2e9e 7E       		.byte	0x7e
 7359 2e9f 0D       		.byte	0xd
 7360 2ea0 E8000000 		.long	0xe8
 7361 2ea4 11       		.uleb128 0x11
 7362 2ea5 00000000 		.long	.LASF450
 7363 2ea9 BC020000 		.long	0x2bc
 7364 2ead 11       		.uleb128 0x11
 7365 2eae 00000000 		.long	.LASF451
 7366 2eb2 E8000000 		.long	0xe8
 7367 2eb6 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 250


 7368 2eb7 43       		.uleb128 0x43
 7369 2eb8 00000000 		.long	.LASF454
 7370 2ebc 16       		.byte	0x16
 7371 2ebd A7       		.byte	0xa7
 7372 2ebe 0D       		.byte	0xd
 7373 2ebf DF2E0000 		.long	0x2edf
 7374 2ec3 48       		.uleb128 0x48
 7375 2ec4 00000000 		.long	.LASF455
 7376 2ec8 4A3F0000 		.long	0x3f4a
 7377 2ecc 48       		.uleb128 0x48
 7378 2ecd 00000000 		.long	.LASF455
 7379 2ed1 4A3F0000 		.long	0x3f4a
 7380 2ed5 48       		.uleb128 0x48
 7381 2ed6 00000000 		.long	.LASF455
 7382 2eda 4A3F0000 		.long	0x3f4a
 7383 2ede 00       		.byte	0
 7384 2edf 47       		.uleb128 0x47
 7385 2ee0 00000000 		.long	.LASF456
 7386 2ee4 582F0000 		.long	0x2f58
 7387 2ee8 1D       		.uleb128 0x1d
 7388 2ee9 00000000 		.long	.LASF277
 7389 2eed 26       		.byte	0x26
 7390 2eee 29       		.byte	0x29
 7391 2eef 05       		.byte	0x5
 7392 2ef0 00000000 		.long	.LASF457
 7393 2ef4 FC2E0000 		.long	0x2efc
 7394 2ef8 072F0000 		.long	0x2f07
 7395 2efc 02       		.uleb128 0x2
 7396 2efd 13500000 		.long	0x5013
 7397 2f01 01       		.uleb128 0x1
 7398 2f02 A42A0000 		.long	0x2aa4
 7399 2f06 00       		.byte	0
 7400 2f07 1E       		.uleb128 0x1e
 7401 2f08 00000000 		.long	.LASF458
 7402 2f0c 27       		.byte	0x27
 7403 2f0d 8D       		.byte	0x8d
 7404 2f0e 07       		.byte	0x7
 7405 2f0f 00000000 		.long	.LASF459
 7406 2f13 A42A0000 		.long	0x2aa4
 7407 2f17 01       		.byte	0x1
 7408 2f18 202F0000 		.long	0x2f20
 7409 2f1c 262F0000 		.long	0x2f26
 7410 2f20 02       		.uleb128 0x2
 7411 2f21 ED500000 		.long	0x50ed
 7412 2f25 00       		.byte	0
 7413 2f26 1D       		.uleb128 0x1d
 7414 2f27 00000000 		.long	.LASF460
 7415 2f2b 27       		.byte	0x27
 7416 2f2c A1       		.byte	0xa1
 7417 2f2d 07       		.byte	0x7
 7418 2f2e 00000000 		.long	.LASF461
 7419 2f32 3A2F0000 		.long	0x2f3a
 7420 2f36 452F0000 		.long	0x2f45
 7421 2f3a 02       		.uleb128 0x2
 7422 2f3b 13500000 		.long	0x5013
 7423 2f3f 01       		.uleb128 0x1
 7424 2f40 A42A0000 		.long	0x2aa4
GAS LISTING linobj/Ch02_03.s 			page 251


 7425 2f44 00       		.byte	0
 7426 2f45 11       		.uleb128 0x11
 7427 2f46 00000000 		.long	.LASF127
 7428 2f4a E1000000 		.long	0xe1
 7429 2f4e 3F       		.uleb128 0x3f
 7430 2f4f 00000000 		.long	.LASF397
 7431 2f53 6B070000 		.long	0x76b
 7432 2f57 00       		.byte	0
 7433 2f58 0E       		.uleb128 0xe
 7434 2f59 DF2E0000 		.long	0x2edf
 7435 2f5d 19       		.uleb128 0x19
 7436 2f5e 00000000 		.long	.LASF462
 7437 2f62 28       		.byte	0x28
 7438 2f63 4F       		.byte	0x4f
 7439 2f64 05       		.byte	0x5
 7440 2f65 00000000 		.long	.LASF463
 7441 2f69 A74A0000 		.long	0x4aa7
 7442 2f6d 932F0000 		.long	0x2f93
 7443 2f71 11       		.uleb128 0x11
 7444 2f72 00000000 		.long	.LASF127
 7445 2f76 E1000000 		.long	0xe1
 7446 2f7a 11       		.uleb128 0x11
 7447 2f7b 00000000 		.long	.LASF397
 7448 2f7f 6B070000 		.long	0x76b
 7449 2f83 01       		.uleb128 0x1
 7450 2f84 A74A0000 		.long	0x4aa7
 7451 2f88 01       		.uleb128 0x1
 7452 2f89 BC020000 		.long	0x2bc
 7453 2f8d 01       		.uleb128 0x1
 7454 2f8e 932F0000 		.long	0x2f93
 7455 2f92 00       		.byte	0
 7456 2f93 07       		.uleb128 0x7
 7457 2f94 00000000 		.long	.LASF464
 7458 2f98 29       		.byte	0x29
 7459 2f99 44       		.byte	0x44
 7460 2f9a 15       		.byte	0x15
 7461 2f9b 68090000 		.long	0x968
 7462 2f9f 19       		.uleb128 0x19
 7463 2fa0 00000000 		.long	.LASF465
 7464 2fa4 06       		.byte	0x6
 7465 2fa5 F5       		.byte	0xf5
 7466 2fa6 05       		.byte	0x5
 7467 2fa7 00000000 		.long	.LASF466
 7468 2fab A74A0000 		.long	0x4aa7
 7469 2faf D02F0000 		.long	0x2fd0
 7470 2fb3 11       		.uleb128 0x11
 7471 2fb4 00000000 		.long	.LASF127
 7472 2fb8 E1000000 		.long	0xe1
 7473 2fbc 11       		.uleb128 0x11
 7474 2fbd 00000000 		.long	.LASF397
 7475 2fc1 6B070000 		.long	0x76b
 7476 2fc5 01       		.uleb128 0x1
 7477 2fc6 A74A0000 		.long	0x4aa7
 7478 2fca 01       		.uleb128 0x1
 7479 2fcb 182D0000 		.long	0x2d18
 7480 2fcf 00       		.byte	0
 7481 2fd0 10       		.uleb128 0x10
GAS LISTING linobj/Ch02_03.s 			page 252


 7482 2fd1 00000000 		.long	.LASF467
 7483 2fd5 05       		.byte	0x5
 7484 2fd6 9C02     		.value	0x29c
 7485 2fd8 05       		.byte	0x5
 7486 2fd9 00000000 		.long	.LASF468
 7487 2fdd A74A0000 		.long	0x4aa7
 7488 2fe1 F92F0000 		.long	0x2ff9
 7489 2fe5 11       		.uleb128 0x11
 7490 2fe6 00000000 		.long	.LASF397
 7491 2fea 6B070000 		.long	0x76b
 7492 2fee 01       		.uleb128 0x1
 7493 2fef A74A0000 		.long	0x4aa7
 7494 2ff3 01       		.uleb128 0x1
 7495 2ff4 BC020000 		.long	0x2bc
 7496 2ff8 00       		.byte	0
 7497 2ff9 10       		.uleb128 0x10
 7498 2ffa 00000000 		.long	.LASF469
 7499 2ffe 04       		.byte	0x4
 7500 2fff ED0F     		.value	0xfed
 7501 3001 05       		.byte	0x5
 7502 3002 00000000 		.long	.LASF470
 7503 3006 A74A0000 		.long	0x4aa7
 7504 300a 34300000 		.long	0x3034
 7505 300e 11       		.uleb128 0x11
 7506 300f 00000000 		.long	.LASF127
 7507 3013 E1000000 		.long	0xe1
 7508 3017 11       		.uleb128 0x11
 7509 3018 00000000 		.long	.LASF397
 7510 301c 6B070000 		.long	0x76b
 7511 3020 11       		.uleb128 0x11
 7512 3021 00000000 		.long	.LASF398
 7513 3025 1E0B0000 		.long	0xb1e
 7514 3029 01       		.uleb128 0x1
 7515 302a A74A0000 		.long	0x4aa7
 7516 302e 01       		.uleb128 0x1
 7517 302f 0F4A0000 		.long	0x4a0f
 7518 3033 00       		.byte	0
 7519 3034 10       		.uleb128 0x10
 7520 3035 00000000 		.long	.LASF467
 7521 3039 05       		.byte	0x5
 7522 303a 4002     		.value	0x240
 7523 303c 05       		.byte	0x5
 7524 303d 00000000 		.long	.LASF471
 7525 3041 A74A0000 		.long	0x4aa7
 7526 3045 5D300000 		.long	0x305d
 7527 3049 11       		.uleb128 0x11
 7528 304a 00000000 		.long	.LASF397
 7529 304e 6B070000 		.long	0x76b
 7530 3052 01       		.uleb128 0x1
 7531 3053 A74A0000 		.long	0x4aa7
 7532 3057 01       		.uleb128 0x1
 7533 3058 E1000000 		.long	0xe1
 7534 305c 00       		.byte	0
 7535 305d 19       		.uleb128 0x19
 7536 305e 00000000 		.long	.LASF472
 7537 3062 06       		.byte	0x6
 7538 3063 E8       		.byte	0xe8
GAS LISTING linobj/Ch02_03.s 			page 253


 7539 3064 03       		.byte	0x3
 7540 3065 00000000 		.long	.LASF473
 7541 3069 182D0000 		.long	0x2d18
 7542 306d 77300000 		.long	0x3077
 7543 3071 01       		.uleb128 0x1
 7544 3072 ED000000 		.long	0xed
 7545 3076 00       		.byte	0
 7546 3077 77       		.uleb128 0x77
 7547 3078 00000000 		.long	.LASF474
 7548 307c 07       		.byte	0x7
 7549 307d BA       		.byte	0xba
 7550 307e 03       		.byte	0x3
 7551 307f 00000000 		.long	.LASF559
 7552 3083 542A0000 		.long	0x2a54
 7553 3087 01       		.uleb128 0x1
 7554 3088 542A0000 		.long	0x2a54
 7555 308c 01       		.uleb128 0x1
 7556 308d 542A0000 		.long	0x2a54
 7557 3091 00       		.byte	0
 7558 3092 00       		.byte	0
 7559 3093 0A       		.uleb128 0xa
 7560 3094 00000000 		.long	.LASF475
 7561 3098 2A       		.byte	0x2a
 7562 3099 5701     		.value	0x157
 7563 309b 1C       		.byte	0x1c
 7564 309c 7B000000 		.long	0x7b
 7565 30a0 AA300000 		.long	0x30aa
 7566 30a4 01       		.uleb128 0x1
 7567 30a5 ED000000 		.long	0xed
 7568 30a9 00       		.byte	0
 7569 30aa 0A       		.uleb128 0xa
 7570 30ab 00000000 		.long	.LASF476
 7571 30af 2A       		.byte	0x2a
 7572 30b0 A703     		.value	0x3a7
 7573 30b2 0F       		.byte	0xf
 7574 30b3 7B000000 		.long	0x7b
 7575 30b7 C1300000 		.long	0x30c1
 7576 30bb 01       		.uleb128 0x1
 7577 30bc C1300000 		.long	0x30c1
 7578 30c0 00       		.byte	0
 7579 30c1 0B       		.uleb128 0xb
 7580 30c2 16010000 		.long	0x116
 7581 30c6 0A       		.uleb128 0xa
 7582 30c7 00000000 		.long	.LASF477
 7583 30cb 2A       		.byte	0x2a
 7584 30cc C403     		.value	0x3c4
 7585 30ce 11       		.byte	0x11
 7586 30cf E7300000 		.long	0x30e7
 7587 30d3 E7300000 		.long	0x30e7
 7588 30d7 01       		.uleb128 0x1
 7589 30d8 E7300000 		.long	0x30e7
 7590 30dc 01       		.uleb128 0x1
 7591 30dd ED000000 		.long	0xed
 7592 30e1 01       		.uleb128 0x1
 7593 30e2 C1300000 		.long	0x30c1
 7594 30e6 00       		.byte	0
 7595 30e7 0B       		.uleb128 0xb
GAS LISTING linobj/Ch02_03.s 			page 254


 7596 30e8 EC300000 		.long	0x30ec
 7597 30ec 18       		.uleb128 0x18
 7598 30ed 04       		.byte	0x4
 7599 30ee 05       		.byte	0x5
 7600 30ef 00000000 		.long	.LASF478
 7601 30f3 0E       		.uleb128 0xe
 7602 30f4 EC300000 		.long	0x30ec
 7603 30f8 0A       		.uleb128 0xa
 7604 30f9 00000000 		.long	.LASF479
 7605 30fd 2A       		.byte	0x2a
 7606 30fe B503     		.value	0x3b5
 7607 3100 0F       		.byte	0xf
 7608 3101 7B000000 		.long	0x7b
 7609 3105 14310000 		.long	0x3114
 7610 3109 01       		.uleb128 0x1
 7611 310a EC300000 		.long	0x30ec
 7612 310e 01       		.uleb128 0x1
 7613 310f C1300000 		.long	0x30c1
 7614 3113 00       		.byte	0
 7615 3114 0A       		.uleb128 0xa
 7616 3115 00000000 		.long	.LASF480
 7617 3119 2A       		.byte	0x2a
 7618 311a CB03     		.value	0x3cb
 7619 311c 0C       		.byte	0xc
 7620 311d ED000000 		.long	0xed
 7621 3121 30310000 		.long	0x3130
 7622 3125 01       		.uleb128 0x1
 7623 3126 30310000 		.long	0x3130
 7624 312a 01       		.uleb128 0x1
 7625 312b C1300000 		.long	0x30c1
 7626 312f 00       		.byte	0
 7627 3130 0B       		.uleb128 0xb
 7628 3131 F3300000 		.long	0x30f3
 7629 3135 0A       		.uleb128 0xa
 7630 3136 00000000 		.long	.LASF481
 7631 313a 2A       		.byte	0x2a
 7632 313b D502     		.value	0x2d5
 7633 313d 0C       		.byte	0xc
 7634 313e ED000000 		.long	0xed
 7635 3142 51310000 		.long	0x3151
 7636 3146 01       		.uleb128 0x1
 7637 3147 C1300000 		.long	0x30c1
 7638 314b 01       		.uleb128 0x1
 7639 314c ED000000 		.long	0xed
 7640 3150 00       		.byte	0
 7641 3151 0A       		.uleb128 0xa
 7642 3152 00000000 		.long	.LASF482
 7643 3156 2A       		.byte	0x2a
 7644 3157 DC02     		.value	0x2dc
 7645 3159 0C       		.byte	0xc
 7646 315a ED000000 		.long	0xed
 7647 315e 6E310000 		.long	0x316e
 7648 3162 01       		.uleb128 0x1
 7649 3163 C1300000 		.long	0x30c1
 7650 3167 01       		.uleb128 0x1
 7651 3168 30310000 		.long	0x3130
 7652 316c 34       		.uleb128 0x34
GAS LISTING linobj/Ch02_03.s 			page 255


 7653 316d 00       		.byte	0
 7654 316e 10       		.uleb128 0x10
 7655 316f 00000000 		.long	.LASF483
 7656 3173 2A       		.byte	0x2a
 7657 3174 1B03     		.value	0x31b
 7658 3176 0C       		.byte	0xc
 7659 3177 00000000 		.long	.LASF484
 7660 317b ED000000 		.long	0xed
 7661 317f 8F310000 		.long	0x318f
 7662 3183 01       		.uleb128 0x1
 7663 3184 C1300000 		.long	0x30c1
 7664 3188 01       		.uleb128 0x1
 7665 3189 30310000 		.long	0x3130
 7666 318d 34       		.uleb128 0x34
 7667 318e 00       		.byte	0
 7668 318f 0A       		.uleb128 0xa
 7669 3190 00000000 		.long	.LASF485
 7670 3194 2A       		.byte	0x2a
 7671 3195 A803     		.value	0x3a8
 7672 3197 0F       		.byte	0xf
 7673 3198 7B000000 		.long	0x7b
 7674 319c A6310000 		.long	0x31a6
 7675 31a0 01       		.uleb128 0x1
 7676 31a1 C1300000 		.long	0x30c1
 7677 31a5 00       		.byte	0
 7678 31a6 59       		.uleb128 0x59
 7679 31a7 00000000 		.long	.LASF655
 7680 31ab 2A       		.byte	0x2a
 7681 31ac AE03     		.value	0x3ae
 7682 31ae 0F       		.byte	0xf
 7683 31af 7B000000 		.long	0x7b
 7684 31b3 0A       		.uleb128 0xa
 7685 31b4 00000000 		.long	.LASF486
 7686 31b8 2A       		.byte	0x2a
 7687 31b9 6201     		.value	0x162
 7688 31bb 1C       		.byte	0x1c
 7689 31bc 2A000000 		.long	0x2a
 7690 31c0 D4310000 		.long	0x31d4
 7691 31c4 01       		.uleb128 0x1
 7692 31c5 BC020000 		.long	0x2bc
 7693 31c9 01       		.uleb128 0x1
 7694 31ca 2A000000 		.long	0x2a
 7695 31ce 01       		.uleb128 0x1
 7696 31cf D4310000 		.long	0x31d4
 7697 31d3 00       		.byte	0
 7698 31d4 0B       		.uleb128 0xb
 7699 31d5 05010000 		.long	0x105
 7700 31d9 0A       		.uleb128 0xa
 7701 31da 00000000 		.long	.LASF487
 7702 31de 2A       		.byte	0x2a
 7703 31df 4101     		.value	0x141
 7704 31e1 0F       		.byte	0xf
 7705 31e2 2A000000 		.long	0x2a
 7706 31e6 FF310000 		.long	0x31ff
 7707 31ea 01       		.uleb128 0x1
 7708 31eb E7300000 		.long	0x30e7
 7709 31ef 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 256


 7710 31f0 BC020000 		.long	0x2bc
 7711 31f4 01       		.uleb128 0x1
 7712 31f5 2A000000 		.long	0x2a
 7713 31f9 01       		.uleb128 0x1
 7714 31fa D4310000 		.long	0x31d4
 7715 31fe 00       		.byte	0
 7716 31ff 0A       		.uleb128 0xa
 7717 3200 00000000 		.long	.LASF488
 7718 3204 2A       		.byte	0x2a
 7719 3205 3D01     		.value	0x13d
 7720 3207 0C       		.byte	0xc
 7721 3208 ED000000 		.long	0xed
 7722 320c 16320000 		.long	0x3216
 7723 3210 01       		.uleb128 0x1
 7724 3211 16320000 		.long	0x3216
 7725 3215 00       		.byte	0
 7726 3216 0B       		.uleb128 0xb
 7727 3217 11010000 		.long	0x111
 7728 321b 0A       		.uleb128 0xa
 7729 321c 00000000 		.long	.LASF489
 7730 3220 2A       		.byte	0x2a
 7731 3221 6A01     		.value	0x16a
 7732 3223 0F       		.byte	0xf
 7733 3224 2A000000 		.long	0x2a
 7734 3228 41320000 		.long	0x3241
 7735 322c 01       		.uleb128 0x1
 7736 322d E7300000 		.long	0x30e7
 7737 3231 01       		.uleb128 0x1
 7738 3232 41320000 		.long	0x3241
 7739 3236 01       		.uleb128 0x1
 7740 3237 2A000000 		.long	0x2a
 7741 323b 01       		.uleb128 0x1
 7742 323c D4310000 		.long	0x31d4
 7743 3240 00       		.byte	0
 7744 3241 0B       		.uleb128 0xb
 7745 3242 BC020000 		.long	0x2bc
 7746 3246 0A       		.uleb128 0xa
 7747 3247 00000000 		.long	.LASF490
 7748 324b 2A       		.byte	0x2a
 7749 324c B603     		.value	0x3b6
 7750 324e 0F       		.byte	0xf
 7751 324f 7B000000 		.long	0x7b
 7752 3253 62320000 		.long	0x3262
 7753 3257 01       		.uleb128 0x1
 7754 3258 EC300000 		.long	0x30ec
 7755 325c 01       		.uleb128 0x1
 7756 325d C1300000 		.long	0x30c1
 7757 3261 00       		.byte	0
 7758 3262 0A       		.uleb128 0xa
 7759 3263 00000000 		.long	.LASF491
 7760 3267 2A       		.byte	0x2a
 7761 3268 BC03     		.value	0x3bc
 7762 326a 0F       		.byte	0xf
 7763 326b 7B000000 		.long	0x7b
 7764 326f 79320000 		.long	0x3279
 7765 3273 01       		.uleb128 0x1
 7766 3274 EC300000 		.long	0x30ec
GAS LISTING linobj/Ch02_03.s 			page 257


 7767 3278 00       		.byte	0
 7768 3279 0A       		.uleb128 0xa
 7769 327a 00000000 		.long	.LASF492
 7770 327e 2A       		.byte	0x2a
 7771 327f E602     		.value	0x2e6
 7772 3281 0C       		.byte	0xc
 7773 3282 ED000000 		.long	0xed
 7774 3286 9B320000 		.long	0x329b
 7775 328a 01       		.uleb128 0x1
 7776 328b E7300000 		.long	0x30e7
 7777 328f 01       		.uleb128 0x1
 7778 3290 2A000000 		.long	0x2a
 7779 3294 01       		.uleb128 0x1
 7780 3295 30310000 		.long	0x3130
 7781 3299 34       		.uleb128 0x34
 7782 329a 00       		.byte	0
 7783 329b 10       		.uleb128 0x10
 7784 329c 00000000 		.long	.LASF493
 7785 32a0 2A       		.byte	0x2a
 7786 32a1 2203     		.value	0x322
 7787 32a3 0C       		.byte	0xc
 7788 32a4 00000000 		.long	.LASF494
 7789 32a8 ED000000 		.long	0xed
 7790 32ac BC320000 		.long	0x32bc
 7791 32b0 01       		.uleb128 0x1
 7792 32b1 30310000 		.long	0x3130
 7793 32b5 01       		.uleb128 0x1
 7794 32b6 30310000 		.long	0x3130
 7795 32ba 34       		.uleb128 0x34
 7796 32bb 00       		.byte	0
 7797 32bc 0A       		.uleb128 0xa
 7798 32bd 00000000 		.long	.LASF495
 7799 32c1 2A       		.byte	0x2a
 7800 32c2 D303     		.value	0x3d3
 7801 32c4 0F       		.byte	0xf
 7802 32c5 7B000000 		.long	0x7b
 7803 32c9 D8320000 		.long	0x32d8
 7804 32cd 01       		.uleb128 0x1
 7805 32ce 7B000000 		.long	0x7b
 7806 32d2 01       		.uleb128 0x1
 7807 32d3 C1300000 		.long	0x30c1
 7808 32d7 00       		.byte	0
 7809 32d8 0A       		.uleb128 0xa
 7810 32d9 00000000 		.long	.LASF496
 7811 32dd 2A       		.byte	0x2a
 7812 32de EE02     		.value	0x2ee
 7813 32e0 0C       		.byte	0xc
 7814 32e1 ED000000 		.long	0xed
 7815 32e5 F9320000 		.long	0x32f9
 7816 32e9 01       		.uleb128 0x1
 7817 32ea C1300000 		.long	0x30c1
 7818 32ee 01       		.uleb128 0x1
 7819 32ef 30310000 		.long	0x3130
 7820 32f3 01       		.uleb128 0x1
 7821 32f4 F9320000 		.long	0x32f9
 7822 32f8 00       		.byte	0
 7823 32f9 0B       		.uleb128 0xb
GAS LISTING linobj/Ch02_03.s 			page 258


 7824 32fa 3D000000 		.long	0x3d
 7825 32fe 10       		.uleb128 0x10
 7826 32ff 00000000 		.long	.LASF497
 7827 3303 2A       		.byte	0x2a
 7828 3304 6B03     		.value	0x36b
 7829 3306 0C       		.byte	0xc
 7830 3307 00000000 		.long	.LASF498
 7831 330b ED000000 		.long	0xed
 7832 330f 23330000 		.long	0x3323
 7833 3313 01       		.uleb128 0x1
 7834 3314 C1300000 		.long	0x30c1
 7835 3318 01       		.uleb128 0x1
 7836 3319 30310000 		.long	0x3130
 7837 331d 01       		.uleb128 0x1
 7838 331e F9320000 		.long	0x32f9
 7839 3322 00       		.byte	0
 7840 3323 0A       		.uleb128 0xa
 7841 3324 00000000 		.long	.LASF499
 7842 3328 2A       		.byte	0x2a
 7843 3329 FB02     		.value	0x2fb
 7844 332b 0C       		.byte	0xc
 7845 332c ED000000 		.long	0xed
 7846 3330 49330000 		.long	0x3349
 7847 3334 01       		.uleb128 0x1
 7848 3335 E7300000 		.long	0x30e7
 7849 3339 01       		.uleb128 0x1
 7850 333a 2A000000 		.long	0x2a
 7851 333e 01       		.uleb128 0x1
 7852 333f 30310000 		.long	0x3130
 7853 3343 01       		.uleb128 0x1
 7854 3344 F9320000 		.long	0x32f9
 7855 3348 00       		.byte	0
 7856 3349 10       		.uleb128 0x10
 7857 334a 00000000 		.long	.LASF500
 7858 334e 2A       		.byte	0x2a
 7859 334f 7203     		.value	0x372
 7860 3351 0C       		.byte	0xc
 7861 3352 00000000 		.long	.LASF501
 7862 3356 ED000000 		.long	0xed
 7863 335a 6E330000 		.long	0x336e
 7864 335e 01       		.uleb128 0x1
 7865 335f 30310000 		.long	0x3130
 7866 3363 01       		.uleb128 0x1
 7867 3364 30310000 		.long	0x3130
 7868 3368 01       		.uleb128 0x1
 7869 3369 F9320000 		.long	0x32f9
 7870 336d 00       		.byte	0
 7871 336e 0A       		.uleb128 0xa
 7872 336f 00000000 		.long	.LASF502
 7873 3373 2A       		.byte	0x2a
 7874 3374 F602     		.value	0x2f6
 7875 3376 0C       		.byte	0xc
 7876 3377 ED000000 		.long	0xed
 7877 337b 8A330000 		.long	0x338a
 7878 337f 01       		.uleb128 0x1
 7879 3380 30310000 		.long	0x3130
 7880 3384 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 259


 7881 3385 F9320000 		.long	0x32f9
 7882 3389 00       		.byte	0
 7883 338a 10       		.uleb128 0x10
 7884 338b 00000000 		.long	.LASF503
 7885 338f 2A       		.byte	0x2a
 7886 3390 6F03     		.value	0x36f
 7887 3392 0C       		.byte	0xc
 7888 3393 00000000 		.long	.LASF504
 7889 3397 ED000000 		.long	0xed
 7890 339b AA330000 		.long	0x33aa
 7891 339f 01       		.uleb128 0x1
 7892 33a0 30310000 		.long	0x3130
 7893 33a4 01       		.uleb128 0x1
 7894 33a5 F9320000 		.long	0x32f9
 7895 33a9 00       		.byte	0
 7896 33aa 0A       		.uleb128 0xa
 7897 33ab 00000000 		.long	.LASF505
 7898 33af 2A       		.byte	0x2a
 7899 33b0 4601     		.value	0x146
 7900 33b2 0F       		.byte	0xf
 7901 33b3 2A000000 		.long	0x2a
 7902 33b7 CB330000 		.long	0x33cb
 7903 33bb 01       		.uleb128 0x1
 7904 33bc CB330000 		.long	0x33cb
 7905 33c0 01       		.uleb128 0x1
 7906 33c1 EC300000 		.long	0x30ec
 7907 33c5 01       		.uleb128 0x1
 7908 33c6 D4310000 		.long	0x31d4
 7909 33ca 00       		.byte	0
 7910 33cb 0B       		.uleb128 0xb
 7911 33cc E1000000 		.long	0xe1
 7912 33d0 0E       		.uleb128 0xe
 7913 33d1 CB330000 		.long	0x33cb
 7914 33d5 0F       		.uleb128 0xf
 7915 33d6 00000000 		.long	.LASF506
 7916 33da 2A       		.byte	0x2a
 7917 33db 79       		.byte	0x79
 7918 33dc 11       		.byte	0x11
 7919 33dd E7300000 		.long	0x30e7
 7920 33e1 F0330000 		.long	0x33f0
 7921 33e5 01       		.uleb128 0x1
 7922 33e6 E7300000 		.long	0x30e7
 7923 33ea 01       		.uleb128 0x1
 7924 33eb 30310000 		.long	0x3130
 7925 33ef 00       		.byte	0
 7926 33f0 0F       		.uleb128 0xf
 7927 33f1 00000000 		.long	.LASF507
 7928 33f5 2A       		.byte	0x2a
 7929 33f6 82       		.byte	0x82
 7930 33f7 0C       		.byte	0xc
 7931 33f8 ED000000 		.long	0xed
 7932 33fc 0B340000 		.long	0x340b
 7933 3400 01       		.uleb128 0x1
 7934 3401 30310000 		.long	0x3130
 7935 3405 01       		.uleb128 0x1
 7936 3406 30310000 		.long	0x3130
 7937 340a 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 260


 7938 340b 0F       		.uleb128 0xf
 7939 340c 00000000 		.long	.LASF508
 7940 3410 2A       		.byte	0x2a
 7941 3411 9B       		.byte	0x9b
 7942 3412 0C       		.byte	0xc
 7943 3413 ED000000 		.long	0xed
 7944 3417 26340000 		.long	0x3426
 7945 341b 01       		.uleb128 0x1
 7946 341c 30310000 		.long	0x3130
 7947 3420 01       		.uleb128 0x1
 7948 3421 30310000 		.long	0x3130
 7949 3425 00       		.byte	0
 7950 3426 0F       		.uleb128 0xf
 7951 3427 00000000 		.long	.LASF509
 7952 342b 2A       		.byte	0x2a
 7953 342c 62       		.byte	0x62
 7954 342d 11       		.byte	0x11
 7955 342e E7300000 		.long	0x30e7
 7956 3432 41340000 		.long	0x3441
 7957 3436 01       		.uleb128 0x1
 7958 3437 E7300000 		.long	0x30e7
 7959 343b 01       		.uleb128 0x1
 7960 343c 30310000 		.long	0x3130
 7961 3440 00       		.byte	0
 7962 3441 0F       		.uleb128 0xf
 7963 3442 00000000 		.long	.LASF510
 7964 3446 2A       		.byte	0x2a
 7965 3447 D4       		.byte	0xd4
 7966 3448 0F       		.byte	0xf
 7967 3449 2A000000 		.long	0x2a
 7968 344d 5C340000 		.long	0x345c
 7969 3451 01       		.uleb128 0x1
 7970 3452 30310000 		.long	0x3130
 7971 3456 01       		.uleb128 0x1
 7972 3457 30310000 		.long	0x3130
 7973 345b 00       		.byte	0
 7974 345c 0A       		.uleb128 0xa
 7975 345d 00000000 		.long	.LASF511
 7976 3461 2A       		.byte	0x2a
 7977 3462 1304     		.value	0x413
 7978 3464 0F       		.byte	0xf
 7979 3465 2A000000 		.long	0x2a
 7980 3469 82340000 		.long	0x3482
 7981 346d 01       		.uleb128 0x1
 7982 346e E7300000 		.long	0x30e7
 7983 3472 01       		.uleb128 0x1
 7984 3473 2A000000 		.long	0x2a
 7985 3477 01       		.uleb128 0x1
 7986 3478 30310000 		.long	0x3130
 7987 347c 01       		.uleb128 0x1
 7988 347d 82340000 		.long	0x3482
 7989 3481 00       		.byte	0
 7990 3482 0B       		.uleb128 0xb
 7991 3483 23350000 		.long	0x3523
 7992 3487 78       		.uleb128 0x78
 7993 3488 746D00   		.string	"tm"
 7994 348b 38       		.byte	0x38
GAS LISTING linobj/Ch02_03.s 			page 261


 7995 348c 2B       		.byte	0x2b
 7996 348d 07       		.byte	0x7
 7997 348e 08       		.byte	0x8
 7998 348f 23350000 		.long	0x3523
 7999 3493 08       		.uleb128 0x8
 8000 3494 00000000 		.long	.LASF512
 8001 3498 2B       		.byte	0x2b
 8002 3499 09       		.byte	0x9
 8003 349a 07       		.byte	0x7
 8004 349b ED000000 		.long	0xed
 8005 349f 00       		.byte	0
 8006 34a0 08       		.uleb128 0x8
 8007 34a1 00000000 		.long	.LASF513
 8008 34a5 2B       		.byte	0x2b
 8009 34a6 0A       		.byte	0xa
 8010 34a7 07       		.byte	0x7
 8011 34a8 ED000000 		.long	0xed
 8012 34ac 04       		.byte	0x4
 8013 34ad 08       		.uleb128 0x8
 8014 34ae 00000000 		.long	.LASF514
 8015 34b2 2B       		.byte	0x2b
 8016 34b3 0B       		.byte	0xb
 8017 34b4 07       		.byte	0x7
 8018 34b5 ED000000 		.long	0xed
 8019 34b9 08       		.byte	0x8
 8020 34ba 08       		.uleb128 0x8
 8021 34bb 00000000 		.long	.LASF515
 8022 34bf 2B       		.byte	0x2b
 8023 34c0 0C       		.byte	0xc
 8024 34c1 07       		.byte	0x7
 8025 34c2 ED000000 		.long	0xed
 8026 34c6 0C       		.byte	0xc
 8027 34c7 08       		.uleb128 0x8
 8028 34c8 00000000 		.long	.LASF516
 8029 34cc 2B       		.byte	0x2b
 8030 34cd 0D       		.byte	0xd
 8031 34ce 07       		.byte	0x7
 8032 34cf ED000000 		.long	0xed
 8033 34d3 10       		.byte	0x10
 8034 34d4 08       		.uleb128 0x8
 8035 34d5 00000000 		.long	.LASF517
 8036 34d9 2B       		.byte	0x2b
 8037 34da 0E       		.byte	0xe
 8038 34db 07       		.byte	0x7
 8039 34dc ED000000 		.long	0xed
 8040 34e0 14       		.byte	0x14
 8041 34e1 08       		.uleb128 0x8
 8042 34e2 00000000 		.long	.LASF518
 8043 34e6 2B       		.byte	0x2b
 8044 34e7 0F       		.byte	0xf
 8045 34e8 07       		.byte	0x7
 8046 34e9 ED000000 		.long	0xed
 8047 34ed 18       		.byte	0x18
 8048 34ee 08       		.uleb128 0x8
 8049 34ef 00000000 		.long	.LASF519
 8050 34f3 2B       		.byte	0x2b
 8051 34f4 10       		.byte	0x10
GAS LISTING linobj/Ch02_03.s 			page 262


 8052 34f5 07       		.byte	0x7
 8053 34f6 ED000000 		.long	0xed
 8054 34fa 1C       		.byte	0x1c
 8055 34fb 08       		.uleb128 0x8
 8056 34fc 00000000 		.long	.LASF520
 8057 3500 2B       		.byte	0x2b
 8058 3501 11       		.byte	0x11
 8059 3502 07       		.byte	0x7
 8060 3503 ED000000 		.long	0xed
 8061 3507 20       		.byte	0x20
 8062 3508 08       		.uleb128 0x8
 8063 3509 00000000 		.long	.LASF521
 8064 350d 2B       		.byte	0x2b
 8065 350e 14       		.byte	0x14
 8066 350f 0C       		.byte	0xc
 8067 3510 74360000 		.long	0x3674
 8068 3514 28       		.byte	0x28
 8069 3515 08       		.uleb128 0x8
 8070 3516 00000000 		.long	.LASF522
 8071 351a 2B       		.byte	0x2b
 8072 351b 15       		.byte	0x15
 8073 351c 0F       		.byte	0xf
 8074 351d BC020000 		.long	0x2bc
 8075 3521 30       		.byte	0x30
 8076 3522 00       		.byte	0
 8077 3523 0E       		.uleb128 0xe
 8078 3524 87340000 		.long	0x3487
 8079 3528 0F       		.uleb128 0xf
 8080 3529 00000000 		.long	.LASF523
 8081 352d 2A       		.byte	0x2a
 8082 352e F7       		.byte	0xf7
 8083 352f 0F       		.byte	0xf
 8084 3530 2A000000 		.long	0x2a
 8085 3534 3E350000 		.long	0x353e
 8086 3538 01       		.uleb128 0x1
 8087 3539 30310000 		.long	0x3130
 8088 353d 00       		.byte	0
 8089 353e 0F       		.uleb128 0xf
 8090 353f 00000000 		.long	.LASF524
 8091 3543 2A       		.byte	0x2a
 8092 3544 7D       		.byte	0x7d
 8093 3545 11       		.byte	0x11
 8094 3546 E7300000 		.long	0x30e7
 8095 354a 5E350000 		.long	0x355e
 8096 354e 01       		.uleb128 0x1
 8097 354f E7300000 		.long	0x30e7
 8098 3553 01       		.uleb128 0x1
 8099 3554 30310000 		.long	0x3130
 8100 3558 01       		.uleb128 0x1
 8101 3559 2A000000 		.long	0x2a
 8102 355d 00       		.byte	0
 8103 355e 0F       		.uleb128 0xf
 8104 355f 00000000 		.long	.LASF525
 8105 3563 2A       		.byte	0x2a
 8106 3564 85       		.byte	0x85
 8107 3565 0C       		.byte	0xc
 8108 3566 ED000000 		.long	0xed
GAS LISTING linobj/Ch02_03.s 			page 263


 8109 356a 7E350000 		.long	0x357e
 8110 356e 01       		.uleb128 0x1
 8111 356f 30310000 		.long	0x3130
 8112 3573 01       		.uleb128 0x1
 8113 3574 30310000 		.long	0x3130
 8114 3578 01       		.uleb128 0x1
 8115 3579 2A000000 		.long	0x2a
 8116 357d 00       		.byte	0
 8117 357e 0F       		.uleb128 0xf
 8118 357f 00000000 		.long	.LASF526
 8119 3583 2A       		.byte	0x2a
 8120 3584 67       		.byte	0x67
 8121 3585 11       		.byte	0x11
 8122 3586 E7300000 		.long	0x30e7
 8123 358a 9E350000 		.long	0x359e
 8124 358e 01       		.uleb128 0x1
 8125 358f E7300000 		.long	0x30e7
 8126 3593 01       		.uleb128 0x1
 8127 3594 30310000 		.long	0x3130
 8128 3598 01       		.uleb128 0x1
 8129 3599 2A000000 		.long	0x2a
 8130 359d 00       		.byte	0
 8131 359e 0A       		.uleb128 0xa
 8132 359f 00000000 		.long	.LASF527
 8133 35a3 2A       		.byte	0x2a
 8134 35a4 7001     		.value	0x170
 8135 35a6 0F       		.byte	0xf
 8136 35a7 2A000000 		.long	0x2a
 8137 35ab C4350000 		.long	0x35c4
 8138 35af 01       		.uleb128 0x1
 8139 35b0 CB330000 		.long	0x33cb
 8140 35b4 01       		.uleb128 0x1
 8141 35b5 C4350000 		.long	0x35c4
 8142 35b9 01       		.uleb128 0x1
 8143 35ba 2A000000 		.long	0x2a
 8144 35be 01       		.uleb128 0x1
 8145 35bf D4310000 		.long	0x31d4
 8146 35c3 00       		.byte	0
 8147 35c4 0B       		.uleb128 0xb
 8148 35c5 30310000 		.long	0x3130
 8149 35c9 0F       		.uleb128 0xf
 8150 35ca 00000000 		.long	.LASF528
 8151 35ce 2A       		.byte	0x2a
 8152 35cf D8       		.byte	0xd8
 8153 35d0 0F       		.byte	0xf
 8154 35d1 2A000000 		.long	0x2a
 8155 35d5 E4350000 		.long	0x35e4
 8156 35d9 01       		.uleb128 0x1
 8157 35da 30310000 		.long	0x3130
 8158 35de 01       		.uleb128 0x1
 8159 35df 30310000 		.long	0x3130
 8160 35e3 00       		.byte	0
 8161 35e4 0A       		.uleb128 0xa
 8162 35e5 00000000 		.long	.LASF529
 8163 35e9 2A       		.byte	0x2a
 8164 35ea 9201     		.value	0x192
 8165 35ec 0F       		.byte	0xf
GAS LISTING linobj/Ch02_03.s 			page 264


 8166 35ed 00360000 		.long	0x3600
 8167 35f1 00360000 		.long	0x3600
 8168 35f5 01       		.uleb128 0x1
 8169 35f6 30310000 		.long	0x3130
 8170 35fa 01       		.uleb128 0x1
 8171 35fb 07360000 		.long	0x3607
 8172 35ff 00       		.byte	0
 8173 3600 18       		.uleb128 0x18
 8174 3601 08       		.byte	0x8
 8175 3602 04       		.byte	0x4
 8176 3603 00000000 		.long	.LASF530
 8177 3607 0B       		.uleb128 0xb
 8178 3608 E7300000 		.long	0x30e7
 8179 360c 0A       		.uleb128 0xa
 8180 360d 00000000 		.long	.LASF531
 8181 3611 2A       		.byte	0x2a
 8182 3612 9701     		.value	0x197
 8183 3614 0E       		.byte	0xe
 8184 3615 28360000 		.long	0x3628
 8185 3619 28360000 		.long	0x3628
 8186 361d 01       		.uleb128 0x1
 8187 361e 30310000 		.long	0x3130
 8188 3622 01       		.uleb128 0x1
 8189 3623 07360000 		.long	0x3607
 8190 3627 00       		.byte	0
 8191 3628 18       		.uleb128 0x18
 8192 3629 04       		.byte	0x4
 8193 362a 04       		.byte	0x4
 8194 362b 00000000 		.long	.LASF532
 8195 362f 0F       		.uleb128 0xf
 8196 3630 00000000 		.long	.LASF533
 8197 3634 2A       		.byte	0x2a
 8198 3635 F2       		.byte	0xf2
 8199 3636 11       		.byte	0x11
 8200 3637 E7300000 		.long	0x30e7
 8201 363b 4F360000 		.long	0x364f
 8202 363f 01       		.uleb128 0x1
 8203 3640 E7300000 		.long	0x30e7
 8204 3644 01       		.uleb128 0x1
 8205 3645 30310000 		.long	0x3130
 8206 3649 01       		.uleb128 0x1
 8207 364a 07360000 		.long	0x3607
 8208 364e 00       		.byte	0
 8209 364f 10       		.uleb128 0x10
 8210 3650 00000000 		.long	.LASF534
 8211 3654 2A       		.byte	0x2a
 8212 3655 F401     		.value	0x1f4
 8213 3657 11       		.byte	0x11
 8214 3658 00000000 		.long	.LASF535
 8215 365c 74360000 		.long	0x3674
 8216 3660 74360000 		.long	0x3674
 8217 3664 01       		.uleb128 0x1
 8218 3665 30310000 		.long	0x3130
 8219 3669 01       		.uleb128 0x1
 8220 366a 07360000 		.long	0x3607
 8221 366e 01       		.uleb128 0x1
 8222 366f ED000000 		.long	0xed
GAS LISTING linobj/Ch02_03.s 			page 265


 8223 3673 00       		.byte	0
 8224 3674 18       		.uleb128 0x18
 8225 3675 08       		.byte	0x8
 8226 3676 05       		.byte	0x5
 8227 3677 00000000 		.long	.LASF536
 8228 367b 10       		.uleb128 0x10
 8229 367c 00000000 		.long	.LASF537
 8230 3680 2A       		.byte	0x2a
 8231 3681 F701     		.value	0x1f7
 8232 3683 1A       		.byte	0x1a
 8233 3684 00000000 		.long	.LASF538
 8234 3688 36000000 		.long	0x36
 8235 368c A0360000 		.long	0x36a0
 8236 3690 01       		.uleb128 0x1
 8237 3691 30310000 		.long	0x3130
 8238 3695 01       		.uleb128 0x1
 8239 3696 07360000 		.long	0x3607
 8240 369a 01       		.uleb128 0x1
 8241 369b ED000000 		.long	0xed
 8242 369f 00       		.byte	0
 8243 36a0 0F       		.uleb128 0xf
 8244 36a1 00000000 		.long	.LASF539
 8245 36a5 2A       		.byte	0x2a
 8246 36a6 9F       		.byte	0x9f
 8247 36a7 0F       		.byte	0xf
 8248 36a8 2A000000 		.long	0x2a
 8249 36ac C0360000 		.long	0x36c0
 8250 36b0 01       		.uleb128 0x1
 8251 36b1 E7300000 		.long	0x30e7
 8252 36b5 01       		.uleb128 0x1
 8253 36b6 30310000 		.long	0x3130
 8254 36ba 01       		.uleb128 0x1
 8255 36bb 2A000000 		.long	0x2a
 8256 36bf 00       		.byte	0
 8257 36c0 0A       		.uleb128 0xa
 8258 36c1 00000000 		.long	.LASF540
 8259 36c5 2A       		.byte	0x2a
 8260 36c6 5D01     		.value	0x15d
 8261 36c8 1C       		.byte	0x1c
 8262 36c9 ED000000 		.long	0xed
 8263 36cd D7360000 		.long	0x36d7
 8264 36d1 01       		.uleb128 0x1
 8265 36d2 7B000000 		.long	0x7b
 8266 36d6 00       		.byte	0
 8267 36d7 0A       		.uleb128 0xa
 8268 36d8 00000000 		.long	.LASF541
 8269 36dc 2A       		.byte	0x2a
 8270 36dd 1B01     		.value	0x11b
 8271 36df 0C       		.byte	0xc
 8272 36e0 ED000000 		.long	0xed
 8273 36e4 F8360000 		.long	0x36f8
 8274 36e8 01       		.uleb128 0x1
 8275 36e9 30310000 		.long	0x3130
 8276 36ed 01       		.uleb128 0x1
 8277 36ee 30310000 		.long	0x3130
 8278 36f2 01       		.uleb128 0x1
 8279 36f3 2A000000 		.long	0x2a
GAS LISTING linobj/Ch02_03.s 			page 266


 8280 36f7 00       		.byte	0
 8281 36f8 0A       		.uleb128 0xa
 8282 36f9 00000000 		.long	.LASF542
 8283 36fd 2A       		.byte	0x2a
 8284 36fe 1F01     		.value	0x11f
 8285 3700 11       		.byte	0x11
 8286 3701 E7300000 		.long	0x30e7
 8287 3705 19370000 		.long	0x3719
 8288 3709 01       		.uleb128 0x1
 8289 370a E7300000 		.long	0x30e7
 8290 370e 01       		.uleb128 0x1
 8291 370f 30310000 		.long	0x3130
 8292 3713 01       		.uleb128 0x1
 8293 3714 2A000000 		.long	0x2a
 8294 3718 00       		.byte	0
 8295 3719 0A       		.uleb128 0xa
 8296 371a 00000000 		.long	.LASF543
 8297 371e 2A       		.byte	0x2a
 8298 371f 2401     		.value	0x124
 8299 3721 11       		.byte	0x11
 8300 3722 E7300000 		.long	0x30e7
 8301 3726 3A370000 		.long	0x373a
 8302 372a 01       		.uleb128 0x1
 8303 372b E7300000 		.long	0x30e7
 8304 372f 01       		.uleb128 0x1
 8305 3730 30310000 		.long	0x3130
 8306 3734 01       		.uleb128 0x1
 8307 3735 2A000000 		.long	0x2a
 8308 3739 00       		.byte	0
 8309 373a 0A       		.uleb128 0xa
 8310 373b 00000000 		.long	.LASF544
 8311 373f 2A       		.byte	0x2a
 8312 3740 2801     		.value	0x128
 8313 3742 11       		.byte	0x11
 8314 3743 E7300000 		.long	0x30e7
 8315 3747 5B370000 		.long	0x375b
 8316 374b 01       		.uleb128 0x1
 8317 374c E7300000 		.long	0x30e7
 8318 3750 01       		.uleb128 0x1
 8319 3751 EC300000 		.long	0x30ec
 8320 3755 01       		.uleb128 0x1
 8321 3756 2A000000 		.long	0x2a
 8322 375a 00       		.byte	0
 8323 375b 0A       		.uleb128 0xa
 8324 375c 00000000 		.long	.LASF545
 8325 3760 2A       		.byte	0x2a
 8326 3761 E302     		.value	0x2e3
 8327 3763 0C       		.byte	0xc
 8328 3764 ED000000 		.long	0xed
 8329 3768 73370000 		.long	0x3773
 8330 376c 01       		.uleb128 0x1
 8331 376d 30310000 		.long	0x3130
 8332 3771 34       		.uleb128 0x34
 8333 3772 00       		.byte	0
 8334 3773 10       		.uleb128 0x10
 8335 3774 00000000 		.long	.LASF546
 8336 3778 2A       		.byte	0x2a
GAS LISTING linobj/Ch02_03.s 			page 267


 8337 3779 1F03     		.value	0x31f
 8338 377b 0C       		.byte	0xc
 8339 377c 00000000 		.long	.LASF547
 8340 3780 ED000000 		.long	0xed
 8341 3784 8F370000 		.long	0x378f
 8342 3788 01       		.uleb128 0x1
 8343 3789 30310000 		.long	0x3130
 8344 378d 34       		.uleb128 0x34
 8345 378e 00       		.byte	0
 8346 378f 19       		.uleb128 0x19
 8347 3790 00000000 		.long	.LASF548
 8348 3794 2A       		.byte	0x2a
 8349 3795 BA       		.byte	0xba
 8350 3796 1D       		.byte	0x1d
 8351 3797 00000000 		.long	.LASF548
 8352 379b 30310000 		.long	0x3130
 8353 379f AE370000 		.long	0x37ae
 8354 37a3 01       		.uleb128 0x1
 8355 37a4 30310000 		.long	0x3130
 8356 37a8 01       		.uleb128 0x1
 8357 37a9 EC300000 		.long	0x30ec
 8358 37ad 00       		.byte	0
 8359 37ae 19       		.uleb128 0x19
 8360 37af 00000000 		.long	.LASF548
 8361 37b3 2A       		.byte	0x2a
 8362 37b4 B8       		.byte	0xb8
 8363 37b5 17       		.byte	0x17
 8364 37b6 00000000 		.long	.LASF548
 8365 37ba E7300000 		.long	0x30e7
 8366 37be CD370000 		.long	0x37cd
 8367 37c2 01       		.uleb128 0x1
 8368 37c3 E7300000 		.long	0x30e7
 8369 37c7 01       		.uleb128 0x1
 8370 37c8 EC300000 		.long	0x30ec
 8371 37cc 00       		.byte	0
 8372 37cd 19       		.uleb128 0x19
 8373 37ce 00000000 		.long	.LASF549
 8374 37d2 2A       		.byte	0x2a
 8375 37d3 DE       		.byte	0xde
 8376 37d4 1D       		.byte	0x1d
 8377 37d5 00000000 		.long	.LASF549
 8378 37d9 30310000 		.long	0x3130
 8379 37dd EC370000 		.long	0x37ec
 8380 37e1 01       		.uleb128 0x1
 8381 37e2 30310000 		.long	0x3130
 8382 37e6 01       		.uleb128 0x1
 8383 37e7 30310000 		.long	0x3130
 8384 37eb 00       		.byte	0
 8385 37ec 19       		.uleb128 0x19
 8386 37ed 00000000 		.long	.LASF549
 8387 37f1 2A       		.byte	0x2a
 8388 37f2 DC       		.byte	0xdc
 8389 37f3 17       		.byte	0x17
 8390 37f4 00000000 		.long	.LASF549
 8391 37f8 E7300000 		.long	0x30e7
 8392 37fc 0B380000 		.long	0x380b
 8393 3800 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 268


 8394 3801 E7300000 		.long	0x30e7
 8395 3805 01       		.uleb128 0x1
 8396 3806 30310000 		.long	0x3130
 8397 380a 00       		.byte	0
 8398 380b 19       		.uleb128 0x19
 8399 380c 00000000 		.long	.LASF550
 8400 3810 2A       		.byte	0x2a
 8401 3811 C4       		.byte	0xc4
 8402 3812 1D       		.byte	0x1d
 8403 3813 00000000 		.long	.LASF550
 8404 3817 30310000 		.long	0x3130
 8405 381b 2A380000 		.long	0x382a
 8406 381f 01       		.uleb128 0x1
 8407 3820 30310000 		.long	0x3130
 8408 3824 01       		.uleb128 0x1
 8409 3825 EC300000 		.long	0x30ec
 8410 3829 00       		.byte	0
 8411 382a 19       		.uleb128 0x19
 8412 382b 00000000 		.long	.LASF550
 8413 382f 2A       		.byte	0x2a
 8414 3830 C2       		.byte	0xc2
 8415 3831 17       		.byte	0x17
 8416 3832 00000000 		.long	.LASF550
 8417 3836 E7300000 		.long	0x30e7
 8418 383a 49380000 		.long	0x3849
 8419 383e 01       		.uleb128 0x1
 8420 383f E7300000 		.long	0x30e7
 8421 3843 01       		.uleb128 0x1
 8422 3844 EC300000 		.long	0x30ec
 8423 3848 00       		.byte	0
 8424 3849 19       		.uleb128 0x19
 8425 384a 00000000 		.long	.LASF551
 8426 384e 2A       		.byte	0x2a
 8427 384f E9       		.byte	0xe9
 8428 3850 1D       		.byte	0x1d
 8429 3851 00000000 		.long	.LASF551
 8430 3855 30310000 		.long	0x3130
 8431 3859 68380000 		.long	0x3868
 8432 385d 01       		.uleb128 0x1
 8433 385e 30310000 		.long	0x3130
 8434 3862 01       		.uleb128 0x1
 8435 3863 30310000 		.long	0x3130
 8436 3867 00       		.byte	0
 8437 3868 19       		.uleb128 0x19
 8438 3869 00000000 		.long	.LASF551
 8439 386d 2A       		.byte	0x2a
 8440 386e E7       		.byte	0xe7
 8441 386f 17       		.byte	0x17
 8442 3870 00000000 		.long	.LASF551
 8443 3874 E7300000 		.long	0x30e7
 8444 3878 87380000 		.long	0x3887
 8445 387c 01       		.uleb128 0x1
 8446 387d E7300000 		.long	0x30e7
 8447 3881 01       		.uleb128 0x1
 8448 3882 30310000 		.long	0x3130
 8449 3886 00       		.byte	0
 8450 3887 10       		.uleb128 0x10
GAS LISTING linobj/Ch02_03.s 			page 269


 8451 3888 00000000 		.long	.LASF552
 8452 388c 2A       		.byte	0x2a
 8453 388d 1201     		.value	0x112
 8454 388f 1D       		.byte	0x1d
 8455 3890 00000000 		.long	.LASF552
 8456 3894 30310000 		.long	0x3130
 8457 3898 AC380000 		.long	0x38ac
 8458 389c 01       		.uleb128 0x1
 8459 389d 30310000 		.long	0x3130
 8460 38a1 01       		.uleb128 0x1
 8461 38a2 EC300000 		.long	0x30ec
 8462 38a6 01       		.uleb128 0x1
 8463 38a7 2A000000 		.long	0x2a
 8464 38ab 00       		.byte	0
 8465 38ac 10       		.uleb128 0x10
 8466 38ad 00000000 		.long	.LASF552
 8467 38b1 2A       		.byte	0x2a
 8468 38b2 1001     		.value	0x110
 8469 38b4 17       		.byte	0x17
 8470 38b5 00000000 		.long	.LASF552
 8471 38b9 E7300000 		.long	0x30e7
 8472 38bd D1380000 		.long	0x38d1
 8473 38c1 01       		.uleb128 0x1
 8474 38c2 E7300000 		.long	0x30e7
 8475 38c6 01       		.uleb128 0x1
 8476 38c7 EC300000 		.long	0x30ec
 8477 38cb 01       		.uleb128 0x1
 8478 38cc 2A000000 		.long	0x2a
 8479 38d0 00       		.byte	0
 8480 38d1 79       		.uleb128 0x79
 8481 38d2 00000000 		.long	.LASF553
 8482 38d6 11       		.byte	0x11
 8483 38d7 8A08     		.value	0x88a
 8484 38d9 0B       		.byte	0xb
 8485 38da C33E0000 		.long	0x3ec3
 8486 38de 03       		.uleb128 0x3
 8487 38df 10       		.byte	0x10
 8488 38e0 FB       		.byte	0xfb
 8489 38e1 0B       		.byte	0xb
 8490 38e2 C33E0000 		.long	0x3ec3
 8491 38e6 23       		.uleb128 0x23
 8492 38e7 10       		.byte	0x10
 8493 38e8 0401     		.value	0x104
 8494 38ea 0B       		.byte	0xb
 8495 38eb E63E0000 		.long	0x3ee6
 8496 38ef 23       		.uleb128 0x23
 8497 38f0 10       		.byte	0x10
 8498 38f1 0501     		.value	0x105
 8499 38f3 0B       		.byte	0xb
 8500 38f4 123F0000 		.long	0x3f12
 8501 38f8 53       		.uleb128 0x53
 8502 38f9 00000000 		.long	.LASF554
 8503 38fd 2C       		.byte	0x2c
 8504 38fe 25       		.byte	0x25
 8505 38ff 0B       		.byte	0xb
 8506 3900 03       		.uleb128 0x3
 8507 3901 18       		.byte	0x18
GAS LISTING linobj/Ch02_03.s 			page 270


 8508 3902 CC       		.byte	0xcc
 8509 3903 0B       		.byte	0xb
 8510 3904 2E430000 		.long	0x432e
 8511 3908 03       		.uleb128 0x3
 8512 3909 18       		.byte	0x18
 8513 390a DC       		.byte	0xdc
 8514 390b 0B       		.byte	0xb
 8515 390c F4450000 		.long	0x45f4
 8516 3910 03       		.uleb128 0x3
 8517 3911 18       		.byte	0x18
 8518 3912 E7       		.byte	0xe7
 8519 3913 0B       		.byte	0xb
 8520 3914 10460000 		.long	0x4610
 8521 3918 03       		.uleb128 0x3
 8522 3919 18       		.byte	0x18
 8523 391a E8       		.byte	0xe8
 8524 391b 0B       		.byte	0xb
 8525 391c 27460000 		.long	0x4627
 8526 3920 03       		.uleb128 0x3
 8527 3921 18       		.byte	0x18
 8528 3922 E9       		.byte	0xe9
 8529 3923 0B       		.byte	0xb
 8530 3924 4B460000 		.long	0x464b
 8531 3928 03       		.uleb128 0x3
 8532 3929 18       		.byte	0x18
 8533 392a EB       		.byte	0xeb
 8534 392b 0B       		.byte	0xb
 8535 392c 6F460000 		.long	0x466f
 8536 3930 03       		.uleb128 0x3
 8537 3931 18       		.byte	0x18
 8538 3932 EC       		.byte	0xec
 8539 3933 0B       		.byte	0xb
 8540 3934 8A460000 		.long	0x468a
 8541 3938 7A       		.uleb128 0x7a
 8542 3939 64697600 		.string	"div"
 8543 393d 18       		.byte	0x18
 8544 393e D9       		.byte	0xd9
 8545 393f 03       		.byte	0x3
 8546 3940 00000000 		.long	.LASF879
 8547 3944 2E430000 		.long	0x432e
 8548 3948 57390000 		.long	0x3957
 8549 394c 01       		.uleb128 0x1
 8550 394d 0B3F0000 		.long	0x3f0b
 8551 3951 01       		.uleb128 0x1
 8552 3952 0B3F0000 		.long	0x3f0b
 8553 3956 00       		.byte	0
 8554 3957 25       		.uleb128 0x25
 8555 3958 00000000 		.long	.LASF555
 8556 395c 01       		.byte	0x1
 8557 395d 2D       		.byte	0x2d
 8558 395e 2D       		.byte	0x2d
 8559 395f 0A       		.byte	0xa
 8560 3960 7E3A0000 		.long	0x3a7e
 8561 3964 03       		.uleb128 0x3
 8562 3965 2D       		.byte	0x2d
 8563 3966 2D       		.byte	0x2d
 8564 3967 0A       		.byte	0xa
GAS LISTING linobj/Ch02_03.s 			page 271


 8565 3968 200E0000 		.long	0xe20
 8566 396c 03       		.uleb128 0x3
 8567 396d 2D       		.byte	0x2d
 8568 396e 2D       		.byte	0x2d
 8569 396f 0A       		.byte	0xa
 8570 3970 E10D0000 		.long	0xde1
 8571 3974 03       		.uleb128 0x3
 8572 3975 2D       		.byte	0x2d
 8573 3976 2D       		.byte	0x2d
 8574 3977 0A       		.byte	0xa
 8575 3978 520E0000 		.long	0xe52
 8576 397c 03       		.uleb128 0x3
 8577 397d 2D       		.byte	0x2d
 8578 397e 2D       		.byte	0x2d
 8579 397f 0A       		.byte	0xa
 8580 3980 720E0000 		.long	0xe72
 8581 3984 54       		.uleb128 0x54
 8582 3985 C80D0000 		.long	0xdc8
 8583 3989 19       		.uleb128 0x19
 8584 398a 00000000 		.long	.LASF556
 8585 398e 2D       		.byte	0x2d
 8586 398f 61       		.byte	0x61
 8587 3990 1D       		.byte	0x1d
 8588 3991 00000000 		.long	.LASF557
 8589 3995 1E0B0000 		.long	0xb1e
 8590 3999 A3390000 		.long	0x39a3
 8591 399d 01       		.uleb128 0x1
 8592 399e 78420000 		.long	0x4278
 8593 39a2 00       		.byte	0
 8594 39a3 3A       		.uleb128 0x3a
 8595 39a4 00000000 		.long	.LASF558
 8596 39a8 2D       		.byte	0x2d
 8597 39a9 65       		.byte	0x65
 8598 39aa 1B       		.byte	0x1b
 8599 39ab 00000000 		.long	.LASF560
 8600 39af BE390000 		.long	0x39be
 8601 39b3 01       		.uleb128 0x1
 8602 39b4 7D420000 		.long	0x427d
 8603 39b8 01       		.uleb128 0x1
 8604 39b9 7D420000 		.long	0x427d
 8605 39bd 00       		.byte	0
 8606 39be 3B       		.uleb128 0x3b
 8607 39bf 00000000 		.long	.LASF561
 8608 39c3 69       		.byte	0x69
 8609 39c4 00000000 		.long	.LASF563
 8610 39c8 433F0000 		.long	0x3f43
 8611 39cc 3B       		.uleb128 0x3b
 8612 39cd 00000000 		.long	.LASF562
 8613 39d1 6D       		.byte	0x6d
 8614 39d2 00000000 		.long	.LASF564
 8615 39d6 433F0000 		.long	0x3f43
 8616 39da 3B       		.uleb128 0x3b
 8617 39db 00000000 		.long	.LASF565
 8618 39df 71       		.byte	0x71
 8619 39e0 00000000 		.long	.LASF566
 8620 39e4 433F0000 		.long	0x3f43
 8621 39e8 3B       		.uleb128 0x3b
GAS LISTING linobj/Ch02_03.s 			page 272


 8622 39e9 00000000 		.long	.LASF567
 8623 39ed 75       		.byte	0x75
 8624 39ee 00000000 		.long	.LASF568
 8625 39f2 433F0000 		.long	0x3f43
 8626 39f6 3B       		.uleb128 0x3b
 8627 39f7 00000000 		.long	.LASF569
 8628 39fb 79       		.byte	0x79
 8629 39fc 00000000 		.long	.LASF570
 8630 3a00 433F0000 		.long	0x3f43
 8631 3a04 07       		.uleb128 0x7
 8632 3a05 00000000 		.long	.LASF149
 8633 3a09 2D       		.byte	0x2d
 8634 3a0a 35       		.byte	0x35
 8635 3a0b 2D       		.byte	0x2d
 8636 3a0c A80E0000 		.long	0xea8
 8637 3a10 0E       		.uleb128 0xe
 8638 3a11 043A0000 		.long	0x3a04
 8639 3a15 07       		.uleb128 0x7
 8640 3a16 00000000 		.long	.LASF113
 8641 3a1a 2D       		.byte	0x2d
 8642 3a1b 36       		.byte	0x36
 8643 3a1c 2A       		.byte	0x2a
 8644 3a1d D40D0000 		.long	0xdd4
 8645 3a21 07       		.uleb128 0x7
 8646 3a22 00000000 		.long	.LASF115
 8647 3a26 2D       		.byte	0x2d
 8648 3a27 37       		.byte	0x37
 8649 3a28 30       		.byte	0x30
 8650 3a29 B50E0000 		.long	0xeb5
 8651 3a2d 07       		.uleb128 0x7
 8652 3a2e 00000000 		.long	.LASF120
 8653 3a32 2D       		.byte	0x2d
 8654 3a33 38       		.byte	0x38
 8655 3a34 2C       		.byte	0x2c
 8656 3a35 130E0000 		.long	0xe13
 8657 3a39 07       		.uleb128 0x7
 8658 3a3a 00000000 		.long	.LASF114
 8659 3a3e 2D       		.byte	0x2d
 8660 3a3f 3B       		.byte	0x3b
 8661 3a40 19       		.byte	0x19
 8662 3a41 BE490000 		.long	0x49be
 8663 3a45 07       		.uleb128 0x7
 8664 3a46 00000000 		.long	.LASF117
 8665 3a4a 2D       		.byte	0x2d
 8666 3a4b 3C       		.byte	0x3c
 8667 3a4c 1F       		.byte	0x1f
 8668 3a4d C3490000 		.long	0x49c3
 8669 3a51 25       		.uleb128 0x25
 8670 3a52 00000000 		.long	.LASF571
 8671 3a56 01       		.byte	0x1
 8672 3a57 2D       		.byte	0x2d
 8673 3a58 7D       		.byte	0x7d
 8674 3a59 0E       		.byte	0xe
 8675 3a5a 743A0000 		.long	0x3a74
 8676 3a5e 07       		.uleb128 0x7
 8677 3a5f 00000000 		.long	.LASF572
 8678 3a63 2D       		.byte	0x2d
GAS LISTING linobj/Ch02_03.s 			page 273


 8679 3a64 7E       		.byte	0x7e
 8680 3a65 41       		.byte	0x41
 8681 3a66 C20E0000 		.long	0xec2
 8682 3a6a 45       		.uleb128 0x45
 8683 3a6b 5F547000 		.string	"_Tp"
 8684 3a6f E1000000 		.long	0xe1
 8685 3a73 00       		.byte	0
 8686 3a74 11       		.uleb128 0x11
 8687 3a75 00000000 		.long	.LASF398
 8688 3a79 1E0B0000 		.long	0xb1e
 8689 3a7d 00       		.byte	0
 8690 3a7e 5A       		.uleb128 0x5a
 8691 3a7f 00000000 		.long	.LASF573
 8692 3a83 9B3C0000 		.long	0x3c9b
 8693 3a87 5B       		.uleb128 0x5b
 8694 3a88 00000000 		.long	.LASF600
 8695 3a8c CB330000 		.long	0x33cb
 8696 3a90 16       		.uleb128 0x16
 8697 3a91 00000000 		.long	.LASF574
 8698 3a95 2E       		.byte	0x2e
 8699 3a96 2704     		.value	0x427
 8700 3a98 11       		.byte	0x11
 8701 3a99 00000000 		.long	.LASF575
 8702 3a9d A53A0000 		.long	0x3aa5
 8703 3aa1 AB3A0000 		.long	0x3aab
 8704 3aa5 02       		.uleb128 0x2
 8705 3aa6 664B0000 		.long	0x4b66
 8706 3aaa 00       		.byte	0
 8707 3aab 46       		.uleb128 0x46
 8708 3aac 00000000 		.long	.LASF574
 8709 3ab0 2E       		.byte	0x2e
 8710 3ab1 2B04     		.value	0x42b
 8711 3ab3 00000000 		.long	.LASF576
 8712 3ab7 BF3A0000 		.long	0x3abf
 8713 3abb CA3A0000 		.long	0x3aca
 8714 3abf 02       		.uleb128 0x2
 8715 3ac0 664B0000 		.long	0x4b66
 8716 3ac4 01       		.uleb128 0x1
 8717 3ac5 6B4B0000 		.long	0x4b6b
 8718 3ac9 00       		.byte	0
 8719 3aca 33       		.uleb128 0x33
 8720 3acb 00000000 		.long	.LASF114
 8721 3acf 2E       		.byte	0x2e
 8722 3ad0 2004     		.value	0x420
 8723 3ad2 31       		.byte	0x31
 8724 3ad3 0B2D0000 		.long	0x2d0b
 8725 3ad7 04       		.uleb128 0x4
 8726 3ad8 00000000 		.long	.LASF577
 8727 3adc 2E       		.byte	0x2e
 8728 3add 4204     		.value	0x442
 8729 3adf 07       		.byte	0x7
 8730 3ae0 00000000 		.long	.LASF578
 8731 3ae4 CA3A0000 		.long	0x3aca
 8732 3ae8 F03A0000 		.long	0x3af0
 8733 3aec F63A0000 		.long	0x3af6
 8734 3af0 02       		.uleb128 0x2
 8735 3af1 704B0000 		.long	0x4b70
GAS LISTING linobj/Ch02_03.s 			page 274


 8736 3af5 00       		.byte	0
 8737 3af6 33       		.uleb128 0x33
 8738 3af7 00000000 		.long	.LASF113
 8739 3afb 2E       		.byte	0x2e
 8740 3afc 2104     		.value	0x421
 8741 3afe 2F       		.byte	0x2f
 8742 3aff FF2C0000 		.long	0x2cff
 8743 3b03 04       		.uleb128 0x4
 8744 3b04 00000000 		.long	.LASF579
 8745 3b08 2E       		.byte	0x2e
 8746 3b09 4704     		.value	0x447
 8747 3b0b 07       		.byte	0x7
 8748 3b0c 00000000 		.long	.LASF580
 8749 3b10 F63A0000 		.long	0x3af6
 8750 3b14 1C3B0000 		.long	0x3b1c
 8751 3b18 223B0000 		.long	0x3b22
 8752 3b1c 02       		.uleb128 0x2
 8753 3b1d 704B0000 		.long	0x4b70
 8754 3b21 00       		.byte	0
 8755 3b22 04       		.uleb128 0x4
 8756 3b23 00000000 		.long	.LASF581
 8757 3b27 2E       		.byte	0x2e
 8758 3b28 4C04     		.value	0x44c
 8759 3b2a 07       		.byte	0x7
 8760 3b2b 00000000 		.long	.LASF582
 8761 3b2f 754B0000 		.long	0x4b75
 8762 3b33 3B3B0000 		.long	0x3b3b
 8763 3b37 413B0000 		.long	0x3b41
 8764 3b3b 02       		.uleb128 0x2
 8765 3b3c 664B0000 		.long	0x4b66
 8766 3b40 00       		.byte	0
 8767 3b41 04       		.uleb128 0x4
 8768 3b42 00000000 		.long	.LASF581
 8769 3b46 2E       		.byte	0x2e
 8770 3b47 5404     		.value	0x454
 8771 3b49 07       		.byte	0x7
 8772 3b4a 00000000 		.long	.LASF583
 8773 3b4e 7E3A0000 		.long	0x3a7e
 8774 3b52 5A3B0000 		.long	0x3b5a
 8775 3b56 653B0000 		.long	0x3b65
 8776 3b5a 02       		.uleb128 0x2
 8777 3b5b 664B0000 		.long	0x4b66
 8778 3b5f 01       		.uleb128 0x1
 8779 3b60 ED000000 		.long	0xed
 8780 3b64 00       		.byte	0
 8781 3b65 04       		.uleb128 0x4
 8782 3b66 00000000 		.long	.LASF584
 8783 3b6a 2E       		.byte	0x2e
 8784 3b6b 5A04     		.value	0x45a
 8785 3b6d 07       		.byte	0x7
 8786 3b6e 00000000 		.long	.LASF585
 8787 3b72 754B0000 		.long	0x4b75
 8788 3b76 7E3B0000 		.long	0x3b7e
 8789 3b7a 843B0000 		.long	0x3b84
 8790 3b7e 02       		.uleb128 0x2
 8791 3b7f 664B0000 		.long	0x4b66
 8792 3b83 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 275


 8793 3b84 04       		.uleb128 0x4
 8794 3b85 00000000 		.long	.LASF584
 8795 3b89 2E       		.byte	0x2e
 8796 3b8a 6204     		.value	0x462
 8797 3b8c 07       		.byte	0x7
 8798 3b8d 00000000 		.long	.LASF586
 8799 3b91 7E3A0000 		.long	0x3a7e
 8800 3b95 9D3B0000 		.long	0x3b9d
 8801 3b99 A83B0000 		.long	0x3ba8
 8802 3b9d 02       		.uleb128 0x2
 8803 3b9e 664B0000 		.long	0x4b66
 8804 3ba2 01       		.uleb128 0x1
 8805 3ba3 ED000000 		.long	0xed
 8806 3ba7 00       		.byte	0
 8807 3ba8 04       		.uleb128 0x4
 8808 3ba9 00000000 		.long	.LASF281
 8809 3bad 2E       		.byte	0x2e
 8810 3bae 6804     		.value	0x468
 8811 3bb0 07       		.byte	0x7
 8812 3bb1 00000000 		.long	.LASF587
 8813 3bb5 CA3A0000 		.long	0x3aca
 8814 3bb9 C13B0000 		.long	0x3bc1
 8815 3bbd CC3B0000 		.long	0x3bcc
 8816 3bc1 02       		.uleb128 0x2
 8817 3bc2 704B0000 		.long	0x4b70
 8818 3bc6 01       		.uleb128 0x1
 8819 3bc7 CC3B0000 		.long	0x3bcc
 8820 3bcb 00       		.byte	0
 8821 3bcc 33       		.uleb128 0x33
 8822 3bcd 00000000 		.long	.LASF411
 8823 3bd1 2E       		.byte	0x2e
 8824 3bd2 1F04     		.value	0x41f
 8825 3bd4 37       		.byte	0x37
 8826 3bd5 F32C0000 		.long	0x2cf3
 8827 3bd9 04       		.uleb128 0x4
 8828 3bda 00000000 		.long	.LASF292
 8829 3bde 2E       		.byte	0x2e
 8830 3bdf 6D04     		.value	0x46d
 8831 3be1 07       		.byte	0x7
 8832 3be2 00000000 		.long	.LASF588
 8833 3be6 754B0000 		.long	0x4b75
 8834 3bea F23B0000 		.long	0x3bf2
 8835 3bee FD3B0000 		.long	0x3bfd
 8836 3bf2 02       		.uleb128 0x2
 8837 3bf3 664B0000 		.long	0x4b66
 8838 3bf7 01       		.uleb128 0x1
 8839 3bf8 CC3B0000 		.long	0x3bcc
 8840 3bfc 00       		.byte	0
 8841 3bfd 04       		.uleb128 0x4
 8842 3bfe 00000000 		.long	.LASF589
 8843 3c02 2E       		.byte	0x2e
 8844 3c03 7204     		.value	0x472
 8845 3c05 07       		.byte	0x7
 8846 3c06 00000000 		.long	.LASF590
 8847 3c0a 7E3A0000 		.long	0x3a7e
 8848 3c0e 163C0000 		.long	0x3c16
 8849 3c12 213C0000 		.long	0x3c21
GAS LISTING linobj/Ch02_03.s 			page 276


 8850 3c16 02       		.uleb128 0x2
 8851 3c17 704B0000 		.long	0x4b70
 8852 3c1b 01       		.uleb128 0x1
 8853 3c1c CC3B0000 		.long	0x3bcc
 8854 3c20 00       		.byte	0
 8855 3c21 04       		.uleb128 0x4
 8856 3c22 00000000 		.long	.LASF591
 8857 3c26 2E       		.byte	0x2e
 8858 3c27 7704     		.value	0x477
 8859 3c29 07       		.byte	0x7
 8860 3c2a 00000000 		.long	.LASF592
 8861 3c2e 754B0000 		.long	0x4b75
 8862 3c32 3A3C0000 		.long	0x3c3a
 8863 3c36 453C0000 		.long	0x3c45
 8864 3c3a 02       		.uleb128 0x2
 8865 3c3b 664B0000 		.long	0x4b66
 8866 3c3f 01       		.uleb128 0x1
 8867 3c40 CC3B0000 		.long	0x3bcc
 8868 3c44 00       		.byte	0
 8869 3c45 04       		.uleb128 0x4
 8870 3c46 00000000 		.long	.LASF593
 8871 3c4a 2E       		.byte	0x2e
 8872 3c4b 7C04     		.value	0x47c
 8873 3c4d 07       		.byte	0x7
 8874 3c4e 00000000 		.long	.LASF594
 8875 3c52 7E3A0000 		.long	0x3a7e
 8876 3c56 5E3C0000 		.long	0x3c5e
 8877 3c5a 693C0000 		.long	0x3c69
 8878 3c5e 02       		.uleb128 0x2
 8879 3c5f 704B0000 		.long	0x4b70
 8880 3c63 01       		.uleb128 0x1
 8881 3c64 CC3B0000 		.long	0x3bcc
 8882 3c68 00       		.byte	0
 8883 3c69 04       		.uleb128 0x4
 8884 3c6a 00000000 		.long	.LASF595
 8885 3c6e 2E       		.byte	0x2e
 8886 3c6f 8104     		.value	0x481
 8887 3c71 07       		.byte	0x7
 8888 3c72 00000000 		.long	.LASF596
 8889 3c76 6B4B0000 		.long	0x4b6b
 8890 3c7a 823C0000 		.long	0x3c82
 8891 3c7e 883C0000 		.long	0x3c88
 8892 3c82 02       		.uleb128 0x2
 8893 3c83 704B0000 		.long	0x4b70
 8894 3c87 00       		.byte	0
 8895 3c88 11       		.uleb128 0x11
 8896 3c89 00000000 		.long	.LASF597
 8897 3c8d CB330000 		.long	0x33cb
 8898 3c91 11       		.uleb128 0x11
 8899 3c92 00000000 		.long	.LASF598
 8900 3c96 DD0E0000 		.long	0xedd
 8901 3c9a 00       		.byte	0
 8902 3c9b 0E       		.uleb128 0xe
 8903 3c9c 7E3A0000 		.long	0x3a7e
 8904 3ca0 5A       		.uleb128 0x5a
 8905 3ca1 00000000 		.long	.LASF599
 8906 3ca5 BD3E0000 		.long	0x3ebd
GAS LISTING linobj/Ch02_03.s 			page 277


 8907 3ca9 5B       		.uleb128 0x5b
 8908 3caa 00000000 		.long	.LASF600
 8909 3cae BC020000 		.long	0x2bc
 8910 3cb2 16       		.uleb128 0x16
 8911 3cb3 00000000 		.long	.LASF574
 8912 3cb7 2E       		.byte	0x2e
 8913 3cb8 2704     		.value	0x427
 8914 3cba 11       		.byte	0x11
 8915 3cbb 00000000 		.long	.LASF601
 8916 3cbf C73C0000 		.long	0x3cc7
 8917 3cc3 CD3C0000 		.long	0x3ccd
 8918 3cc7 02       		.uleb128 0x2
 8919 3cc8 7A4B0000 		.long	0x4b7a
 8920 3ccc 00       		.byte	0
 8921 3ccd 46       		.uleb128 0x46
 8922 3cce 00000000 		.long	.LASF574
 8923 3cd2 2E       		.byte	0x2e
 8924 3cd3 2B04     		.value	0x42b
 8925 3cd5 00000000 		.long	.LASF602
 8926 3cd9 E13C0000 		.long	0x3ce1
 8927 3cdd EC3C0000 		.long	0x3cec
 8928 3ce1 02       		.uleb128 0x2
 8929 3ce2 7A4B0000 		.long	0x4b7a
 8930 3ce6 01       		.uleb128 0x1
 8931 3ce7 7F4B0000 		.long	0x4b7f
 8932 3ceb 00       		.byte	0
 8933 3cec 33       		.uleb128 0x33
 8934 3ced 00000000 		.long	.LASF114
 8935 3cf1 2E       		.byte	0x2e
 8936 3cf2 2004     		.value	0x420
 8937 3cf4 31       		.byte	0x31
 8938 3cf5 332A0000 		.long	0x2a33
 8939 3cf9 04       		.uleb128 0x4
 8940 3cfa 00000000 		.long	.LASF577
 8941 3cfe 2E       		.byte	0x2e
 8942 3cff 4204     		.value	0x442
 8943 3d01 07       		.byte	0x7
 8944 3d02 00000000 		.long	.LASF603
 8945 3d06 EC3C0000 		.long	0x3cec
 8946 3d0a 123D0000 		.long	0x3d12
 8947 3d0e 183D0000 		.long	0x3d18
 8948 3d12 02       		.uleb128 0x2
 8949 3d13 844B0000 		.long	0x4b84
 8950 3d17 00       		.byte	0
 8951 3d18 33       		.uleb128 0x33
 8952 3d19 00000000 		.long	.LASF113
 8953 3d1d 2E       		.byte	0x2e
 8954 3d1e 2104     		.value	0x421
 8955 3d20 2F       		.byte	0x2f
 8956 3d21 272A0000 		.long	0x2a27
 8957 3d25 04       		.uleb128 0x4
 8958 3d26 00000000 		.long	.LASF579
 8959 3d2a 2E       		.byte	0x2e
 8960 3d2b 4704     		.value	0x447
 8961 3d2d 07       		.byte	0x7
 8962 3d2e 00000000 		.long	.LASF604
 8963 3d32 183D0000 		.long	0x3d18
GAS LISTING linobj/Ch02_03.s 			page 278


 8964 3d36 3E3D0000 		.long	0x3d3e
 8965 3d3a 443D0000 		.long	0x3d44
 8966 3d3e 02       		.uleb128 0x2
 8967 3d3f 844B0000 		.long	0x4b84
 8968 3d43 00       		.byte	0
 8969 3d44 04       		.uleb128 0x4
 8970 3d45 00000000 		.long	.LASF581
 8971 3d49 2E       		.byte	0x2e
 8972 3d4a 4C04     		.value	0x44c
 8973 3d4c 07       		.byte	0x7
 8974 3d4d 00000000 		.long	.LASF605
 8975 3d51 894B0000 		.long	0x4b89
 8976 3d55 5D3D0000 		.long	0x3d5d
 8977 3d59 633D0000 		.long	0x3d63
 8978 3d5d 02       		.uleb128 0x2
 8979 3d5e 7A4B0000 		.long	0x4b7a
 8980 3d62 00       		.byte	0
 8981 3d63 04       		.uleb128 0x4
 8982 3d64 00000000 		.long	.LASF581
 8983 3d68 2E       		.byte	0x2e
 8984 3d69 5404     		.value	0x454
 8985 3d6b 07       		.byte	0x7
 8986 3d6c 00000000 		.long	.LASF606
 8987 3d70 A03C0000 		.long	0x3ca0
 8988 3d74 7C3D0000 		.long	0x3d7c
 8989 3d78 873D0000 		.long	0x3d87
 8990 3d7c 02       		.uleb128 0x2
 8991 3d7d 7A4B0000 		.long	0x4b7a
 8992 3d81 01       		.uleb128 0x1
 8993 3d82 ED000000 		.long	0xed
 8994 3d86 00       		.byte	0
 8995 3d87 04       		.uleb128 0x4
 8996 3d88 00000000 		.long	.LASF584
 8997 3d8c 2E       		.byte	0x2e
 8998 3d8d 5A04     		.value	0x45a
 8999 3d8f 07       		.byte	0x7
 9000 3d90 00000000 		.long	.LASF607
 9001 3d94 894B0000 		.long	0x4b89
 9002 3d98 A03D0000 		.long	0x3da0
 9003 3d9c A63D0000 		.long	0x3da6
 9004 3da0 02       		.uleb128 0x2
 9005 3da1 7A4B0000 		.long	0x4b7a
 9006 3da5 00       		.byte	0
 9007 3da6 04       		.uleb128 0x4
 9008 3da7 00000000 		.long	.LASF584
 9009 3dab 2E       		.byte	0x2e
 9010 3dac 6204     		.value	0x462
 9011 3dae 07       		.byte	0x7
 9012 3daf 00000000 		.long	.LASF608
 9013 3db3 A03C0000 		.long	0x3ca0
 9014 3db7 BF3D0000 		.long	0x3dbf
 9015 3dbb CA3D0000 		.long	0x3dca
 9016 3dbf 02       		.uleb128 0x2
 9017 3dc0 7A4B0000 		.long	0x4b7a
 9018 3dc4 01       		.uleb128 0x1
 9019 3dc5 ED000000 		.long	0xed
 9020 3dc9 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 279


 9021 3dca 04       		.uleb128 0x4
 9022 3dcb 00000000 		.long	.LASF281
 9023 3dcf 2E       		.byte	0x2e
 9024 3dd0 6804     		.value	0x468
 9025 3dd2 07       		.byte	0x7
 9026 3dd3 00000000 		.long	.LASF609
 9027 3dd7 EC3C0000 		.long	0x3cec
 9028 3ddb E33D0000 		.long	0x3de3
 9029 3ddf EE3D0000 		.long	0x3dee
 9030 3de3 02       		.uleb128 0x2
 9031 3de4 844B0000 		.long	0x4b84
 9032 3de8 01       		.uleb128 0x1
 9033 3de9 EE3D0000 		.long	0x3dee
 9034 3ded 00       		.byte	0
 9035 3dee 33       		.uleb128 0x33
 9036 3def 00000000 		.long	.LASF411
 9037 3df3 2E       		.byte	0x2e
 9038 3df4 1F04     		.value	0x41f
 9039 3df6 37       		.byte	0x37
 9040 3df7 1B2A0000 		.long	0x2a1b
 9041 3dfb 04       		.uleb128 0x4
 9042 3dfc 00000000 		.long	.LASF292
 9043 3e00 2E       		.byte	0x2e
 9044 3e01 6D04     		.value	0x46d
 9045 3e03 07       		.byte	0x7
 9046 3e04 00000000 		.long	.LASF610
 9047 3e08 894B0000 		.long	0x4b89
 9048 3e0c 143E0000 		.long	0x3e14
 9049 3e10 1F3E0000 		.long	0x3e1f
 9050 3e14 02       		.uleb128 0x2
 9051 3e15 7A4B0000 		.long	0x4b7a
 9052 3e19 01       		.uleb128 0x1
 9053 3e1a EE3D0000 		.long	0x3dee
 9054 3e1e 00       		.byte	0
 9055 3e1f 04       		.uleb128 0x4
 9056 3e20 00000000 		.long	.LASF589
 9057 3e24 2E       		.byte	0x2e
 9058 3e25 7204     		.value	0x472
 9059 3e27 07       		.byte	0x7
 9060 3e28 00000000 		.long	.LASF611
 9061 3e2c A03C0000 		.long	0x3ca0
 9062 3e30 383E0000 		.long	0x3e38
 9063 3e34 433E0000 		.long	0x3e43
 9064 3e38 02       		.uleb128 0x2
 9065 3e39 844B0000 		.long	0x4b84
 9066 3e3d 01       		.uleb128 0x1
 9067 3e3e EE3D0000 		.long	0x3dee
 9068 3e42 00       		.byte	0
 9069 3e43 04       		.uleb128 0x4
 9070 3e44 00000000 		.long	.LASF591
 9071 3e48 2E       		.byte	0x2e
 9072 3e49 7704     		.value	0x477
 9073 3e4b 07       		.byte	0x7
 9074 3e4c 00000000 		.long	.LASF612
 9075 3e50 894B0000 		.long	0x4b89
 9076 3e54 5C3E0000 		.long	0x3e5c
 9077 3e58 673E0000 		.long	0x3e67
GAS LISTING linobj/Ch02_03.s 			page 280


 9078 3e5c 02       		.uleb128 0x2
 9079 3e5d 7A4B0000 		.long	0x4b7a
 9080 3e61 01       		.uleb128 0x1
 9081 3e62 EE3D0000 		.long	0x3dee
 9082 3e66 00       		.byte	0
 9083 3e67 04       		.uleb128 0x4
 9084 3e68 00000000 		.long	.LASF593
 9085 3e6c 2E       		.byte	0x2e
 9086 3e6d 7C04     		.value	0x47c
 9087 3e6f 07       		.byte	0x7
 9088 3e70 00000000 		.long	.LASF613
 9089 3e74 A03C0000 		.long	0x3ca0
 9090 3e78 803E0000 		.long	0x3e80
 9091 3e7c 8B3E0000 		.long	0x3e8b
 9092 3e80 02       		.uleb128 0x2
 9093 3e81 844B0000 		.long	0x4b84
 9094 3e85 01       		.uleb128 0x1
 9095 3e86 EE3D0000 		.long	0x3dee
 9096 3e8a 00       		.byte	0
 9097 3e8b 04       		.uleb128 0x4
 9098 3e8c 00000000 		.long	.LASF595
 9099 3e90 2E       		.byte	0x2e
 9100 3e91 8104     		.value	0x481
 9101 3e93 07       		.byte	0x7
 9102 3e94 00000000 		.long	.LASF614
 9103 3e98 7F4B0000 		.long	0x4b7f
 9104 3e9c A43E0000 		.long	0x3ea4
 9105 3ea0 AA3E0000 		.long	0x3eaa
 9106 3ea4 02       		.uleb128 0x2
 9107 3ea5 844B0000 		.long	0x4b84
 9108 3ea9 00       		.byte	0
 9109 3eaa 11       		.uleb128 0x11
 9110 3eab 00000000 		.long	.LASF597
 9111 3eaf BC020000 		.long	0x2bc
 9112 3eb3 11       		.uleb128 0x11
 9113 3eb4 00000000 		.long	.LASF598
 9114 3eb8 DD0E0000 		.long	0xedd
 9115 3ebc 00       		.byte	0
 9116 3ebd 0E       		.uleb128 0xe
 9117 3ebe A03C0000 		.long	0x3ca0
 9118 3ec2 00       		.byte	0
 9119 3ec3 0A       		.uleb128 0xa
 9120 3ec4 00000000 		.long	.LASF615
 9121 3ec8 2A       		.byte	0x2a
 9122 3ec9 9901     		.value	0x199
 9123 3ecb 14       		.byte	0x14
 9124 3ecc DF3E0000 		.long	0x3edf
 9125 3ed0 DF3E0000 		.long	0x3edf
 9126 3ed4 01       		.uleb128 0x1
 9127 3ed5 30310000 		.long	0x3130
 9128 3ed9 01       		.uleb128 0x1
 9129 3eda 07360000 		.long	0x3607
 9130 3ede 00       		.byte	0
 9131 3edf 18       		.uleb128 0x18
 9132 3ee0 10       		.byte	0x10
 9133 3ee1 04       		.byte	0x4
 9134 3ee2 00000000 		.long	.LASF616
GAS LISTING linobj/Ch02_03.s 			page 281


 9135 3ee6 10       		.uleb128 0x10
 9136 3ee7 00000000 		.long	.LASF617
 9137 3eeb 2A       		.byte	0x2a
 9138 3eec FC01     		.value	0x1fc
 9139 3eee 16       		.byte	0x16
 9140 3eef 00000000 		.long	.LASF618
 9141 3ef3 0B3F0000 		.long	0x3f0b
 9142 3ef7 0B3F0000 		.long	0x3f0b
 9143 3efb 01       		.uleb128 0x1
 9144 3efc 30310000 		.long	0x3130
 9145 3f00 01       		.uleb128 0x1
 9146 3f01 07360000 		.long	0x3607
 9147 3f05 01       		.uleb128 0x1
 9148 3f06 ED000000 		.long	0xed
 9149 3f0a 00       		.byte	0
 9150 3f0b 18       		.uleb128 0x18
 9151 3f0c 08       		.byte	0x8
 9152 3f0d 05       		.byte	0x5
 9153 3f0e 00000000 		.long	.LASF619
 9154 3f12 10       		.uleb128 0x10
 9155 3f13 00000000 		.long	.LASF620
 9156 3f17 2A       		.byte	0x2a
 9157 3f18 0102     		.value	0x201
 9158 3f1a 1F       		.byte	0x1f
 9159 3f1b 00000000 		.long	.LASF621
 9160 3f1f 373F0000 		.long	0x3f37
 9161 3f23 373F0000 		.long	0x3f37
 9162 3f27 01       		.uleb128 0x1
 9163 3f28 30310000 		.long	0x3130
 9164 3f2c 01       		.uleb128 0x1
 9165 3f2d 07360000 		.long	0x3607
 9166 3f31 01       		.uleb128 0x1
 9167 3f32 ED000000 		.long	0xed
 9168 3f36 00       		.byte	0
 9169 3f37 18       		.uleb128 0x18
 9170 3f38 08       		.byte	0x8
 9171 3f39 07       		.byte	0x7
 9172 3f3a 00000000 		.long	.LASF622
 9173 3f3e 7B       		.uleb128 0x7b
 9174 3f3f 00000000 		.long	.LASF880
 9175 3f43 18       		.uleb128 0x18
 9176 3f44 01       		.byte	0x1
 9177 3f45 02       		.byte	0x2
 9178 3f46 00000000 		.long	.LASF623
 9179 3f4a 0E       		.uleb128 0xe
 9180 3f4b 433F0000 		.long	0x3f43
 9181 3f4f 18       		.uleb128 0x18
 9182 3f50 01       		.byte	0x1
 9183 3f51 08       		.byte	0x8
 9184 3f52 00000000 		.long	.LASF624
 9185 3f56 18       		.uleb128 0x18
 9186 3f57 01       		.byte	0x1
 9187 3f58 06       		.byte	0x6
 9188 3f59 00000000 		.long	.LASF625
 9189 3f5d 18       		.uleb128 0x18
 9190 3f5e 02       		.byte	0x2
 9191 3f5f 05       		.byte	0x5
GAS LISTING linobj/Ch02_03.s 			page 282


 9192 3f60 00000000 		.long	.LASF626
 9193 3f64 18       		.uleb128 0x18
 9194 3f65 02       		.byte	0x2
 9195 3f66 10       		.byte	0x10
 9196 3f67 00000000 		.long	.LASF627
 9197 3f6b 18       		.uleb128 0x18
 9198 3f6c 04       		.byte	0x4
 9199 3f6d 10       		.byte	0x10
 9200 3f6e 00000000 		.long	.LASF628
 9201 3f72 0B       		.uleb128 0xb
 9202 3f73 47050000 		.long	0x547
 9203 3f77 0B       		.uleb128 0xb
 9204 3f78 09070000 		.long	0x709
 9205 3f7c 13       		.uleb128 0x13
 9206 3f7d 09070000 		.long	0x709
 9207 3f81 49       		.uleb128 0x49
 9208 3f82 47050000 		.long	0x547
 9209 3f86 13       		.uleb128 0x13
 9210 3f87 47050000 		.long	0x547
 9211 3f8b 0B       		.uleb128 0xb
 9212 3f8c 5E070000 		.long	0x75e
 9213 3f90 13       		.uleb128 0x13
 9214 3f91 92070000 		.long	0x792
 9215 3f95 13       		.uleb128 0x13
 9216 3f96 9F070000 		.long	0x79f
 9217 3f9a 0B       		.uleb128 0xb
 9218 3f9b 9F070000 		.long	0x79f
 9219 3f9f 0B       		.uleb128 0xb
 9220 3fa0 92070000 		.long	0x792
 9221 3fa4 13       		.uleb128 0x13
 9222 3fa5 DA080000 		.long	0x8da
 9223 3fa9 25       		.uleb128 0x25
 9224 3faa 00000000 		.long	.LASF629
 9225 3fae 60       		.byte	0x60
 9226 3faf 2F       		.byte	0x2f
 9227 3fb0 33       		.byte	0x33
 9228 3fb1 08       		.byte	0x8
 9229 3fb2 EF400000 		.long	0x40ef
 9230 3fb6 08       		.uleb128 0x8
 9231 3fb7 00000000 		.long	.LASF630
 9232 3fbb 2F       		.byte	0x2f
 9233 3fbc 37       		.byte	0x37
 9234 3fbd 09       		.byte	0x9
 9235 3fbe CB330000 		.long	0x33cb
 9236 3fc2 00       		.byte	0
 9237 3fc3 08       		.uleb128 0x8
 9238 3fc4 00000000 		.long	.LASF631
 9239 3fc8 2F       		.byte	0x2f
 9240 3fc9 38       		.byte	0x38
 9241 3fca 09       		.byte	0x9
 9242 3fcb CB330000 		.long	0x33cb
 9243 3fcf 08       		.byte	0x8
 9244 3fd0 08       		.uleb128 0x8
 9245 3fd1 00000000 		.long	.LASF632
 9246 3fd5 2F       		.byte	0x2f
 9247 3fd6 3E       		.byte	0x3e
 9248 3fd7 09       		.byte	0x9
GAS LISTING linobj/Ch02_03.s 			page 283


 9249 3fd8 CB330000 		.long	0x33cb
 9250 3fdc 10       		.byte	0x10
 9251 3fdd 08       		.uleb128 0x8
 9252 3fde 00000000 		.long	.LASF633
 9253 3fe2 2F       		.byte	0x2f
 9254 3fe3 44       		.byte	0x44
 9255 3fe4 09       		.byte	0x9
 9256 3fe5 CB330000 		.long	0x33cb
 9257 3fe9 18       		.byte	0x18
 9258 3fea 08       		.uleb128 0x8
 9259 3feb 00000000 		.long	.LASF634
 9260 3fef 2F       		.byte	0x2f
 9261 3ff0 45       		.byte	0x45
 9262 3ff1 09       		.byte	0x9
 9263 3ff2 CB330000 		.long	0x33cb
 9264 3ff6 20       		.byte	0x20
 9265 3ff7 08       		.uleb128 0x8
 9266 3ff8 00000000 		.long	.LASF635
 9267 3ffc 2F       		.byte	0x2f
 9268 3ffd 46       		.byte	0x46
 9269 3ffe 09       		.byte	0x9
 9270 3fff CB330000 		.long	0x33cb
 9271 4003 28       		.byte	0x28
 9272 4004 08       		.uleb128 0x8
 9273 4005 00000000 		.long	.LASF636
 9274 4009 2F       		.byte	0x2f
 9275 400a 47       		.byte	0x47
 9276 400b 09       		.byte	0x9
 9277 400c CB330000 		.long	0x33cb
 9278 4010 30       		.byte	0x30
 9279 4011 08       		.uleb128 0x8
 9280 4012 00000000 		.long	.LASF637
 9281 4016 2F       		.byte	0x2f
 9282 4017 48       		.byte	0x48
 9283 4018 09       		.byte	0x9
 9284 4019 CB330000 		.long	0x33cb
 9285 401d 38       		.byte	0x38
 9286 401e 08       		.uleb128 0x8
 9287 401f 00000000 		.long	.LASF638
 9288 4023 2F       		.byte	0x2f
 9289 4024 49       		.byte	0x49
 9290 4025 09       		.byte	0x9
 9291 4026 CB330000 		.long	0x33cb
 9292 402a 40       		.byte	0x40
 9293 402b 08       		.uleb128 0x8
 9294 402c 00000000 		.long	.LASF639
 9295 4030 2F       		.byte	0x2f
 9296 4031 4A       		.byte	0x4a
 9297 4032 09       		.byte	0x9
 9298 4033 CB330000 		.long	0x33cb
 9299 4037 48       		.byte	0x48
 9300 4038 08       		.uleb128 0x8
 9301 4039 00000000 		.long	.LASF640
 9302 403d 2F       		.byte	0x2f
 9303 403e 4B       		.byte	0x4b
 9304 403f 08       		.byte	0x8
 9305 4040 E1000000 		.long	0xe1
GAS LISTING linobj/Ch02_03.s 			page 284


 9306 4044 50       		.byte	0x50
 9307 4045 08       		.uleb128 0x8
 9308 4046 00000000 		.long	.LASF641
 9309 404a 2F       		.byte	0x2f
 9310 404b 4C       		.byte	0x4c
 9311 404c 08       		.byte	0x8
 9312 404d E1000000 		.long	0xe1
 9313 4051 51       		.byte	0x51
 9314 4052 08       		.uleb128 0x8
 9315 4053 00000000 		.long	.LASF642
 9316 4057 2F       		.byte	0x2f
 9317 4058 4E       		.byte	0x4e
 9318 4059 08       		.byte	0x8
 9319 405a E1000000 		.long	0xe1
 9320 405e 52       		.byte	0x52
 9321 405f 08       		.uleb128 0x8
 9322 4060 00000000 		.long	.LASF643
 9323 4064 2F       		.byte	0x2f
 9324 4065 50       		.byte	0x50
 9325 4066 08       		.byte	0x8
 9326 4067 E1000000 		.long	0xe1
 9327 406b 53       		.byte	0x53
 9328 406c 08       		.uleb128 0x8
 9329 406d 00000000 		.long	.LASF644
 9330 4071 2F       		.byte	0x2f
 9331 4072 52       		.byte	0x52
 9332 4073 08       		.byte	0x8
 9333 4074 E1000000 		.long	0xe1
 9334 4078 54       		.byte	0x54
 9335 4079 08       		.uleb128 0x8
 9336 407a 00000000 		.long	.LASF645
 9337 407e 2F       		.byte	0x2f
 9338 407f 54       		.byte	0x54
 9339 4080 08       		.byte	0x8
 9340 4081 E1000000 		.long	0xe1
 9341 4085 55       		.byte	0x55
 9342 4086 08       		.uleb128 0x8
 9343 4087 00000000 		.long	.LASF646
 9344 408b 2F       		.byte	0x2f
 9345 408c 5B       		.byte	0x5b
 9346 408d 08       		.byte	0x8
 9347 408e E1000000 		.long	0xe1
 9348 4092 56       		.byte	0x56
 9349 4093 08       		.uleb128 0x8
 9350 4094 00000000 		.long	.LASF647
 9351 4098 2F       		.byte	0x2f
 9352 4099 5C       		.byte	0x5c
 9353 409a 08       		.byte	0x8
 9354 409b E1000000 		.long	0xe1
 9355 409f 57       		.byte	0x57
 9356 40a0 08       		.uleb128 0x8
 9357 40a1 00000000 		.long	.LASF648
 9358 40a5 2F       		.byte	0x2f
 9359 40a6 5F       		.byte	0x5f
 9360 40a7 08       		.byte	0x8
 9361 40a8 E1000000 		.long	0xe1
 9362 40ac 58       		.byte	0x58
GAS LISTING linobj/Ch02_03.s 			page 285


 9363 40ad 08       		.uleb128 0x8
 9364 40ae 00000000 		.long	.LASF649
 9365 40b2 2F       		.byte	0x2f
 9366 40b3 61       		.byte	0x61
 9367 40b4 08       		.byte	0x8
 9368 40b5 E1000000 		.long	0xe1
 9369 40b9 59       		.byte	0x59
 9370 40ba 08       		.uleb128 0x8
 9371 40bb 00000000 		.long	.LASF650
 9372 40bf 2F       		.byte	0x2f
 9373 40c0 63       		.byte	0x63
 9374 40c1 08       		.byte	0x8
 9375 40c2 E1000000 		.long	0xe1
 9376 40c6 5A       		.byte	0x5a
 9377 40c7 08       		.uleb128 0x8
 9378 40c8 00000000 		.long	.LASF651
 9379 40cc 2F       		.byte	0x2f
 9380 40cd 65       		.byte	0x65
 9381 40ce 08       		.byte	0x8
 9382 40cf E1000000 		.long	0xe1
 9383 40d3 5B       		.byte	0x5b
 9384 40d4 08       		.uleb128 0x8
 9385 40d5 00000000 		.long	.LASF652
 9386 40d9 2F       		.byte	0x2f
 9387 40da 6C       		.byte	0x6c
 9388 40db 08       		.byte	0x8
 9389 40dc E1000000 		.long	0xe1
 9390 40e0 5C       		.byte	0x5c
 9391 40e1 08       		.uleb128 0x8
 9392 40e2 00000000 		.long	.LASF653
 9393 40e6 2F       		.byte	0x2f
 9394 40e7 6D       		.byte	0x6d
 9395 40e8 08       		.byte	0x8
 9396 40e9 E1000000 		.long	0xe1
 9397 40ed 5D       		.byte	0x5d
 9398 40ee 00       		.byte	0
 9399 40ef 0F       		.uleb128 0xf
 9400 40f0 00000000 		.long	.LASF654
 9401 40f4 2F       		.byte	0x2f
 9402 40f5 7A       		.byte	0x7a
 9403 40f6 0E       		.byte	0xe
 9404 40f7 CB330000 		.long	0x33cb
 9405 40fb 0A410000 		.long	0x410a
 9406 40ff 01       		.uleb128 0x1
 9407 4100 ED000000 		.long	0xed
 9408 4104 01       		.uleb128 0x1
 9409 4105 BC020000 		.long	0x2bc
 9410 4109 00       		.byte	0
 9411 410a 40       		.uleb128 0x40
 9412 410b 00000000 		.long	.LASF656
 9413 410f 2F       		.byte	0x2f
 9414 4110 7D       		.byte	0x7d
 9415 4111 16       		.byte	0x16
 9416 4112 16410000 		.long	0x4116
 9417 4116 0B       		.uleb128 0xb
 9418 4117 A93F0000 		.long	0x3fa9
 9419 411b 07       		.uleb128 0x7
GAS LISTING linobj/Ch02_03.s 			page 286


 9420 411c 00000000 		.long	.LASF657
 9421 4120 30       		.byte	0x30
 9422 4121 25       		.byte	0x25
 9423 4122 15       		.byte	0x15
 9424 4123 563F0000 		.long	0x3f56
 9425 4127 07       		.uleb128 0x7
 9426 4128 00000000 		.long	.LASF658
 9427 412c 30       		.byte	0x30
 9428 412d 26       		.byte	0x26
 9429 412e 17       		.byte	0x17
 9430 412f 4F3F0000 		.long	0x3f4f
 9431 4133 07       		.uleb128 0x7
 9432 4134 00000000 		.long	.LASF659
 9433 4138 30       		.byte	0x30
 9434 4139 27       		.byte	0x27
 9435 413a 1A       		.byte	0x1a
 9436 413b 5D3F0000 		.long	0x3f5d
 9437 413f 07       		.uleb128 0x7
 9438 4140 00000000 		.long	.LASF660
 9439 4144 30       		.byte	0x30
 9440 4145 28       		.byte	0x28
 9441 4146 1C       		.byte	0x1c
 9442 4147 B5020000 		.long	0x2b5
 9443 414b 07       		.uleb128 0x7
 9444 414c 00000000 		.long	.LASF661
 9445 4150 30       		.byte	0x30
 9446 4151 29       		.byte	0x29
 9447 4152 14       		.byte	0x14
 9448 4153 ED000000 		.long	0xed
 9449 4157 0E       		.uleb128 0xe
 9450 4158 4B410000 		.long	0x414b
 9451 415c 07       		.uleb128 0x7
 9452 415d 00000000 		.long	.LASF662
 9453 4161 30       		.byte	0x30
 9454 4162 2A       		.byte	0x2a
 9455 4163 16       		.byte	0x16
 9456 4164 72000000 		.long	0x72
 9457 4168 07       		.uleb128 0x7
 9458 4169 00000000 		.long	.LASF663
 9459 416d 30       		.byte	0x30
 9460 416e 2C       		.byte	0x2c
 9461 416f 19       		.byte	0x19
 9462 4170 74360000 		.long	0x3674
 9463 4174 07       		.uleb128 0x7
 9464 4175 00000000 		.long	.LASF664
 9465 4179 30       		.byte	0x30
 9466 417a 2D       		.byte	0x2d
 9467 417b 1B       		.byte	0x1b
 9468 417c 36000000 		.long	0x36
 9469 4180 07       		.uleb128 0x7
 9470 4181 00000000 		.long	.LASF665
 9471 4185 30       		.byte	0x30
 9472 4186 34       		.byte	0x34
 9473 4187 12       		.byte	0x12
 9474 4188 1B410000 		.long	0x411b
 9475 418c 07       		.uleb128 0x7
 9476 418d 00000000 		.long	.LASF666
GAS LISTING linobj/Ch02_03.s 			page 287


 9477 4191 30       		.byte	0x30
 9478 4192 35       		.byte	0x35
 9479 4193 13       		.byte	0x13
 9480 4194 27410000 		.long	0x4127
 9481 4198 07       		.uleb128 0x7
 9482 4199 00000000 		.long	.LASF667
 9483 419d 30       		.byte	0x30
 9484 419e 36       		.byte	0x36
 9485 419f 13       		.byte	0x13
 9486 41a0 33410000 		.long	0x4133
 9487 41a4 07       		.uleb128 0x7
 9488 41a5 00000000 		.long	.LASF668
 9489 41a9 30       		.byte	0x30
 9490 41aa 37       		.byte	0x37
 9491 41ab 14       		.byte	0x14
 9492 41ac 3F410000 		.long	0x413f
 9493 41b0 07       		.uleb128 0x7
 9494 41b1 00000000 		.long	.LASF669
 9495 41b5 30       		.byte	0x30
 9496 41b6 38       		.byte	0x38
 9497 41b7 13       		.byte	0x13
 9498 41b8 4B410000 		.long	0x414b
 9499 41bc 07       		.uleb128 0x7
 9500 41bd 00000000 		.long	.LASF670
 9501 41c1 30       		.byte	0x30
 9502 41c2 39       		.byte	0x39
 9503 41c3 14       		.byte	0x14
 9504 41c4 5C410000 		.long	0x415c
 9505 41c8 07       		.uleb128 0x7
 9506 41c9 00000000 		.long	.LASF671
 9507 41cd 30       		.byte	0x30
 9508 41ce 3A       		.byte	0x3a
 9509 41cf 13       		.byte	0x13
 9510 41d0 68410000 		.long	0x4168
 9511 41d4 07       		.uleb128 0x7
 9512 41d5 00000000 		.long	.LASF672
 9513 41d9 30       		.byte	0x30
 9514 41da 3B       		.byte	0x3b
 9515 41db 14       		.byte	0x14
 9516 41dc 74410000 		.long	0x4174
 9517 41e0 07       		.uleb128 0x7
 9518 41e1 00000000 		.long	.LASF673
 9519 41e5 30       		.byte	0x30
 9520 41e6 48       		.byte	0x48
 9521 41e7 12       		.byte	0x12
 9522 41e8 74360000 		.long	0x3674
 9523 41ec 07       		.uleb128 0x7
 9524 41ed 00000000 		.long	.LASF674
 9525 41f1 30       		.byte	0x30
 9526 41f2 49       		.byte	0x49
 9527 41f3 1B       		.byte	0x1b
 9528 41f4 36000000 		.long	0x36
 9529 41f8 07       		.uleb128 0x7
 9530 41f9 00000000 		.long	.LASF675
 9531 41fd 30       		.byte	0x30
 9532 41fe 98       		.byte	0x98
 9533 41ff 12       		.byte	0x12
GAS LISTING linobj/Ch02_03.s 			page 288


 9534 4200 74360000 		.long	0x3674
 9535 4204 07       		.uleb128 0x7
 9536 4205 00000000 		.long	.LASF676
 9537 4209 30       		.byte	0x30
 9538 420a 99       		.byte	0x99
 9539 420b 12       		.byte	0x12
 9540 420c 74360000 		.long	0x3674
 9541 4210 07       		.uleb128 0x7
 9542 4211 00000000 		.long	.LASF677
 9543 4215 30       		.byte	0x30
 9544 4216 9C       		.byte	0x9c
 9545 4217 12       		.byte	0x12
 9546 4218 74360000 		.long	0x3674
 9547 421c 07       		.uleb128 0x7
 9548 421d 00000000 		.long	.LASF678
 9549 4221 30       		.byte	0x30
 9550 4222 A0       		.byte	0xa0
 9551 4223 12       		.byte	0x12
 9552 4224 74360000 		.long	0x3674
 9553 4228 07       		.uleb128 0x7
 9554 4229 00000000 		.long	.LASF679
 9555 422d 31       		.byte	0x31
 9556 422e 0A       		.byte	0xa
 9557 422f 12       		.byte	0x12
 9558 4230 1C420000 		.long	0x421c
 9559 4234 0E       		.uleb128 0xe
 9560 4235 28420000 		.long	0x4228
 9561 4239 07       		.uleb128 0x7
 9562 423a 00000000 		.long	.LASF680
 9563 423e 32       		.byte	0x32
 9564 423f 07       		.byte	0x7
 9565 4240 13       		.byte	0x13
 9566 4241 10420000 		.long	0x4210
 9567 4245 0B       		.uleb128 0xb
 9568 4246 4A420000 		.long	0x424a
 9569 424a 7C       		.uleb128 0x7c
 9570 424b 0B       		.uleb128 0xb
 9571 424c 75090000 		.long	0x975
 9572 4250 0E       		.uleb128 0xe
 9573 4251 4B420000 		.long	0x424b
 9574 4255 13       		.uleb128 0x13
 9575 4256 190B0000 		.long	0xb19
 9576 425a 13       		.uleb128 0x13
 9577 425b 75090000 		.long	0x975
 9578 425f 0B       		.uleb128 0xb
 9579 4260 190B0000 		.long	0xb19
 9580 4264 13       		.uleb128 0x13
 9581 4265 E1000000 		.long	0xe1
 9582 4269 13       		.uleb128 0x13
 9583 426a E8000000 		.long	0xe8
 9584 426e 0B       		.uleb128 0xb
 9585 426f 1E0B0000 		.long	0xb1e
 9586 4273 0E       		.uleb128 0xe
 9587 4274 6E420000 		.long	0x426e
 9588 4278 13       		.uleb128 0x13
 9589 4279 AA0B0000 		.long	0xbaa
 9590 427d 13       		.uleb128 0x13
GAS LISTING linobj/Ch02_03.s 			page 289


 9591 427e 1E0B0000 		.long	0xb1e
 9592 4282 0B       		.uleb128 0xb
 9593 4283 AF0B0000 		.long	0xbaf
 9594 4287 41       		.uleb128 0x41
 9595 4288 D90B0000 		.long	0xbd9
 9596 428c 43       		.uleb128 0x43
 9597 428d 00000000 		.long	.LASF681
 9598 4291 17       		.byte	0x17
 9599 4292 38       		.byte	0x38
 9600 4293 0B       		.byte	0xb
 9601 4294 A1420000 		.long	0x42a1
 9602 4298 7D       		.uleb128 0x7d
 9603 4299 17       		.byte	0x17
 9604 429a 3A       		.byte	0x3a
 9605 429b 18       		.byte	0x18
 9606 429c E70B0000 		.long	0xbe7
 9607 42a0 00       		.byte	0
 9608 42a1 3D       		.uleb128 0x3d
 9609 42a2 08       		.byte	0x8
 9610 42a3 33       		.byte	0x33
 9611 42a4 3C       		.byte	0x3c
 9612 42a5 03       		.byte	0x3
 9613 42a6 00000000 		.long	.LASF683
 9614 42aa C8420000 		.long	0x42c8
 9615 42ae 08       		.uleb128 0x8
 9616 42af 00000000 		.long	.LASF684
 9617 42b3 33       		.byte	0x33
 9618 42b4 3D       		.byte	0x3d
 9619 42b5 09       		.byte	0x9
 9620 42b6 ED000000 		.long	0xed
 9621 42ba 00       		.byte	0
 9622 42bb 4A       		.uleb128 0x4a
 9623 42bc 72656D00 		.string	"rem"
 9624 42c0 3E       		.byte	0x3e
 9625 42c1 09       		.byte	0x9
 9626 42c2 ED000000 		.long	0xed
 9627 42c6 04       		.byte	0x4
 9628 42c7 00       		.byte	0
 9629 42c8 07       		.uleb128 0x7
 9630 42c9 00000000 		.long	.LASF685
 9631 42cd 33       		.byte	0x33
 9632 42ce 3F       		.byte	0x3f
 9633 42cf 05       		.byte	0x5
 9634 42d0 A1420000 		.long	0x42a1
 9635 42d4 3D       		.uleb128 0x3d
 9636 42d5 10       		.byte	0x10
 9637 42d6 33       		.byte	0x33
 9638 42d7 44       		.byte	0x44
 9639 42d8 03       		.byte	0x3
 9640 42d9 00000000 		.long	.LASF686
 9641 42dd FB420000 		.long	0x42fb
 9642 42e1 08       		.uleb128 0x8
 9643 42e2 00000000 		.long	.LASF684
 9644 42e6 33       		.byte	0x33
 9645 42e7 45       		.byte	0x45
 9646 42e8 0E       		.byte	0xe
 9647 42e9 74360000 		.long	0x3674
GAS LISTING linobj/Ch02_03.s 			page 290


 9648 42ed 00       		.byte	0
 9649 42ee 4A       		.uleb128 0x4a
 9650 42ef 72656D00 		.string	"rem"
 9651 42f3 46       		.byte	0x46
 9652 42f4 0E       		.byte	0xe
 9653 42f5 74360000 		.long	0x3674
 9654 42f9 08       		.byte	0x8
 9655 42fa 00       		.byte	0
 9656 42fb 07       		.uleb128 0x7
 9657 42fc 00000000 		.long	.LASF687
 9658 4300 33       		.byte	0x33
 9659 4301 47       		.byte	0x47
 9660 4302 05       		.byte	0x5
 9661 4303 D4420000 		.long	0x42d4
 9662 4307 3D       		.uleb128 0x3d
 9663 4308 10       		.byte	0x10
 9664 4309 33       		.byte	0x33
 9665 430a 4E       		.byte	0x4e
 9666 430b 03       		.byte	0x3
 9667 430c 00000000 		.long	.LASF688
 9668 4310 2E430000 		.long	0x432e
 9669 4314 08       		.uleb128 0x8
 9670 4315 00000000 		.long	.LASF684
 9671 4319 33       		.byte	0x33
 9672 431a 4F       		.byte	0x4f
 9673 431b 13       		.byte	0x13
 9674 431c 0B3F0000 		.long	0x3f0b
 9675 4320 00       		.byte	0
 9676 4321 4A       		.uleb128 0x4a
 9677 4322 72656D00 		.string	"rem"
 9678 4326 50       		.byte	0x50
 9679 4327 13       		.byte	0x13
 9680 4328 0B3F0000 		.long	0x3f0b
 9681 432c 08       		.byte	0x8
 9682 432d 00       		.byte	0
 9683 432e 07       		.uleb128 0x7
 9684 432f 00000000 		.long	.LASF689
 9685 4333 33       		.byte	0x33
 9686 4334 51       		.byte	0x51
 9687 4335 05       		.byte	0x5
 9688 4336 07430000 		.long	0x4307
 9689 433a 07       		.uleb128 0x7
 9690 433b 00000000 		.long	.LASF690
 9691 433f 34       		.byte	0x34
 9692 4340 18       		.byte	0x18
 9693 4341 12       		.byte	0x12
 9694 4342 1B410000 		.long	0x411b
 9695 4346 07       		.uleb128 0x7
 9696 4347 00000000 		.long	.LASF691
 9697 434b 34       		.byte	0x34
 9698 434c 19       		.byte	0x19
 9699 434d 13       		.byte	0x13
 9700 434e 33410000 		.long	0x4133
 9701 4352 07       		.uleb128 0x7
 9702 4353 00000000 		.long	.LASF692
 9703 4357 34       		.byte	0x34
 9704 4358 1A       		.byte	0x1a
GAS LISTING linobj/Ch02_03.s 			page 291


 9705 4359 13       		.byte	0x13
 9706 435a 4B410000 		.long	0x414b
 9707 435e 07       		.uleb128 0x7
 9708 435f 00000000 		.long	.LASF693
 9709 4363 34       		.byte	0x34
 9710 4364 1B       		.byte	0x1b
 9711 4365 13       		.byte	0x13
 9712 4366 68410000 		.long	0x4168
 9713 436a 24       		.uleb128 0x24
 9714 436b 00000000 		.long	.LASF694
 9715 436f 33       		.byte	0x33
 9716 4370 B403     		.value	0x3b4
 9717 4372 0F       		.byte	0xf
 9718 4373 77430000 		.long	0x4377
 9719 4377 0B       		.uleb128 0xb
 9720 4378 7C430000 		.long	0x437c
 9721 437c 7E       		.uleb128 0x7e
 9722 437d ED000000 		.long	0xed
 9723 4381 90430000 		.long	0x4390
 9724 4385 01       		.uleb128 0x1
 9725 4386 45420000 		.long	0x4245
 9726 438a 01       		.uleb128 0x1
 9727 438b 45420000 		.long	0x4245
 9728 438f 00       		.byte	0
 9729 4390 0A       		.uleb128 0xa
 9730 4391 00000000 		.long	.LASF695
 9731 4395 33       		.byte	0x33
 9732 4396 DE02     		.value	0x2de
 9733 4398 0C       		.byte	0xc
 9734 4399 ED000000 		.long	0xed
 9735 439d A7430000 		.long	0x43a7
 9736 43a1 01       		.uleb128 0x1
 9737 43a2 A7430000 		.long	0x43a7
 9738 43a6 00       		.byte	0
 9739 43a7 0B       		.uleb128 0xb
 9740 43a8 AC430000 		.long	0x43ac
 9741 43ac 7F       		.uleb128 0x7f
 9742 43ad 10       		.uleb128 0x10
 9743 43ae 00000000 		.long	.LASF696
 9744 43b2 33       		.byte	0x33
 9745 43b3 E302     		.value	0x2e3
 9746 43b5 12       		.byte	0x12
 9747 43b6 00000000 		.long	.LASF696
 9748 43ba ED000000 		.long	0xed
 9749 43be C8430000 		.long	0x43c8
 9750 43c2 01       		.uleb128 0x1
 9751 43c3 A7430000 		.long	0x43a7
 9752 43c7 00       		.byte	0
 9753 43c8 0F       		.uleb128 0xf
 9754 43c9 00000000 		.long	.LASF697
 9755 43cd 35       		.byte	0x35
 9756 43ce 19       		.byte	0x19
 9757 43cf 1C       		.byte	0x1c
 9758 43d0 00360000 		.long	0x3600
 9759 43d4 DE430000 		.long	0x43de
 9760 43d8 01       		.uleb128 0x1
 9761 43d9 BC020000 		.long	0x2bc
GAS LISTING linobj/Ch02_03.s 			page 292


 9762 43dd 00       		.byte	0
 9763 43de 0A       		.uleb128 0xa
 9764 43df 00000000 		.long	.LASF698
 9765 43e3 33       		.byte	0x33
 9766 43e4 E101     		.value	0x1e1
 9767 43e6 1C       		.byte	0x1c
 9768 43e7 ED000000 		.long	0xed
 9769 43eb F5430000 		.long	0x43f5
 9770 43ef 01       		.uleb128 0x1
 9771 43f0 BC020000 		.long	0x2bc
 9772 43f4 00       		.byte	0
 9773 43f5 0A       		.uleb128 0xa
 9774 43f6 00000000 		.long	.LASF699
 9775 43fa 33       		.byte	0x33
 9776 43fb E601     		.value	0x1e6
 9777 43fd 1C       		.byte	0x1c
 9778 43fe 74360000 		.long	0x3674
 9779 4402 0C440000 		.long	0x440c
 9780 4406 01       		.uleb128 0x1
 9781 4407 BC020000 		.long	0x2bc
 9782 440b 00       		.byte	0
 9783 440c 0F       		.uleb128 0xf
 9784 440d 00000000 		.long	.LASF700
 9785 4411 36       		.byte	0x36
 9786 4412 14       		.byte	0x14
 9787 4413 01       		.byte	0x1
 9788 4414 79000000 		.long	0x79
 9789 4418 36440000 		.long	0x4436
 9790 441c 01       		.uleb128 0x1
 9791 441d 45420000 		.long	0x4245
 9792 4421 01       		.uleb128 0x1
 9793 4422 45420000 		.long	0x4245
 9794 4426 01       		.uleb128 0x1
 9795 4427 2A000000 		.long	0x2a
 9796 442b 01       		.uleb128 0x1
 9797 442c 2A000000 		.long	0x2a
 9798 4430 01       		.uleb128 0x1
 9799 4431 6A430000 		.long	0x436a
 9800 4435 00       		.byte	0
 9801 4436 8001     		.uleb128 0x80
 9802 4438 64697600 		.string	"div"
 9803 443c 33       		.byte	0x33
 9804 443d E003     		.value	0x3e0
 9805 443f 0E       		.byte	0xe
 9806 4440 C8420000 		.long	0x42c8
 9807 4444 53440000 		.long	0x4453
 9808 4448 01       		.uleb128 0x1
 9809 4449 ED000000 		.long	0xed
 9810 444d 01       		.uleb128 0x1
 9811 444e ED000000 		.long	0xed
 9812 4452 00       		.byte	0
 9813 4453 0A       		.uleb128 0xa
 9814 4454 00000000 		.long	.LASF701
 9815 4458 33       		.byte	0x33
 9816 4459 0503     		.value	0x305
 9817 445b 0E       		.byte	0xe
 9818 445c CB330000 		.long	0x33cb
GAS LISTING linobj/Ch02_03.s 			page 293


 9819 4460 6A440000 		.long	0x446a
 9820 4464 01       		.uleb128 0x1
 9821 4465 BC020000 		.long	0x2bc
 9822 4469 00       		.byte	0
 9823 446a 0A       		.uleb128 0xa
 9824 446b 00000000 		.long	.LASF702
 9825 446f 33       		.byte	0x33
 9826 4470 E203     		.value	0x3e2
 9827 4472 0F       		.byte	0xf
 9828 4473 FB420000 		.long	0x42fb
 9829 4477 86440000 		.long	0x4486
 9830 447b 01       		.uleb128 0x1
 9831 447c 74360000 		.long	0x3674
 9832 4480 01       		.uleb128 0x1
 9833 4481 74360000 		.long	0x3674
 9834 4485 00       		.byte	0
 9835 4486 0A       		.uleb128 0xa
 9836 4487 00000000 		.long	.LASF703
 9837 448b 33       		.byte	0x33
 9838 448c 2604     		.value	0x426
 9839 448e 0C       		.byte	0xc
 9840 448f ED000000 		.long	0xed
 9841 4493 A2440000 		.long	0x44a2
 9842 4497 01       		.uleb128 0x1
 9843 4498 BC020000 		.long	0x2bc
 9844 449c 01       		.uleb128 0x1
 9845 449d 2A000000 		.long	0x2a
 9846 44a1 00       		.byte	0
 9847 44a2 0A       		.uleb128 0xa
 9848 44a3 00000000 		.long	.LASF704
 9849 44a7 33       		.byte	0x33
 9850 44a8 3104     		.value	0x431
 9851 44aa 0F       		.byte	0xf
 9852 44ab 2A000000 		.long	0x2a
 9853 44af C3440000 		.long	0x44c3
 9854 44b3 01       		.uleb128 0x1
 9855 44b4 E7300000 		.long	0x30e7
 9856 44b8 01       		.uleb128 0x1
 9857 44b9 BC020000 		.long	0x2bc
 9858 44bd 01       		.uleb128 0x1
 9859 44be 2A000000 		.long	0x2a
 9860 44c2 00       		.byte	0
 9861 44c3 0A       		.uleb128 0xa
 9862 44c4 00000000 		.long	.LASF705
 9863 44c8 33       		.byte	0x33
 9864 44c9 2904     		.value	0x429
 9865 44cb 0C       		.byte	0xc
 9866 44cc ED000000 		.long	0xed
 9867 44d0 E4440000 		.long	0x44e4
 9868 44d4 01       		.uleb128 0x1
 9869 44d5 E7300000 		.long	0x30e7
 9870 44d9 01       		.uleb128 0x1
 9871 44da BC020000 		.long	0x2bc
 9872 44de 01       		.uleb128 0x1
 9873 44df 2A000000 		.long	0x2a
 9874 44e3 00       		.byte	0
 9875 44e4 35       		.uleb128 0x35
GAS LISTING linobj/Ch02_03.s 			page 294


 9876 44e5 00000000 		.long	.LASF706
 9877 44e9 33       		.byte	0x33
 9878 44ea CA03     		.value	0x3ca
 9879 44ec 05450000 		.long	0x4505
 9880 44f0 01       		.uleb128 0x1
 9881 44f1 79000000 		.long	0x79
 9882 44f5 01       		.uleb128 0x1
 9883 44f6 2A000000 		.long	0x2a
 9884 44fa 01       		.uleb128 0x1
 9885 44fb 2A000000 		.long	0x2a
 9886 44ff 01       		.uleb128 0x1
 9887 4500 6A430000 		.long	0x436a
 9888 4504 00       		.byte	0
 9889 4505 8101     		.uleb128 0x81
 9890 4507 00000000 		.long	.LASF707
 9891 450b 33       		.byte	0x33
 9892 450c FA02     		.value	0x2fa
 9893 450e 0D       		.byte	0xd
 9894 450f 19450000 		.long	0x4519
 9895 4513 01       		.uleb128 0x1
 9896 4514 ED000000 		.long	0xed
 9897 4518 00       		.byte	0
 9898 4519 59       		.uleb128 0x59
 9899 451a 00000000 		.long	.LASF708
 9900 451e 33       		.byte	0x33
 9901 451f 3D02     		.value	0x23d
 9902 4521 0C       		.byte	0xc
 9903 4522 ED000000 		.long	0xed
 9904 4526 35       		.uleb128 0x35
 9905 4527 00000000 		.long	.LASF709
 9906 452b 33       		.byte	0x33
 9907 452c 3F02     		.value	0x23f
 9908 452e 38450000 		.long	0x4538
 9909 4532 01       		.uleb128 0x1
 9910 4533 72000000 		.long	0x72
 9911 4537 00       		.byte	0
 9912 4538 0F       		.uleb128 0xf
 9913 4539 00000000 		.long	.LASF710
 9914 453d 33       		.byte	0x33
 9915 453e 76       		.byte	0x76
 9916 453f 0F       		.byte	0xf
 9917 4540 00360000 		.long	0x3600
 9918 4544 53450000 		.long	0x4553
 9919 4548 01       		.uleb128 0x1
 9920 4549 BC020000 		.long	0x2bc
 9921 454d 01       		.uleb128 0x1
 9922 454e 53450000 		.long	0x4553
 9923 4552 00       		.byte	0
 9924 4553 0B       		.uleb128 0xb
 9925 4554 CB330000 		.long	0x33cb
 9926 4558 19       		.uleb128 0x19
 9927 4559 00000000 		.long	.LASF711
 9928 455d 33       		.byte	0x33
 9929 455e D7       		.byte	0xd7
 9930 455f 11       		.byte	0x11
 9931 4560 00000000 		.long	.LASF712
 9932 4564 74360000 		.long	0x3674
GAS LISTING linobj/Ch02_03.s 			page 295


 9933 4568 7C450000 		.long	0x457c
 9934 456c 01       		.uleb128 0x1
 9935 456d BC020000 		.long	0x2bc
 9936 4571 01       		.uleb128 0x1
 9937 4572 53450000 		.long	0x4553
 9938 4576 01       		.uleb128 0x1
 9939 4577 ED000000 		.long	0xed
 9940 457b 00       		.byte	0
 9941 457c 19       		.uleb128 0x19
 9942 457d 00000000 		.long	.LASF713
 9943 4581 33       		.byte	0x33
 9944 4582 DB       		.byte	0xdb
 9945 4583 1A       		.byte	0x1a
 9946 4584 00000000 		.long	.LASF714
 9947 4588 36000000 		.long	0x36
 9948 458c A0450000 		.long	0x45a0
 9949 4590 01       		.uleb128 0x1
 9950 4591 BC020000 		.long	0x2bc
 9951 4595 01       		.uleb128 0x1
 9952 4596 53450000 		.long	0x4553
 9953 459a 01       		.uleb128 0x1
 9954 459b ED000000 		.long	0xed
 9955 459f 00       		.byte	0
 9956 45a0 0A       		.uleb128 0xa
 9957 45a1 00000000 		.long	.LASF715
 9958 45a5 33       		.byte	0x33
 9959 45a6 9B03     		.value	0x39b
 9960 45a8 0C       		.byte	0xc
 9961 45a9 ED000000 		.long	0xed
 9962 45ad B7450000 		.long	0x45b7
 9963 45b1 01       		.uleb128 0x1
 9964 45b2 BC020000 		.long	0x2bc
 9965 45b6 00       		.byte	0
 9966 45b7 0A       		.uleb128 0xa
 9967 45b8 00000000 		.long	.LASF716
 9968 45bc 33       		.byte	0x33
 9969 45bd 3504     		.value	0x435
 9970 45bf 0F       		.byte	0xf
 9971 45c0 2A000000 		.long	0x2a
 9972 45c4 D8450000 		.long	0x45d8
 9973 45c8 01       		.uleb128 0x1
 9974 45c9 CB330000 		.long	0x33cb
 9975 45cd 01       		.uleb128 0x1
 9976 45ce 30310000 		.long	0x3130
 9977 45d2 01       		.uleb128 0x1
 9978 45d3 2A000000 		.long	0x2a
 9979 45d7 00       		.byte	0
 9980 45d8 0A       		.uleb128 0xa
 9981 45d9 00000000 		.long	.LASF717
 9982 45dd 33       		.byte	0x33
 9983 45de 2D04     		.value	0x42d
 9984 45e0 0C       		.byte	0xc
 9985 45e1 ED000000 		.long	0xed
 9986 45e5 F4450000 		.long	0x45f4
 9987 45e9 01       		.uleb128 0x1
 9988 45ea CB330000 		.long	0x33cb
 9989 45ee 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 296


 9990 45ef EC300000 		.long	0x30ec
 9991 45f3 00       		.byte	0
 9992 45f4 0A       		.uleb128 0xa
 9993 45f5 00000000 		.long	.LASF718
 9994 45f9 33       		.byte	0x33
 9995 45fa E603     		.value	0x3e6
 9996 45fc 1E       		.byte	0x1e
 9997 45fd 2E430000 		.long	0x432e
 9998 4601 10460000 		.long	0x4610
 9999 4605 01       		.uleb128 0x1
 10000 4606 0B3F0000 		.long	0x3f0b
 10001 460a 01       		.uleb128 0x1
 10002 460b 0B3F0000 		.long	0x3f0b
 10003 460f 00       		.byte	0
 10004 4610 0A       		.uleb128 0xa
 10005 4611 00000000 		.long	.LASF719
 10006 4615 33       		.byte	0x33
 10007 4616 ED01     		.value	0x1ed
 10008 4618 1C       		.byte	0x1c
 10009 4619 0B3F0000 		.long	0x3f0b
 10010 461d 27460000 		.long	0x4627
 10011 4621 01       		.uleb128 0x1
 10012 4622 BC020000 		.long	0x2bc
 10013 4626 00       		.byte	0
 10014 4627 19       		.uleb128 0x19
 10015 4628 00000000 		.long	.LASF720
 10016 462c 33       		.byte	0x33
 10017 462d EE       		.byte	0xee
 10018 462e 16       		.byte	0x16
 10019 462f 00000000 		.long	.LASF721
 10020 4633 0B3F0000 		.long	0x3f0b
 10021 4637 4B460000 		.long	0x464b
 10022 463b 01       		.uleb128 0x1
 10023 463c BC020000 		.long	0x2bc
 10024 4640 01       		.uleb128 0x1
 10025 4641 53450000 		.long	0x4553
 10026 4645 01       		.uleb128 0x1
 10027 4646 ED000000 		.long	0xed
 10028 464a 00       		.byte	0
 10029 464b 19       		.uleb128 0x19
 10030 464c 00000000 		.long	.LASF722
 10031 4650 33       		.byte	0x33
 10032 4651 F3       		.byte	0xf3
 10033 4652 1F       		.byte	0x1f
 10034 4653 00000000 		.long	.LASF723
 10035 4657 373F0000 		.long	0x3f37
 10036 465b 6F460000 		.long	0x466f
 10037 465f 01       		.uleb128 0x1
 10038 4660 BC020000 		.long	0x2bc
 10039 4664 01       		.uleb128 0x1
 10040 4665 53450000 		.long	0x4553
 10041 4669 01       		.uleb128 0x1
 10042 466a ED000000 		.long	0xed
 10043 466e 00       		.byte	0
 10044 466f 0F       		.uleb128 0xf
 10045 4670 00000000 		.long	.LASF724
 10046 4674 33       		.byte	0x33
GAS LISTING linobj/Ch02_03.s 			page 297


 10047 4675 7C       		.byte	0x7c
 10048 4676 0E       		.byte	0xe
 10049 4677 28360000 		.long	0x3628
 10050 467b 8A460000 		.long	0x468a
 10051 467f 01       		.uleb128 0x1
 10052 4680 BC020000 		.long	0x2bc
 10053 4684 01       		.uleb128 0x1
 10054 4685 53450000 		.long	0x4553
 10055 4689 00       		.byte	0
 10056 468a 0F       		.uleb128 0xf
 10057 468b 00000000 		.long	.LASF725
 10058 468f 33       		.byte	0x33
 10059 4690 7F       		.byte	0x7f
 10060 4691 14       		.byte	0x14
 10061 4692 DF3E0000 		.long	0x3edf
 10062 4696 A5460000 		.long	0x46a5
 10063 469a 01       		.uleb128 0x1
 10064 469b BC020000 		.long	0x2bc
 10065 469f 01       		.uleb128 0x1
 10066 46a0 53450000 		.long	0x4553
 10067 46a4 00       		.byte	0
 10068 46a5 25       		.uleb128 0x25
 10069 46a6 00000000 		.long	.LASF726
 10070 46aa 10       		.byte	0x10
 10071 46ab 37       		.byte	0x37
 10072 46ac 0A       		.byte	0xa
 10073 46ad 10       		.byte	0x10
 10074 46ae CD460000 		.long	0x46cd
 10075 46b2 08       		.uleb128 0x8
 10076 46b3 00000000 		.long	.LASF727
 10077 46b7 37       		.byte	0x37
 10078 46b8 0C       		.byte	0xc
 10079 46b9 0B       		.byte	0xb
 10080 46ba F8410000 		.long	0x41f8
 10081 46be 00       		.byte	0
 10082 46bf 08       		.uleb128 0x8
 10083 46c0 00000000 		.long	.LASF728
 10084 46c4 37       		.byte	0x37
 10085 46c5 0D       		.byte	0xd
 10086 46c6 0F       		.byte	0xf
 10087 46c7 F9000000 		.long	0xf9
 10088 46cb 08       		.byte	0x8
 10089 46cc 00       		.byte	0
 10090 46cd 07       		.uleb128 0x7
 10091 46ce 00000000 		.long	.LASF729
 10092 46d2 37       		.byte	0x37
 10093 46d3 0E       		.byte	0xe
 10094 46d4 03       		.byte	0x3
 10095 46d5 A5460000 		.long	0x46a5
 10096 46d9 8201     		.uleb128 0x82
 10097 46db 00000000 		.long	.LASF881
 10098 46df 0E       		.byte	0xe
 10099 46e0 2B       		.byte	0x2b
 10100 46e1 0E       		.byte	0xe
 10101 46e2 4B       		.uleb128 0x4b
 10102 46e3 00000000 		.long	.LASF730
 10103 46e7 0B       		.uleb128 0xb
GAS LISTING linobj/Ch02_03.s 			page 298


 10104 46e8 E2460000 		.long	0x46e2
 10105 46ec 0B       		.uleb128 0xb
 10106 46ed 22010000 		.long	0x122
 10107 46f1 21       		.uleb128 0x21
 10108 46f2 E1000000 		.long	0xe1
 10109 46f6 01470000 		.long	0x4701
 10110 46fa 1C       		.uleb128 0x1c
 10111 46fb 36000000 		.long	0x36
 10112 46ff 00       		.byte	0
 10113 4700 00       		.byte	0
 10114 4701 0B       		.uleb128 0xb
 10115 4702 D9460000 		.long	0x46d9
 10116 4706 4B       		.uleb128 0x4b
 10117 4707 00000000 		.long	.LASF731
 10118 470b 0B       		.uleb128 0xb
 10119 470c 06470000 		.long	0x4706
 10120 4710 4B       		.uleb128 0x4b
 10121 4711 00000000 		.long	.LASF732
 10122 4715 0B       		.uleb128 0xb
 10123 4716 10470000 		.long	0x4710
 10124 471a 21       		.uleb128 0x21
 10125 471b E1000000 		.long	0xe1
 10126 471f 2A470000 		.long	0x472a
 10127 4723 1C       		.uleb128 0x1c
 10128 4724 36000000 		.long	0x36
 10129 4728 13       		.byte	0x13
 10130 4729 00       		.byte	0
 10131 472a 07       		.uleb128 0x7
 10132 472b 00000000 		.long	.LASF733
 10133 472f 38       		.byte	0x38
 10134 4730 55       		.byte	0x55
 10135 4731 12       		.byte	0x12
 10136 4732 CD460000 		.long	0x46cd
 10137 4736 0E       		.uleb128 0xe
 10138 4737 2A470000 		.long	0x472a
 10139 473b 0B       		.uleb128 0xb
 10140 473c A9020000 		.long	0x2a9
 10141 4740 35       		.uleb128 0x35
 10142 4741 00000000 		.long	.LASF734
 10143 4745 38       		.byte	0x38
 10144 4746 5C03     		.value	0x35c
 10145 4748 52470000 		.long	0x4752
 10146 474c 01       		.uleb128 0x1
 10147 474d 3B470000 		.long	0x473b
 10148 4751 00       		.byte	0
 10149 4752 0F       		.uleb128 0xf
 10150 4753 00000000 		.long	.LASF735
 10151 4757 38       		.byte	0x38
 10152 4758 B8       		.byte	0xb8
 10153 4759 0C       		.byte	0xc
 10154 475a ED000000 		.long	0xed
 10155 475e 68470000 		.long	0x4768
 10156 4762 01       		.uleb128 0x1
 10157 4763 3B470000 		.long	0x473b
 10158 4767 00       		.byte	0
 10159 4768 0A       		.uleb128 0xa
 10160 4769 00000000 		.long	.LASF736
GAS LISTING linobj/Ch02_03.s 			page 299


 10161 476d 38       		.byte	0x38
 10162 476e 5E03     		.value	0x35e
 10163 4770 0C       		.byte	0xc
 10164 4771 ED000000 		.long	0xed
 10165 4775 7F470000 		.long	0x477f
 10166 4779 01       		.uleb128 0x1
 10167 477a 3B470000 		.long	0x473b
 10168 477e 00       		.byte	0
 10169 477f 0A       		.uleb128 0xa
 10170 4780 00000000 		.long	.LASF737
 10171 4784 38       		.byte	0x38
 10172 4785 6003     		.value	0x360
 10173 4787 0C       		.byte	0xc
 10174 4788 ED000000 		.long	0xed
 10175 478c 96470000 		.long	0x4796
 10176 4790 01       		.uleb128 0x1
 10177 4791 3B470000 		.long	0x473b
 10178 4795 00       		.byte	0
 10179 4796 0F       		.uleb128 0xf
 10180 4797 00000000 		.long	.LASF738
 10181 479b 38       		.byte	0x38
 10182 479c EC       		.byte	0xec
 10183 479d 0C       		.byte	0xc
 10184 479e ED000000 		.long	0xed
 10185 47a2 AC470000 		.long	0x47ac
 10186 47a6 01       		.uleb128 0x1
 10187 47a7 3B470000 		.long	0x473b
 10188 47ab 00       		.byte	0
 10189 47ac 0A       		.uleb128 0xa
 10190 47ad 00000000 		.long	.LASF739
 10191 47b1 38       		.byte	0x38
 10192 47b2 3F02     		.value	0x23f
 10193 47b4 0C       		.byte	0xc
 10194 47b5 ED000000 		.long	0xed
 10195 47b9 C3470000 		.long	0x47c3
 10196 47bd 01       		.uleb128 0x1
 10197 47be 3B470000 		.long	0x473b
 10198 47c2 00       		.byte	0
 10199 47c3 0A       		.uleb128 0xa
 10200 47c4 00000000 		.long	.LASF740
 10201 47c8 38       		.byte	0x38
 10202 47c9 3D03     		.value	0x33d
 10203 47cb 0C       		.byte	0xc
 10204 47cc ED000000 		.long	0xed
 10205 47d0 DF470000 		.long	0x47df
 10206 47d4 01       		.uleb128 0x1
 10207 47d5 3B470000 		.long	0x473b
 10208 47d9 01       		.uleb128 0x1
 10209 47da DF470000 		.long	0x47df
 10210 47de 00       		.byte	0
 10211 47df 0B       		.uleb128 0xb
 10212 47e0 2A470000 		.long	0x472a
 10213 47e4 0A       		.uleb128 0xa
 10214 47e5 00000000 		.long	.LASF741
 10215 47e9 38       		.byte	0x38
 10216 47ea 8E02     		.value	0x28e
 10217 47ec 0E       		.byte	0xe
GAS LISTING linobj/Ch02_03.s 			page 300


 10218 47ed CB330000 		.long	0x33cb
 10219 47f1 05480000 		.long	0x4805
 10220 47f5 01       		.uleb128 0x1
 10221 47f6 CB330000 		.long	0x33cb
 10222 47fa 01       		.uleb128 0x1
 10223 47fb ED000000 		.long	0xed
 10224 47ff 01       		.uleb128 0x1
 10225 4800 3B470000 		.long	0x473b
 10226 4804 00       		.byte	0
 10227 4805 0A       		.uleb128 0xa
 10228 4806 00000000 		.long	.LASF742
 10229 480a 38       		.byte	0x38
 10230 480b 0801     		.value	0x108
 10231 480d 0E       		.byte	0xe
 10232 480e 3B470000 		.long	0x473b
 10233 4812 21480000 		.long	0x4821
 10234 4816 01       		.uleb128 0x1
 10235 4817 BC020000 		.long	0x2bc
 10236 481b 01       		.uleb128 0x1
 10237 481c BC020000 		.long	0x2bc
 10238 4820 00       		.byte	0
 10239 4821 0A       		.uleb128 0xa
 10240 4822 00000000 		.long	.LASF743
 10241 4826 38       		.byte	0x38
 10242 4827 E202     		.value	0x2e2
 10243 4829 0F       		.byte	0xf
 10244 482a 2A000000 		.long	0x2a
 10245 482e 47480000 		.long	0x4847
 10246 4832 01       		.uleb128 0x1
 10247 4833 79000000 		.long	0x79
 10248 4837 01       		.uleb128 0x1
 10249 4838 2A000000 		.long	0x2a
 10250 483c 01       		.uleb128 0x1
 10251 483d 2A000000 		.long	0x2a
 10252 4841 01       		.uleb128 0x1
 10253 4842 3B470000 		.long	0x473b
 10254 4846 00       		.byte	0
 10255 4847 0A       		.uleb128 0xa
 10256 4848 00000000 		.long	.LASF744
 10257 484c 38       		.byte	0x38
 10258 484d 0F01     		.value	0x10f
 10259 484f 0E       		.byte	0xe
 10260 4850 3B470000 		.long	0x473b
 10261 4854 68480000 		.long	0x4868
 10262 4858 01       		.uleb128 0x1
 10263 4859 BC020000 		.long	0x2bc
 10264 485d 01       		.uleb128 0x1
 10265 485e BC020000 		.long	0x2bc
 10266 4862 01       		.uleb128 0x1
 10267 4863 3B470000 		.long	0x473b
 10268 4867 00       		.byte	0
 10269 4868 0A       		.uleb128 0xa
 10270 4869 00000000 		.long	.LASF745
 10271 486d 38       		.byte	0x38
 10272 486e 0B03     		.value	0x30b
 10273 4870 0C       		.byte	0xc
 10274 4871 ED000000 		.long	0xed
GAS LISTING linobj/Ch02_03.s 			page 301


 10275 4875 89480000 		.long	0x4889
 10276 4879 01       		.uleb128 0x1
 10277 487a 3B470000 		.long	0x473b
 10278 487e 01       		.uleb128 0x1
 10279 487f 74360000 		.long	0x3674
 10280 4883 01       		.uleb128 0x1
 10281 4884 ED000000 		.long	0xed
 10282 4888 00       		.byte	0
 10283 4889 0A       		.uleb128 0xa
 10284 488a 00000000 		.long	.LASF746
 10285 488e 38       		.byte	0x38
 10286 488f 4303     		.value	0x343
 10287 4891 0C       		.byte	0xc
 10288 4892 ED000000 		.long	0xed
 10289 4896 A5480000 		.long	0x48a5
 10290 489a 01       		.uleb128 0x1
 10291 489b 3B470000 		.long	0x473b
 10292 489f 01       		.uleb128 0x1
 10293 48a0 A5480000 		.long	0x48a5
 10294 48a4 00       		.byte	0
 10295 48a5 0B       		.uleb128 0xb
 10296 48a6 36470000 		.long	0x4736
 10297 48aa 0A       		.uleb128 0xa
 10298 48ab 00000000 		.long	.LASF747
 10299 48af 38       		.byte	0x38
 10300 48b0 1103     		.value	0x311
 10301 48b2 11       		.byte	0x11
 10302 48b3 74360000 		.long	0x3674
 10303 48b7 C1480000 		.long	0x48c1
 10304 48bb 01       		.uleb128 0x1
 10305 48bc 3B470000 		.long	0x473b
 10306 48c0 00       		.byte	0
 10307 48c1 0A       		.uleb128 0xa
 10308 48c2 00000000 		.long	.LASF748
 10309 48c6 38       		.byte	0x38
 10310 48c7 4002     		.value	0x240
 10311 48c9 0C       		.byte	0xc
 10312 48ca ED000000 		.long	0xed
 10313 48ce D8480000 		.long	0x48d8
 10314 48d2 01       		.uleb128 0x1
 10315 48d3 3B470000 		.long	0x473b
 10316 48d7 00       		.byte	0
 10317 48d8 40       		.uleb128 0x40
 10318 48d9 00000000 		.long	.LASF749
 10319 48dd 39       		.byte	0x39
 10320 48de 2F       		.byte	0x2f
 10321 48df 01       		.byte	0x1
 10322 48e0 ED000000 		.long	0xed
 10323 48e4 35       		.uleb128 0x35
 10324 48e5 00000000 		.long	.LASF750
 10325 48e9 38       		.byte	0x38
 10326 48ea 6E03     		.value	0x36e
 10327 48ec F6480000 		.long	0x48f6
 10328 48f0 01       		.uleb128 0x1
 10329 48f1 BC020000 		.long	0x2bc
 10330 48f5 00       		.byte	0
 10331 48f6 0F       		.uleb128 0xf
GAS LISTING linobj/Ch02_03.s 			page 302


 10332 48f7 00000000 		.long	.LASF751
 10333 48fb 38       		.byte	0x38
 10334 48fc 9E       		.byte	0x9e
 10335 48fd 0C       		.byte	0xc
 10336 48fe ED000000 		.long	0xed
 10337 4902 0C490000 		.long	0x490c
 10338 4906 01       		.uleb128 0x1
 10339 4907 BC020000 		.long	0x2bc
 10340 490b 00       		.byte	0
 10341 490c 0F       		.uleb128 0xf
 10342 490d 00000000 		.long	.LASF752
 10343 4911 38       		.byte	0x38
 10344 4912 A0       		.byte	0xa0
 10345 4913 0C       		.byte	0xc
 10346 4914 ED000000 		.long	0xed
 10347 4918 27490000 		.long	0x4927
 10348 491c 01       		.uleb128 0x1
 10349 491d BC020000 		.long	0x2bc
 10350 4921 01       		.uleb128 0x1
 10351 4922 BC020000 		.long	0x2bc
 10352 4926 00       		.byte	0
 10353 4927 35       		.uleb128 0x35
 10354 4928 00000000 		.long	.LASF753
 10355 492c 38       		.byte	0x38
 10356 492d 1603     		.value	0x316
 10357 492f 39490000 		.long	0x4939
 10358 4933 01       		.uleb128 0x1
 10359 4934 3B470000 		.long	0x473b
 10360 4938 00       		.byte	0
 10361 4939 35       		.uleb128 0x35
 10362 493a 00000000 		.long	.LASF754
 10363 493e 38       		.byte	0x38
 10364 493f 4E01     		.value	0x14e
 10365 4941 50490000 		.long	0x4950
 10366 4945 01       		.uleb128 0x1
 10367 4946 3B470000 		.long	0x473b
 10368 494a 01       		.uleb128 0x1
 10369 494b CB330000 		.long	0x33cb
 10370 494f 00       		.byte	0
 10371 4950 0A       		.uleb128 0xa
 10372 4951 00000000 		.long	.LASF755
 10373 4955 38       		.byte	0x38
 10374 4956 5301     		.value	0x153
 10375 4958 0C       		.byte	0xc
 10376 4959 ED000000 		.long	0xed
 10377 495d 76490000 		.long	0x4976
 10378 4961 01       		.uleb128 0x1
 10379 4962 3B470000 		.long	0x473b
 10380 4966 01       		.uleb128 0x1
 10381 4967 CB330000 		.long	0x33cb
 10382 496b 01       		.uleb128 0x1
 10383 496c ED000000 		.long	0xed
 10384 4970 01       		.uleb128 0x1
 10385 4971 2A000000 		.long	0x2a
 10386 4975 00       		.byte	0
 10387 4976 40       		.uleb128 0x40
 10388 4977 00000000 		.long	.LASF756
GAS LISTING linobj/Ch02_03.s 			page 303


 10389 497b 38       		.byte	0x38
 10390 497c C2       		.byte	0xc2
 10391 497d 0E       		.byte	0xe
 10392 497e 3B470000 		.long	0x473b
 10393 4982 0F       		.uleb128 0xf
 10394 4983 00000000 		.long	.LASF757
 10395 4987 38       		.byte	0x38
 10396 4988 D3       		.byte	0xd3
 10397 4989 0E       		.byte	0xe
 10398 498a CB330000 		.long	0x33cb
 10399 498e 98490000 		.long	0x4998
 10400 4992 01       		.uleb128 0x1
 10401 4993 CB330000 		.long	0x33cb
 10402 4997 00       		.byte	0
 10403 4998 0A       		.uleb128 0xa
 10404 4999 00000000 		.long	.LASF758
 10405 499d 38       		.byte	0x38
 10406 499e DB02     		.value	0x2db
 10407 49a0 0C       		.byte	0xc
 10408 49a1 ED000000 		.long	0xed
 10409 49a5 B4490000 		.long	0x49b4
 10410 49a9 01       		.uleb128 0x1
 10411 49aa ED000000 		.long	0xed
 10412 49ae 01       		.uleb128 0x1
 10413 49af 3B470000 		.long	0x473b
 10414 49b3 00       		.byte	0
 10415 49b4 13       		.uleb128 0x13
 10416 49b5 010E0000 		.long	0xe01
 10417 49b9 13       		.uleb128 0x13
 10418 49ba 0E0E0000 		.long	0xe0e
 10419 49be 13       		.uleb128 0x13
 10420 49bf 043A0000 		.long	0x3a04
 10421 49c3 13       		.uleb128 0x13
 10422 49c4 103A0000 		.long	0x3a10
 10423 49c8 0B       		.uleb128 0xb
 10424 49c9 E90E0000 		.long	0xee9
 10425 49cd 0E       		.uleb128 0xe
 10426 49ce C8490000 		.long	0x49c8
 10427 49d2 49       		.uleb128 0x49
 10428 49d3 1E0B0000 		.long	0xb1e
 10429 49d7 21       		.uleb128 0x21
 10430 49d8 E1000000 		.long	0xe1
 10431 49dc E7490000 		.long	0x49e7
 10432 49e0 1C       		.uleb128 0x1c
 10433 49e1 36000000 		.long	0x36
 10434 49e5 0F       		.byte	0xf
 10435 49e6 00       		.byte	0
 10436 49e7 13       		.uleb128 0x13
 10437 49e8 F60F0000 		.long	0xff6
 10438 49ec 0B       		.uleb128 0xb
 10439 49ed DD0E0000 		.long	0xedd
 10440 49f1 0E       		.uleb128 0xe
 10441 49f2 EC490000 		.long	0x49ec
 10442 49f6 0B       		.uleb128 0xb
 10443 49f7 09290000 		.long	0x2909
 10444 49fb 0E       		.uleb128 0xe
 10445 49fc F6490000 		.long	0x49f6
GAS LISTING linobj/Ch02_03.s 			page 304


 10446 4a00 13       		.uleb128 0x13
 10447 4a01 AC0F0000 		.long	0xfac
 10448 4a05 13       		.uleb128 0x13
 10449 4a06 A2110000 		.long	0x11a2
 10450 4a0a 13       		.uleb128 0x13
 10451 4a0b AF110000 		.long	0x11af
 10452 4a0f 13       		.uleb128 0x13
 10453 4a10 09290000 		.long	0x2909
 10454 4a14 49       		.uleb128 0x49
 10455 4a15 DD0E0000 		.long	0xedd
 10456 4a19 13       		.uleb128 0x13
 10457 4a1a DD0E0000 		.long	0xedd
 10458 4a1e 0B       		.uleb128 0xb
 10459 4a1f 0F290000 		.long	0x290f
 10460 4a23 0B       		.uleb128 0xb
 10461 4a24 FF290000 		.long	0x29ff
 10462 4a28 07       		.uleb128 0x7
 10463 4a29 00000000 		.long	.LASF759
 10464 4a2d 3A       		.byte	0x3a
 10465 4a2e 26       		.byte	0x26
 10466 4a2f 1B       		.byte	0x1b
 10467 4a30 36000000 		.long	0x36
 10468 4a34 07       		.uleb128 0x7
 10469 4a35 00000000 		.long	.LASF760
 10470 4a39 3B       		.byte	0x3b
 10471 4a3a 30       		.byte	0x30
 10472 4a3b 1A       		.byte	0x1a
 10473 4a3c 404A0000 		.long	0x4a40
 10474 4a40 0B       		.uleb128 0xb
 10475 4a41 57410000 		.long	0x4157
 10476 4a45 0F       		.uleb128 0xf
 10477 4a46 00000000 		.long	.LASF761
 10478 4a4a 3A       		.byte	0x3a
 10479 4a4b 9F       		.byte	0x9f
 10480 4a4c 0C       		.byte	0xc
 10481 4a4d ED000000 		.long	0xed
 10482 4a51 604A0000 		.long	0x4a60
 10483 4a55 01       		.uleb128 0x1
 10484 4a56 7B000000 		.long	0x7b
 10485 4a5a 01       		.uleb128 0x1
 10486 4a5b 284A0000 		.long	0x4a28
 10487 4a5f 00       		.byte	0
 10488 4a60 0F       		.uleb128 0xf
 10489 4a61 00000000 		.long	.LASF762
 10490 4a65 3B       		.byte	0x3b
 10491 4a66 37       		.byte	0x37
 10492 4a67 0F       		.byte	0xf
 10493 4a68 7B000000 		.long	0x7b
 10494 4a6c 7B4A0000 		.long	0x4a7b
 10495 4a70 01       		.uleb128 0x1
 10496 4a71 7B000000 		.long	0x7b
 10497 4a75 01       		.uleb128 0x1
 10498 4a76 344A0000 		.long	0x4a34
 10499 4a7a 00       		.byte	0
 10500 4a7b 0F       		.uleb128 0xf
 10501 4a7c 00000000 		.long	.LASF763
 10502 4a80 3B       		.byte	0x3b
GAS LISTING linobj/Ch02_03.s 			page 305


 10503 4a81 34       		.byte	0x34
 10504 4a82 12       		.byte	0x12
 10505 4a83 344A0000 		.long	0x4a34
 10506 4a87 914A0000 		.long	0x4a91
 10507 4a8b 01       		.uleb128 0x1
 10508 4a8c BC020000 		.long	0x2bc
 10509 4a90 00       		.byte	0
 10510 4a91 0F       		.uleb128 0xf
 10511 4a92 00000000 		.long	.LASF764
 10512 4a96 3A       		.byte	0x3a
 10513 4a97 9B       		.byte	0x9b
 10514 4a98 11       		.byte	0x11
 10515 4a99 284A0000 		.long	0x4a28
 10516 4a9d A74A0000 		.long	0x4aa7
 10517 4aa1 01       		.uleb128 0x1
 10518 4aa2 BC020000 		.long	0x2bc
 10519 4aa6 00       		.byte	0
 10520 4aa7 13       		.uleb128 0x13
 10521 4aa8 2F2B0000 		.long	0x2b2f
 10522 4aac 40       		.uleb128 0x40
 10523 4aad 00000000 		.long	.LASF765
 10524 4ab1 3C       		.byte	0x3c
 10525 4ab2 48       		.byte	0x48
 10526 4ab3 10       		.byte	0x10
 10527 4ab4 39420000 		.long	0x4239
 10528 4ab8 0F       		.uleb128 0xf
 10529 4ab9 00000000 		.long	.LASF766
 10530 4abd 3C       		.byte	0x3c
 10531 4abe 4F       		.byte	0x4f
 10532 4abf 0F       		.byte	0xf
 10533 4ac0 00360000 		.long	0x3600
 10534 4ac4 D34A0000 		.long	0x4ad3
 10535 4ac8 01       		.uleb128 0x1
 10536 4ac9 28420000 		.long	0x4228
 10537 4acd 01       		.uleb128 0x1
 10538 4ace 28420000 		.long	0x4228
 10539 4ad2 00       		.byte	0
 10540 4ad3 0F       		.uleb128 0xf
 10541 4ad4 00000000 		.long	.LASF767
 10542 4ad8 3C       		.byte	0x3c
 10543 4ad9 53       		.byte	0x53
 10544 4ada 0F       		.byte	0xf
 10545 4adb 28420000 		.long	0x4228
 10546 4adf E94A0000 		.long	0x4ae9
 10547 4ae3 01       		.uleb128 0x1
 10548 4ae4 E94A0000 		.long	0x4ae9
 10549 4ae8 00       		.byte	0
 10550 4ae9 0B       		.uleb128 0xb
 10551 4aea 87340000 		.long	0x3487
 10552 4aee 0F       		.uleb128 0xf
 10553 4aef 00000000 		.long	.LASF768
 10554 4af3 3C       		.byte	0x3c
 10555 4af4 4C       		.byte	0x4c
 10556 4af5 0F       		.byte	0xf
 10557 4af6 28420000 		.long	0x4228
 10558 4afa 044B0000 		.long	0x4b04
 10559 4afe 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 306


 10560 4aff 044B0000 		.long	0x4b04
 10561 4b03 00       		.byte	0
 10562 4b04 0B       		.uleb128 0xb
 10563 4b05 28420000 		.long	0x4228
 10564 4b09 0F       		.uleb128 0xf
 10565 4b0a 00000000 		.long	.LASF769
 10566 4b0e 3C       		.byte	0x3c
 10567 4b0f B4       		.byte	0xb4
 10568 4b10 0E       		.byte	0xe
 10569 4b11 CB330000 		.long	0x33cb
 10570 4b15 1F4B0000 		.long	0x4b1f
 10571 4b19 01       		.uleb128 0x1
 10572 4b1a 82340000 		.long	0x3482
 10573 4b1e 00       		.byte	0
 10574 4b1f 0F       		.uleb128 0xf
 10575 4b20 00000000 		.long	.LASF770
 10576 4b24 3C       		.byte	0x3c
 10577 4b25 B8       		.byte	0xb8
 10578 4b26 0E       		.byte	0xe
 10579 4b27 CB330000 		.long	0x33cb
 10580 4b2b 354B0000 		.long	0x4b35
 10581 4b2f 01       		.uleb128 0x1
 10582 4b30 354B0000 		.long	0x4b35
 10583 4b34 00       		.byte	0
 10584 4b35 0B       		.uleb128 0xb
 10585 4b36 34420000 		.long	0x4234
 10586 4b3a 0F       		.uleb128 0xf
 10587 4b3b 00000000 		.long	.LASF771
 10588 4b3f 3C       		.byte	0x3c
 10589 4b40 85       		.byte	0x85
 10590 4b41 13       		.byte	0x13
 10591 4b42 E94A0000 		.long	0x4ae9
 10592 4b46 504B0000 		.long	0x4b50
 10593 4b4a 01       		.uleb128 0x1
 10594 4b4b 354B0000 		.long	0x4b35
 10595 4b4f 00       		.byte	0
 10596 4b50 0F       		.uleb128 0xf
 10597 4b51 00000000 		.long	.LASF772
 10598 4b55 3C       		.byte	0x3c
 10599 4b56 89       		.byte	0x89
 10600 4b57 13       		.byte	0x13
 10601 4b58 E94A0000 		.long	0x4ae9
 10602 4b5c 664B0000 		.long	0x4b66
 10603 4b60 01       		.uleb128 0x1
 10604 4b61 354B0000 		.long	0x4b35
 10605 4b65 00       		.byte	0
 10606 4b66 0B       		.uleb128 0xb
 10607 4b67 7E3A0000 		.long	0x3a7e
 10608 4b6b 13       		.uleb128 0x13
 10609 4b6c D0330000 		.long	0x33d0
 10610 4b70 0B       		.uleb128 0xb
 10611 4b71 9B3C0000 		.long	0x3c9b
 10612 4b75 13       		.uleb128 0x13
 10613 4b76 7E3A0000 		.long	0x3a7e
 10614 4b7a 0B       		.uleb128 0xb
 10615 4b7b A03C0000 		.long	0x3ca0
 10616 4b7f 13       		.uleb128 0x13
GAS LISTING linobj/Ch02_03.s 			page 307


 10617 4b80 C1020000 		.long	0x2c1
 10618 4b84 0B       		.uleb128 0xb
 10619 4b85 BD3E0000 		.long	0x3ebd
 10620 4b89 13       		.uleb128 0x13
 10621 4b8a A03C0000 		.long	0x3ca0
 10622 4b8e 07       		.uleb128 0x7
 10623 4b8f 00000000 		.long	.LASF773
 10624 4b93 3D       		.byte	0x3d
 10625 4b94 18       		.byte	0x18
 10626 4b95 13       		.byte	0x13
 10627 4b96 27410000 		.long	0x4127
 10628 4b9a 07       		.uleb128 0x7
 10629 4b9b 00000000 		.long	.LASF774
 10630 4b9f 3D       		.byte	0x3d
 10631 4ba0 19       		.byte	0x19
 10632 4ba1 14       		.byte	0x14
 10633 4ba2 3F410000 		.long	0x413f
 10634 4ba6 07       		.uleb128 0x7
 10635 4ba7 00000000 		.long	.LASF775
 10636 4bab 3D       		.byte	0x3d
 10637 4bac 1A       		.byte	0x1a
 10638 4bad 14       		.byte	0x14
 10639 4bae 5C410000 		.long	0x415c
 10640 4bb2 07       		.uleb128 0x7
 10641 4bb3 00000000 		.long	.LASF776
 10642 4bb7 3D       		.byte	0x3d
 10643 4bb8 1B       		.byte	0x1b
 10644 4bb9 14       		.byte	0x14
 10645 4bba 74410000 		.long	0x4174
 10646 4bbe 07       		.uleb128 0x7
 10647 4bbf 00000000 		.long	.LASF777
 10648 4bc3 3E       		.byte	0x3e
 10649 4bc4 19       		.byte	0x19
 10650 4bc5 18       		.byte	0x18
 10651 4bc6 80410000 		.long	0x4180
 10652 4bca 07       		.uleb128 0x7
 10653 4bcb 00000000 		.long	.LASF778
 10654 4bcf 3E       		.byte	0x3e
 10655 4bd0 1A       		.byte	0x1a
 10656 4bd1 19       		.byte	0x19
 10657 4bd2 98410000 		.long	0x4198
 10658 4bd6 07       		.uleb128 0x7
 10659 4bd7 00000000 		.long	.LASF779
 10660 4bdb 3E       		.byte	0x3e
 10661 4bdc 1B       		.byte	0x1b
 10662 4bdd 19       		.byte	0x19
 10663 4bde B0410000 		.long	0x41b0
 10664 4be2 07       		.uleb128 0x7
 10665 4be3 00000000 		.long	.LASF780
 10666 4be7 3E       		.byte	0x3e
 10667 4be8 1C       		.byte	0x1c
 10668 4be9 19       		.byte	0x19
 10669 4bea C8410000 		.long	0x41c8
 10670 4bee 07       		.uleb128 0x7
 10671 4bef 00000000 		.long	.LASF781
 10672 4bf3 3E       		.byte	0x3e
 10673 4bf4 1F       		.byte	0x1f
GAS LISTING linobj/Ch02_03.s 			page 308


 10674 4bf5 19       		.byte	0x19
 10675 4bf6 8C410000 		.long	0x418c
 10676 4bfa 07       		.uleb128 0x7
 10677 4bfb 00000000 		.long	.LASF782
 10678 4bff 3E       		.byte	0x3e
 10679 4c00 20       		.byte	0x20
 10680 4c01 1A       		.byte	0x1a
 10681 4c02 A4410000 		.long	0x41a4
 10682 4c06 07       		.uleb128 0x7
 10683 4c07 00000000 		.long	.LASF783
 10684 4c0b 3E       		.byte	0x3e
 10685 4c0c 21       		.byte	0x21
 10686 4c0d 1A       		.byte	0x1a
 10687 4c0e BC410000 		.long	0x41bc
 10688 4c12 07       		.uleb128 0x7
 10689 4c13 00000000 		.long	.LASF784
 10690 4c17 3E       		.byte	0x3e
 10691 4c18 22       		.byte	0x22
 10692 4c19 1A       		.byte	0x1a
 10693 4c1a D4410000 		.long	0x41d4
 10694 4c1e 07       		.uleb128 0x7
 10695 4c1f 00000000 		.long	.LASF785
 10696 4c23 3F       		.byte	0x3f
 10697 4c24 2F       		.byte	0x2f
 10698 4c25 15       		.byte	0x15
 10699 4c26 563F0000 		.long	0x3f56
 10700 4c2a 07       		.uleb128 0x7
 10701 4c2b 00000000 		.long	.LASF786
 10702 4c2f 3F       		.byte	0x3f
 10703 4c30 31       		.byte	0x31
 10704 4c31 12       		.byte	0x12
 10705 4c32 74360000 		.long	0x3674
 10706 4c36 07       		.uleb128 0x7
 10707 4c37 00000000 		.long	.LASF787
 10708 4c3b 3F       		.byte	0x3f
 10709 4c3c 32       		.byte	0x32
 10710 4c3d 12       		.byte	0x12
 10711 4c3e 74360000 		.long	0x3674
 10712 4c42 07       		.uleb128 0x7
 10713 4c43 00000000 		.long	.LASF788
 10714 4c47 3F       		.byte	0x3f
 10715 4c48 33       		.byte	0x33
 10716 4c49 12       		.byte	0x12
 10717 4c4a 74360000 		.long	0x3674
 10718 4c4e 07       		.uleb128 0x7
 10719 4c4f 00000000 		.long	.LASF789
 10720 4c53 3F       		.byte	0x3f
 10721 4c54 3C       		.byte	0x3c
 10722 4c55 17       		.byte	0x17
 10723 4c56 4F3F0000 		.long	0x3f4f
 10724 4c5a 07       		.uleb128 0x7
 10725 4c5b 00000000 		.long	.LASF790
 10726 4c5f 3F       		.byte	0x3f
 10727 4c60 3E       		.byte	0x3e
 10728 4c61 1B       		.byte	0x1b
 10729 4c62 36000000 		.long	0x36
 10730 4c66 07       		.uleb128 0x7
GAS LISTING linobj/Ch02_03.s 			page 309


 10731 4c67 00000000 		.long	.LASF791
 10732 4c6b 3F       		.byte	0x3f
 10733 4c6c 3F       		.byte	0x3f
 10734 4c6d 1B       		.byte	0x1b
 10735 4c6e 36000000 		.long	0x36
 10736 4c72 07       		.uleb128 0x7
 10737 4c73 00000000 		.long	.LASF792
 10738 4c77 3F       		.byte	0x3f
 10739 4c78 40       		.byte	0x40
 10740 4c79 1B       		.byte	0x1b
 10741 4c7a 36000000 		.long	0x36
 10742 4c7e 07       		.uleb128 0x7
 10743 4c7f 00000000 		.long	.LASF793
 10744 4c83 3F       		.byte	0x3f
 10745 4c84 4C       		.byte	0x4c
 10746 4c85 12       		.byte	0x12
 10747 4c86 74360000 		.long	0x3674
 10748 4c8a 07       		.uleb128 0x7
 10749 4c8b 00000000 		.long	.LASF794
 10750 4c8f 3F       		.byte	0x3f
 10751 4c90 4F       		.byte	0x4f
 10752 4c91 1B       		.byte	0x1b
 10753 4c92 36000000 		.long	0x36
 10754 4c96 07       		.uleb128 0x7
 10755 4c97 00000000 		.long	.LASF795
 10756 4c9b 3F       		.byte	0x3f
 10757 4c9c 5A       		.byte	0x5a
 10758 4c9d 14       		.byte	0x14
 10759 4c9e E0410000 		.long	0x41e0
 10760 4ca2 07       		.uleb128 0x7
 10761 4ca3 00000000 		.long	.LASF796
 10762 4ca7 3F       		.byte	0x3f
 10763 4ca8 5B       		.byte	0x5b
 10764 4ca9 15       		.byte	0x15
 10765 4caa EC410000 		.long	0x41ec
 10766 4cae 8301     		.uleb128 0x83
 10767 4cb0 00000000 		.long	.LASF882
 10768 4cb4 10       		.byte	0x10
 10769 4cb5 10       		.byte	0x10
 10770 4cb6 40       		.byte	0x40
 10771 4cb7 0B       		.byte	0xb
 10772 4cb8 14       		.byte	0x14
 10773 4cb9 E64E0000 		.long	0x4ee6
 10774 4cbd 55       		.uleb128 0x55
 10775 4cbe 40       		.byte	0x40
 10776 4cbf 0F       		.byte	0xf
 10777 4cc0 05       		.byte	0x5
 10778 4cc1 3E4D0000 		.long	0x4d3e
 10779 4cc5 20       		.uleb128 0x20
 10780 4cc6 00000000 		.long	.LASF797
 10781 4cca 40       		.byte	0x40
 10782 4ccb 10       		.byte	0x10
 10783 4ccc 10       		.byte	0x10
 10784 4ccd EB4E0000 		.long	0x4eeb
 10785 4cd1 20       		.uleb128 0x20
 10786 4cd2 00000000 		.long	.LASF798
 10787 4cd6 40       		.byte	0x40
GAS LISTING linobj/Ch02_03.s 			page 310


 10788 4cd7 11       		.byte	0x11
 10789 4cd8 11       		.byte	0x11
 10790 4cd9 FB4E0000 		.long	0x4efb
 10791 4cdd 20       		.uleb128 0x20
 10792 4cde 00000000 		.long	.LASF799
 10793 4ce2 40       		.byte	0x40
 10794 4ce3 12       		.byte	0x12
 10795 4ce4 11       		.byte	0x11
 10796 4ce5 0B4F0000 		.long	0x4f0b
 10797 4ce9 20       		.uleb128 0x20
 10798 4cea 00000000 		.long	.LASF800
 10799 4cee 40       		.byte	0x40
 10800 4cef 13       		.byte	0x13
 10801 4cf0 11       		.byte	0x11
 10802 4cf1 1B4F0000 		.long	0x4f1b
 10803 4cf5 20       		.uleb128 0x20
 10804 4cf6 00000000 		.long	.LASF801
 10805 4cfa 40       		.byte	0x40
 10806 4cfb 14       		.byte	0x14
 10807 4cfc 11       		.byte	0x11
 10808 4cfd 2B4F0000 		.long	0x4f2b
 10809 4d01 20       		.uleb128 0x20
 10810 4d02 00000000 		.long	.LASF802
 10811 4d06 40       		.byte	0x40
 10812 4d07 15       		.byte	0x15
 10813 4d08 12       		.byte	0x12
 10814 4d09 3B4F0000 		.long	0x4f3b
 10815 4d0d 20       		.uleb128 0x20
 10816 4d0e 00000000 		.long	.LASF803
 10817 4d12 40       		.byte	0x40
 10818 4d13 16       		.byte	0x16
 10819 4d14 12       		.byte	0x12
 10820 4d15 4B4F0000 		.long	0x4f4b
 10821 4d19 20       		.uleb128 0x20
 10822 4d1a 00000000 		.long	.LASF804
 10823 4d1e 40       		.byte	0x40
 10824 4d1f 17       		.byte	0x17
 10825 4d20 12       		.byte	0x12
 10826 4d21 5B4F0000 		.long	0x4f5b
 10827 4d25 20       		.uleb128 0x20
 10828 4d26 00000000 		.long	.LASF805
 10829 4d2a 40       		.byte	0x40
 10830 4d2b 18       		.byte	0x18
 10831 4d2c 0F       		.byte	0xf
 10832 4d2d 6B4F0000 		.long	0x4f6b
 10833 4d31 20       		.uleb128 0x20
 10834 4d32 00000000 		.long	.LASF806
 10835 4d36 40       		.byte	0x40
 10836 4d37 19       		.byte	0x19
 10837 4d38 10       		.byte	0x10
 10838 4d39 7B4F0000 		.long	0x4f7b
 10839 4d3d 00       		.byte	0
 10840 4d3e 56       		.uleb128 0x56
 10841 4d3f BD4C0000 		.long	0x4cbd
 10842 4d43 00       		.byte	0
 10843 4d44 1A       		.uleb128 0x1a
 10844 4d45 00000000 		.long	.LASF807
GAS LISTING linobj/Ch02_03.s 			page 311


 10845 4d49 40       		.byte	0x40
 10846 4d4a 69       		.byte	0x69
 10847 4d4b 11       		.byte	0x11
 10848 4d4c 00000000 		.long	.LASF808
 10849 4d50 402A0000 		.long	0x2a40
 10850 4d54 5C4D0000 		.long	0x4d5c
 10851 4d58 624D0000 		.long	0x4d62
 10852 4d5c 02       		.uleb128 0x2
 10853 4d5d 8B4F0000 		.long	0x4f8b
 10854 4d61 00       		.byte	0
 10855 4d62 1A       		.uleb128 0x1a
 10856 4d63 00000000 		.long	.LASF809
 10857 4d67 40       		.byte	0x40
 10858 4d68 6E       		.byte	0x6e
 10859 4d69 11       		.byte	0x11
 10860 4d6a 00000000 		.long	.LASF810
 10861 4d6e 402A0000 		.long	0x2a40
 10862 4d72 7A4D0000 		.long	0x4d7a
 10863 4d76 804D0000 		.long	0x4d80
 10864 4d7a 02       		.uleb128 0x2
 10865 4d7b 8B4F0000 		.long	0x4f8b
 10866 4d7f 00       		.byte	0
 10867 4d80 1A       		.uleb128 0x1a
 10868 4d81 00000000 		.long	.LASF811
 10869 4d85 40       		.byte	0x40
 10870 4d86 73       		.byte	0x73
 10871 4d87 11       		.byte	0x11
 10872 4d88 00000000 		.long	.LASF812
 10873 4d8c 402A0000 		.long	0x2a40
 10874 4d90 984D0000 		.long	0x4d98
 10875 4d94 9E4D0000 		.long	0x4d9e
 10876 4d98 02       		.uleb128 0x2
 10877 4d99 8B4F0000 		.long	0x4f8b
 10878 4d9d 00       		.byte	0
 10879 4d9e 1A       		.uleb128 0x1a
 10880 4d9f 00000000 		.long	.LASF813
 10881 4da3 40       		.byte	0x40
 10882 4da4 78       		.byte	0x78
 10883 4da5 11       		.byte	0x11
 10884 4da6 00000000 		.long	.LASF814
 10885 4daa 402A0000 		.long	0x2a40
 10886 4dae B64D0000 		.long	0x4db6
 10887 4db2 BC4D0000 		.long	0x4dbc
 10888 4db6 02       		.uleb128 0x2
 10889 4db7 8B4F0000 		.long	0x4f8b
 10890 4dbb 00       		.byte	0
 10891 4dbc 1A       		.uleb128 0x1a
 10892 4dbd 00000000 		.long	.LASF815
 10893 4dc1 40       		.byte	0x40
 10894 4dc2 81       		.byte	0x81
 10895 4dc3 11       		.byte	0x11
 10896 4dc4 00000000 		.long	.LASF816
 10897 4dc8 402A0000 		.long	0x2a40
 10898 4dcc D44D0000 		.long	0x4dd4
 10899 4dd0 DA4D0000 		.long	0x4dda
 10900 4dd4 02       		.uleb128 0x2
 10901 4dd5 8B4F0000 		.long	0x4f8b
GAS LISTING linobj/Ch02_03.s 			page 312


 10902 4dd9 00       		.byte	0
 10903 4dda 1A       		.uleb128 0x1a
 10904 4ddb 00000000 		.long	.LASF817
 10905 4ddf 40       		.byte	0x40
 10906 4de0 86       		.byte	0x86
 10907 4de1 11       		.byte	0x11
 10908 4de2 00000000 		.long	.LASF818
 10909 4de6 402A0000 		.long	0x2a40
 10910 4dea F24D0000 		.long	0x4df2
 10911 4dee F84D0000 		.long	0x4df8
 10912 4df2 02       		.uleb128 0x2
 10913 4df3 8B4F0000 		.long	0x4f8b
 10914 4df7 00       		.byte	0
 10915 4df8 1A       		.uleb128 0x1a
 10916 4df9 00000000 		.long	.LASF819
 10917 4dfd 40       		.byte	0x40
 10918 4dfe 8B       		.byte	0x8b
 10919 4dff 11       		.byte	0x11
 10920 4e00 00000000 		.long	.LASF820
 10921 4e04 402A0000 		.long	0x2a40
 10922 4e08 104E0000 		.long	0x4e10
 10923 4e0c 164E0000 		.long	0x4e16
 10924 4e10 02       		.uleb128 0x2
 10925 4e11 8B4F0000 		.long	0x4f8b
 10926 4e15 00       		.byte	0
 10927 4e16 1A       		.uleb128 0x1a
 10928 4e17 00000000 		.long	.LASF821
 10929 4e1b 40       		.byte	0x40
 10930 4e1c 90       		.byte	0x90
 10931 4e1d 11       		.byte	0x11
 10932 4e1e 00000000 		.long	.LASF822
 10933 4e22 402A0000 		.long	0x2a40
 10934 4e26 2E4E0000 		.long	0x4e2e
 10935 4e2a 344E0000 		.long	0x4e34
 10936 4e2e 02       		.uleb128 0x2
 10937 4e2f 8B4F0000 		.long	0x4f8b
 10938 4e33 00       		.byte	0
 10939 4e34 1A       		.uleb128 0x1a
 10940 4e35 00000000 		.long	.LASF823
 10941 4e39 40       		.byte	0x40
 10942 4e3a 99       		.byte	0x99
 10943 4e3b 11       		.byte	0x11
 10944 4e3c 00000000 		.long	.LASF824
 10945 4e40 402A0000 		.long	0x2a40
 10946 4e44 4C4E0000 		.long	0x4e4c
 10947 4e48 524E0000 		.long	0x4e52
 10948 4e4c 02       		.uleb128 0x2
 10949 4e4d 8B4F0000 		.long	0x4f8b
 10950 4e51 00       		.byte	0
 10951 4e52 1A       		.uleb128 0x1a
 10952 4e53 00000000 		.long	.LASF825
 10953 4e57 40       		.byte	0x40
 10954 4e58 9E       		.byte	0x9e
 10955 4e59 11       		.byte	0x11
 10956 4e5a 00000000 		.long	.LASF826
 10957 4e5e 402A0000 		.long	0x2a40
 10958 4e62 6A4E0000 		.long	0x4e6a
GAS LISTING linobj/Ch02_03.s 			page 313


 10959 4e66 704E0000 		.long	0x4e70
 10960 4e6a 02       		.uleb128 0x2
 10961 4e6b 8B4F0000 		.long	0x4f8b
 10962 4e6f 00       		.byte	0
 10963 4e70 1A       		.uleb128 0x1a
 10964 4e71 00000000 		.long	.LASF827
 10965 4e75 40       		.byte	0x40
 10966 4e76 A3       		.byte	0xa3
 10967 4e77 11       		.byte	0x11
 10968 4e78 00000000 		.long	.LASF828
 10969 4e7c 402A0000 		.long	0x2a40
 10970 4e80 884E0000 		.long	0x4e88
 10971 4e84 8E4E0000 		.long	0x4e8e
 10972 4e88 02       		.uleb128 0x2
 10973 4e89 8B4F0000 		.long	0x4f8b
 10974 4e8d 00       		.byte	0
 10975 4e8e 1A       		.uleb128 0x1a
 10976 4e8f 00000000 		.long	.LASF829
 10977 4e93 40       		.byte	0x40
 10978 4e94 A8       		.byte	0xa8
 10979 4e95 11       		.byte	0x11
 10980 4e96 00000000 		.long	.LASF830
 10981 4e9a 402A0000 		.long	0x2a40
 10982 4e9e A64E0000 		.long	0x4ea6
 10983 4ea2 AC4E0000 		.long	0x4eac
 10984 4ea6 02       		.uleb128 0x2
 10985 4ea7 8B4F0000 		.long	0x4f8b
 10986 4eab 00       		.byte	0
 10987 4eac 1A       		.uleb128 0x1a
 10988 4ead 00000000 		.long	.LASF831
 10989 4eb1 40       		.byte	0x40
 10990 4eb2 B1       		.byte	0xb1
 10991 4eb3 11       		.byte	0x11
 10992 4eb4 00000000 		.long	.LASF832
 10993 4eb8 402A0000 		.long	0x2a40
 10994 4ebc C44E0000 		.long	0x4ec4
 10995 4ec0 CA4E0000 		.long	0x4eca
 10996 4ec4 02       		.uleb128 0x2
 10997 4ec5 8B4F0000 		.long	0x4f8b
 10998 4ec9 00       		.byte	0
 10999 4eca 8401     		.uleb128 0x84
 11000 4ecc 00000000 		.long	.LASF833
 11001 4ed0 40       		.byte	0x40
 11002 4ed1 B6       		.byte	0xb6
 11003 4ed2 11       		.byte	0x11
 11004 4ed3 00000000 		.long	.LASF834
 11005 4ed7 402A0000 		.long	0x2a40
 11006 4edb DF4E0000 		.long	0x4edf
 11007 4edf 02       		.uleb128 0x2
 11008 4ee0 8B4F0000 		.long	0x4f8b
 11009 4ee4 00       		.byte	0
 11010 4ee5 00       		.byte	0
 11011 4ee6 0E       		.uleb128 0xe
 11012 4ee7 AE4C0000 		.long	0x4cae
 11013 4eeb 21       		.uleb128 0x21
 11014 4eec 3A430000 		.long	0x433a
 11015 4ef0 FB4E0000 		.long	0x4efb
GAS LISTING linobj/Ch02_03.s 			page 314


 11016 4ef4 1C       		.uleb128 0x1c
 11017 4ef5 36000000 		.long	0x36
 11018 4ef9 0F       		.byte	0xf
 11019 4efa 00       		.byte	0
 11020 4efb 21       		.uleb128 0x21
 11021 4efc 46430000 		.long	0x4346
 11022 4f00 0B4F0000 		.long	0x4f0b
 11023 4f04 1C       		.uleb128 0x1c
 11024 4f05 36000000 		.long	0x36
 11025 4f09 07       		.byte	0x7
 11026 4f0a 00       		.byte	0
 11027 4f0b 21       		.uleb128 0x21
 11028 4f0c 52430000 		.long	0x4352
 11029 4f10 1B4F0000 		.long	0x4f1b
 11030 4f14 1C       		.uleb128 0x1c
 11031 4f15 36000000 		.long	0x36
 11032 4f19 03       		.byte	0x3
 11033 4f1a 00       		.byte	0
 11034 4f1b 21       		.uleb128 0x21
 11035 4f1c 5E430000 		.long	0x435e
 11036 4f20 2B4F0000 		.long	0x4f2b
 11037 4f24 1C       		.uleb128 0x1c
 11038 4f25 36000000 		.long	0x36
 11039 4f29 01       		.byte	0x1
 11040 4f2a 00       		.byte	0
 11041 4f2b 21       		.uleb128 0x21
 11042 4f2c 8E4B0000 		.long	0x4b8e
 11043 4f30 3B4F0000 		.long	0x4f3b
 11044 4f34 1C       		.uleb128 0x1c
 11045 4f35 36000000 		.long	0x36
 11046 4f39 0F       		.byte	0xf
 11047 4f3a 00       		.byte	0
 11048 4f3b 21       		.uleb128 0x21
 11049 4f3c 9A4B0000 		.long	0x4b9a
 11050 4f40 4B4F0000 		.long	0x4f4b
 11051 4f44 1C       		.uleb128 0x1c
 11052 4f45 36000000 		.long	0x36
 11053 4f49 07       		.byte	0x7
 11054 4f4a 00       		.byte	0
 11055 4f4b 21       		.uleb128 0x21
 11056 4f4c A64B0000 		.long	0x4ba6
 11057 4f50 5B4F0000 		.long	0x4f5b
 11058 4f54 1C       		.uleb128 0x1c
 11059 4f55 36000000 		.long	0x36
 11060 4f59 03       		.byte	0x3
 11061 4f5a 00       		.byte	0
 11062 4f5b 21       		.uleb128 0x21
 11063 4f5c B24B0000 		.long	0x4bb2
 11064 4f60 6B4F0000 		.long	0x4f6b
 11065 4f64 1C       		.uleb128 0x1c
 11066 4f65 36000000 		.long	0x36
 11067 4f69 01       		.byte	0x1
 11068 4f6a 00       		.byte	0
 11069 4f6b 21       		.uleb128 0x21
 11070 4f6c 28360000 		.long	0x3628
 11071 4f70 7B4F0000 		.long	0x4f7b
 11072 4f74 1C       		.uleb128 0x1c
GAS LISTING linobj/Ch02_03.s 			page 315


 11073 4f75 36000000 		.long	0x36
 11074 4f79 03       		.byte	0x3
 11075 4f7a 00       		.byte	0
 11076 4f7b 21       		.uleb128 0x21
 11077 4f7c 00360000 		.long	0x3600
 11078 4f80 8B4F0000 		.long	0x4f8b
 11079 4f84 1C       		.uleb128 0x1c
 11080 4f85 36000000 		.long	0x36
 11081 4f89 01       		.byte	0x1
 11082 4f8a 00       		.byte	0
 11083 4f8b 0B       		.uleb128 0xb
 11084 4f8c AE4C0000 		.long	0x4cae
 11085 4f90 0B       		.uleb128 0xb
 11086 4f91 2F2B0000 		.long	0x2b2f
 11087 4f95 0E       		.uleb128 0xe
 11088 4f96 904F0000 		.long	0x4f90
 11089 4f9a 13       		.uleb128 0x13
 11090 4f9b 462E0000 		.long	0x2e46
 11091 4f9f 13       		.uleb128 0x13
 11092 4fa0 982E0000 		.long	0x2e98
 11093 4fa4 41       		.uleb128 0x41
 11094 4fa5 C32E0000 		.long	0x2ec3
 11095 4fa9 41       		.uleb128 0x41
 11096 4faa CC2E0000 		.long	0x2ecc
 11097 4fae 41       		.uleb128 0x41
 11098 4faf D52E0000 		.long	0x2ed5
 11099 4fb3 3A       		.uleb128 0x3a
 11100 4fb4 00000000 		.long	.LASF835
 11101 4fb8 41       		.byte	0x41
 11102 4fb9 8C       		.byte	0x8c
 11103 4fba 06       		.byte	0x6
 11104 4fbb 00000000 		.long	.LASF836
 11105 4fbf CE4F0000 		.long	0x4fce
 11106 4fc3 01       		.uleb128 0x1
 11107 4fc4 79000000 		.long	0x79
 11108 4fc8 01       		.uleb128 0x1
 11109 4fc9 25050000 		.long	0x525
 11110 4fcd 00       		.byte	0
 11111 4fce 3A       		.uleb128 0x3a
 11112 4fcf 00000000 		.long	.LASF837
 11113 4fd3 42       		.byte	0x42
 11114 4fd4 0B       		.byte	0xb
 11115 4fd5 0D       		.byte	0xd
 11116 4fd6 00000000 		.long	.LASF838
 11117 4fda EE4F0000 		.long	0x4fee
 11118 4fde 01       		.uleb128 0x1
 11119 4fdf 8B4F0000 		.long	0x4f8b
 11120 4fe3 01       		.uleb128 0x1
 11121 4fe4 EE4F0000 		.long	0x4fee
 11122 4fe8 01       		.uleb128 0x1
 11123 4fe9 EE4F0000 		.long	0x4fee
 11124 4fed 00       		.byte	0
 11125 4fee 0B       		.uleb128 0xb
 11126 4fef E64E0000 		.long	0x4ee6
 11127 4ff3 3A       		.uleb128 0x3a
 11128 4ff4 00000000 		.long	.LASF839
 11129 4ff8 42       		.byte	0x42
GAS LISTING linobj/Ch02_03.s 			page 316


 11130 4ff9 0A       		.byte	0xa
 11131 4ffa 0D       		.byte	0xd
 11132 4ffb 00000000 		.long	.LASF840
 11133 4fff 13500000 		.long	0x5013
 11134 5003 01       		.uleb128 0x1
 11135 5004 8B4F0000 		.long	0x4f8b
 11136 5008 01       		.uleb128 0x1
 11137 5009 EE4F0000 		.long	0x4fee
 11138 500d 01       		.uleb128 0x1
 11139 500e EE4F0000 		.long	0x4fee
 11140 5012 00       		.byte	0
 11141 5013 0B       		.uleb128 0xb
 11142 5014 DF2E0000 		.long	0x2edf
 11143 5018 0E       		.uleb128 0xe
 11144 5019 13500000 		.long	0x5013
 11145 501d 3A       		.uleb128 0x3a
 11146 501e 00000000 		.long	.LASF841
 11147 5022 42       		.byte	0x42
 11148 5023 09       		.byte	0x9
 11149 5024 0D       		.byte	0xd
 11150 5025 00000000 		.long	.LASF842
 11151 5029 3D500000 		.long	0x503d
 11152 502d 01       		.uleb128 0x1
 11153 502e 8B4F0000 		.long	0x4f8b
 11154 5032 01       		.uleb128 0x1
 11155 5033 EE4F0000 		.long	0x4fee
 11156 5037 01       		.uleb128 0x1
 11157 5038 EE4F0000 		.long	0x4fee
 11158 503c 00       		.byte	0
 11159 503d 15       		.uleb128 0x15
 11160 503e AE0A0000 		.long	0xaae
 11161 5042 4B500000 		.long	0x504b
 11162 5046 03       		.byte	0x3
 11163 5047 6D500000 		.long	0x506d
 11164 504b 12       		.uleb128 0x12
 11165 504c 00000000 		.long	.LASF843
 11166 5050 50420000 		.long	0x4250
 11167 5054 26       		.uleb128 0x26
 11168 5055 5F5F7000 		.string	"__p"
 11169 5059 03       		.byte	0x3
 11170 505a 9C       		.byte	0x9c
 11171 505b 17       		.byte	0x17
 11172 505c CB330000 		.long	0x33cb
 11173 5060 26       		.uleb128 0x26
 11174 5061 5F5F6E00 		.string	"__n"
 11175 5065 03       		.byte	0x3
 11176 5066 9C       		.byte	0x9c
 11177 5067 26       		.byte	0x26
 11178 5068 A10A0000 		.long	0xaa1
 11179 506c 00       		.byte	0
 11180 506d 2C       		.uleb128 0x2c
 11181 506e 7E2E0000 		.long	0x2e7e
 11182 5072 83500000 		.long	0x5083
 11183 5076 26       		.uleb128 0x26
 11184 5077 5F5F7200 		.string	"__r"
 11185 507b 24       		.byte	0x24
 11186 507c 86       		.byte	0x86
GAS LISTING linobj/Ch02_03.s 			page 317


 11187 507d 20       		.byte	0x20
 11188 507e 9F4F0000 		.long	0x4f9f
 11189 5082 00       		.byte	0
 11190 5083 2C       		.uleb128 0x2c
 11191 5084 520E0000 		.long	0xe52
 11192 5088 B4500000 		.long	0x50b4
 11193 508c 2F       		.uleb128 0x2f
 11194 508d 5F5F6100 		.string	"__a"
 11195 5091 1A       		.byte	0x1a
 11196 5092 0002     		.value	0x200
 11197 5094 22       		.byte	0x22
 11198 5095 B4490000 		.long	0x49b4
 11199 5099 2F       		.uleb128 0x2f
 11200 509a 5F5F7000 		.string	"__p"
 11201 509e 1A       		.byte	0x1a
 11202 509f 0002     		.value	0x200
 11203 50a1 2F       		.byte	0x2f
 11204 50a2 D40D0000 		.long	0xdd4
 11205 50a6 2F       		.uleb128 0x2f
 11206 50a7 5F5F6E00 		.string	"__n"
 11207 50ab 1A       		.byte	0x1a
 11208 50ac 0002     		.value	0x200
 11209 50ae 3E       		.byte	0x3e
 11210 50af 130E0000 		.long	0xe13
 11211 50b3 00       		.byte	0
 11212 50b4 15       		.uleb128 0x15
 11213 50b5 9B090000 		.long	0x99b
 11214 50b9 C2500000 		.long	0x50c2
 11215 50bd 02       		.byte	0x2
 11216 50be D1500000 		.long	0x50d1
 11217 50c2 12       		.uleb128 0x12
 11218 50c3 00000000 		.long	.LASF843
 11219 50c7 50420000 		.long	0x4250
 11220 50cb 01       		.uleb128 0x1
 11221 50cc 55420000 		.long	0x4255
 11222 50d0 00       		.byte	0
 11223 50d1 2D       		.uleb128 0x2d
 11224 50d2 B4500000 		.long	0x50b4
 11225 50d6 00000000 		.long	.LASF845
 11226 50da E2500000 		.long	0x50e2
 11227 50de ED500000 		.long	0x50ed
 11228 50e2 09       		.uleb128 0x9
 11229 50e3 C2500000 		.long	0x50c2
 11230 50e7 09       		.uleb128 0x9
 11231 50e8 CB500000 		.long	0x50cb
 11232 50ec 00       		.byte	0
 11233 50ed 0B       		.uleb128 0xb
 11234 50ee 582F0000 		.long	0x2f58
 11235 50f2 0E       		.uleb128 0xe
 11236 50f3 ED500000 		.long	0x50ed
 11237 50f7 15       		.uleb128 0x15
 11238 50f8 072F0000 		.long	0x2f07
 11239 50fc 05510000 		.long	0x5105
 11240 5100 03       		.byte	0x3
 11241 5101 0F510000 		.long	0x510f
 11242 5105 12       		.uleb128 0x12
 11243 5106 00000000 		.long	.LASF843
GAS LISTING linobj/Ch02_03.s 			page 318


 11244 510a F2500000 		.long	0x50f2
 11245 510e 00       		.byte	0
 11246 510f 15       		.uleb128 0x15
 11247 5110 A9100000 		.long	0x10a9
 11248 5114 1D510000 		.long	0x511d
 11249 5118 03       		.byte	0x3
 11250 5119 27510000 		.long	0x5127
 11251 511d 12       		.uleb128 0x12
 11252 511e 00000000 		.long	.LASF843
 11253 5122 FB490000 		.long	0x49fb
 11254 5126 00       		.byte	0
 11255 5127 15       		.uleb128 0x15
 11256 5128 61110000 		.long	0x1161
 11257 512c 35510000 		.long	0x5135
 11258 5130 03       		.byte	0x3
 11259 5131 4C510000 		.long	0x514c
 11260 5135 12       		.uleb128 0x12
 11261 5136 00000000 		.long	.LASF843
 11262 513a F1490000 		.long	0x49f1
 11263 513e 36       		.uleb128 0x36
 11264 513f 00000000 		.long	.LASF844
 11265 5143 04       		.byte	0x4
 11266 5144 2501     		.value	0x125
 11267 5146 1C       		.byte	0x1c
 11268 5147 AC0F0000 		.long	0xfac
 11269 514b 00       		.byte	0
 11270 514c 15       		.uleb128 0x15
 11271 514d 4B0B0000 		.long	0xb4b
 11272 5151 5A510000 		.long	0x515a
 11273 5155 02       		.byte	0x2
 11274 5156 70510000 		.long	0x5170
 11275 515a 12       		.uleb128 0x12
 11276 515b 00000000 		.long	.LASF843
 11277 515f 73420000 		.long	0x4273
 11278 5163 26       		.uleb128 0x26
 11279 5164 5F5F6100 		.string	"__a"
 11280 5168 02       		.byte	0x2
 11281 5169 A5       		.byte	0xa5
 11282 516a 22       		.byte	0x22
 11283 516b 78420000 		.long	0x4278
 11284 516f 00       		.byte	0
 11285 5170 2D       		.uleb128 0x2d
 11286 5171 4C510000 		.long	0x514c
 11287 5175 00000000 		.long	.LASF846
 11288 5179 81510000 		.long	0x5181
 11289 517d 8C510000 		.long	0x518c
 11290 5181 09       		.uleb128 0x9
 11291 5182 5A510000 		.long	0x515a
 11292 5186 09       		.uleb128 0x9
 11293 5187 63510000 		.long	0x5163
 11294 518b 00       		.byte	0
 11295 518c 2C       		.uleb128 0x2c
 11296 518d 2C2E0000 		.long	0x2e2c
 11297 5191 A2510000 		.long	0x51a2
 11298 5195 26       		.uleb128 0x26
 11299 5196 5F5F7200 		.string	"__r"
 11300 519a 24       		.byte	0x24
GAS LISTING linobj/Ch02_03.s 			page 319


 11301 519b 86       		.byte	0x86
 11302 519c 20       		.byte	0x20
 11303 519d 9A4F0000 		.long	0x4f9a
 11304 51a1 00       		.byte	0
 11305 51a2 15       		.uleb128 0x15
 11306 51a3 262F0000 		.long	0x2f26
 11307 51a7 B0510000 		.long	0x51b0
 11308 51ab 03       		.byte	0x3
 11309 51ac C6510000 		.long	0x51c6
 11310 51b0 12       		.uleb128 0x12
 11311 51b1 00000000 		.long	.LASF843
 11312 51b5 18500000 		.long	0x5018
 11313 51b9 4C       		.uleb128 0x4c
 11314 51ba 00000000 		.long	.LASF728
 11315 51be 27       		.byte	0x27
 11316 51bf A1       		.byte	0xa1
 11317 51c0 18       		.byte	0x18
 11318 51c1 A42A0000 		.long	0x2aa4
 11319 51c5 00       		.byte	0
 11320 51c6 15       		.uleb128 0x15
 11321 51c7 FB0E0000 		.long	0xefb
 11322 51cb D4510000 		.long	0x51d4
 11323 51cf 02       		.byte	0x2
 11324 51d0 F6510000 		.long	0x51f6
 11325 51d4 12       		.uleb128 0x12
 11326 51d5 00000000 		.long	.LASF843
 11327 51d9 CD490000 		.long	0x49cd
 11328 51dd 4C       		.uleb128 0x4c
 11329 51de 00000000 		.long	.LASF847
 11330 51e2 04       		.byte	0x4
 11331 51e3 C1       		.byte	0xc1
 11332 51e4 17       		.byte	0x17
 11333 51e5 690F0000 		.long	0xf69
 11334 51e9 26       		.uleb128 0x26
 11335 51ea 5F5F6100 		.string	"__a"
 11336 51ee 04       		.byte	0x4
 11337 51ef C1       		.byte	0xc1
 11338 51f0 2C       		.byte	0x2c
 11339 51f1 78420000 		.long	0x4278
 11340 51f5 00       		.byte	0
 11341 51f6 2D       		.uleb128 0x2d
 11342 51f7 C6510000 		.long	0x51c6
 11343 51fb 00000000 		.long	.LASF848
 11344 51ff 07520000 		.long	0x5207
 11345 5203 17520000 		.long	0x5217
 11346 5207 09       		.uleb128 0x9
 11347 5208 D4510000 		.long	0x51d4
 11348 520c 09       		.uleb128 0x9
 11349 520d DD510000 		.long	0x51dd
 11350 5211 09       		.uleb128 0x9
 11351 5212 E9510000 		.long	0x51e9
 11352 5216 00       		.byte	0
 11353 5217 15       		.uleb128 0x15
 11354 5218 DD090000 		.long	0x9dd
 11355 521c 25520000 		.long	0x5225
 11356 5220 02       		.byte	0x2
 11357 5221 38520000 		.long	0x5238
GAS LISTING linobj/Ch02_03.s 			page 320


 11358 5225 12       		.uleb128 0x12
 11359 5226 00000000 		.long	.LASF843
 11360 522a 50420000 		.long	0x4250
 11361 522e 12       		.uleb128 0x12
 11362 522f 00000000 		.long	.LASF849
 11363 5233 F4000000 		.long	0xf4
 11364 5237 00       		.byte	0
 11365 5238 2D       		.uleb128 0x2d
 11366 5239 17520000 		.long	0x5217
 11367 523d 00000000 		.long	.LASF850
 11368 5241 49520000 		.long	0x5249
 11369 5245 4F520000 		.long	0x524f
 11370 5249 09       		.uleb128 0x9
 11371 524a 25520000 		.long	0x5225
 11372 524e 00       		.byte	0
 11373 524f 15       		.uleb128 0x15
 11374 5250 81090000 		.long	0x981
 11375 5254 5D520000 		.long	0x525d
 11376 5258 02       		.byte	0x2
 11377 5259 67520000 		.long	0x5267
 11378 525d 12       		.uleb128 0x12
 11379 525e 00000000 		.long	.LASF843
 11380 5262 50420000 		.long	0x4250
 11381 5266 00       		.byte	0
 11382 5267 2D       		.uleb128 0x2d
 11383 5268 4F520000 		.long	0x524f
 11384 526c 00000000 		.long	.LASF851
 11385 5270 78520000 		.long	0x5278
 11386 5274 7E520000 		.long	0x527e
 11387 5278 09       		.uleb128 0x9
 11388 5279 5D520000 		.long	0x525d
 11389 527d 00       		.byte	0
 11390 527e 15       		.uleb128 0x15
 11391 527f 04110000 		.long	0x1104
 11392 5283 8C520000 		.long	0x528c
 11393 5287 03       		.byte	0x3
 11394 5288 96520000 		.long	0x5296
 11395 528c 12       		.uleb128 0x12
 11396 528d 00000000 		.long	.LASF843
 11397 5291 FB490000 		.long	0x49fb
 11398 5295 00       		.byte	0
 11399 5296 15       		.uleb128 0x15
 11400 5297 B4110000 		.long	0x11b4
 11401 529b A4520000 		.long	0x52a4
 11402 529f 03       		.byte	0x3
 11403 52a0 AE520000 		.long	0x52ae
 11404 52a4 12       		.uleb128 0x12
 11405 52a5 00000000 		.long	.LASF843
 11406 52a9 F1490000 		.long	0x49f1
 11407 52ad 00       		.byte	0
 11408 52ae 15       		.uleb128 0x15
 11409 52af 48110000 		.long	0x1148
 11410 52b3 BC520000 		.long	0x52bc
 11411 52b7 03       		.byte	0x3
 11412 52b8 C6520000 		.long	0x52c6
 11413 52bc 12       		.uleb128 0x12
 11414 52bd 00000000 		.long	.LASF843
GAS LISTING linobj/Ch02_03.s 			page 321


 11415 52c1 F1490000 		.long	0x49f1
 11416 52c5 00       		.byte	0
 11417 52c6 15       		.uleb128 0x15
 11418 52c7 7E100000 		.long	0x107e
 11419 52cb D4520000 		.long	0x52d4
 11420 52cf 03       		.byte	0x3
 11421 52d0 DE520000 		.long	0x52de
 11422 52d4 12       		.uleb128 0x12
 11423 52d5 00000000 		.long	.LASF843
 11424 52d9 F1490000 		.long	0x49f1
 11425 52dd 00       		.byte	0
 11426 52de 15       		.uleb128 0x15
 11427 52df 60100000 		.long	0x1060
 11428 52e3 EC520000 		.long	0x52ec
 11429 52e7 03       		.byte	0x3
 11430 52e8 F6520000 		.long	0x52f6
 11431 52ec 12       		.uleb128 0x12
 11432 52ed 00000000 		.long	.LASF843
 11433 52f1 FB490000 		.long	0x49fb
 11434 52f5 00       		.byte	0
 11435 52f6 13       		.uleb128 0x13
 11436 52f7 0A2C0000 		.long	0x2c0a
 11437 52fb 15       		.uleb128 0x15
 11438 52fc 172C0000 		.long	0x2c17
 11439 5300 09530000 		.long	0x5309
 11440 5304 03       		.byte	0x3
 11441 5305 1F530000 		.long	0x531f
 11442 5309 12       		.uleb128 0x12
 11443 530a 00000000 		.long	.LASF843
 11444 530e 954F0000 		.long	0x4f95
 11445 5312 26       		.uleb128 0x26
 11446 5313 5F5F6E00 		.string	"__n"
 11447 5317 05       		.byte	0x5
 11448 5318 AE       		.byte	0xae
 11449 5319 17       		.byte	0x17
 11450 531a 74360000 		.long	0x3674
 11451 531e 00       		.byte	0
 11452 531f 2C       		.uleb128 0x2c
 11453 5320 9F2F0000 		.long	0x2f9f
 11454 5324 53530000 		.long	0x5353
 11455 5328 11       		.uleb128 0x11
 11456 5329 00000000 		.long	.LASF127
 11457 532d E1000000 		.long	0xe1
 11458 5331 11       		.uleb128 0x11
 11459 5332 00000000 		.long	.LASF397
 11460 5336 6B070000 		.long	0x76b
 11461 533a 4C       		.uleb128 0x4c
 11462 533b 00000000 		.long	.LASF852
 11463 533f 06       		.byte	0x6
 11464 5340 F5       		.byte	0xf5
 11465 5341 30       		.byte	0x30
 11466 5342 A74A0000 		.long	0x4aa7
 11467 5346 26       		.uleb128 0x26
 11468 5347 5F5F6600 		.string	"__f"
 11469 534b 06       		.byte	0x6
 11470 534c F5       		.byte	0xf5
 11471 534d 3C       		.byte	0x3c
GAS LISTING linobj/Ch02_03.s 			page 322


 11472 534e 182D0000 		.long	0x2d18
 11473 5352 00       		.byte	0
 11474 5353 15       		.uleb128 0x15
 11475 5354 3B2C0000 		.long	0x2c3b
 11476 5358 61530000 		.long	0x5361
 11477 535c 03       		.byte	0x3
 11478 535d 77530000 		.long	0x5377
 11479 5361 12       		.uleb128 0x12
 11480 5362 00000000 		.long	.LASF843
 11481 5366 954F0000 		.long	0x4f95
 11482 536a 26       		.uleb128 0x26
 11483 536b 5F5F6E00 		.string	"__n"
 11484 536f 05       		.byte	0x5
 11485 5370 B2       		.byte	0xb2
 11486 5371 20       		.byte	0x20
 11487 5372 36000000 		.long	0x36
 11488 5376 00       		.byte	0
 11489 5377 2C       		.uleb128 0x2c
 11490 5378 D02F0000 		.long	0x2fd0
 11491 537c A4530000 		.long	0x53a4
 11492 5380 11       		.uleb128 0x11
 11493 5381 00000000 		.long	.LASF397
 11494 5385 6B070000 		.long	0x76b
 11495 5389 36       		.uleb128 0x36
 11496 538a 00000000 		.long	.LASF853
 11497 538e 05       		.byte	0x5
 11498 538f 9C02     		.value	0x29c
 11499 5391 2E       		.byte	0x2e
 11500 5392 A74A0000 		.long	0x4aa7
 11501 5396 2F       		.uleb128 0x2f
 11502 5397 5F5F7300 		.string	"__s"
 11503 539b 05       		.byte	0x5
 11504 539c 9C02     		.value	0x29c
 11505 539e 41       		.byte	0x41
 11506 539f BC020000 		.long	0x2bc
 11507 53a3 00       		.byte	0
 11508 53a4 2C       		.uleb128 0x2c
 11509 53a5 F92F0000 		.long	0x2ff9
 11510 53a9 E3530000 		.long	0x53e3
 11511 53ad 11       		.uleb128 0x11
 11512 53ae 00000000 		.long	.LASF127
 11513 53b2 E1000000 		.long	0xe1
 11514 53b6 11       		.uleb128 0x11
 11515 53b7 00000000 		.long	.LASF397
 11516 53bb 6B070000 		.long	0x76b
 11517 53bf 11       		.uleb128 0x11
 11518 53c0 00000000 		.long	.LASF398
 11519 53c4 1E0B0000 		.long	0xb1e
 11520 53c8 36       		.uleb128 0x36
 11521 53c9 00000000 		.long	.LASF852
 11522 53cd 04       		.byte	0x4
 11523 53ce ED0F     		.value	0xfed
 11524 53d0 30       		.byte	0x30
 11525 53d1 A74A0000 		.long	0x4aa7
 11526 53d5 36       		.uleb128 0x36
 11527 53d6 00000000 		.long	.LASF854
 11528 53da 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 323


 11529 53db EE0F     		.value	0xfee
 11530 53dd 36       		.byte	0x36
 11531 53de 0F4A0000 		.long	0x4a0f
 11532 53e2 00       		.byte	0
 11533 53e3 2C       		.uleb128 0x2c
 11534 53e4 34300000 		.long	0x3034
 11535 53e8 10540000 		.long	0x5410
 11536 53ec 11       		.uleb128 0x11
 11537 53ed 00000000 		.long	.LASF397
 11538 53f1 6B070000 		.long	0x76b
 11539 53f5 36       		.uleb128 0x36
 11540 53f6 00000000 		.long	.LASF853
 11541 53fa 05       		.byte	0x5
 11542 53fb 4002     		.value	0x240
 11543 53fd 2E       		.byte	0x2e
 11544 53fe A74A0000 		.long	0x4aa7
 11545 5402 2F       		.uleb128 0x2f
 11546 5403 5F5F6300 		.string	"__c"
 11547 5407 05       		.byte	0x5
 11548 5408 4002     		.value	0x240
 11549 540a 3A       		.byte	0x3a
 11550 540b E1000000 		.long	0xe1
 11551 540f 00       		.byte	0
 11552 5410 15       		.uleb128 0x15
 11553 5411 70150000 		.long	0x1570
 11554 5415 1E540000 		.long	0x541e
 11555 5419 02       		.byte	0x2
 11556 541a 4F540000 		.long	0x544f
 11557 541e 12       		.uleb128 0x12
 11558 541f 00000000 		.long	.LASF843
 11559 5423 F1490000 		.long	0x49f1
 11560 5427 2F       		.uleb128 0x2f
 11561 5428 5F5F6E00 		.string	"__n"
 11562 542c 04       		.byte	0x4
 11563 542d 9D02     		.value	0x29d
 11564 542f 1E       		.byte	0x1e
 11565 5430 AC0F0000 		.long	0xfac
 11566 5434 2F       		.uleb128 0x2f
 11567 5435 5F5F6300 		.string	"__c"
 11568 5439 04       		.byte	0x4
 11569 543a 9D02     		.value	0x29d
 11570 543c 2A       		.byte	0x2a
 11571 543d E1000000 		.long	0xe1
 11572 5441 2F       		.uleb128 0x2f
 11573 5442 5F5F6100 		.string	"__a"
 11574 5446 04       		.byte	0x4
 11575 5447 9D02     		.value	0x29d
 11576 5449 3D       		.byte	0x3d
 11577 544a 78420000 		.long	0x4278
 11578 544e 00       		.byte	0
 11579 544f 2D       		.uleb128 0x2d
 11580 5450 10540000 		.long	0x5410
 11581 5454 00000000 		.long	.LASF855
 11582 5458 60540000 		.long	0x5460
 11583 545c 75540000 		.long	0x5475
 11584 5460 09       		.uleb128 0x9
 11585 5461 1E540000 		.long	0x541e
GAS LISTING linobj/Ch02_03.s 			page 324


 11586 5465 09       		.uleb128 0x9
 11587 5466 27540000 		.long	0x5427
 11588 546a 09       		.uleb128 0x9
 11589 546b 34540000 		.long	0x5434
 11590 546f 09       		.uleb128 0x9
 11591 5470 41540000 		.long	0x5441
 11592 5474 00       		.byte	0
 11593 5475 15       		.uleb128 0x15
 11594 5476 8D0B0000 		.long	0xb8d
 11595 547a 83540000 		.long	0x5483
 11596 547e 02       		.byte	0x2
 11597 547f 96540000 		.long	0x5496
 11598 5483 12       		.uleb128 0x12
 11599 5484 00000000 		.long	.LASF843
 11600 5488 73420000 		.long	0x4273
 11601 548c 12       		.uleb128 0x12
 11602 548d 00000000 		.long	.LASF849
 11603 5491 F4000000 		.long	0xf4
 11604 5495 00       		.byte	0
 11605 5496 2D       		.uleb128 0x2d
 11606 5497 75540000 		.long	0x5475
 11607 549b 00000000 		.long	.LASF856
 11608 549f A7540000 		.long	0x54a7
 11609 54a3 AD540000 		.long	0x54ad
 11610 54a7 09       		.uleb128 0x9
 11611 54a8 83540000 		.long	0x5483
 11612 54ac 00       		.byte	0
 11613 54ad 15       		.uleb128 0x15
 11614 54ae 310B0000 		.long	0xb31
 11615 54b2 BB540000 		.long	0x54bb
 11616 54b6 02       		.byte	0x2
 11617 54b7 C5540000 		.long	0x54c5
 11618 54bb 12       		.uleb128 0x12
 11619 54bc 00000000 		.long	.LASF843
 11620 54c0 73420000 		.long	0x4273
 11621 54c4 00       		.byte	0
 11622 54c5 2D       		.uleb128 0x2d
 11623 54c6 AD540000 		.long	0x54ad
 11624 54ca 00000000 		.long	.LASF857
 11625 54ce D6540000 		.long	0x54d6
 11626 54d2 DC540000 		.long	0x54dc
 11627 54d6 09       		.uleb128 0x9
 11628 54d7 BB540000 		.long	0x54bb
 11629 54db 00       		.byte	0
 11630 54dc 15       		.uleb128 0x15
 11631 54dd 87180000 		.long	0x1887
 11632 54e1 EA540000 		.long	0x54ea
 11633 54e5 03       		.byte	0x3
 11634 54e6 F4540000 		.long	0x54f4
 11635 54ea 12       		.uleb128 0x12
 11636 54eb 00000000 		.long	.LASF843
 11637 54ef FB490000 		.long	0x49fb
 11638 54f3 00       		.byte	0
 11639 54f4 15       		.uleb128 0x15
 11640 54f5 81230000 		.long	0x2381
 11641 54f9 02550000 		.long	0x5502
 11642 54fd 03       		.byte	0x3
GAS LISTING linobj/Ch02_03.s 			page 325


 11643 54fe 0C550000 		.long	0x550c
 11644 5502 12       		.uleb128 0x12
 11645 5503 00000000 		.long	.LASF843
 11646 5507 FB490000 		.long	0x49fb
 11647 550b 00       		.byte	0
 11648 550c 15       		.uleb128 0x15
 11649 550d 29160000 		.long	0x1629
 11650 5511 1A550000 		.long	0x551a
 11651 5515 02       		.byte	0x2
 11652 5516 2D550000 		.long	0x552d
 11653 551a 12       		.uleb128 0x12
 11654 551b 00000000 		.long	.LASF843
 11655 551f F1490000 		.long	0x49f1
 11656 5523 12       		.uleb128 0x12
 11657 5524 00000000 		.long	.LASF849
 11658 5528 F4000000 		.long	0xf4
 11659 552c 00       		.byte	0
 11660 552d 2D       		.uleb128 0x2d
 11661 552e 0C550000 		.long	0x550c
 11662 5532 00000000 		.long	.LASF858
 11663 5536 3E550000 		.long	0x553e
 11664 553a 44550000 		.long	0x5544
 11665 553e 09       		.uleb128 0x9
 11666 553f 1A550000 		.long	0x551a
 11667 5543 00       		.byte	0
 11668 5544 8501     		.uleb128 0x85
 11669 5546 500F0000 		.long	0xf50
 11670 554a 04       		.byte	0x4
 11671 554b BA       		.byte	0xba
 11672 554c 0E       		.byte	0xe
 11673 554d 56550000 		.long	0x5556
 11674 5551 02       		.byte	0x2
 11675 5552 69550000 		.long	0x5569
 11676 5556 12       		.uleb128 0x12
 11677 5557 00000000 		.long	.LASF843
 11678 555b CD490000 		.long	0x49cd
 11679 555f 12       		.uleb128 0x12
 11680 5560 00000000 		.long	.LASF849
 11681 5564 F4000000 		.long	0xf4
 11682 5568 00       		.byte	0
 11683 5569 2D       		.uleb128 0x2d
 11684 556a 44550000 		.long	0x5544
 11685 556e 00000000 		.long	.LASF859
 11686 5572 7A550000 		.long	0x557a
 11687 5576 80550000 		.long	0x5580
 11688 557a 09       		.uleb128 0x9
 11689 557b 56550000 		.long	0x5556
 11690 557f 00       		.byte	0
 11691 5580 4D       		.uleb128 0x4d
 11692 5581 00000000 		.long	.LASF860
 11693 5585 53       		.byte	0x53
 11694 5586 BB550000 		.long	0x55bb
 11695 558a 1F       		.uleb128 0x1f
 11696 558b 6E6C00   		.string	"nl"
 11697 558e 55       		.byte	0x55
 11698 558f 10       		.byte	0x10
 11699 5590 E8000000 		.long	0xe8
GAS LISTING linobj/Ch02_03.s 			page 326


 11700 5594 1F       		.uleb128 0x1f
 11701 5595 6100     		.string	"a"
 11702 5597 56       		.byte	0x56
 11703 5598 0C       		.byte	0xc
 11704 5599 AE4C0000 		.long	0x4cae
 11705 559d 1F       		.uleb128 0x1f
 11706 559e 6200     		.string	"b"
 11707 55a0 56       		.byte	0x56
 11708 55a1 0F       		.byte	0xf
 11709 55a2 AE4C0000 		.long	0x4cae
 11710 55a6 1F       		.uleb128 0x1f
 11711 55a7 6300     		.string	"c"
 11712 55a9 56       		.byte	0x56
 11713 55aa 12       		.byte	0x12
 11714 55ab BB550000 		.long	0x55bb
 11715 55af 4E       		.uleb128 0x4e
 11716 55b0 1F       		.uleb128 0x1f
 11717 55b1 6900     		.string	"i"
 11718 55b3 60       		.byte	0x60
 11719 55b4 11       		.byte	0x11
 11720 55b5 2A000000 		.long	0x2a
 11721 55b9 00       		.byte	0
 11722 55ba 00       		.byte	0
 11723 55bb 8601     		.uleb128 0x86
 11724 55bd AE4C0000 		.long	0x4cae
 11725 55c1 10       		.byte	0x10
 11726 55c2 CD550000 		.long	0x55cd
 11727 55c6 1C       		.uleb128 0x1c
 11728 55c7 36000000 		.long	0x36
 11729 55cb 01       		.byte	0x1
 11730 55cc 00       		.byte	0
 11731 55cd 4D       		.uleb128 0x4d
 11732 55ce 00000000 		.long	.LASF861
 11733 55d2 3E       		.byte	0x3e
 11734 55d3 08560000 		.long	0x5608
 11735 55d7 1F       		.uleb128 0x1f
 11736 55d8 6E6C00   		.string	"nl"
 11737 55db 40       		.byte	0x40
 11738 55dc 10       		.byte	0x10
 11739 55dd E8000000 		.long	0xe8
 11740 55e1 1F       		.uleb128 0x1f
 11741 55e2 6100     		.string	"a"
 11742 55e4 41       		.byte	0x41
 11743 55e5 0C       		.byte	0xc
 11744 55e6 AE4C0000 		.long	0x4cae
 11745 55ea 1F       		.uleb128 0x1f
 11746 55eb 6200     		.string	"b"
 11747 55ed 41       		.byte	0x41
 11748 55ee 0F       		.byte	0xf
 11749 55ef AE4C0000 		.long	0x4cae
 11750 55f3 1F       		.uleb128 0x1f
 11751 55f4 6300     		.string	"c"
 11752 55f6 41       		.byte	0x41
 11753 55f7 12       		.byte	0x12
 11754 55f8 AE4C0000 		.long	0x4cae
 11755 55fc 4E       		.uleb128 0x4e
 11756 55fd 1F       		.uleb128 0x1f
GAS LISTING linobj/Ch02_03.s 			page 327


 11757 55fe 6900     		.string	"i"
 11758 5600 4B       		.byte	0x4b
 11759 5601 11       		.byte	0x11
 11760 5602 2A000000 		.long	0x2a
 11761 5606 00       		.byte	0
 11762 5607 00       		.byte	0
 11763 5608 4D       		.uleb128 0x4d
 11764 5609 00000000 		.long	.LASF862
 11765 560d 1B       		.byte	0x1b
 11766 560e 43560000 		.long	0x5643
 11767 5612 1F       		.uleb128 0x1f
 11768 5613 6E6C00   		.string	"nl"
 11769 5616 1D       		.byte	0x1d
 11770 5617 10       		.byte	0x10
 11771 5618 E8000000 		.long	0xe8
 11772 561c 1F       		.uleb128 0x1f
 11773 561d 6100     		.string	"a"
 11774 561f 1E       		.byte	0x1e
 11775 5620 0C       		.byte	0xc
 11776 5621 AE4C0000 		.long	0x4cae
 11777 5625 1F       		.uleb128 0x1f
 11778 5626 6200     		.string	"b"
 11779 5628 1E       		.byte	0x1e
 11780 5629 0F       		.byte	0xf
 11781 562a AE4C0000 		.long	0x4cae
 11782 562e 1F       		.uleb128 0x1f
 11783 562f 6300     		.string	"c"
 11784 5631 1E       		.byte	0x1e
 11785 5632 12       		.byte	0x12
 11786 5633 BB550000 		.long	0x55bb
 11787 5637 4E       		.uleb128 0x4e
 11788 5638 1F       		.uleb128 0x1f
 11789 5639 6900     		.string	"i"
 11790 563b 2C       		.byte	0x2c
 11791 563c 11       		.byte	0x11
 11792 563d 2A000000 		.long	0x2a
 11793 5641 00       		.byte	0
 11794 5642 00       		.byte	0
 11795 5643 8701     		.uleb128 0x87
 11796 5645 00000000 		.long	.LASF863
 11797 5649 01       		.byte	0x1
 11798 564a 0E       		.byte	0xe
 11799 564b 05       		.byte	0x5
 11800 564c ED000000 		.long	0xed
 11801 5650 00000000 		.long	.LLRL0
 11802 5654 01       		.uleb128 0x1
 11803 5655 9C       		.byte	0x9c
 11804 5656 D4730000 		.long	0x73d4
 11805 565a 8801     		.uleb128 0x88
 11806 565c 6E6C00   		.string	"nl"
 11807 565f 01       		.byte	0x1
 11808 5660 10       		.byte	0x10
 11809 5661 10       		.byte	0x10
 11810 5662 E8000000 		.long	0xe8
 11811 5666 0A       		.byte	0xa
 11812 5667 8901     		.uleb128 0x89
 11813 5669 73657000 		.string	"sep"
GAS LISTING linobj/Ch02_03.s 			page 328


 11814 566d 01       		.byte	0x1
 11815 566e 11       		.byte	0x11
 11816 566f 11       		.byte	0x11
 11817 5670 402A0000 		.long	0x2a40
 11818 5674 03       		.uleb128 0x3
 11819 5675 91       		.byte	0x91
 11820 5676 807F     		.sleb128 -128
 11821 5678 14       		.uleb128 0x14
 11822 5679 AD540000 		.long	0x54ad
 11823 567d 00000000 		.quad	.LBI683
 11823      00000000 
 11824 5685 0300     		.value	.LVU3
 11825 5687 00000000 		.quad	.LBB683
 11825      00000000 
 11826 568f 00000000 		.quad	.LBE683-.LBB683
 11826      00000000 
 11827 5697 11       		.byte	0x11
 11828 5698 1C       		.byte	0x1c
 11829 5699 CB560000 		.long	0x56cb
 11830 569d 09       		.uleb128 0x9
 11831 569e BB540000 		.long	0x54bb
 11832 56a2 32       		.uleb128 0x32
 11833 56a3 4F520000 		.long	0x524f
 11834 56a7 00000000 		.quad	.LBI684
 11834      00000000 
 11835 56af 0400     		.value	.LVU4
 11836 56b1 00000000 		.quad	.LBB684
 11836      00000000 
 11837 56b9 00000000 		.quad	.LBE684-.LBB684
 11837      00000000 
 11838 56c1 02       		.byte	0x2
 11839 56c2 A1       		.byte	0xa1
 11840 56c3 1C       		.byte	0x1c
 11841 56c4 09       		.uleb128 0x9
 11842 56c5 5D520000 		.long	0x525d
 11843 56c9 00       		.byte	0
 11844 56ca 00       		.byte	0
 11845 56cb 0D       		.uleb128 0xd
 11846 56cc 10540000 		.long	0x5410
 11847 56d0 00000000 		.quad	.LBI685
 11847      00000000 
 11848 56d8 0000     		.value	.LVU9
 11849 56da 00000000 		.long	.LLRL3
 11850 56de 11       		.byte	0x11
 11851 56df 1C       		.byte	0x1c
 11852 56e0 0C580000 		.long	0x580c
 11853 56e4 05       		.uleb128 0x5
 11854 56e5 1E540000 		.long	0x541e
 11855 56e9 00000000 		.long	.LLST4
 11856 56ed 00000000 		.long	.LVUS4
 11857 56f1 05       		.uleb128 0x5
 11858 56f2 27540000 		.long	0x5427
 11859 56f6 00000000 		.long	.LLST5
 11860 56fa 00000000 		.long	.LVUS5
 11861 56fe 05       		.uleb128 0x5
 11862 56ff 34540000 		.long	0x5434
 11863 5703 00000000 		.long	.LLST6
GAS LISTING linobj/Ch02_03.s 			page 329


 11864 5707 00000000 		.long	.LVUS6
 11865 570b 09       		.uleb128 0x9
 11866 570c 41540000 		.long	0x5441
 11867 5710 27       		.uleb128 0x27
 11868 5711 C6520000 		.long	0x52c6
 11869 5715 00000000 		.quad	.LBI688
 11869      00000000 
 11870 571d 0100     		.value	.LVU10
 11871 571f 00000000 		.quad	.LBB688
 11871      00000000 
 11872 5727 00000000 		.quad	.LBE688-.LBB688
 11872      00000000 
 11873 572f 04       		.byte	0x4
 11874 5730 9E02     		.value	0x29e
 11875 5732 09       		.byte	0x9
 11876 5733 45570000 		.long	0x5745
 11877 5737 05       		.uleb128 0x5
 11878 5738 D4520000 		.long	0x52d4
 11879 573c 00000000 		.long	.LLST8
 11880 5740 00000000 		.long	.LVUS8
 11881 5744 00       		.byte	0
 11882 5745 8A01     		.uleb128 0x8a
 11883 5747 C6510000 		.long	0x51c6
 11884 574b 00000000 		.quad	.LBI689
 11884      00000000 
 11885 5753 0300     		.value	.LVU12
 11886 5755 00000000 		.long	.LLRL9
 11887 5759 04       		.byte	0x4
 11888 575a 9E02     		.value	0x29e
 11889 575c 09       		.byte	0x9
 11890 575d EB570000 		.long	0x57eb
 11891 5761 05       		.uleb128 0x5
 11892 5762 D4510000 		.long	0x51d4
 11893 5766 00000000 		.long	.LLST10
 11894 576a 00000000 		.long	.LVUS10
 11895 576e 05       		.uleb128 0x5
 11896 576f DD510000 		.long	0x51dd
 11897 5773 00000000 		.long	.LLST11
 11898 5777 00000000 		.long	.LVUS11
 11899 577b 09       		.uleb128 0x9
 11900 577c E9510000 		.long	0x51e9
 11901 5780 32       		.uleb128 0x32
 11902 5781 4C510000 		.long	0x514c
 11903 5785 00000000 		.quad	.LBI692
 11903      00000000 
 11904 578d 0400     		.value	.LVU13
 11905 578f 00000000 		.quad	.LBB692
 11905      00000000 
 11906 5797 00000000 		.quad	.LBE692-.LBB692
 11906      00000000 
 11907 579f 04       		.byte	0x4
 11908 57a0 C2       		.byte	0xc2
 11909 57a1 23       		.byte	0x23
 11910 57a2 05       		.uleb128 0x5
 11911 57a3 5A510000 		.long	0x515a
 11912 57a7 00000000 		.long	.LLST13
 11913 57ab 00000000 		.long	.LVUS13
GAS LISTING linobj/Ch02_03.s 			page 330


 11914 57af 09       		.uleb128 0x9
 11915 57b0 63510000 		.long	0x5163
 11916 57b4 32       		.uleb128 0x32
 11917 57b5 B4500000 		.long	0x50b4
 11918 57b9 00000000 		.quad	.LBI693
 11918      00000000 
 11919 57c1 0500     		.value	.LVU14
 11920 57c3 00000000 		.quad	.LBB693
 11920      00000000 
 11921 57cb 00000000 		.quad	.LBE693-.LBB693
 11921      00000000 
 11922 57d3 02       		.byte	0x2
 11923 57d4 A6       		.byte	0xa6
 11924 57d5 22       		.byte	0x22
 11925 57d6 05       		.uleb128 0x5
 11926 57d7 C2500000 		.long	0x50c2
 11927 57db 00000000 		.long	.LLST15
 11928 57df 00000000 		.long	.LVUS15
 11929 57e3 09       		.uleb128 0x9
 11930 57e4 CB500000 		.long	0x50cb
 11931 57e8 00       		.byte	0
 11932 57e9 00       		.byte	0
 11933 57ea 00       		.byte	0
 11934 57eb 0C       		.uleb128 0xc
 11935 57ec 00000000 		.quad	.LVL5
 11935      00000000 
 11936 57f4 7F110000 		.long	0x117f
 11937 57f8 06       		.uleb128 0x6
 11938 57f9 01       		.uleb128 0x1
 11939 57fa 55       		.byte	0x55
 11940 57fb 02       		.uleb128 0x2
 11941 57fc 7E       		.byte	0x7e
 11942 57fd 00       		.sleb128 0
 11943 57fe 06       		.uleb128 0x6
 11944 57ff 01       		.uleb128 0x1
 11945 5800 54       		.byte	0x54
 11946 5801 02       		.uleb128 0x2
 11947 5802 08       		.byte	0x8
 11948 5803 4B       		.byte	0x4b
 11949 5804 06       		.uleb128 0x6
 11950 5805 01       		.uleb128 0x1
 11951 5806 51       		.byte	0x51
 11952 5807 02       		.uleb128 0x2
 11953 5808 08       		.byte	0x8
 11954 5809 2D       		.byte	0x2d
 11955 580a 00       		.byte	0
 11956 580b 00       		.byte	0
 11957 580c 0D       		.uleb128 0xd
 11958 580d 08560000 		.long	0x5608
 11959 5811 00000000 		.quad	.LBI702
 11959      00000000 
 11960 5819 0500     		.value	.LVU29
 11961 581b 00000000 		.long	.LLRL17
 11962 581f 13       		.byte	0x13
 11963 5820 0B       		.byte	0xb
 11964 5821 66600000 		.long	0x6066
 11965 5825 22       		.uleb128 0x22
GAS LISTING linobj/Ch02_03.s 			page 331


 11966 5826 00000000 		.long	.LLRL17
 11967 582a 8B01     		.uleb128 0x8b
 11968 582c 12560000 		.long	0x5612
 11969 5830 0A       		.byte	0xa
 11970 5831 30       		.uleb128 0x30
 11971 5832 1C560000 		.long	0x561c
 11972 5836 03       		.uleb128 0x3
 11973 5837 91       		.byte	0x91
 11974 5838 E07E     		.sleb128 -160
 11975 583a 30       		.uleb128 0x30
 11976 583b 25560000 		.long	0x5625
 11977 583f 03       		.uleb128 0x3
 11978 5840 91       		.byte	0x91
 11979 5841 F07E     		.sleb128 -144
 11980 5843 30       		.uleb128 0x30
 11981 5844 2E560000 		.long	0x562e
 11982 5848 03       		.uleb128 0x3
 11983 5849 91       		.byte	0x91
 11984 584a A07F     		.sleb128 -96
 11985 584c 14       		.uleb128 0x14
 11986 584d 77530000 		.long	0x5377
 11987 5851 00000000 		.quad	.LBI704
 11987      00000000 
 11988 5859 0100     		.value	.LVU56
 11989 585b 00000000 		.quad	.LBB704
 11989      00000000 
 11990 5863 14000000 		.quad	.LBE704-.LBB704
 11990      00000000 
 11991 586b 2B       		.byte	0x2b
 11992 586c 12       		.byte	0x12
 11993 586d A4580000 		.long	0x58a4
 11994 5871 09       		.uleb128 0x9
 11995 5872 89530000 		.long	0x5389
 11996 5876 05       		.uleb128 0x5
 11997 5877 96530000 		.long	0x5396
 11998 587b 00000000 		.long	.LLST18
 11999 587f 00000000 		.long	.LVUS18
 12000 5883 0C       		.uleb128 0xc
 12001 5884 00000000 		.quad	.LVL7
 12001      00000000 
 12002 588c 5D2F0000 		.long	0x2f5d
 12003 5890 06       		.uleb128 0x6
 12004 5891 01       		.uleb128 0x1
 12005 5892 54       		.byte	0x54
 12006 5893 09       		.uleb128 0x9
 12007 5894 03       		.byte	0x3
 12008 5895 00000000 		.quad	.LC2
 12008      00000000 
 12009 589d 06       		.uleb128 0x6
 12010 589e 01       		.uleb128 0x1
 12011 589f 51       		.byte	0x51
 12012 58a0 01       		.uleb128 0x1
 12013 58a1 49       		.byte	0x49
 12014 58a2 00       		.byte	0
 12015 58a3 00       		.byte	0
 12016 58a4 4F       		.uleb128 0x4f
 12017 58a5 37560000 		.long	0x5637
GAS LISTING linobj/Ch02_03.s 			page 332


 12018 58a9 00000000 		.long	.LLRL19
 12019 58ad 44600000 		.long	0x6044
 12020 58b1 28       		.uleb128 0x28
 12021 58b2 38560000 		.long	0x5638
 12022 58b6 00000000 		.long	.LLST20
 12023 58ba 00000000 		.long	.LVUS20
 12024 58be 14       		.uleb128 0x14
 12025 58bf 77530000 		.long	0x5377
 12026 58c3 00000000 		.quad	.LBI707
 12026      00000000 
 12027 58cb 0100     		.value	.LVU60
 12028 58cd 00000000 		.quad	.LBB707
 12028      00000000 
 12029 58d5 14000000 		.quad	.LBE707-.LBB707
 12029      00000000 
 12030 58dd 2E       		.byte	0x2e
 12031 58de 16       		.byte	0x16
 12032 58df 16590000 		.long	0x5916
 12033 58e3 09       		.uleb128 0x9
 12034 58e4 89530000 		.long	0x5389
 12035 58e8 05       		.uleb128 0x5
 12036 58e9 96530000 		.long	0x5396
 12037 58ed 00000000 		.long	.LLST21
 12038 58f1 00000000 		.long	.LVUS21
 12039 58f5 0C       		.uleb128 0xc
 12040 58f6 00000000 		.quad	.LVL9
 12040      00000000 
 12041 58fe 5D2F0000 		.long	0x2f5d
 12042 5902 06       		.uleb128 0x6
 12043 5903 01       		.uleb128 0x1
 12044 5904 54       		.byte	0x54
 12045 5905 09       		.uleb128 0x9
 12046 5906 03       		.byte	0x3
 12047 5907 00000000 		.quad	.LC3
 12047      00000000 
 12048 590f 06       		.uleb128 0x6
 12049 5910 01       		.uleb128 0x1
 12050 5911 51       		.byte	0x51
 12051 5912 01       		.uleb128 0x1
 12052 5913 32       		.byte	0x32
 12053 5914 00       		.byte	0
 12054 5915 00       		.byte	0
 12055 5916 0D       		.uleb128 0xd
 12056 5917 53530000 		.long	0x5353
 12057 591b 00000000 		.quad	.LBI709
 12057      00000000 
 12058 5923 0100     		.value	.LVU63
 12059 5925 00000000 		.long	.LLRL22
 12060 5929 2E       		.byte	0x2e
 12061 592a 1E       		.byte	0x1e
 12062 592b 56590000 		.long	0x5956
 12063 592f 09       		.uleb128 0x9
 12064 5930 61530000 		.long	0x5361
 12065 5934 05       		.uleb128 0x5
 12066 5935 6A530000 		.long	0x536a
 12067 5939 00000000 		.long	.LLST23
 12068 593d 00000000 		.long	.LVUS23
GAS LISTING linobj/Ch02_03.s 			page 333


 12069 5941 0C       		.uleb128 0xc
 12070 5942 00000000 		.quad	.LVL10
 12070      00000000 
 12071 594a 952B0000 		.long	0x2b95
 12072 594e 06       		.uleb128 0x6
 12073 594f 01       		.uleb128 0x1
 12074 5950 54       		.byte	0x54
 12075 5951 02       		.uleb128 0x2
 12076 5952 73       		.byte	0x73
 12077 5953 00       		.sleb128 0
 12078 5954 00       		.byte	0
 12079 5955 00       		.byte	0
 12080 5956 0D       		.uleb128 0xd
 12081 5957 77530000 		.long	0x5377
 12082 595b 00000000 		.quad	.LBI712
 12082      00000000 
 12083 5963 0100     		.value	.LVU68
 12084 5965 00000000 		.long	.LLRL24
 12085 5969 2E       		.byte	0x2e
 12086 596a 37       		.byte	0x37
 12087 596b B0590000 		.long	0x59b0
 12088 596f 05       		.uleb128 0x5
 12089 5970 89530000 		.long	0x5389
 12090 5974 00000000 		.long	.LLST25
 12091 5978 00000000 		.long	.LVUS25
 12092 597c 05       		.uleb128 0x5
 12093 597d 96530000 		.long	0x5396
 12094 5981 00000000 		.long	.LLST26
 12095 5985 00000000 		.long	.LVUS26
 12096 5989 0C       		.uleb128 0xc
 12097 598a 00000000 		.quad	.LVL12
 12097      00000000 
 12098 5992 5D2F0000 		.long	0x2f5d
 12099 5996 06       		.uleb128 0x6
 12100 5997 01       		.uleb128 0x1
 12101 5998 55       		.byte	0x55
 12102 5999 02       		.uleb128 0x2
 12103 599a 7F       		.byte	0x7f
 12104 599b 00       		.sleb128 0
 12105 599c 06       		.uleb128 0x6
 12106 599d 01       		.uleb128 0x1
 12107 599e 54       		.byte	0x54
 12108 599f 09       		.uleb128 0x9
 12109 59a0 03       		.byte	0x3
 12110 59a1 00000000 		.quad	.LC4
 12110      00000000 
 12111 59a9 06       		.uleb128 0x6
 12112 59aa 01       		.uleb128 0x1
 12113 59ab 51       		.byte	0x51
 12114 59ac 01       		.uleb128 0x1
 12115 59ad 33       		.byte	0x33
 12116 59ae 00       		.byte	0
 12117 59af 00       		.byte	0
 12118 59b0 0D       		.uleb128 0xd
 12119 59b1 1F530000 		.long	0x531f
 12120 59b5 00000000 		.quad	.LBI717
 12120      00000000 
GAS LISTING linobj/Ch02_03.s 			page 334


 12121 59bd 0100     		.value	.LVU71
 12122 59bf 00000000 		.long	.LLRL27
 12123 59c3 2E       		.byte	0x2e
 12124 59c4 37       		.byte	0x37
 12125 59c5 1D5A0000 		.long	0x5a1d
 12126 59c9 05       		.uleb128 0x5
 12127 59ca 3A530000 		.long	0x533a
 12128 59ce 00000000 		.long	.LLST28
 12129 59d2 00000000 		.long	.LVUS28
 12130 59d6 09       		.uleb128 0x9
 12131 59d7 46530000 		.long	0x5346
 12132 59db 2A       		.uleb128 0x2a
 12133 59dc F4730000 		.long	0x73f4
 12134 59e0 00000000 		.quad	.LBI719
 12134      00000000 
 12135 59e8 0200     		.value	.LVU72
 12136 59ea 00000000 		.long	.LLRL29
 12137 59ee 05       		.uleb128 0x5
 12138 59ef 02740000 		.long	0x7402
 12139 59f3 00000000 		.long	.LLST30
 12140 59f7 00000000 		.long	.LVUS30
 12141 59fb 05       		.uleb128 0x5
 12142 59fc 0B740000 		.long	0x740b
 12143 5a00 00000000 		.long	.LLST31
 12144 5a04 00000000 		.long	.LVUS31
 12145 5a08 22       		.uleb128 0x22
 12146 5a09 00000000 		.long	.LLRL29
 12147 5a0d 28       		.uleb128 0x28
 12148 5a0e 18740000 		.long	0x7418
 12149 5a12 00000000 		.long	.LLST32
 12150 5a16 00000000 		.long	.LVUS32
 12151 5a1a 00       		.byte	0
 12152 5a1b 00       		.byte	0
 12153 5a1c 00       		.byte	0
 12154 5a1d 14       		.uleb128 0x14
 12155 5a1e 77530000 		.long	0x5377
 12156 5a22 00000000 		.quad	.LBI725
 12156      00000000 
 12157 5a2a 0000     		.value	.LVU81
 12158 5a2c 00000000 		.quad	.LBB725
 12158      00000000 
 12159 5a34 0F000000 		.quad	.LBE725-.LBB725
 12159      00000000 
 12160 5a3c 2E       		.byte	0x2e
 12161 5a3d 4A       		.byte	0x4a
 12162 5a3e 7D5A0000 		.long	0x5a7d
 12163 5a42 05       		.uleb128 0x5
 12164 5a43 89530000 		.long	0x5389
 12165 5a47 00000000 		.long	.LLST33
 12166 5a4b 00000000 		.long	.LVUS33
 12167 5a4f 05       		.uleb128 0x5
 12168 5a50 96530000 		.long	0x5396
 12169 5a54 00000000 		.long	.LLST34
 12170 5a58 00000000 		.long	.LVUS34
 12171 5a5c 0C       		.uleb128 0xc
 12172 5a5d 00000000 		.quad	.LVL16
 12172      00000000 
GAS LISTING linobj/Ch02_03.s 			page 335


 12173 5a65 5D2F0000 		.long	0x2f5d
 12174 5a69 06       		.uleb128 0x6
 12175 5a6a 01       		.uleb128 0x1
 12176 5a6b 54       		.byte	0x54
 12177 5a6c 09       		.uleb128 0x9
 12178 5a6d 03       		.byte	0x3
 12179 5a6e 00000000 		.quad	.LC5
 12179      00000000 
 12180 5a76 06       		.uleb128 0x6
 12181 5a77 01       		.uleb128 0x1
 12182 5a78 51       		.byte	0x51
 12183 5a79 01       		.uleb128 0x1
 12184 5a7a 32       		.byte	0x32
 12185 5a7b 00       		.byte	0
 12186 5a7c 00       		.byte	0
 12187 5a7d 14       		.uleb128 0x14
 12188 5a7e 77530000 		.long	0x5377
 12189 5a82 00000000 		.quad	.LBI727
 12189      00000000 
 12190 5a8a 0200     		.value	.LVU85
 12191 5a8c 00000000 		.quad	.LBB727
 12191      00000000 
 12192 5a94 14000000 		.quad	.LBE727-.LBB727
 12192      00000000 
 12193 5a9c 2F       		.byte	0x2f
 12194 5a9d 16       		.byte	0x16
 12195 5a9e D55A0000 		.long	0x5ad5
 12196 5aa2 09       		.uleb128 0x9
 12197 5aa3 89530000 		.long	0x5389
 12198 5aa7 05       		.uleb128 0x5
 12199 5aa8 96530000 		.long	0x5396
 12200 5aac 00000000 		.long	.LLST35
 12201 5ab0 00000000 		.long	.LVUS35
 12202 5ab4 0C       		.uleb128 0xc
 12203 5ab5 00000000 		.quad	.LVL17
 12203      00000000 
 12204 5abd 5D2F0000 		.long	0x2f5d
 12205 5ac1 06       		.uleb128 0x6
 12206 5ac2 01       		.uleb128 0x1
 12207 5ac3 54       		.byte	0x54
 12208 5ac4 09       		.uleb128 0x9
 12209 5ac5 03       		.byte	0x3
 12210 5ac6 00000000 		.quad	.LC6
 12210      00000000 
 12211 5ace 06       		.uleb128 0x6
 12212 5acf 01       		.uleb128 0x1
 12213 5ad0 51       		.byte	0x51
 12214 5ad1 01       		.uleb128 0x1
 12215 5ad2 32       		.byte	0x32
 12216 5ad3 00       		.byte	0
 12217 5ad4 00       		.byte	0
 12218 5ad5 0D       		.uleb128 0xd
 12219 5ad6 53530000 		.long	0x5353
 12220 5ada 00000000 		.quad	.LBI729
 12220      00000000 
 12221 5ae2 0100     		.value	.LVU88
 12222 5ae4 00000000 		.long	.LLRL36
GAS LISTING linobj/Ch02_03.s 			page 336


 12223 5ae8 2F       		.byte	0x2f
 12224 5ae9 1E       		.byte	0x1e
 12225 5aea 155B0000 		.long	0x5b15
 12226 5aee 09       		.uleb128 0x9
 12227 5aef 61530000 		.long	0x5361
 12228 5af3 05       		.uleb128 0x5
 12229 5af4 6A530000 		.long	0x536a
 12230 5af8 00000000 		.long	.LLST37
 12231 5afc 00000000 		.long	.LVUS37
 12232 5b00 0C       		.uleb128 0xc
 12233 5b01 00000000 		.quad	.LVL18
 12233      00000000 
 12234 5b09 952B0000 		.long	0x2b95
 12235 5b0d 06       		.uleb128 0x6
 12236 5b0e 01       		.uleb128 0x1
 12237 5b0f 54       		.byte	0x54
 12238 5b10 02       		.uleb128 0x2
 12239 5b11 73       		.byte	0x73
 12240 5b12 00       		.sleb128 0
 12241 5b13 00       		.byte	0
 12242 5b14 00       		.byte	0
 12243 5b15 0D       		.uleb128 0xd
 12244 5b16 77530000 		.long	0x5377
 12245 5b1a 00000000 		.quad	.LBI732
 12245      00000000 
 12246 5b22 0100     		.value	.LVU93
 12247 5b24 00000000 		.long	.LLRL38
 12248 5b28 2F       		.byte	0x2f
 12249 5b29 37       		.byte	0x37
 12250 5b2a 6F5B0000 		.long	0x5b6f
 12251 5b2e 05       		.uleb128 0x5
 12252 5b2f 89530000 		.long	0x5389
 12253 5b33 00000000 		.long	.LLST39
 12254 5b37 00000000 		.long	.LVUS39
 12255 5b3b 05       		.uleb128 0x5
 12256 5b3c 96530000 		.long	0x5396
 12257 5b40 00000000 		.long	.LLST40
 12258 5b44 00000000 		.long	.LVUS40
 12259 5b48 0C       		.uleb128 0xc
 12260 5b49 00000000 		.quad	.LVL20
 12260      00000000 
 12261 5b51 5D2F0000 		.long	0x2f5d
 12262 5b55 06       		.uleb128 0x6
 12263 5b56 01       		.uleb128 0x1
 12264 5b57 55       		.byte	0x55
 12265 5b58 02       		.uleb128 0x2
 12266 5b59 7F       		.byte	0x7f
 12267 5b5a 00       		.sleb128 0
 12268 5b5b 06       		.uleb128 0x6
 12269 5b5c 01       		.uleb128 0x1
 12270 5b5d 54       		.byte	0x54
 12271 5b5e 09       		.uleb128 0x9
 12272 5b5f 03       		.byte	0x3
 12273 5b60 00000000 		.quad	.LC4
 12273      00000000 
 12274 5b68 06       		.uleb128 0x6
 12275 5b69 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 337


 12276 5b6a 51       		.byte	0x51
 12277 5b6b 01       		.uleb128 0x1
 12278 5b6c 33       		.byte	0x33
 12279 5b6d 00       		.byte	0
 12280 5b6e 00       		.byte	0
 12281 5b6f 0D       		.uleb128 0xd
 12282 5b70 1F530000 		.long	0x531f
 12283 5b74 00000000 		.quad	.LBI737
 12283      00000000 
 12284 5b7c 0100     		.value	.LVU96
 12285 5b7e 00000000 		.long	.LLRL41
 12286 5b82 2F       		.byte	0x2f
 12287 5b83 37       		.byte	0x37
 12288 5b84 DC5B0000 		.long	0x5bdc
 12289 5b88 05       		.uleb128 0x5
 12290 5b89 3A530000 		.long	0x533a
 12291 5b8d 00000000 		.long	.LLST42
 12292 5b91 00000000 		.long	.LVUS42
 12293 5b95 09       		.uleb128 0x9
 12294 5b96 46530000 		.long	0x5346
 12295 5b9a 2A       		.uleb128 0x2a
 12296 5b9b F4730000 		.long	0x73f4
 12297 5b9f 00000000 		.quad	.LBI739
 12297      00000000 
 12298 5ba7 0200     		.value	.LVU97
 12299 5ba9 00000000 		.long	.LLRL43
 12300 5bad 05       		.uleb128 0x5
 12301 5bae 02740000 		.long	0x7402
 12302 5bb2 00000000 		.long	.LLST44
 12303 5bb6 00000000 		.long	.LVUS44
 12304 5bba 05       		.uleb128 0x5
 12305 5bbb 0B740000 		.long	0x740b
 12306 5bbf 00000000 		.long	.LLST45
 12307 5bc3 00000000 		.long	.LVUS45
 12308 5bc7 22       		.uleb128 0x22
 12309 5bc8 00000000 		.long	.LLRL43
 12310 5bcc 28       		.uleb128 0x28
 12311 5bcd 18740000 		.long	0x7418
 12312 5bd1 00000000 		.long	.LLST46
 12313 5bd5 00000000 		.long	.LVUS46
 12314 5bd9 00       		.byte	0
 12315 5bda 00       		.byte	0
 12316 5bdb 00       		.byte	0
 12317 5bdc 14       		.uleb128 0x14
 12318 5bdd 77530000 		.long	0x5377
 12319 5be1 00000000 		.quad	.LBI745
 12319      00000000 
 12320 5be9 0000     		.value	.LVU106
 12321 5beb 00000000 		.quad	.LBB745
 12321      00000000 
 12322 5bf3 0F000000 		.quad	.LBE745-.LBB745
 12322      00000000 
 12323 5bfb 2F       		.byte	0x2f
 12324 5bfc 4A       		.byte	0x4a
 12325 5bfd 3C5C0000 		.long	0x5c3c
 12326 5c01 05       		.uleb128 0x5
 12327 5c02 89530000 		.long	0x5389
GAS LISTING linobj/Ch02_03.s 			page 338


 12328 5c06 00000000 		.long	.LLST47
 12329 5c0a 00000000 		.long	.LVUS47
 12330 5c0e 05       		.uleb128 0x5
 12331 5c0f 96530000 		.long	0x5396
 12332 5c13 00000000 		.long	.LLST48
 12333 5c17 00000000 		.long	.LVUS48
 12334 5c1b 0C       		.uleb128 0xc
 12335 5c1c 00000000 		.quad	.LVL24
 12335      00000000 
 12336 5c24 5D2F0000 		.long	0x2f5d
 12337 5c28 06       		.uleb128 0x6
 12338 5c29 01       		.uleb128 0x1
 12339 5c2a 54       		.byte	0x54
 12340 5c2b 09       		.uleb128 0x9
 12341 5c2c 03       		.byte	0x3
 12342 5c2d 00000000 		.quad	.LC5
 12342      00000000 
 12343 5c35 06       		.uleb128 0x6
 12344 5c36 01       		.uleb128 0x1
 12345 5c37 51       		.byte	0x51
 12346 5c38 01       		.uleb128 0x1
 12347 5c39 32       		.byte	0x32
 12348 5c3a 00       		.byte	0
 12349 5c3b 00       		.byte	0
 12350 5c3c 0D       		.uleb128 0xd
 12351 5c3d 77530000 		.long	0x5377
 12352 5c41 00000000 		.quad	.LBI747
 12352      00000000 
 12353 5c49 0100     		.value	.LVU113
 12354 5c4b 00000000 		.long	.LLRL49
 12355 5c4f 33       		.byte	0x33
 12356 5c50 1A       		.byte	0x1a
 12357 5c51 885C0000 		.long	0x5c88
 12358 5c55 09       		.uleb128 0x9
 12359 5c56 89530000 		.long	0x5389
 12360 5c5a 05       		.uleb128 0x5
 12361 5c5b 96530000 		.long	0x5396
 12362 5c5f 00000000 		.long	.LLST50
 12363 5c63 00000000 		.long	.LVUS50
 12364 5c67 0C       		.uleb128 0xc
 12365 5c68 00000000 		.quad	.LVL26
 12365      00000000 
 12366 5c70 5D2F0000 		.long	0x2f5d
 12367 5c74 06       		.uleb128 0x6
 12368 5c75 01       		.uleb128 0x1
 12369 5c76 54       		.byte	0x54
 12370 5c77 09       		.uleb128 0x9
 12371 5c78 03       		.byte	0x3
 12372 5c79 00000000 		.quad	.LC7
 12372      00000000 
 12373 5c81 06       		.uleb128 0x6
 12374 5c82 01       		.uleb128 0x1
 12375 5c83 51       		.byte	0x51
 12376 5c84 01       		.uleb128 0x1
 12377 5c85 35       		.byte	0x35
 12378 5c86 00       		.byte	0
 12379 5c87 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 339


 12380 5c88 14       		.uleb128 0x14
 12381 5c89 53530000 		.long	0x5353
 12382 5c8d 00000000 		.quad	.LBI751
 12382      00000000 
 12383 5c95 0100     		.value	.LVU116
 12384 5c97 00000000 		.quad	.LBB751
 12384      00000000 
 12385 5c9f 10000000 		.quad	.LBE751-.LBB751
 12385      00000000 
 12386 5ca7 33       		.byte	0x33
 12387 5ca8 25       		.byte	0x25
 12388 5ca9 D45C0000 		.long	0x5cd4
 12389 5cad 09       		.uleb128 0x9
 12390 5cae 61530000 		.long	0x5361
 12391 5cb2 05       		.uleb128 0x5
 12392 5cb3 6A530000 		.long	0x536a
 12393 5cb7 00000000 		.long	.LLST51
 12394 5cbb 00000000 		.long	.LVUS51
 12395 5cbf 0C       		.uleb128 0xc
 12396 5cc0 00000000 		.quad	.LVL27
 12396      00000000 
 12397 5cc8 952B0000 		.long	0x2b95
 12398 5ccc 06       		.uleb128 0x6
 12399 5ccd 01       		.uleb128 0x1
 12400 5cce 54       		.byte	0x54
 12401 5ccf 02       		.uleb128 0x2
 12402 5cd0 73       		.byte	0x73
 12403 5cd1 00       		.sleb128 0
 12404 5cd2 00       		.byte	0
 12405 5cd3 00       		.byte	0
 12406 5cd4 14       		.uleb128 0x14
 12407 5cd5 77530000 		.long	0x5377
 12408 5cd9 00000000 		.quad	.LBI753
 12408      00000000 
 12409 5ce1 0100     		.value	.LVU119
 12410 5ce3 00000000 		.quad	.LBB753
 12410      00000000 
 12411 5ceb 0F000000 		.quad	.LBE753-.LBB753
 12411      00000000 
 12412 5cf3 33       		.byte	0x33
 12413 5cf4 2A       		.byte	0x2a
 12414 5cf5 345D0000 		.long	0x5d34
 12415 5cf9 05       		.uleb128 0x5
 12416 5cfa 89530000 		.long	0x5389
 12417 5cfe 00000000 		.long	.LLST52
 12418 5d02 00000000 		.long	.LVUS52
 12419 5d06 05       		.uleb128 0x5
 12420 5d07 96530000 		.long	0x5396
 12421 5d0b 00000000 		.long	.LLST53
 12422 5d0f 00000000 		.long	.LVUS53
 12423 5d13 0C       		.uleb128 0xc
 12424 5d14 00000000 		.quad	.LVL29
 12424      00000000 
 12425 5d1c 5D2F0000 		.long	0x2f5d
 12426 5d20 06       		.uleb128 0x6
 12427 5d21 01       		.uleb128 0x1
 12428 5d22 54       		.byte	0x54
GAS LISTING linobj/Ch02_03.s 			page 340


 12429 5d23 09       		.uleb128 0x9
 12430 5d24 03       		.byte	0x3
 12431 5d25 00000000 		.quad	.LC4
 12431      00000000 
 12432 5d2d 06       		.uleb128 0x6
 12433 5d2e 01       		.uleb128 0x1
 12434 5d2f 51       		.byte	0x51
 12435 5d30 01       		.uleb128 0x1
 12436 5d31 33       		.byte	0x33
 12437 5d32 00       		.byte	0
 12438 5d33 00       		.byte	0
 12439 5d34 0D       		.uleb128 0xd
 12440 5d35 1F530000 		.long	0x531f
 12441 5d39 00000000 		.quad	.LBI755
 12441      00000000 
 12442 5d41 0200     		.value	.LVU123
 12443 5d43 00000000 		.long	.LLRL54
 12444 5d47 34       		.byte	0x34
 12445 5d48 26       		.byte	0x26
 12446 5d49 895D0000 		.long	0x5d89
 12447 5d4d 09       		.uleb128 0x9
 12448 5d4e 3A530000 		.long	0x533a
 12449 5d52 09       		.uleb128 0x9
 12450 5d53 46530000 		.long	0x5346
 12451 5d57 2A       		.uleb128 0x2a
 12452 5d58 F4730000 		.long	0x73f4
 12453 5d5c 00000000 		.quad	.LBI757
 12453      00000000 
 12454 5d64 0300     		.value	.LVU124
 12455 5d66 00000000 		.long	.LLRL55
 12456 5d6a 09       		.uleb128 0x9
 12457 5d6b 02740000 		.long	0x7402
 12458 5d6f 05       		.uleb128 0x5
 12459 5d70 0B740000 		.long	0x740b
 12460 5d74 00000000 		.long	.LLST56
 12461 5d78 00000000 		.long	.LVUS56
 12462 5d7c 22       		.uleb128 0x22
 12463 5d7d 00000000 		.long	.LLRL55
 12464 5d81 42       		.uleb128 0x42
 12465 5d82 18740000 		.long	0x7418
 12466 5d86 00       		.byte	0
 12467 5d87 00       		.byte	0
 12468 5d88 00       		.byte	0
 12469 5d89 0D       		.uleb128 0xd
 12470 5d8a E3530000 		.long	0x53e3
 12471 5d8e 00000000 		.quad	.LBI763
 12471      00000000 
 12472 5d96 0100     		.value	.LVU137
 12473 5d98 00000000 		.long	.LLRL57
 12474 5d9c 34       		.byte	0x34
 12475 5d9d 3C       		.byte	0x3c
 12476 5d9e 1B5E0000 		.long	0x5e1b
 12477 5da2 05       		.uleb128 0x5
 12478 5da3 F5530000 		.long	0x53f5
 12479 5da7 00000000 		.long	.LLST58
 12480 5dab 00000000 		.long	.LVUS58
 12481 5daf 05       		.uleb128 0x5
GAS LISTING linobj/Ch02_03.s 			page 341


 12482 5db0 02540000 		.long	0x5402
 12483 5db4 00000000 		.long	.LLST59
 12484 5db8 00000000 		.long	.LVUS59
 12485 5dbc 27       		.uleb128 0x27
 12486 5dbd 31740000 		.long	0x7431
 12487 5dc1 00000000 		.quad	.LBI765
 12487      00000000 
 12488 5dc9 0200     		.value	.LVU138
 12489 5dcb 00000000 		.quad	.LBB765
 12489      00000000 
 12490 5dd3 04000000 		.quad	.LBE765-.LBB765
 12490      00000000 
 12491 5ddb 05       		.byte	0x5
 12492 5ddc 4202     		.value	0x242
 12493 5dde 16       		.byte	0x16
 12494 5ddf E95D0000 		.long	0x5de9
 12495 5de3 09       		.uleb128 0x9
 12496 5de4 3F740000 		.long	0x743f
 12497 5de8 00       		.byte	0
 12498 5de9 1B       		.uleb128 0x1b
 12499 5dea 00000000 		.quad	.LVL38
 12499      00000000 
 12500 5df2 5D2F0000 		.long	0x2f5d
 12501 5df6 075E0000 		.long	0x5e07
 12502 5dfa 06       		.uleb128 0x6
 12503 5dfb 01       		.uleb128 0x1
 12504 5dfc 54       		.byte	0x54
 12505 5dfd 03       		.uleb128 0x3
 12506 5dfe 91       		.byte	0x91
 12507 5dff DB7E     		.sleb128 -165
 12508 5e01 06       		.uleb128 0x6
 12509 5e02 01       		.uleb128 0x1
 12510 5e03 51       		.byte	0x51
 12511 5e04 01       		.uleb128 0x1
 12512 5e05 31       		.byte	0x31
 12513 5e06 00       		.byte	0
 12514 5e07 0C       		.uleb128 0xc
 12515 5e08 00000000 		.quad	.LVL154
 12515      00000000 
 12516 5e10 652B0000 		.long	0x2b65
 12517 5e14 06       		.uleb128 0x6
 12518 5e15 01       		.uleb128 0x1
 12519 5e16 54       		.byte	0x54
 12520 5e17 01       		.uleb128 0x1
 12521 5e18 3A       		.byte	0x3a
 12522 5e19 00       		.byte	0
 12523 5e1a 00       		.byte	0
 12524 5e1b 14       		.uleb128 0x14
 12525 5e1c 77530000 		.long	0x5377
 12526 5e20 00000000 		.quad	.LBI769
 12526      00000000 
 12527 5e28 0100     		.value	.LVU148
 12528 5e2a 00000000 		.quad	.LBB769
 12528      00000000 
 12529 5e32 0F000000 		.quad	.LBE769-.LBB769
 12529      00000000 
 12530 5e3a 38       		.byte	0x38
GAS LISTING linobj/Ch02_03.s 			page 342


 12531 5e3b 1A       		.byte	0x1a
 12532 5e3c 6E5E0000 		.long	0x5e6e
 12533 5e40 09       		.uleb128 0x9
 12534 5e41 89530000 		.long	0x5389
 12535 5e45 05       		.uleb128 0x5
 12536 5e46 96530000 		.long	0x5396
 12537 5e4a 00000000 		.long	.LLST60
 12538 5e4e 00000000 		.long	.LVUS60
 12539 5e52 0C       		.uleb128 0xc
 12540 5e53 00000000 		.quad	.LVL41
 12540      00000000 
 12541 5e5b 5D2F0000 		.long	0x2f5d
 12542 5e5f 06       		.uleb128 0x6
 12543 5e60 01       		.uleb128 0x1
 12544 5e61 54       		.byte	0x54
 12545 5e62 09       		.uleb128 0x9
 12546 5e63 03       		.byte	0x3
 12547 5e64 00000000 		.quad	.LC8
 12547      00000000 
 12548 5e6c 00       		.byte	0
 12549 5e6d 00       		.byte	0
 12550 5e6e 0D       		.uleb128 0xd
 12551 5e6f 53530000 		.long	0x5353
 12552 5e73 00000000 		.quad	.LBI771
 12552      00000000 
 12553 5e7b 0100     		.value	.LVU151
 12554 5e7d 00000000 		.long	.LLRL61
 12555 5e81 38       		.byte	0x38
 12556 5e82 29       		.byte	0x29
 12557 5e83 9A5E0000 		.long	0x5e9a
 12558 5e87 09       		.uleb128 0x9
 12559 5e88 61530000 		.long	0x5361
 12560 5e8c 05       		.uleb128 0x5
 12561 5e8d 6A530000 		.long	0x536a
 12562 5e91 00000000 		.long	.LLST62
 12563 5e95 00000000 		.long	.LVUS62
 12564 5e99 00       		.byte	0
 12565 5e9a 14       		.uleb128 0x14
 12566 5e9b 77530000 		.long	0x5377
 12567 5e9f 00000000 		.quad	.LBI774
 12567      00000000 
 12568 5ea7 0100     		.value	.LVU156
 12569 5ea9 00000000 		.quad	.LBB774
 12569      00000000 
 12570 5eb1 0F000000 		.quad	.LBE774-.LBB774
 12570      00000000 
 12571 5eb9 38       		.byte	0x38
 12572 5eba 2E       		.byte	0x2e
 12573 5ebb FA5E0000 		.long	0x5efa
 12574 5ebf 05       		.uleb128 0x5
 12575 5ec0 89530000 		.long	0x5389
 12576 5ec4 00000000 		.long	.LLST63
 12577 5ec8 00000000 		.long	.LVUS63
 12578 5ecc 05       		.uleb128 0x5
 12579 5ecd 96530000 		.long	0x5396
 12580 5ed1 00000000 		.long	.LLST64
 12581 5ed5 00000000 		.long	.LVUS64
GAS LISTING linobj/Ch02_03.s 			page 343


 12582 5ed9 0C       		.uleb128 0xc
 12583 5eda 00000000 		.quad	.LVL45
 12583      00000000 
 12584 5ee2 5D2F0000 		.long	0x2f5d
 12585 5ee6 06       		.uleb128 0x6
 12586 5ee7 01       		.uleb128 0x1
 12587 5ee8 54       		.byte	0x54
 12588 5ee9 09       		.uleb128 0x9
 12589 5eea 03       		.byte	0x3
 12590 5eeb 00000000 		.quad	.LC4
 12590      00000000 
 12591 5ef3 06       		.uleb128 0x6
 12592 5ef4 01       		.uleb128 0x1
 12593 5ef5 51       		.byte	0x51
 12594 5ef6 01       		.uleb128 0x1
 12595 5ef7 33       		.byte	0x33
 12596 5ef8 00       		.byte	0
 12597 5ef9 00       		.byte	0
 12598 5efa 0D       		.uleb128 0xd
 12599 5efb 1F530000 		.long	0x531f
 12600 5eff 00000000 		.quad	.LBI776
 12600      00000000 
 12601 5f07 0200     		.value	.LVU160
 12602 5f09 00000000 		.long	.LLRL65
 12603 5f0d 39       		.byte	0x39
 12604 5f0e 26       		.byte	0x26
 12605 5f0f 4F5F0000 		.long	0x5f4f
 12606 5f13 09       		.uleb128 0x9
 12607 5f14 3A530000 		.long	0x533a
 12608 5f18 09       		.uleb128 0x9
 12609 5f19 46530000 		.long	0x5346
 12610 5f1d 2A       		.uleb128 0x2a
 12611 5f1e F4730000 		.long	0x73f4
 12612 5f22 00000000 		.quad	.LBI778
 12612      00000000 
 12613 5f2a 0300     		.value	.LVU161
 12614 5f2c 00000000 		.long	.LLRL66
 12615 5f30 09       		.uleb128 0x9
 12616 5f31 02740000 		.long	0x7402
 12617 5f35 05       		.uleb128 0x5
 12618 5f36 0B740000 		.long	0x740b
 12619 5f3a 00000000 		.long	.LLST67
 12620 5f3e 00000000 		.long	.LVUS67
 12621 5f42 22       		.uleb128 0x22
 12622 5f43 00000000 		.long	.LLRL66
 12623 5f47 42       		.uleb128 0x42
 12624 5f48 18740000 		.long	0x7418
 12625 5f4c 00       		.byte	0
 12626 5f4d 00       		.byte	0
 12627 5f4e 00       		.byte	0
 12628 5f4f 0D       		.uleb128 0xd
 12629 5f50 E3530000 		.long	0x53e3
 12630 5f54 00000000 		.quad	.LBI784
 12630      00000000 
 12631 5f5c 0100     		.value	.LVU174
 12632 5f5e 00000000 		.long	.LLRL68
 12633 5f62 39       		.byte	0x39
GAS LISTING linobj/Ch02_03.s 			page 344


 12634 5f63 40       		.byte	0x40
 12635 5f64 E15F0000 		.long	0x5fe1
 12636 5f68 05       		.uleb128 0x5
 12637 5f69 F5530000 		.long	0x53f5
 12638 5f6d 00000000 		.long	.LLST69
 12639 5f71 00000000 		.long	.LVUS69
 12640 5f75 05       		.uleb128 0x5
 12641 5f76 02540000 		.long	0x5402
 12642 5f7a 00000000 		.long	.LLST70
 12643 5f7e 00000000 		.long	.LVUS70
 12644 5f82 27       		.uleb128 0x27
 12645 5f83 31740000 		.long	0x7431
 12646 5f87 00000000 		.quad	.LBI786
 12646      00000000 
 12647 5f8f 0200     		.value	.LVU175
 12648 5f91 00000000 		.quad	.LBB786
 12648      00000000 
 12649 5f99 04000000 		.quad	.LBE786-.LBB786
 12649      00000000 
 12650 5fa1 05       		.byte	0x5
 12651 5fa2 4202     		.value	0x242
 12652 5fa4 16       		.byte	0x16
 12653 5fa5 AF5F0000 		.long	0x5faf
 12654 5fa9 09       		.uleb128 0x9
 12655 5faa 3F740000 		.long	0x743f
 12656 5fae 00       		.byte	0
 12657 5faf 1B       		.uleb128 0x1b
 12658 5fb0 00000000 		.quad	.LVL54
 12658      00000000 
 12659 5fb8 5D2F0000 		.long	0x2f5d
 12660 5fbc CD5F0000 		.long	0x5fcd
 12661 5fc0 06       		.uleb128 0x6
 12662 5fc1 01       		.uleb128 0x1
 12663 5fc2 54       		.byte	0x54
 12664 5fc3 03       		.uleb128 0x3
 12665 5fc4 91       		.byte	0x91
 12666 5fc5 DC7E     		.sleb128 -164
 12667 5fc7 06       		.uleb128 0x6
 12668 5fc8 01       		.uleb128 0x1
 12669 5fc9 51       		.byte	0x51
 12670 5fca 01       		.uleb128 0x1
 12671 5fcb 31       		.byte	0x31
 12672 5fcc 00       		.byte	0
 12673 5fcd 0C       		.uleb128 0xc
 12674 5fce 00000000 		.quad	.LVL152
 12674      00000000 
 12675 5fd6 652B0000 		.long	0x2b65
 12676 5fda 06       		.uleb128 0x6
 12677 5fdb 01       		.uleb128 0x1
 12678 5fdc 54       		.byte	0x54
 12679 5fdd 01       		.uleb128 0x1
 12680 5fde 3A       		.byte	0x3a
 12681 5fdf 00       		.byte	0
 12682 5fe0 00       		.byte	0
 12683 5fe1 1B       		.uleb128 0x1b
 12684 5fe2 00000000 		.quad	.LVL14
 12684      00000000 
GAS LISTING linobj/Ch02_03.s 			page 345


 12685 5fea E62B0000 		.long	0x2be6
 12686 5fee F95F0000 		.long	0x5ff9
 12687 5ff2 06       		.uleb128 0x6
 12688 5ff3 01       		.uleb128 0x1
 12689 5ff4 55       		.byte	0x55
 12690 5ff5 02       		.uleb128 0x2
 12691 5ff6 7F       		.byte	0x7f
 12692 5ff7 00       		.sleb128 0
 12693 5ff8 00       		.byte	0
 12694 5ff9 1B       		.uleb128 0x1b
 12695 5ffa 00000000 		.quad	.LVL22
 12695      00000000 
 12696 6002 E62B0000 		.long	0x2be6
 12697 6006 11600000 		.long	0x6011
 12698 600a 06       		.uleb128 0x6
 12699 600b 01       		.uleb128 0x1
 12700 600c 55       		.byte	0x55
 12701 600d 02       		.uleb128 0x2
 12702 600e 7F       		.byte	0x7f
 12703 600f 00       		.sleb128 0
 12704 6010 00       		.byte	0
 12705 6011 37       		.uleb128 0x37
 12706 6012 00000000 		.quad	.LVL33
 12706      00000000 
 12707 601a C22B0000 		.long	0x2bc2
 12708 601e 1B       		.uleb128 0x1b
 12709 601f 00000000 		.quad	.LVL43
 12709      00000000 
 12710 6027 952B0000 		.long	0x2b95
 12711 602b 36600000 		.long	0x6036
 12712 602f 06       		.uleb128 0x6
 12713 6030 01       		.uleb128 0x1
 12714 6031 54       		.byte	0x54
 12715 6032 02       		.uleb128 0x2
 12716 6033 73       		.byte	0x73
 12717 6034 7C       		.sleb128 -4
 12718 6035 00       		.byte	0
 12719 6036 37       		.uleb128 0x37
 12720 6037 00000000 		.quad	.LVL49
 12720      00000000 
 12721 603f C22B0000 		.long	0x2bc2
 12722 6043 00       		.byte	0
 12723 6044 0C       		.uleb128 0xc
 12724 6045 00000000 		.quad	.LVL6
 12724      00000000 
 12725 604d 1D500000 		.long	0x501d
 12726 6051 06       		.uleb128 0x6
 12727 6052 01       		.uleb128 0x1
 12728 6053 55       		.byte	0x55
 12729 6054 02       		.uleb128 0x2
 12730 6055 76       		.byte	0x76
 12731 6056 00       		.sleb128 0
 12732 6057 06       		.uleb128 0x6
 12733 6058 01       		.uleb128 0x1
 12734 6059 54       		.byte	0x54
 12735 605a 02       		.uleb128 0x2
 12736 605b 7C       		.byte	0x7c
GAS LISTING linobj/Ch02_03.s 			page 346


 12737 605c 00       		.sleb128 0
 12738 605d 06       		.uleb128 0x6
 12739 605e 01       		.uleb128 0x1
 12740 605f 51       		.byte	0x51
 12741 6060 02       		.uleb128 0x2
 12742 6061 7D       		.byte	0x7d
 12743 6062 00       		.sleb128 0
 12744 6063 00       		.byte	0
 12745 6064 00       		.byte	0
 12746 6065 00       		.byte	0
 12747 6066 14       		.uleb128 0x14
 12748 6067 75540000 		.long	0x5475
 12749 606b 00000000 		.quad	.LBI796
 12749      00000000 
 12750 6073 0100     		.value	.LVU25
 12751 6075 00000000 		.quad	.LBB796
 12751      00000000 
 12752 607d 00000000 		.quad	.LBE796-.LBB796
 12752      00000000 
 12753 6085 11       		.byte	0x11
 12754 6086 1C       		.byte	0x1c
 12755 6087 B9600000 		.long	0x60b9
 12756 608b 09       		.uleb128 0x9
 12757 608c 83540000 		.long	0x5483
 12758 6090 32       		.uleb128 0x32
 12759 6091 17520000 		.long	0x5217
 12760 6095 00000000 		.quad	.LBI797
 12760      00000000 
 12761 609d 0200     		.value	.LVU26
 12762 609f 00000000 		.quad	.LBB797
 12762      00000000 
 12763 60a7 00000000 		.quad	.LBE797-.LBB797
 12763      00000000 
 12764 60af 02       		.byte	0x2
 12765 60b0 B6       		.byte	0xb6
 12766 60b1 1F       		.byte	0x1f
 12767 60b2 09       		.uleb128 0x9
 12768 60b3 25520000 		.long	0x5225
 12769 60b7 00       		.byte	0
 12770 60b8 00       		.byte	0
 12771 60b9 0D       		.uleb128 0xd
 12772 60ba A4530000 		.long	0x53a4
 12773 60be 00000000 		.quad	.LBI799
 12773      00000000 
 12774 60c6 0000     		.value	.LVU189
 12775 60c8 00000000 		.long	.LLRL73
 12776 60cc 14       		.byte	0x14
 12777 60cd 1F       		.byte	0x1f
 12778 60ce 91610000 		.long	0x6191
 12779 60d2 05       		.uleb128 0x5
 12780 60d3 C8530000 		.long	0x53c8
 12781 60d7 00000000 		.long	.LLST74
 12782 60db 00000000 		.long	.LVUS74
 12783 60df 05       		.uleb128 0x5
 12784 60e0 D5530000 		.long	0x53d5
 12785 60e4 00000000 		.long	.LLST75
 12786 60e8 00000000 		.long	.LVUS75
GAS LISTING linobj/Ch02_03.s 			page 347


 12787 60ec 27       		.uleb128 0x27
 12788 60ed DC540000 		.long	0x54dc
 12789 60f1 00000000 		.quad	.LBI801
 12789      00000000 
 12790 60f9 0100     		.value	.LVU190
 12791 60fb 00000000 		.quad	.LBB801
 12791      00000000 
 12792 6103 00000000 		.quad	.LBE801-.LBB801
 12792      00000000 
 12793 610b 04       		.byte	0x4
 12794 610c F20F     		.value	0xff2
 12795 610e 3D       		.byte	0x3d
 12796 610f 21610000 		.long	0x6121
 12797 6113 05       		.uleb128 0x5
 12798 6114 EA540000 		.long	0x54ea
 12799 6118 00000000 		.long	.LLST76
 12800 611c 00000000 		.long	.LVUS76
 12801 6120 00       		.byte	0
 12802 6121 27       		.uleb128 0x27
 12803 6122 F4540000 		.long	0x54f4
 12804 6126 00000000 		.quad	.LBI802
 12804      00000000 
 12805 612e 0300     		.value	.LVU192
 12806 6130 00000000 		.quad	.LBB802
 12806      00000000 
 12807 6138 00000000 		.quad	.LBE802-.LBB802
 12807      00000000 
 12808 6140 04       		.byte	0x4
 12809 6141 F20F     		.value	0xff2
 12810 6143 1E       		.byte	0x1e
 12811 6144 83610000 		.long	0x6183
 12812 6148 05       		.uleb128 0x5
 12813 6149 02550000 		.long	0x5502
 12814 614d 00000000 		.long	.LLST77
 12815 6151 00000000 		.long	.LVUS77
 12816 6155 5C       		.uleb128 0x5c
 12817 6156 DE520000 		.long	0x52de
 12818 615a 00000000 		.quad	.LBI803
 12818      00000000 
 12819 6162 0400     		.value	.LVU193
 12820 6164 00000000 		.quad	.LBB803
 12820      00000000 
 12821 616c 00000000 		.quad	.LBE803-.LBB803
 12821      00000000 
 12822 6174 05       		.uleb128 0x5
 12823 6175 EC520000 		.long	0x52ec
 12824 6179 00000000 		.long	.LLST78
 12825 617d 00000000 		.long	.LVUS78
 12826 6181 00       		.byte	0
 12827 6182 00       		.byte	0
 12828 6183 37       		.uleb128 0x37
 12829 6184 00000000 		.quad	.LVL59
 12829      00000000 
 12830 618c 5D2F0000 		.long	0x2f5d
 12831 6190 00       		.byte	0
 12832 6191 0D       		.uleb128 0xd
 12833 6192 CD550000 		.long	0x55cd
GAS LISTING linobj/Ch02_03.s 			page 348


 12834 6196 00000000 		.quad	.LBI806
 12834      00000000 
 12835 619e 0100     		.value	.LVU200
 12836 61a0 00000000 		.long	.LLRL79
 12837 61a4 15       		.byte	0x15
 12838 61a5 0C       		.byte	0xc
 12839 61a6 1F680000 		.long	0x681f
 12840 61aa 22       		.uleb128 0x22
 12841 61ab 00000000 		.long	.LLRL79
 12842 61af 28       		.uleb128 0x28
 12843 61b0 D7550000 		.long	0x55d7
 12844 61b4 00000000 		.long	.LLST80
 12845 61b8 00000000 		.long	.LVUS80
 12846 61bc 30       		.uleb128 0x30
 12847 61bd E1550000 		.long	0x55e1
 12848 61c1 03       		.uleb128 0x3
 12849 61c2 91       		.byte	0x91
 12850 61c3 E07E     		.sleb128 -160
 12851 61c5 30       		.uleb128 0x30
 12852 61c6 EA550000 		.long	0x55ea
 12853 61ca 03       		.uleb128 0x3
 12854 61cb 91       		.byte	0x91
 12855 61cc F07E     		.sleb128 -144
 12856 61ce 30       		.uleb128 0x30
 12857 61cf F3550000 		.long	0x55f3
 12858 61d3 03       		.uleb128 0x3
 12859 61d4 91       		.byte	0x91
 12860 61d5 A07F     		.sleb128 -96
 12861 61d7 14       		.uleb128 0x14
 12862 61d8 77530000 		.long	0x5377
 12863 61dc 00000000 		.quad	.LBI808
 12863      00000000 
 12864 61e4 0100     		.value	.LVU218
 12865 61e6 00000000 		.quad	.LBB808
 12865      00000000 
 12866 61ee 14000000 		.quad	.LBE808-.LBB808
 12866      00000000 
 12867 61f6 4A       		.byte	0x4a
 12868 61f7 12       		.byte	0x12
 12869 61f8 2F620000 		.long	0x622f
 12870 61fc 09       		.uleb128 0x9
 12871 61fd 89530000 		.long	0x5389
 12872 6201 05       		.uleb128 0x5
 12873 6202 96530000 		.long	0x5396
 12874 6206 00000000 		.long	.LLST81
 12875 620a 00000000 		.long	.LVUS81
 12876 620e 0C       		.uleb128 0xc
 12877 620f 00000000 		.quad	.LVL63
 12877      00000000 
 12878 6217 5D2F0000 		.long	0x2f5d
 12879 621b 06       		.uleb128 0x6
 12880 621c 01       		.uleb128 0x1
 12881 621d 54       		.byte	0x54
 12882 621e 09       		.uleb128 0x9
 12883 621f 03       		.byte	0x3
 12884 6220 00000000 		.quad	.LC11
 12884      00000000 
GAS LISTING linobj/Ch02_03.s 			page 349


 12885 6228 06       		.uleb128 0x6
 12886 6229 01       		.uleb128 0x1
 12887 622a 51       		.byte	0x51
 12888 622b 01       		.uleb128 0x1
 12889 622c 4A       		.byte	0x4a
 12890 622d 00       		.byte	0
 12891 622e 00       		.byte	0
 12892 622f 4F       		.uleb128 0x4f
 12893 6230 FC550000 		.long	0x55fc
 12894 6234 00000000 		.long	.LLRL82
 12895 6238 FD670000 		.long	0x67fd
 12896 623c 28       		.uleb128 0x28
 12897 623d FD550000 		.long	0x55fd
 12898 6241 00000000 		.long	.LLST83
 12899 6245 00000000 		.long	.LVUS83
 12900 6249 14       		.uleb128 0x14
 12901 624a 77530000 		.long	0x5377
 12902 624e 00000000 		.quad	.LBI811
 12902      00000000 
 12903 6256 0100     		.value	.LVU222
 12904 6258 00000000 		.quad	.LBB811
 12904      00000000 
 12905 6260 14000000 		.quad	.LBE811-.LBB811
 12905      00000000 
 12906 6268 4D       		.byte	0x4d
 12907 6269 16       		.byte	0x16
 12908 626a A1620000 		.long	0x62a1
 12909 626e 09       		.uleb128 0x9
 12910 626f 89530000 		.long	0x5389
 12911 6273 05       		.uleb128 0x5
 12912 6274 96530000 		.long	0x5396
 12913 6278 00000000 		.long	.LLST84
 12914 627c 00000000 		.long	.LVUS84
 12915 6280 0C       		.uleb128 0xc
 12916 6281 00000000 		.quad	.LVL65
 12916      00000000 
 12917 6289 5D2F0000 		.long	0x2f5d
 12918 628d 06       		.uleb128 0x6
 12919 628e 01       		.uleb128 0x1
 12920 628f 54       		.byte	0x54
 12921 6290 09       		.uleb128 0x9
 12922 6291 03       		.byte	0x3
 12923 6292 00000000 		.quad	.LC3
 12923      00000000 
 12924 629a 06       		.uleb128 0x6
 12925 629b 01       		.uleb128 0x1
 12926 629c 51       		.byte	0x51
 12927 629d 01       		.uleb128 0x1
 12928 629e 32       		.byte	0x32
 12929 629f 00       		.byte	0
 12930 62a0 00       		.byte	0
 12931 62a1 0D       		.uleb128 0xd
 12932 62a2 53530000 		.long	0x5353
 12933 62a6 00000000 		.quad	.LBI813
 12933      00000000 
 12934 62ae 0100     		.value	.LVU225
 12935 62b0 00000000 		.long	.LLRL85
GAS LISTING linobj/Ch02_03.s 			page 350


 12936 62b4 4D       		.byte	0x4d
 12937 62b5 1E       		.byte	0x1e
 12938 62b6 E1620000 		.long	0x62e1
 12939 62ba 09       		.uleb128 0x9
 12940 62bb 61530000 		.long	0x5361
 12941 62bf 05       		.uleb128 0x5
 12942 62c0 6A530000 		.long	0x536a
 12943 62c4 00000000 		.long	.LLST86
 12944 62c8 00000000 		.long	.LVUS86
 12945 62cc 0C       		.uleb128 0xc
 12946 62cd 00000000 		.quad	.LVL66
 12946      00000000 
 12947 62d5 952B0000 		.long	0x2b95
 12948 62d9 06       		.uleb128 0x6
 12949 62da 01       		.uleb128 0x1
 12950 62db 54       		.byte	0x54
 12951 62dc 02       		.uleb128 0x2
 12952 62dd 73       		.byte	0x73
 12953 62de 00       		.sleb128 0
 12954 62df 00       		.byte	0
 12955 62e0 00       		.byte	0
 12956 62e1 0D       		.uleb128 0xd
 12957 62e2 77530000 		.long	0x5377
 12958 62e6 00000000 		.quad	.LBI816
 12958      00000000 
 12959 62ee 0100     		.value	.LVU230
 12960 62f0 00000000 		.long	.LLRL87
 12961 62f4 4D       		.byte	0x4d
 12962 62f5 38       		.byte	0x38
 12963 62f6 3B630000 		.long	0x633b
 12964 62fa 05       		.uleb128 0x5
 12965 62fb 89530000 		.long	0x5389
 12966 62ff 00000000 		.long	.LLST88
 12967 6303 00000000 		.long	.LVUS88
 12968 6307 05       		.uleb128 0x5
 12969 6308 96530000 		.long	0x5396
 12970 630c 00000000 		.long	.LLST89
 12971 6310 00000000 		.long	.LVUS89
 12972 6314 0C       		.uleb128 0xc
 12973 6315 00000000 		.quad	.LVL68
 12973      00000000 
 12974 631d 5D2F0000 		.long	0x2f5d
 12975 6321 06       		.uleb128 0x6
 12976 6322 01       		.uleb128 0x1
 12977 6323 55       		.byte	0x55
 12978 6324 02       		.uleb128 0x2
 12979 6325 7F       		.byte	0x7f
 12980 6326 00       		.sleb128 0
 12981 6327 06       		.uleb128 0x6
 12982 6328 01       		.uleb128 0x1
 12983 6329 54       		.byte	0x54
 12984 632a 09       		.uleb128 0x9
 12985 632b 03       		.byte	0x3
 12986 632c 00000000 		.quad	.LC4
 12986      00000000 
 12987 6334 06       		.uleb128 0x6
 12988 6335 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 351


 12989 6336 51       		.byte	0x51
 12990 6337 01       		.uleb128 0x1
 12991 6338 33       		.byte	0x33
 12992 6339 00       		.byte	0
 12993 633a 00       		.byte	0
 12994 633b 0D       		.uleb128 0xd
 12995 633c 1F530000 		.long	0x531f
 12996 6340 00000000 		.quad	.LBI821
 12996      00000000 
 12997 6348 0100     		.value	.LVU233
 12998 634a 00000000 		.long	.LLRL90
 12999 634e 4D       		.byte	0x4d
 13000 634f 38       		.byte	0x38
 13001 6350 A8630000 		.long	0x63a8
 13002 6354 05       		.uleb128 0x5
 13003 6355 3A530000 		.long	0x533a
 13004 6359 00000000 		.long	.LLST91
 13005 635d 00000000 		.long	.LVUS91
 13006 6361 09       		.uleb128 0x9
 13007 6362 46530000 		.long	0x5346
 13008 6366 2A       		.uleb128 0x2a
 13009 6367 F4730000 		.long	0x73f4
 13010 636b 00000000 		.quad	.LBI823
 13010      00000000 
 13011 6373 0200     		.value	.LVU234
 13012 6375 00000000 		.long	.LLRL92
 13013 6379 05       		.uleb128 0x5
 13014 637a 02740000 		.long	0x7402
 13015 637e 00000000 		.long	.LLST93
 13016 6382 00000000 		.long	.LVUS93
 13017 6386 05       		.uleb128 0x5
 13018 6387 0B740000 		.long	0x740b
 13019 638b 00000000 		.long	.LLST94
 13020 638f 00000000 		.long	.LVUS94
 13021 6393 22       		.uleb128 0x22
 13022 6394 00000000 		.long	.LLRL92
 13023 6398 28       		.uleb128 0x28
 13024 6399 18740000 		.long	0x7418
 13025 639d 00000000 		.long	.LLST95
 13026 63a1 00000000 		.long	.LVUS95
 13027 63a5 00       		.byte	0
 13028 63a6 00       		.byte	0
 13029 63a7 00       		.byte	0
 13030 63a8 14       		.uleb128 0x14
 13031 63a9 77530000 		.long	0x5377
 13032 63ad 00000000 		.quad	.LBI829
 13032      00000000 
 13033 63b5 0000     		.value	.LVU243
 13034 63b7 00000000 		.quad	.LBB829
 13034      00000000 
 13035 63bf 0F000000 		.quad	.LBE829-.LBB829
 13035      00000000 
 13036 63c7 4D       		.byte	0x4d
 13037 63c8 4B       		.byte	0x4b
 13038 63c9 08640000 		.long	0x6408
 13039 63cd 05       		.uleb128 0x5
 13040 63ce 89530000 		.long	0x5389
GAS LISTING linobj/Ch02_03.s 			page 352


 13041 63d2 00000000 		.long	.LLST96
 13042 63d6 00000000 		.long	.LVUS96
 13043 63da 05       		.uleb128 0x5
 13044 63db 96530000 		.long	0x5396
 13045 63df 00000000 		.long	.LLST97
 13046 63e3 00000000 		.long	.LVUS97
 13047 63e7 0C       		.uleb128 0xc
 13048 63e8 00000000 		.quad	.LVL72
 13048      00000000 
 13049 63f0 5D2F0000 		.long	0x2f5d
 13050 63f4 06       		.uleb128 0x6
 13051 63f5 01       		.uleb128 0x1
 13052 63f6 54       		.byte	0x54
 13053 63f7 09       		.uleb128 0x9
 13054 63f8 03       		.byte	0x3
 13055 63f9 00000000 		.quad	.LC5
 13055      00000000 
 13056 6401 06       		.uleb128 0x6
 13057 6402 01       		.uleb128 0x1
 13058 6403 51       		.byte	0x51
 13059 6404 01       		.uleb128 0x1
 13060 6405 32       		.byte	0x32
 13061 6406 00       		.byte	0
 13062 6407 00       		.byte	0
 13063 6408 14       		.uleb128 0x14
 13064 6409 77530000 		.long	0x5377
 13065 640d 00000000 		.quad	.LBI831
 13065      00000000 
 13066 6415 0200     		.value	.LVU247
 13067 6417 00000000 		.quad	.LBB831
 13067      00000000 
 13068 641f 14000000 		.quad	.LBE831-.LBB831
 13068      00000000 
 13069 6427 4E       		.byte	0x4e
 13070 6428 16       		.byte	0x16
 13071 6429 60640000 		.long	0x6460
 13072 642d 09       		.uleb128 0x9
 13073 642e 89530000 		.long	0x5389
 13074 6432 05       		.uleb128 0x5
 13075 6433 96530000 		.long	0x5396
 13076 6437 00000000 		.long	.LLST98
 13077 643b 00000000 		.long	.LVUS98
 13078 643f 0C       		.uleb128 0xc
 13079 6440 00000000 		.quad	.LVL73
 13079      00000000 
 13080 6448 5D2F0000 		.long	0x2f5d
 13081 644c 06       		.uleb128 0x6
 13082 644d 01       		.uleb128 0x1
 13083 644e 54       		.byte	0x54
 13084 644f 09       		.uleb128 0x9
 13085 6450 03       		.byte	0x3
 13086 6451 00000000 		.quad	.LC6
 13086      00000000 
 13087 6459 06       		.uleb128 0x6
 13088 645a 01       		.uleb128 0x1
 13089 645b 51       		.byte	0x51
 13090 645c 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 353


 13091 645d 32       		.byte	0x32
 13092 645e 00       		.byte	0
 13093 645f 00       		.byte	0
 13094 6460 0D       		.uleb128 0xd
 13095 6461 53530000 		.long	0x5353
 13096 6465 00000000 		.quad	.LBI833
 13096      00000000 
 13097 646d 0100     		.value	.LVU250
 13098 646f 00000000 		.long	.LLRL99
 13099 6473 4E       		.byte	0x4e
 13100 6474 1E       		.byte	0x1e
 13101 6475 A0640000 		.long	0x64a0
 13102 6479 09       		.uleb128 0x9
 13103 647a 61530000 		.long	0x5361
 13104 647e 05       		.uleb128 0x5
 13105 647f 6A530000 		.long	0x536a
 13106 6483 00000000 		.long	.LLST100
 13107 6487 00000000 		.long	.LVUS100
 13108 648b 0C       		.uleb128 0xc
 13109 648c 00000000 		.quad	.LVL74
 13109      00000000 
 13110 6494 952B0000 		.long	0x2b95
 13111 6498 06       		.uleb128 0x6
 13112 6499 01       		.uleb128 0x1
 13113 649a 54       		.byte	0x54
 13114 649b 02       		.uleb128 0x2
 13115 649c 73       		.byte	0x73
 13116 649d 00       		.sleb128 0
 13117 649e 00       		.byte	0
 13118 649f 00       		.byte	0
 13119 64a0 0D       		.uleb128 0xd
 13120 64a1 77530000 		.long	0x5377
 13121 64a5 00000000 		.quad	.LBI836
 13121      00000000 
 13122 64ad 0100     		.value	.LVU255
 13123 64af 00000000 		.long	.LLRL101
 13124 64b3 4E       		.byte	0x4e
 13125 64b4 38       		.byte	0x38
 13126 64b5 FA640000 		.long	0x64fa
 13127 64b9 05       		.uleb128 0x5
 13128 64ba 89530000 		.long	0x5389
 13129 64be 00000000 		.long	.LLST102
 13130 64c2 00000000 		.long	.LVUS102
 13131 64c6 05       		.uleb128 0x5
 13132 64c7 96530000 		.long	0x5396
 13133 64cb 00000000 		.long	.LLST103
 13134 64cf 00000000 		.long	.LVUS103
 13135 64d3 0C       		.uleb128 0xc
 13136 64d4 00000000 		.quad	.LVL76
 13136      00000000 
 13137 64dc 5D2F0000 		.long	0x2f5d
 13138 64e0 06       		.uleb128 0x6
 13139 64e1 01       		.uleb128 0x1
 13140 64e2 55       		.byte	0x55
 13141 64e3 02       		.uleb128 0x2
 13142 64e4 7F       		.byte	0x7f
 13143 64e5 00       		.sleb128 0
GAS LISTING linobj/Ch02_03.s 			page 354


 13144 64e6 06       		.uleb128 0x6
 13145 64e7 01       		.uleb128 0x1
 13146 64e8 54       		.byte	0x54
 13147 64e9 09       		.uleb128 0x9
 13148 64ea 03       		.byte	0x3
 13149 64eb 00000000 		.quad	.LC4
 13149      00000000 
 13150 64f3 06       		.uleb128 0x6
 13151 64f4 01       		.uleb128 0x1
 13152 64f5 51       		.byte	0x51
 13153 64f6 01       		.uleb128 0x1
 13154 64f7 33       		.byte	0x33
 13155 64f8 00       		.byte	0
 13156 64f9 00       		.byte	0
 13157 64fa 0D       		.uleb128 0xd
 13158 64fb 1F530000 		.long	0x531f
 13159 64ff 00000000 		.quad	.LBI841
 13159      00000000 
 13160 6507 0100     		.value	.LVU258
 13161 6509 00000000 		.long	.LLRL104
 13162 650d 4E       		.byte	0x4e
 13163 650e 38       		.byte	0x38
 13164 650f 67650000 		.long	0x6567
 13165 6513 05       		.uleb128 0x5
 13166 6514 3A530000 		.long	0x533a
 13167 6518 00000000 		.long	.LLST105
 13168 651c 00000000 		.long	.LVUS105
 13169 6520 09       		.uleb128 0x9
 13170 6521 46530000 		.long	0x5346
 13171 6525 2A       		.uleb128 0x2a
 13172 6526 F4730000 		.long	0x73f4
 13173 652a 00000000 		.quad	.LBI843
 13173      00000000 
 13174 6532 0200     		.value	.LVU259
 13175 6534 00000000 		.long	.LLRL106
 13176 6538 05       		.uleb128 0x5
 13177 6539 02740000 		.long	0x7402
 13178 653d 00000000 		.long	.LLST107
 13179 6541 00000000 		.long	.LVUS107
 13180 6545 05       		.uleb128 0x5
 13181 6546 0B740000 		.long	0x740b
 13182 654a 00000000 		.long	.LLST108
 13183 654e 00000000 		.long	.LVUS108
 13184 6552 22       		.uleb128 0x22
 13185 6553 00000000 		.long	.LLRL106
 13186 6557 28       		.uleb128 0x28
 13187 6558 18740000 		.long	0x7418
 13188 655c 00000000 		.long	.LLST109
 13189 6560 00000000 		.long	.LVUS109
 13190 6564 00       		.byte	0
 13191 6565 00       		.byte	0
 13192 6566 00       		.byte	0
 13193 6567 14       		.uleb128 0x14
 13194 6568 77530000 		.long	0x5377
 13195 656c 00000000 		.quad	.LBI849
 13195      00000000 
 13196 6574 0000     		.value	.LVU268
GAS LISTING linobj/Ch02_03.s 			page 355


 13197 6576 00000000 		.quad	.LBB849
 13197      00000000 
 13198 657e 0F000000 		.quad	.LBE849-.LBB849
 13198      00000000 
 13199 6586 4E       		.byte	0x4e
 13200 6587 4B       		.byte	0x4b
 13201 6588 C7650000 		.long	0x65c7
 13202 658c 05       		.uleb128 0x5
 13203 658d 89530000 		.long	0x5389
 13204 6591 00000000 		.long	.LLST110
 13205 6595 00000000 		.long	.LVUS110
 13206 6599 05       		.uleb128 0x5
 13207 659a 96530000 		.long	0x5396
 13208 659e 00000000 		.long	.LLST111
 13209 65a2 00000000 		.long	.LVUS111
 13210 65a6 0C       		.uleb128 0xc
 13211 65a7 00000000 		.quad	.LVL80
 13211      00000000 
 13212 65af 5D2F0000 		.long	0x2f5d
 13213 65b3 06       		.uleb128 0x6
 13214 65b4 01       		.uleb128 0x1
 13215 65b5 54       		.byte	0x54
 13216 65b6 09       		.uleb128 0x9
 13217 65b7 03       		.byte	0x3
 13218 65b8 00000000 		.quad	.LC5
 13218      00000000 
 13219 65c0 06       		.uleb128 0x6
 13220 65c1 01       		.uleb128 0x1
 13221 65c2 51       		.byte	0x51
 13222 65c3 01       		.uleb128 0x1
 13223 65c4 32       		.byte	0x32
 13224 65c5 00       		.byte	0
 13225 65c6 00       		.byte	0
 13226 65c7 14       		.uleb128 0x14
 13227 65c8 77530000 		.long	0x5377
 13228 65cc 00000000 		.quad	.LBI851
 13228      00000000 
 13229 65d4 0200     		.value	.LVU272
 13230 65d6 00000000 		.quad	.LBB851
 13230      00000000 
 13231 65de 14000000 		.quad	.LBE851-.LBB851
 13231      00000000 
 13232 65e6 4F       		.byte	0x4f
 13233 65e7 16       		.byte	0x16
 13234 65e8 1F660000 		.long	0x661f
 13235 65ec 09       		.uleb128 0x9
 13236 65ed 89530000 		.long	0x5389
 13237 65f1 05       		.uleb128 0x5
 13238 65f2 96530000 		.long	0x5396
 13239 65f6 00000000 		.long	.LLST112
 13240 65fa 00000000 		.long	.LVUS112
 13241 65fe 0C       		.uleb128 0xc
 13242 65ff 00000000 		.quad	.LVL81
 13242      00000000 
 13243 6607 5D2F0000 		.long	0x2f5d
 13244 660b 06       		.uleb128 0x6
 13245 660c 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 356


 13246 660d 54       		.byte	0x54
 13247 660e 09       		.uleb128 0x9
 13248 660f 03       		.byte	0x3
 13249 6610 00000000 		.quad	.LC12
 13249      00000000 
 13250 6618 06       		.uleb128 0x6
 13251 6619 01       		.uleb128 0x1
 13252 661a 51       		.byte	0x51
 13253 661b 01       		.uleb128 0x1
 13254 661c 32       		.byte	0x32
 13255 661d 00       		.byte	0
 13256 661e 00       		.byte	0
 13257 661f 0D       		.uleb128 0xd
 13258 6620 53530000 		.long	0x5353
 13259 6624 00000000 		.quad	.LBI853
 13259      00000000 
 13260 662c 0100     		.value	.LVU275
 13261 662e 00000000 		.long	.LLRL113
 13262 6632 4F       		.byte	0x4f
 13263 6633 1E       		.byte	0x1e
 13264 6634 5F660000 		.long	0x665f
 13265 6638 09       		.uleb128 0x9
 13266 6639 61530000 		.long	0x5361
 13267 663d 05       		.uleb128 0x5
 13268 663e 6A530000 		.long	0x536a
 13269 6642 00000000 		.long	.LLST114
 13270 6646 00000000 		.long	.LVUS114
 13271 664a 0C       		.uleb128 0xc
 13272 664b 00000000 		.quad	.LVL82
 13272      00000000 
 13273 6653 952B0000 		.long	0x2b95
 13274 6657 06       		.uleb128 0x6
 13275 6658 01       		.uleb128 0x1
 13276 6659 54       		.byte	0x54
 13277 665a 02       		.uleb128 0x2
 13278 665b 73       		.byte	0x73
 13279 665c 00       		.sleb128 0
 13280 665d 00       		.byte	0
 13281 665e 00       		.byte	0
 13282 665f 0D       		.uleb128 0xd
 13283 6660 77530000 		.long	0x5377
 13284 6664 00000000 		.quad	.LBI856
 13284      00000000 
 13285 666c 0100     		.value	.LVU280
 13286 666e 00000000 		.long	.LLRL115
 13287 6672 4F       		.byte	0x4f
 13288 6673 38       		.byte	0x38
 13289 6674 B9660000 		.long	0x66b9
 13290 6678 05       		.uleb128 0x5
 13291 6679 89530000 		.long	0x5389
 13292 667d 00000000 		.long	.LLST116
 13293 6681 00000000 		.long	.LVUS116
 13294 6685 05       		.uleb128 0x5
 13295 6686 96530000 		.long	0x5396
 13296 668a 00000000 		.long	.LLST117
 13297 668e 00000000 		.long	.LVUS117
 13298 6692 0C       		.uleb128 0xc
GAS LISTING linobj/Ch02_03.s 			page 357


 13299 6693 00000000 		.quad	.LVL84
 13299      00000000 
 13300 669b 5D2F0000 		.long	0x2f5d
 13301 669f 06       		.uleb128 0x6
 13302 66a0 01       		.uleb128 0x1
 13303 66a1 55       		.byte	0x55
 13304 66a2 02       		.uleb128 0x2
 13305 66a3 7F       		.byte	0x7f
 13306 66a4 00       		.sleb128 0
 13307 66a5 06       		.uleb128 0x6
 13308 66a6 01       		.uleb128 0x1
 13309 66a7 54       		.byte	0x54
 13310 66a8 09       		.uleb128 0x9
 13311 66a9 03       		.byte	0x3
 13312 66aa 00000000 		.quad	.LC4
 13312      00000000 
 13313 66b2 06       		.uleb128 0x6
 13314 66b3 01       		.uleb128 0x1
 13315 66b4 51       		.byte	0x51
 13316 66b5 01       		.uleb128 0x1
 13317 66b6 33       		.byte	0x33
 13318 66b7 00       		.byte	0
 13319 66b8 00       		.byte	0
 13320 66b9 0D       		.uleb128 0xd
 13321 66ba 1F530000 		.long	0x531f
 13322 66be 00000000 		.quad	.LBI861
 13322      00000000 
 13323 66c6 0100     		.value	.LVU283
 13324 66c8 00000000 		.long	.LLRL118
 13325 66cc 4F       		.byte	0x4f
 13326 66cd 38       		.byte	0x38
 13327 66ce 26670000 		.long	0x6726
 13328 66d2 05       		.uleb128 0x5
 13329 66d3 3A530000 		.long	0x533a
 13330 66d7 00000000 		.long	.LLST119
 13331 66db 00000000 		.long	.LVUS119
 13332 66df 09       		.uleb128 0x9
 13333 66e0 46530000 		.long	0x5346
 13334 66e4 2A       		.uleb128 0x2a
 13335 66e5 F4730000 		.long	0x73f4
 13336 66e9 00000000 		.quad	.LBI863
 13336      00000000 
 13337 66f1 0200     		.value	.LVU284
 13338 66f3 00000000 		.long	.LLRL120
 13339 66f7 05       		.uleb128 0x5
 13340 66f8 02740000 		.long	0x7402
 13341 66fc 00000000 		.long	.LLST121
 13342 6700 00000000 		.long	.LVUS121
 13343 6704 05       		.uleb128 0x5
 13344 6705 0B740000 		.long	0x740b
 13345 6709 00000000 		.long	.LLST122
 13346 670d 00000000 		.long	.LVUS122
 13347 6711 22       		.uleb128 0x22
 13348 6712 00000000 		.long	.LLRL120
 13349 6716 28       		.uleb128 0x28
 13350 6717 18740000 		.long	0x7418
 13351 671b 00000000 		.long	.LLST123
GAS LISTING linobj/Ch02_03.s 			page 358


 13352 671f 00000000 		.long	.LVUS123
 13353 6723 00       		.byte	0
 13354 6724 00       		.byte	0
 13355 6725 00       		.byte	0
 13356 6726 0D       		.uleb128 0xd
 13357 6727 E3530000 		.long	0x53e3
 13358 672b 00000000 		.quad	.LBI869
 13358      00000000 
 13359 6733 0100     		.value	.LVU296
 13360 6735 00000000 		.long	.LLRL124
 13361 6739 4F       		.byte	0x4f
 13362 673a 4B       		.byte	0x4b
 13363 673b B8670000 		.long	0x67b8
 13364 673f 05       		.uleb128 0x5
 13365 6740 F5530000 		.long	0x53f5
 13366 6744 00000000 		.long	.LLST125
 13367 6748 00000000 		.long	.LVUS125
 13368 674c 05       		.uleb128 0x5
 13369 674d 02540000 		.long	0x5402
 13370 6751 00000000 		.long	.LLST126
 13371 6755 00000000 		.long	.LVUS126
 13372 6759 27       		.uleb128 0x27
 13373 675a 31740000 		.long	0x7431
 13374 675e 00000000 		.quad	.LBI871
 13374      00000000 
 13375 6766 0200     		.value	.LVU297
 13376 6768 00000000 		.quad	.LBB871
 13376      00000000 
 13377 6770 04000000 		.quad	.LBE871-.LBB871
 13377      00000000 
 13378 6778 05       		.byte	0x5
 13379 6779 4202     		.value	0x242
 13380 677b 16       		.byte	0x16
 13381 677c 86670000 		.long	0x6786
 13382 6780 09       		.uleb128 0x9
 13383 6781 3F740000 		.long	0x743f
 13384 6785 00       		.byte	0
 13385 6786 1B       		.uleb128 0x1b
 13386 6787 00000000 		.quad	.LVL91
 13386      00000000 
 13387 678f 5D2F0000 		.long	0x2f5d
 13388 6793 A4670000 		.long	0x67a4
 13389 6797 06       		.uleb128 0x6
 13390 6798 01       		.uleb128 0x1
 13391 6799 54       		.byte	0x54
 13392 679a 03       		.uleb128 0x3
 13393 679b 91       		.byte	0x91
 13394 679c DD7E     		.sleb128 -163
 13395 679e 06       		.uleb128 0x6
 13396 679f 01       		.uleb128 0x1
 13397 67a0 51       		.byte	0x51
 13398 67a1 01       		.uleb128 0x1
 13399 67a2 31       		.byte	0x31
 13400 67a3 00       		.byte	0
 13401 67a4 0C       		.uleb128 0xc
 13402 67a5 00000000 		.quad	.LVL134
 13402      00000000 
GAS LISTING linobj/Ch02_03.s 			page 359


 13403 67ad 652B0000 		.long	0x2b65
 13404 67b1 06       		.uleb128 0x6
 13405 67b2 01       		.uleb128 0x1
 13406 67b3 54       		.byte	0x54
 13407 67b4 01       		.uleb128 0x1
 13408 67b5 3A       		.byte	0x3a
 13409 67b6 00       		.byte	0
 13410 67b7 00       		.byte	0
 13411 67b8 1B       		.uleb128 0x1b
 13412 67b9 00000000 		.quad	.LVL70
 13412      00000000 
 13413 67c1 C22B0000 		.long	0x2bc2
 13414 67c5 D0670000 		.long	0x67d0
 13415 67c9 06       		.uleb128 0x6
 13416 67ca 01       		.uleb128 0x1
 13417 67cb 55       		.byte	0x55
 13418 67cc 02       		.uleb128 0x2
 13419 67cd 7F       		.byte	0x7f
 13420 67ce 00       		.sleb128 0
 13421 67cf 00       		.byte	0
 13422 67d0 1B       		.uleb128 0x1b
 13423 67d1 00000000 		.quad	.LVL78
 13423      00000000 
 13424 67d9 C22B0000 		.long	0x2bc2
 13425 67dd E8670000 		.long	0x67e8
 13426 67e1 06       		.uleb128 0x6
 13427 67e2 01       		.uleb128 0x1
 13428 67e3 55       		.byte	0x55
 13429 67e4 02       		.uleb128 0x2
 13430 67e5 7F       		.byte	0x7f
 13431 67e6 00       		.sleb128 0
 13432 67e7 00       		.byte	0
 13433 67e8 0C       		.uleb128 0xc
 13434 67e9 00000000 		.quad	.LVL86
 13434      00000000 
 13435 67f1 C22B0000 		.long	0x2bc2
 13436 67f5 06       		.uleb128 0x6
 13437 67f6 01       		.uleb128 0x1
 13438 67f7 55       		.byte	0x55
 13439 67f8 02       		.uleb128 0x2
 13440 67f9 7F       		.byte	0x7f
 13441 67fa 00       		.sleb128 0
 13442 67fb 00       		.byte	0
 13443 67fc 00       		.byte	0
 13444 67fd 0C       		.uleb128 0xc
 13445 67fe 00000000 		.quad	.LVL62
 13445      00000000 
 13446 6806 F34F0000 		.long	0x4ff3
 13447 680a 06       		.uleb128 0x6
 13448 680b 01       		.uleb128 0x1
 13449 680c 55       		.byte	0x55
 13450 680d 02       		.uleb128 0x2
 13451 680e 76       		.byte	0x76
 13452 680f 00       		.sleb128 0
 13453 6810 06       		.uleb128 0x6
 13454 6811 01       		.uleb128 0x1
 13455 6812 54       		.byte	0x54
GAS LISTING linobj/Ch02_03.s 			page 360


 13456 6813 02       		.uleb128 0x2
 13457 6814 7C       		.byte	0x7c
 13458 6815 00       		.sleb128 0
 13459 6816 06       		.uleb128 0x6
 13460 6817 01       		.uleb128 0x1
 13461 6818 51       		.byte	0x51
 13462 6819 02       		.uleb128 0x2
 13463 681a 7D       		.byte	0x7d
 13464 681b 00       		.sleb128 0
 13465 681c 00       		.byte	0
 13466 681d 00       		.byte	0
 13467 681e 00       		.byte	0
 13468 681f 0D       		.uleb128 0xd
 13469 6820 A4530000 		.long	0x53a4
 13470 6824 00000000 		.quad	.LBI878
 13470      00000000 
 13471 682c 0000     		.value	.LVU311
 13472 682e 00000000 		.long	.LLRL127
 13473 6832 16       		.byte	0x16
 13474 6833 1F       		.byte	0x1f
 13475 6834 F7680000 		.long	0x68f7
 13476 6838 05       		.uleb128 0x5
 13477 6839 C8530000 		.long	0x53c8
 13478 683d 00000000 		.long	.LLST128
 13479 6841 00000000 		.long	.LVUS128
 13480 6845 05       		.uleb128 0x5
 13481 6846 D5530000 		.long	0x53d5
 13482 684a 00000000 		.long	.LLST129
 13483 684e 00000000 		.long	.LVUS129
 13484 6852 27       		.uleb128 0x27
 13485 6853 DC540000 		.long	0x54dc
 13486 6857 00000000 		.quad	.LBI880
 13486      00000000 
 13487 685f 0100     		.value	.LVU312
 13488 6861 00000000 		.quad	.LBB880
 13488      00000000 
 13489 6869 00000000 		.quad	.LBE880-.LBB880
 13489      00000000 
 13490 6871 04       		.byte	0x4
 13491 6872 F20F     		.value	0xff2
 13492 6874 3D       		.byte	0x3d
 13493 6875 87680000 		.long	0x6887
 13494 6879 05       		.uleb128 0x5
 13495 687a EA540000 		.long	0x54ea
 13496 687e 00000000 		.long	.LLST130
 13497 6882 00000000 		.long	.LVUS130
 13498 6886 00       		.byte	0
 13499 6887 27       		.uleb128 0x27
 13500 6888 F4540000 		.long	0x54f4
 13501 688c 00000000 		.quad	.LBI881
 13501      00000000 
 13502 6894 0300     		.value	.LVU314
 13503 6896 00000000 		.quad	.LBB881
 13503      00000000 
 13504 689e 00000000 		.quad	.LBE881-.LBB881
 13504      00000000 
 13505 68a6 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 361


 13506 68a7 F20F     		.value	0xff2
 13507 68a9 1E       		.byte	0x1e
 13508 68aa E9680000 		.long	0x68e9
 13509 68ae 05       		.uleb128 0x5
 13510 68af 02550000 		.long	0x5502
 13511 68b3 00000000 		.long	.LLST131
 13512 68b7 00000000 		.long	.LVUS131
 13513 68bb 5C       		.uleb128 0x5c
 13514 68bc DE520000 		.long	0x52de
 13515 68c0 00000000 		.quad	.LBI882
 13515      00000000 
 13516 68c8 0400     		.value	.LVU315
 13517 68ca 00000000 		.quad	.LBB882
 13517      00000000 
 13518 68d2 00000000 		.quad	.LBE882-.LBB882
 13518      00000000 
 13519 68da 05       		.uleb128 0x5
 13520 68db EC520000 		.long	0x52ec
 13521 68df 00000000 		.long	.LLST132
 13522 68e3 00000000 		.long	.LVUS132
 13523 68e7 00       		.byte	0
 13524 68e8 00       		.byte	0
 13525 68e9 37       		.uleb128 0x37
 13526 68ea 00000000 		.quad	.LVL96
 13526      00000000 
 13527 68f2 5D2F0000 		.long	0x2f5d
 13528 68f6 00       		.byte	0
 13529 68f7 0D       		.uleb128 0xd
 13530 68f8 80550000 		.long	0x5580
 13531 68fc 00000000 		.quad	.LBI885
 13531      00000000 
 13532 6904 0100     		.value	.LVU322
 13533 6906 00000000 		.long	.LLRL133
 13534 690a 17       		.byte	0x17
 13535 690b 0C       		.byte	0xc
 13536 690c AB710000 		.long	0x71ab
 13537 6910 22       		.uleb128 0x22
 13538 6911 00000000 		.long	.LLRL133
 13539 6915 28       		.uleb128 0x28
 13540 6916 8A550000 		.long	0x558a
 13541 691a 00000000 		.long	.LLST134
 13542 691e 00000000 		.long	.LVUS134
 13543 6922 30       		.uleb128 0x30
 13544 6923 94550000 		.long	0x5594
 13545 6927 03       		.uleb128 0x3
 13546 6928 91       		.byte	0x91
 13547 6929 E07E     		.sleb128 -160
 13548 692b 30       		.uleb128 0x30
 13549 692c 9D550000 		.long	0x559d
 13550 6930 03       		.uleb128 0x3
 13551 6931 91       		.byte	0x91
 13552 6932 F07E     		.sleb128 -144
 13553 6934 30       		.uleb128 0x30
 13554 6935 A6550000 		.long	0x55a6
 13555 6939 03       		.uleb128 0x3
 13556 693a 91       		.byte	0x91
 13557 693b A07F     		.sleb128 -96
GAS LISTING linobj/Ch02_03.s 			page 362


 13558 693d 14       		.uleb128 0x14
 13559 693e 77530000 		.long	0x5377
 13560 6942 00000000 		.quad	.LBI887
 13560      00000000 
 13561 694a 0100     		.value	.LVU340
 13562 694c 00000000 		.quad	.LBB887
 13562      00000000 
 13563 6954 14000000 		.quad	.LBE887-.LBB887
 13563      00000000 
 13564 695c 5F       		.byte	0x5f
 13565 695d 12       		.byte	0x12
 13566 695e 95690000 		.long	0x6995
 13567 6962 09       		.uleb128 0x9
 13568 6963 89530000 		.long	0x5389
 13569 6967 05       		.uleb128 0x5
 13570 6968 96530000 		.long	0x5396
 13571 696c 00000000 		.long	.LLST135
 13572 6970 00000000 		.long	.LVUS135
 13573 6974 0C       		.uleb128 0xc
 13574 6975 00000000 		.quad	.LVL100
 13574      00000000 
 13575 697d 5D2F0000 		.long	0x2f5d
 13576 6981 06       		.uleb128 0x6
 13577 6982 01       		.uleb128 0x1
 13578 6983 54       		.byte	0x54
 13579 6984 09       		.uleb128 0x9
 13580 6985 03       		.byte	0x3
 13581 6986 00000000 		.quad	.LC15
 13581      00000000 
 13582 698e 06       		.uleb128 0x6
 13583 698f 01       		.uleb128 0x1
 13584 6990 51       		.byte	0x51
 13585 6991 01       		.uleb128 0x1
 13586 6992 4A       		.byte	0x4a
 13587 6993 00       		.byte	0
 13588 6994 00       		.byte	0
 13589 6995 4F       		.uleb128 0x4f
 13590 6996 AF550000 		.long	0x55af
 13591 699a 00000000 		.long	.LLRL136
 13592 699e 89710000 		.long	0x7189
 13593 69a2 28       		.uleb128 0x28
 13594 69a3 B0550000 		.long	0x55b0
 13595 69a7 00000000 		.long	.LLST137
 13596 69ab 00000000 		.long	.LVUS137
 13597 69af 14       		.uleb128 0x14
 13598 69b0 77530000 		.long	0x5377
 13599 69b4 00000000 		.quad	.LBI890
 13599      00000000 
 13600 69bc 0100     		.value	.LVU344
 13601 69be 00000000 		.quad	.LBB890
 13601      00000000 
 13602 69c6 14000000 		.quad	.LBE890-.LBB890
 13602      00000000 
 13603 69ce 62       		.byte	0x62
 13604 69cf 16       		.byte	0x16
 13605 69d0 076A0000 		.long	0x6a07
 13606 69d4 09       		.uleb128 0x9
GAS LISTING linobj/Ch02_03.s 			page 363


 13607 69d5 89530000 		.long	0x5389
 13608 69d9 05       		.uleb128 0x5
 13609 69da 96530000 		.long	0x5396
 13610 69de 00000000 		.long	.LLST138
 13611 69e2 00000000 		.long	.LVUS138
 13612 69e6 0C       		.uleb128 0xc
 13613 69e7 00000000 		.quad	.LVL102
 13613      00000000 
 13614 69ef 5D2F0000 		.long	0x2f5d
 13615 69f3 06       		.uleb128 0x6
 13616 69f4 01       		.uleb128 0x1
 13617 69f5 54       		.byte	0x54
 13618 69f6 09       		.uleb128 0x9
 13619 69f7 03       		.byte	0x3
 13620 69f8 00000000 		.quad	.LC3
 13620      00000000 
 13621 6a00 06       		.uleb128 0x6
 13622 6a01 01       		.uleb128 0x1
 13623 6a02 51       		.byte	0x51
 13624 6a03 01       		.uleb128 0x1
 13625 6a04 32       		.byte	0x32
 13626 6a05 00       		.byte	0
 13627 6a06 00       		.byte	0
 13628 6a07 0D       		.uleb128 0xd
 13629 6a08 53530000 		.long	0x5353
 13630 6a0c 00000000 		.quad	.LBI892
 13630      00000000 
 13631 6a14 0100     		.value	.LVU347
 13632 6a16 00000000 		.long	.LLRL139
 13633 6a1a 62       		.byte	0x62
 13634 6a1b 1E       		.byte	0x1e
 13635 6a1c 476A0000 		.long	0x6a47
 13636 6a20 09       		.uleb128 0x9
 13637 6a21 61530000 		.long	0x5361
 13638 6a25 05       		.uleb128 0x5
 13639 6a26 6A530000 		.long	0x536a
 13640 6a2a 00000000 		.long	.LLST140
 13641 6a2e 00000000 		.long	.LVUS140
 13642 6a32 0C       		.uleb128 0xc
 13643 6a33 00000000 		.quad	.LVL103
 13643      00000000 
 13644 6a3b 952B0000 		.long	0x2b95
 13645 6a3f 06       		.uleb128 0x6
 13646 6a40 01       		.uleb128 0x1
 13647 6a41 54       		.byte	0x54
 13648 6a42 02       		.uleb128 0x2
 13649 6a43 73       		.byte	0x73
 13650 6a44 00       		.sleb128 0
 13651 6a45 00       		.byte	0
 13652 6a46 00       		.byte	0
 13653 6a47 0D       		.uleb128 0xd
 13654 6a48 77530000 		.long	0x5377
 13655 6a4c 00000000 		.quad	.LBI895
 13655      00000000 
 13656 6a54 0100     		.value	.LVU352
 13657 6a56 00000000 		.long	.LLRL141
 13658 6a5a 62       		.byte	0x62
GAS LISTING linobj/Ch02_03.s 			page 364


 13659 6a5b 38       		.byte	0x38
 13660 6a5c A16A0000 		.long	0x6aa1
 13661 6a60 05       		.uleb128 0x5
 13662 6a61 89530000 		.long	0x5389
 13663 6a65 00000000 		.long	.LLST142
 13664 6a69 00000000 		.long	.LVUS142
 13665 6a6d 05       		.uleb128 0x5
 13666 6a6e 96530000 		.long	0x5396
 13667 6a72 00000000 		.long	.LLST143
 13668 6a76 00000000 		.long	.LVUS143
 13669 6a7a 0C       		.uleb128 0xc
 13670 6a7b 00000000 		.quad	.LVL105
 13670      00000000 
 13671 6a83 5D2F0000 		.long	0x2f5d
 13672 6a87 06       		.uleb128 0x6
 13673 6a88 01       		.uleb128 0x1
 13674 6a89 55       		.byte	0x55
 13675 6a8a 02       		.uleb128 0x2
 13676 6a8b 7F       		.byte	0x7f
 13677 6a8c 00       		.sleb128 0
 13678 6a8d 06       		.uleb128 0x6
 13679 6a8e 01       		.uleb128 0x1
 13680 6a8f 54       		.byte	0x54
 13681 6a90 09       		.uleb128 0x9
 13682 6a91 03       		.byte	0x3
 13683 6a92 00000000 		.quad	.LC4
 13683      00000000 
 13684 6a9a 06       		.uleb128 0x6
 13685 6a9b 01       		.uleb128 0x1
 13686 6a9c 51       		.byte	0x51
 13687 6a9d 01       		.uleb128 0x1
 13688 6a9e 33       		.byte	0x33
 13689 6a9f 00       		.byte	0
 13690 6aa0 00       		.byte	0
 13691 6aa1 0D       		.uleb128 0xd
 13692 6aa2 1F530000 		.long	0x531f
 13693 6aa6 00000000 		.quad	.LBI900
 13693      00000000 
 13694 6aae 0100     		.value	.LVU355
 13695 6ab0 00000000 		.long	.LLRL144
 13696 6ab4 62       		.byte	0x62
 13697 6ab5 38       		.byte	0x38
 13698 6ab6 0E6B0000 		.long	0x6b0e
 13699 6aba 05       		.uleb128 0x5
 13700 6abb 3A530000 		.long	0x533a
 13701 6abf 00000000 		.long	.LLST145
 13702 6ac3 00000000 		.long	.LVUS145
 13703 6ac7 09       		.uleb128 0x9
 13704 6ac8 46530000 		.long	0x5346
 13705 6acc 2A       		.uleb128 0x2a
 13706 6acd F4730000 		.long	0x73f4
 13707 6ad1 00000000 		.quad	.LBI902
 13707      00000000 
 13708 6ad9 0200     		.value	.LVU356
 13709 6adb 00000000 		.long	.LLRL146
 13710 6adf 05       		.uleb128 0x5
 13711 6ae0 02740000 		.long	0x7402
GAS LISTING linobj/Ch02_03.s 			page 365


 13712 6ae4 00000000 		.long	.LLST147
 13713 6ae8 00000000 		.long	.LVUS147
 13714 6aec 05       		.uleb128 0x5
 13715 6aed 0B740000 		.long	0x740b
 13716 6af1 00000000 		.long	.LLST148
 13717 6af5 00000000 		.long	.LVUS148
 13718 6af9 22       		.uleb128 0x22
 13719 6afa 00000000 		.long	.LLRL146
 13720 6afe 28       		.uleb128 0x28
 13721 6aff 18740000 		.long	0x7418
 13722 6b03 00000000 		.long	.LLST149
 13723 6b07 00000000 		.long	.LVUS149
 13724 6b0b 00       		.byte	0
 13725 6b0c 00       		.byte	0
 13726 6b0d 00       		.byte	0
 13727 6b0e 14       		.uleb128 0x14
 13728 6b0f 77530000 		.long	0x5377
 13729 6b13 00000000 		.quad	.LBI908
 13729      00000000 
 13730 6b1b 0000     		.value	.LVU365
 13731 6b1d 00000000 		.quad	.LBB908
 13731      00000000 
 13732 6b25 0F000000 		.quad	.LBE908-.LBB908
 13732      00000000 
 13733 6b2d 62       		.byte	0x62
 13734 6b2e 4B       		.byte	0x4b
 13735 6b2f 6E6B0000 		.long	0x6b6e
 13736 6b33 05       		.uleb128 0x5
 13737 6b34 89530000 		.long	0x5389
 13738 6b38 00000000 		.long	.LLST150
 13739 6b3c 00000000 		.long	.LVUS150
 13740 6b40 05       		.uleb128 0x5
 13741 6b41 96530000 		.long	0x5396
 13742 6b45 00000000 		.long	.LLST151
 13743 6b49 00000000 		.long	.LVUS151
 13744 6b4d 0C       		.uleb128 0xc
 13745 6b4e 00000000 		.quad	.LVL109
 13745      00000000 
 13746 6b56 5D2F0000 		.long	0x2f5d
 13747 6b5a 06       		.uleb128 0x6
 13748 6b5b 01       		.uleb128 0x1
 13749 6b5c 54       		.byte	0x54
 13750 6b5d 09       		.uleb128 0x9
 13751 6b5e 03       		.byte	0x3
 13752 6b5f 00000000 		.quad	.LC5
 13752      00000000 
 13753 6b67 06       		.uleb128 0x6
 13754 6b68 01       		.uleb128 0x1
 13755 6b69 51       		.byte	0x51
 13756 6b6a 01       		.uleb128 0x1
 13757 6b6b 32       		.byte	0x32
 13758 6b6c 00       		.byte	0
 13759 6b6d 00       		.byte	0
 13760 6b6e 14       		.uleb128 0x14
 13761 6b6f 77530000 		.long	0x5377
 13762 6b73 00000000 		.quad	.LBI910
 13762      00000000 
GAS LISTING linobj/Ch02_03.s 			page 366


 13763 6b7b 0200     		.value	.LVU369
 13764 6b7d 00000000 		.quad	.LBB910
 13764      00000000 
 13765 6b85 14000000 		.quad	.LBE910-.LBB910
 13765      00000000 
 13766 6b8d 63       		.byte	0x63
 13767 6b8e 16       		.byte	0x16
 13768 6b8f C66B0000 		.long	0x6bc6
 13769 6b93 09       		.uleb128 0x9
 13770 6b94 89530000 		.long	0x5389
 13771 6b98 05       		.uleb128 0x5
 13772 6b99 96530000 		.long	0x5396
 13773 6b9d 00000000 		.long	.LLST152
 13774 6ba1 00000000 		.long	.LVUS152
 13775 6ba5 0C       		.uleb128 0xc
 13776 6ba6 00000000 		.quad	.LVL110
 13776      00000000 
 13777 6bae 5D2F0000 		.long	0x2f5d
 13778 6bb2 06       		.uleb128 0x6
 13779 6bb3 01       		.uleb128 0x1
 13780 6bb4 54       		.byte	0x54
 13781 6bb5 09       		.uleb128 0x9
 13782 6bb6 03       		.byte	0x3
 13783 6bb7 00000000 		.quad	.LC6
 13783      00000000 
 13784 6bbf 06       		.uleb128 0x6
 13785 6bc0 01       		.uleb128 0x1
 13786 6bc1 51       		.byte	0x51
 13787 6bc2 01       		.uleb128 0x1
 13788 6bc3 32       		.byte	0x32
 13789 6bc4 00       		.byte	0
 13790 6bc5 00       		.byte	0
 13791 6bc6 0D       		.uleb128 0xd
 13792 6bc7 53530000 		.long	0x5353
 13793 6bcb 00000000 		.quad	.LBI912
 13793      00000000 
 13794 6bd3 0100     		.value	.LVU372
 13795 6bd5 00000000 		.long	.LLRL153
 13796 6bd9 63       		.byte	0x63
 13797 6bda 1E       		.byte	0x1e
 13798 6bdb 066C0000 		.long	0x6c06
 13799 6bdf 09       		.uleb128 0x9
 13800 6be0 61530000 		.long	0x5361
 13801 6be4 05       		.uleb128 0x5
 13802 6be5 6A530000 		.long	0x536a
 13803 6be9 00000000 		.long	.LLST154
 13804 6bed 00000000 		.long	.LVUS154
 13805 6bf1 0C       		.uleb128 0xc
 13806 6bf2 00000000 		.quad	.LVL111
 13806      00000000 
 13807 6bfa 952B0000 		.long	0x2b95
 13808 6bfe 06       		.uleb128 0x6
 13809 6bff 01       		.uleb128 0x1
 13810 6c00 54       		.byte	0x54
 13811 6c01 02       		.uleb128 0x2
 13812 6c02 73       		.byte	0x73
 13813 6c03 00       		.sleb128 0
GAS LISTING linobj/Ch02_03.s 			page 367


 13814 6c04 00       		.byte	0
 13815 6c05 00       		.byte	0
 13816 6c06 0D       		.uleb128 0xd
 13817 6c07 77530000 		.long	0x5377
 13818 6c0b 00000000 		.quad	.LBI915
 13818      00000000 
 13819 6c13 0100     		.value	.LVU377
 13820 6c15 00000000 		.long	.LLRL155
 13821 6c19 63       		.byte	0x63
 13822 6c1a 38       		.byte	0x38
 13823 6c1b 606C0000 		.long	0x6c60
 13824 6c1f 05       		.uleb128 0x5
 13825 6c20 89530000 		.long	0x5389
 13826 6c24 00000000 		.long	.LLST156
 13827 6c28 00000000 		.long	.LVUS156
 13828 6c2c 05       		.uleb128 0x5
 13829 6c2d 96530000 		.long	0x5396
 13830 6c31 00000000 		.long	.LLST157
 13831 6c35 00000000 		.long	.LVUS157
 13832 6c39 0C       		.uleb128 0xc
 13833 6c3a 00000000 		.quad	.LVL113
 13833      00000000 
 13834 6c42 5D2F0000 		.long	0x2f5d
 13835 6c46 06       		.uleb128 0x6
 13836 6c47 01       		.uleb128 0x1
 13837 6c48 55       		.byte	0x55
 13838 6c49 02       		.uleb128 0x2
 13839 6c4a 7F       		.byte	0x7f
 13840 6c4b 00       		.sleb128 0
 13841 6c4c 06       		.uleb128 0x6
 13842 6c4d 01       		.uleb128 0x1
 13843 6c4e 54       		.byte	0x54
 13844 6c4f 09       		.uleb128 0x9
 13845 6c50 03       		.byte	0x3
 13846 6c51 00000000 		.quad	.LC4
 13846      00000000 
 13847 6c59 06       		.uleb128 0x6
 13848 6c5a 01       		.uleb128 0x1
 13849 6c5b 51       		.byte	0x51
 13850 6c5c 01       		.uleb128 0x1
 13851 6c5d 33       		.byte	0x33
 13852 6c5e 00       		.byte	0
 13853 6c5f 00       		.byte	0
 13854 6c60 0D       		.uleb128 0xd
 13855 6c61 1F530000 		.long	0x531f
 13856 6c65 00000000 		.quad	.LBI920
 13856      00000000 
 13857 6c6d 0100     		.value	.LVU380
 13858 6c6f 00000000 		.long	.LLRL158
 13859 6c73 63       		.byte	0x63
 13860 6c74 38       		.byte	0x38
 13861 6c75 CD6C0000 		.long	0x6ccd
 13862 6c79 05       		.uleb128 0x5
 13863 6c7a 3A530000 		.long	0x533a
 13864 6c7e 00000000 		.long	.LLST159
 13865 6c82 00000000 		.long	.LVUS159
 13866 6c86 09       		.uleb128 0x9
GAS LISTING linobj/Ch02_03.s 			page 368


 13867 6c87 46530000 		.long	0x5346
 13868 6c8b 2A       		.uleb128 0x2a
 13869 6c8c F4730000 		.long	0x73f4
 13870 6c90 00000000 		.quad	.LBI922
 13870      00000000 
 13871 6c98 0200     		.value	.LVU381
 13872 6c9a 00000000 		.long	.LLRL160
 13873 6c9e 05       		.uleb128 0x5
 13874 6c9f 02740000 		.long	0x7402
 13875 6ca3 00000000 		.long	.LLST161
 13876 6ca7 00000000 		.long	.LVUS161
 13877 6cab 05       		.uleb128 0x5
 13878 6cac 0B740000 		.long	0x740b
 13879 6cb0 00000000 		.long	.LLST162
 13880 6cb4 00000000 		.long	.LVUS162
 13881 6cb8 22       		.uleb128 0x22
 13882 6cb9 00000000 		.long	.LLRL160
 13883 6cbd 28       		.uleb128 0x28
 13884 6cbe 18740000 		.long	0x7418
 13885 6cc2 00000000 		.long	.LLST163
 13886 6cc6 00000000 		.long	.LVUS163
 13887 6cca 00       		.byte	0
 13888 6ccb 00       		.byte	0
 13889 6ccc 00       		.byte	0
 13890 6ccd 14       		.uleb128 0x14
 13891 6cce 77530000 		.long	0x5377
 13892 6cd2 00000000 		.quad	.LBI928
 13892      00000000 
 13893 6cda 0000     		.value	.LVU390
 13894 6cdc 00000000 		.quad	.LBB928
 13894      00000000 
 13895 6ce4 0F000000 		.quad	.LBE928-.LBB928
 13895      00000000 
 13896 6cec 63       		.byte	0x63
 13897 6ced 4B       		.byte	0x4b
 13898 6cee 2D6D0000 		.long	0x6d2d
 13899 6cf2 05       		.uleb128 0x5
 13900 6cf3 89530000 		.long	0x5389
 13901 6cf7 00000000 		.long	.LLST164
 13902 6cfb 00000000 		.long	.LVUS164
 13903 6cff 05       		.uleb128 0x5
 13904 6d00 96530000 		.long	0x5396
 13905 6d04 00000000 		.long	.LLST165
 13906 6d08 00000000 		.long	.LVUS165
 13907 6d0c 0C       		.uleb128 0xc
 13908 6d0d 00000000 		.quad	.LVL117
 13908      00000000 
 13909 6d15 5D2F0000 		.long	0x2f5d
 13910 6d19 06       		.uleb128 0x6
 13911 6d1a 01       		.uleb128 0x1
 13912 6d1b 54       		.byte	0x54
 13913 6d1c 09       		.uleb128 0x9
 13914 6d1d 03       		.byte	0x3
 13915 6d1e 00000000 		.quad	.LC5
 13915      00000000 
 13916 6d26 06       		.uleb128 0x6
 13917 6d27 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 369


 13918 6d28 51       		.byte	0x51
 13919 6d29 01       		.uleb128 0x1
 13920 6d2a 32       		.byte	0x32
 13921 6d2b 00       		.byte	0
 13922 6d2c 00       		.byte	0
 13923 6d2d 0D       		.uleb128 0xd
 13924 6d2e 77530000 		.long	0x5377
 13925 6d32 00000000 		.quad	.LBI930
 13925      00000000 
 13926 6d3a 0100     		.value	.LVU397
 13927 6d3c 00000000 		.long	.LLRL166
 13928 6d40 67       		.byte	0x67
 13929 6d41 1A       		.byte	0x1a
 13930 6d42 796D0000 		.long	0x6d79
 13931 6d46 09       		.uleb128 0x9
 13932 6d47 89530000 		.long	0x5389
 13933 6d4b 05       		.uleb128 0x5
 13934 6d4c 96530000 		.long	0x5396
 13935 6d50 00000000 		.long	.LLST167
 13936 6d54 00000000 		.long	.LVUS167
 13937 6d58 0C       		.uleb128 0xc
 13938 6d59 00000000 		.quad	.LVL119
 13938      00000000 
 13939 6d61 5D2F0000 		.long	0x2f5d
 13940 6d65 06       		.uleb128 0x6
 13941 6d66 01       		.uleb128 0x1
 13942 6d67 54       		.byte	0x54
 13943 6d68 09       		.uleb128 0x9
 13944 6d69 03       		.byte	0x3
 13945 6d6a 00000000 		.quad	.LC7
 13945      00000000 
 13946 6d72 06       		.uleb128 0x6
 13947 6d73 01       		.uleb128 0x1
 13948 6d74 51       		.byte	0x51
 13949 6d75 01       		.uleb128 0x1
 13950 6d76 35       		.byte	0x35
 13951 6d77 00       		.byte	0
 13952 6d78 00       		.byte	0
 13953 6d79 14       		.uleb128 0x14
 13954 6d7a 53530000 		.long	0x5353
 13955 6d7e 00000000 		.quad	.LBI934
 13955      00000000 
 13956 6d86 0100     		.value	.LVU400
 13957 6d88 00000000 		.quad	.LBB934
 13957      00000000 
 13958 6d90 10000000 		.quad	.LBE934-.LBB934
 13958      00000000 
 13959 6d98 67       		.byte	0x67
 13960 6d99 25       		.byte	0x25
 13961 6d9a C56D0000 		.long	0x6dc5
 13962 6d9e 09       		.uleb128 0x9
 13963 6d9f 61530000 		.long	0x5361
 13964 6da3 05       		.uleb128 0x5
 13965 6da4 6A530000 		.long	0x536a
 13966 6da8 00000000 		.long	.LLST168
 13967 6dac 00000000 		.long	.LVUS168
 13968 6db0 0C       		.uleb128 0xc
GAS LISTING linobj/Ch02_03.s 			page 370


 13969 6db1 00000000 		.quad	.LVL120
 13969      00000000 
 13970 6db9 952B0000 		.long	0x2b95
 13971 6dbd 06       		.uleb128 0x6
 13972 6dbe 01       		.uleb128 0x1
 13973 6dbf 54       		.byte	0x54
 13974 6dc0 02       		.uleb128 0x2
 13975 6dc1 73       		.byte	0x73
 13976 6dc2 00       		.sleb128 0
 13977 6dc3 00       		.byte	0
 13978 6dc4 00       		.byte	0
 13979 6dc5 14       		.uleb128 0x14
 13980 6dc6 77530000 		.long	0x5377
 13981 6dca 00000000 		.quad	.LBI936
 13981      00000000 
 13982 6dd2 0100     		.value	.LVU403
 13983 6dd4 00000000 		.quad	.LBB936
 13983      00000000 
 13984 6ddc 0F000000 		.quad	.LBE936-.LBB936
 13984      00000000 
 13985 6de4 67       		.byte	0x67
 13986 6de5 2A       		.byte	0x2a
 13987 6de6 256E0000 		.long	0x6e25
 13988 6dea 05       		.uleb128 0x5
 13989 6deb 89530000 		.long	0x5389
 13990 6def 00000000 		.long	.LLST169
 13991 6df3 00000000 		.long	.LVUS169
 13992 6df7 05       		.uleb128 0x5
 13993 6df8 96530000 		.long	0x5396
 13994 6dfc 00000000 		.long	.LLST170
 13995 6e00 00000000 		.long	.LVUS170
 13996 6e04 0C       		.uleb128 0xc
 13997 6e05 00000000 		.quad	.LVL122
 13997      00000000 
 13998 6e0d 5D2F0000 		.long	0x2f5d
 13999 6e11 06       		.uleb128 0x6
 14000 6e12 01       		.uleb128 0x1
 14001 6e13 54       		.byte	0x54
 14002 6e14 09       		.uleb128 0x9
 14003 6e15 03       		.byte	0x3
 14004 6e16 00000000 		.quad	.LC4
 14004      00000000 
 14005 6e1e 06       		.uleb128 0x6
 14006 6e1f 01       		.uleb128 0x1
 14007 6e20 51       		.byte	0x51
 14008 6e21 01       		.uleb128 0x1
 14009 6e22 33       		.byte	0x33
 14010 6e23 00       		.byte	0
 14011 6e24 00       		.byte	0
 14012 6e25 0D       		.uleb128 0xd
 14013 6e26 1F530000 		.long	0x531f
 14014 6e2a 00000000 		.quad	.LBI938
 14014      00000000 
 14015 6e32 0200     		.value	.LVU407
 14016 6e34 00000000 		.long	.LLRL171
 14017 6e38 68       		.byte	0x68
 14018 6e39 26       		.byte	0x26
GAS LISTING linobj/Ch02_03.s 			page 371


 14019 6e3a 7A6E0000 		.long	0x6e7a
 14020 6e3e 09       		.uleb128 0x9
 14021 6e3f 3A530000 		.long	0x533a
 14022 6e43 09       		.uleb128 0x9
 14023 6e44 46530000 		.long	0x5346
 14024 6e48 2A       		.uleb128 0x2a
 14025 6e49 F4730000 		.long	0x73f4
 14026 6e4d 00000000 		.quad	.LBI940
 14026      00000000 
 14027 6e55 0300     		.value	.LVU408
 14028 6e57 00000000 		.long	.LLRL172
 14029 6e5b 09       		.uleb128 0x9
 14030 6e5c 02740000 		.long	0x7402
 14031 6e60 05       		.uleb128 0x5
 14032 6e61 0B740000 		.long	0x740b
 14033 6e65 00000000 		.long	.LLST173
 14034 6e69 00000000 		.long	.LVUS173
 14035 6e6d 22       		.uleb128 0x22
 14036 6e6e 00000000 		.long	.LLRL172
 14037 6e72 42       		.uleb128 0x42
 14038 6e73 18740000 		.long	0x7418
 14039 6e77 00       		.byte	0
 14040 6e78 00       		.byte	0
 14041 6e79 00       		.byte	0
 14042 6e7a 0D       		.uleb128 0xd
 14043 6e7b FB520000 		.long	0x52fb
 14044 6e7f 00000000 		.quad	.LBI945
 14044      00000000 
 14045 6e87 0200     		.value	.LVU418
 14046 6e89 00000000 		.long	.LLRL174
 14047 6e8d 68       		.byte	0x68
 14048 6e8e 37       		.byte	0x37
 14049 6e8f B36E0000 		.long	0x6eb3
 14050 6e93 09       		.uleb128 0x9
 14051 6e94 09530000 		.long	0x5309
 14052 6e98 05       		.uleb128 0x5
 14053 6e99 12530000 		.long	0x5312
 14054 6e9d 00000000 		.long	.LLST175
 14055 6ea1 00000000 		.long	.LVUS175
 14056 6ea5 37       		.uleb128 0x37
 14057 6ea6 00000000 		.quad	.LVL126
 14057      00000000 
 14058 6eae 382B0000 		.long	0x2b38
 14059 6eb2 00       		.byte	0
 14060 6eb3 0D       		.uleb128 0xd
 14061 6eb4 E3530000 		.long	0x53e3
 14062 6eb8 00000000 		.quad	.LBI950
 14062      00000000 
 14063 6ec0 0100     		.value	.LVU425
 14064 6ec2 00000000 		.long	.LLRL176
 14065 6ec6 68       		.byte	0x68
 14066 6ec7 3C       		.byte	0x3c
 14067 6ec8 456F0000 		.long	0x6f45
 14068 6ecc 05       		.uleb128 0x5
 14069 6ecd F5530000 		.long	0x53f5
 14070 6ed1 00000000 		.long	.LLST177
 14071 6ed5 00000000 		.long	.LVUS177
GAS LISTING linobj/Ch02_03.s 			page 372


 14072 6ed9 05       		.uleb128 0x5
 14073 6eda 02540000 		.long	0x5402
 14074 6ede 00000000 		.long	.LLST178
 14075 6ee2 00000000 		.long	.LVUS178
 14076 6ee6 27       		.uleb128 0x27
 14077 6ee7 31740000 		.long	0x7431
 14078 6eeb 00000000 		.quad	.LBI952
 14078      00000000 
 14079 6ef3 0200     		.value	.LVU426
 14080 6ef5 00000000 		.quad	.LBB952
 14080      00000000 
 14081 6efd 04000000 		.quad	.LBE952-.LBB952
 14081      00000000 
 14082 6f05 05       		.byte	0x5
 14083 6f06 4202     		.value	0x242
 14084 6f08 16       		.byte	0x16
 14085 6f09 136F0000 		.long	0x6f13
 14086 6f0d 09       		.uleb128 0x9
 14087 6f0e 3F740000 		.long	0x743f
 14088 6f12 00       		.byte	0
 14089 6f13 1B       		.uleb128 0x1b
 14090 6f14 00000000 		.quad	.LVL131
 14090      00000000 
 14091 6f1c 5D2F0000 		.long	0x2f5d
 14092 6f20 316F0000 		.long	0x6f31
 14093 6f24 06       		.uleb128 0x6
 14094 6f25 01       		.uleb128 0x1
 14095 6f26 54       		.byte	0x54
 14096 6f27 03       		.uleb128 0x3
 14097 6f28 91       		.byte	0x91
 14098 6f29 DE7E     		.sleb128 -162
 14099 6f2b 06       		.uleb128 0x6
 14100 6f2c 01       		.uleb128 0x1
 14101 6f2d 51       		.byte	0x51
 14102 6f2e 01       		.uleb128 0x1
 14103 6f2f 31       		.byte	0x31
 14104 6f30 00       		.byte	0
 14105 6f31 0C       		.uleb128 0xc
 14106 6f32 00000000 		.quad	.LVL156
 14106      00000000 
 14107 6f3a 652B0000 		.long	0x2b65
 14108 6f3e 06       		.uleb128 0x6
 14109 6f3f 01       		.uleb128 0x1
 14110 6f40 54       		.byte	0x54
 14111 6f41 01       		.uleb128 0x1
 14112 6f42 3A       		.byte	0x3a
 14113 6f43 00       		.byte	0
 14114 6f44 00       		.byte	0
 14115 6f45 14       		.uleb128 0x14
 14116 6f46 77530000 		.long	0x5377
 14117 6f4a 00000000 		.quad	.LBI956
 14117      00000000 
 14118 6f52 0200     		.value	.LVU440
 14119 6f54 00000000 		.quad	.LBB956
 14119      00000000 
 14120 6f5c 0F000000 		.quad	.LBE956-.LBB956
 14120      00000000 
GAS LISTING linobj/Ch02_03.s 			page 373


 14121 6f64 6C       		.byte	0x6c
 14122 6f65 1A       		.byte	0x1a
 14123 6f66 986F0000 		.long	0x6f98
 14124 6f6a 09       		.uleb128 0x9
 14125 6f6b 89530000 		.long	0x5389
 14126 6f6f 05       		.uleb128 0x5
 14127 6f70 96530000 		.long	0x5396
 14128 6f74 00000000 		.long	.LLST179
 14129 6f78 00000000 		.long	.LVUS179
 14130 6f7c 0C       		.uleb128 0xc
 14131 6f7d 00000000 		.quad	.LVL136
 14131      00000000 
 14132 6f85 5D2F0000 		.long	0x2f5d
 14133 6f89 06       		.uleb128 0x6
 14134 6f8a 01       		.uleb128 0x1
 14135 6f8b 54       		.byte	0x54
 14136 6f8c 09       		.uleb128 0x9
 14137 6f8d 03       		.byte	0x3
 14138 6f8e 00000000 		.quad	.LC8
 14138      00000000 
 14139 6f96 00       		.byte	0
 14140 6f97 00       		.byte	0
 14141 6f98 0D       		.uleb128 0xd
 14142 6f99 53530000 		.long	0x5353
 14143 6f9d 00000000 		.quad	.LBI958
 14143      00000000 
 14144 6fa5 0100     		.value	.LVU443
 14145 6fa7 00000000 		.long	.LLRL180
 14146 6fab 6C       		.byte	0x6c
 14147 6fac 29       		.byte	0x29
 14148 6fad C46F0000 		.long	0x6fc4
 14149 6fb1 09       		.uleb128 0x9
 14150 6fb2 61530000 		.long	0x5361
 14151 6fb6 05       		.uleb128 0x5
 14152 6fb7 6A530000 		.long	0x536a
 14153 6fbb 00000000 		.long	.LLST181
 14154 6fbf 00000000 		.long	.LVUS181
 14155 6fc3 00       		.byte	0
 14156 6fc4 14       		.uleb128 0x14
 14157 6fc5 77530000 		.long	0x5377
 14158 6fc9 00000000 		.quad	.LBI961
 14158      00000000 
 14159 6fd1 0100     		.value	.LVU448
 14160 6fd3 00000000 		.quad	.LBB961
 14160      00000000 
 14161 6fdb 0F000000 		.quad	.LBE961-.LBB961
 14161      00000000 
 14162 6fe3 6C       		.byte	0x6c
 14163 6fe4 2E       		.byte	0x2e
 14164 6fe5 24700000 		.long	0x7024
 14165 6fe9 05       		.uleb128 0x5
 14166 6fea 89530000 		.long	0x5389
 14167 6fee 00000000 		.long	.LLST182
 14168 6ff2 00000000 		.long	.LVUS182
 14169 6ff6 05       		.uleb128 0x5
 14170 6ff7 96530000 		.long	0x5396
 14171 6ffb 00000000 		.long	.LLST183
GAS LISTING linobj/Ch02_03.s 			page 374


 14172 6fff 00000000 		.long	.LVUS183
 14173 7003 0C       		.uleb128 0xc
 14174 7004 00000000 		.quad	.LVL140
 14174      00000000 
 14175 700c 5D2F0000 		.long	0x2f5d
 14176 7010 06       		.uleb128 0x6
 14177 7011 01       		.uleb128 0x1
 14178 7012 54       		.byte	0x54
 14179 7013 09       		.uleb128 0x9
 14180 7014 03       		.byte	0x3
 14181 7015 00000000 		.quad	.LC4
 14181      00000000 
 14182 701d 06       		.uleb128 0x6
 14183 701e 01       		.uleb128 0x1
 14184 701f 51       		.byte	0x51
 14185 7020 01       		.uleb128 0x1
 14186 7021 33       		.byte	0x33
 14187 7022 00       		.byte	0
 14188 7023 00       		.byte	0
 14189 7024 0D       		.uleb128 0xd
 14190 7025 1F530000 		.long	0x531f
 14191 7029 00000000 		.quad	.LBI963
 14191      00000000 
 14192 7031 0200     		.value	.LVU452
 14193 7033 00000000 		.long	.LLRL184
 14194 7037 6D       		.byte	0x6d
 14195 7038 26       		.byte	0x26
 14196 7039 79700000 		.long	0x7079
 14197 703d 09       		.uleb128 0x9
 14198 703e 3A530000 		.long	0x533a
 14199 7042 09       		.uleb128 0x9
 14200 7043 46530000 		.long	0x5346
 14201 7047 2A       		.uleb128 0x2a
 14202 7048 F4730000 		.long	0x73f4
 14203 704c 00000000 		.quad	.LBI965
 14203      00000000 
 14204 7054 0300     		.value	.LVU453
 14205 7056 00000000 		.long	.LLRL185
 14206 705a 09       		.uleb128 0x9
 14207 705b 02740000 		.long	0x7402
 14208 705f 05       		.uleb128 0x5
 14209 7060 0B740000 		.long	0x740b
 14210 7064 00000000 		.long	.LLST186
 14211 7068 00000000 		.long	.LVUS186
 14212 706c 22       		.uleb128 0x22
 14213 706d 00000000 		.long	.LLRL185
 14214 7071 42       		.uleb128 0x42
 14215 7072 18740000 		.long	0x7418
 14216 7076 00       		.byte	0
 14217 7077 00       		.byte	0
 14218 7078 00       		.byte	0
 14219 7079 0D       		.uleb128 0xd
 14220 707a FB520000 		.long	0x52fb
 14221 707e 00000000 		.quad	.LBI970
 14221      00000000 
 14222 7086 0200     		.value	.LVU463
 14223 7088 00000000 		.long	.LLRL187
GAS LISTING linobj/Ch02_03.s 			page 375


 14224 708c 6D       		.byte	0x6d
 14225 708d 3B       		.byte	0x3b
 14226 708e B2700000 		.long	0x70b2
 14227 7092 09       		.uleb128 0x9
 14228 7093 09530000 		.long	0x5309
 14229 7097 05       		.uleb128 0x5
 14230 7098 12530000 		.long	0x5312
 14231 709c 00000000 		.long	.LLST188
 14232 70a0 00000000 		.long	.LVUS188
 14233 70a4 37       		.uleb128 0x37
 14234 70a5 00000000 		.quad	.LVL144
 14234      00000000 
 14235 70ad 382B0000 		.long	0x2b38
 14236 70b1 00       		.byte	0
 14237 70b2 0D       		.uleb128 0xd
 14238 70b3 E3530000 		.long	0x53e3
 14239 70b7 00000000 		.quad	.LBI975
 14239      00000000 
 14240 70bf 0100     		.value	.LVU470
 14241 70c1 00000000 		.long	.LLRL189
 14242 70c5 6D       		.byte	0x6d
 14243 70c6 40       		.byte	0x40
 14244 70c7 44710000 		.long	0x7144
 14245 70cb 05       		.uleb128 0x5
 14246 70cc F5530000 		.long	0x53f5
 14247 70d0 00000000 		.long	.LLST190
 14248 70d4 00000000 		.long	.LVUS190
 14249 70d8 05       		.uleb128 0x5
 14250 70d9 02540000 		.long	0x5402
 14251 70dd 00000000 		.long	.LLST191
 14252 70e1 00000000 		.long	.LVUS191
 14253 70e5 27       		.uleb128 0x27
 14254 70e6 31740000 		.long	0x7431
 14255 70ea 00000000 		.quad	.LBI977
 14255      00000000 
 14256 70f2 0200     		.value	.LVU471
 14257 70f4 00000000 		.quad	.LBB977
 14257      00000000 
 14258 70fc 04000000 		.quad	.LBE977-.LBB977
 14258      00000000 
 14259 7104 05       		.byte	0x5
 14260 7105 4202     		.value	0x242
 14261 7107 16       		.byte	0x16
 14262 7108 12710000 		.long	0x7112
 14263 710c 09       		.uleb128 0x9
 14264 710d 3F740000 		.long	0x743f
 14265 7111 00       		.byte	0
 14266 7112 1B       		.uleb128 0x1b
 14267 7113 00000000 		.quad	.LVL149
 14267      00000000 
 14268 711b 5D2F0000 		.long	0x2f5d
 14269 711f 30710000 		.long	0x7130
 14270 7123 06       		.uleb128 0x6
 14271 7124 01       		.uleb128 0x1
 14272 7125 54       		.byte	0x54
 14273 7126 03       		.uleb128 0x3
 14274 7127 91       		.byte	0x91
GAS LISTING linobj/Ch02_03.s 			page 376


 14275 7128 DF7E     		.sleb128 -161
 14276 712a 06       		.uleb128 0x6
 14277 712b 01       		.uleb128 0x1
 14278 712c 51       		.byte	0x51
 14279 712d 01       		.uleb128 0x1
 14280 712e 31       		.byte	0x31
 14281 712f 00       		.byte	0
 14282 7130 0C       		.uleb128 0xc
 14283 7131 00000000 		.quad	.LVL160
 14283      00000000 
 14284 7139 652B0000 		.long	0x2b65
 14285 713d 06       		.uleb128 0x6
 14286 713e 01       		.uleb128 0x1
 14287 713f 54       		.byte	0x54
 14288 7140 01       		.uleb128 0x1
 14289 7141 3A       		.byte	0x3a
 14290 7142 00       		.byte	0
 14291 7143 00       		.byte	0
 14292 7144 1B       		.uleb128 0x1b
 14293 7145 00000000 		.quad	.LVL107
 14293      00000000 
 14294 714d C22B0000 		.long	0x2bc2
 14295 7151 5C710000 		.long	0x715c
 14296 7155 06       		.uleb128 0x6
 14297 7156 01       		.uleb128 0x1
 14298 7157 55       		.byte	0x55
 14299 7158 02       		.uleb128 0x2
 14300 7159 7F       		.byte	0x7f
 14301 715a 00       		.sleb128 0
 14302 715b 00       		.byte	0
 14303 715c 1B       		.uleb128 0x1b
 14304 715d 00000000 		.quad	.LVL115
 14304      00000000 
 14305 7165 C22B0000 		.long	0x2bc2
 14306 7169 74710000 		.long	0x7174
 14307 716d 06       		.uleb128 0x6
 14308 716e 01       		.uleb128 0x1
 14309 716f 55       		.byte	0x55
 14310 7170 02       		.uleb128 0x2
 14311 7171 7F       		.byte	0x7f
 14312 7172 00       		.sleb128 0
 14313 7173 00       		.byte	0
 14314 7174 0C       		.uleb128 0xc
 14315 7175 00000000 		.quad	.LVL138
 14315      00000000 
 14316 717d 952B0000 		.long	0x2b95
 14317 7181 06       		.uleb128 0x6
 14318 7182 01       		.uleb128 0x1
 14319 7183 54       		.byte	0x54
 14320 7184 02       		.uleb128 0x2
 14321 7185 73       		.byte	0x73
 14322 7186 7E       		.sleb128 -2
 14323 7187 00       		.byte	0
 14324 7188 00       		.byte	0
 14325 7189 0C       		.uleb128 0xc
 14326 718a 00000000 		.quad	.LVL99
 14326      00000000 
GAS LISTING linobj/Ch02_03.s 			page 377


 14327 7192 CE4F0000 		.long	0x4fce
 14328 7196 06       		.uleb128 0x6
 14329 7197 01       		.uleb128 0x1
 14330 7198 55       		.byte	0x55
 14331 7199 02       		.uleb128 0x2
 14332 719a 76       		.byte	0x76
 14333 719b 00       		.sleb128 0
 14334 719c 06       		.uleb128 0x6
 14335 719d 01       		.uleb128 0x1
 14336 719e 54       		.byte	0x54
 14337 719f 02       		.uleb128 0x2
 14338 71a0 7C       		.byte	0x7c
 14339 71a1 00       		.sleb128 0
 14340 71a2 06       		.uleb128 0x6
 14341 71a3 01       		.uleb128 0x1
 14342 71a4 51       		.byte	0x51
 14343 71a5 02       		.uleb128 0x2
 14344 71a6 7D       		.byte	0x7d
 14345 71a7 00       		.sleb128 0
 14346 71a8 00       		.byte	0
 14347 71a9 00       		.byte	0
 14348 71aa 00       		.byte	0
 14349 71ab 14       		.uleb128 0x14
 14350 71ac 0C550000 		.long	0x550c
 14351 71b0 00000000 		.quad	.LBI993
 14351      00000000 
 14352 71b8 0200     		.value	.LVU490
 14353 71ba 00000000 		.quad	.LBB993
 14353      00000000 
 14354 71c2 08000000 		.quad	.LBE993-.LBB993
 14354      00000000 
 14355 71ca 19       		.byte	0x19
 14356 71cb 01       		.byte	0x1
 14357 71cc 87720000 		.long	0x7287
 14358 71d0 05       		.uleb128 0x5
 14359 71d1 1A550000 		.long	0x551a
 14360 71d5 00000000 		.long	.LLST192
 14361 71d9 00000000 		.long	.LVUS192
 14362 71dd 27       		.uleb128 0x27
 14363 71de 44550000 		.long	0x5544
 14364 71e2 00000000 		.quad	.LBI995
 14364      00000000 
 14365 71ea 0000     		.value	.LVU492
 14366 71ec 00000000 		.quad	.LBB995
 14366      00000000 
 14367 71f4 00000000 		.quad	.LBE995-.LBB995
 14367      00000000 
 14368 71fc 04       		.byte	0x4
 14369 71fd 2903     		.value	0x329
 14370 71ff 17       		.byte	0x17
 14371 7200 72720000 		.long	0x7272
 14372 7204 05       		.uleb128 0x5
 14373 7205 56550000 		.long	0x5556
 14374 7209 00000000 		.long	.LLST193
 14375 720d 00000000 		.long	.LVUS193
 14376 7211 32       		.uleb128 0x32
 14377 7212 75540000 		.long	0x5475
GAS LISTING linobj/Ch02_03.s 			page 378


 14378 7216 00000000 		.quad	.LBI996
 14378      00000000 
 14379 721e 0100     		.value	.LVU493
 14380 7220 00000000 		.quad	.LBB996
 14380      00000000 
 14381 7228 00000000 		.quad	.LBE996-.LBB996
 14381      00000000 
 14382 7230 04       		.byte	0x4
 14383 7231 BA       		.byte	0xba
 14384 7232 0E       		.byte	0xe
 14385 7233 05       		.uleb128 0x5
 14386 7234 83540000 		.long	0x5483
 14387 7238 00000000 		.long	.LLST194
 14388 723c 00000000 		.long	.LVUS194
 14389 7240 32       		.uleb128 0x32
 14390 7241 17520000 		.long	0x5217
 14391 7245 00000000 		.quad	.LBI997
 14391      00000000 
 14392 724d 0200     		.value	.LVU494
 14393 724f 00000000 		.quad	.LBB997
 14393      00000000 
 14394 7257 00000000 		.quad	.LBE997-.LBB997
 14394      00000000 
 14395 725f 02       		.byte	0x2
 14396 7260 B6       		.byte	0xb6
 14397 7261 1F       		.byte	0x1f
 14398 7262 05       		.uleb128 0x5
 14399 7263 25520000 		.long	0x5225
 14400 7267 00000000 		.long	.LLST195
 14401 726b 00000000 		.long	.LVUS195
 14402 726f 00       		.byte	0
 14403 7270 00       		.byte	0
 14404 7271 00       		.byte	0
 14405 7272 0C       		.uleb128 0xc
 14406 7273 00000000 		.quad	.LVL158
 14406      00000000 
 14407 727b AE520000 		.long	0x52ae
 14408 727f 06       		.uleb128 0x6
 14409 7280 01       		.uleb128 0x1
 14410 7281 55       		.byte	0x55
 14411 7282 02       		.uleb128 0x2
 14412 7283 7E       		.byte	0x7e
 14413 7284 00       		.sleb128 0
 14414 7285 00       		.byte	0
 14415 7286 00       		.byte	0
 14416 7287 0D       		.uleb128 0xd
 14417 7288 0C550000 		.long	0x550c
 14418 728c 00000000 		.quad	.LBI999
 14418      00000000 
 14419 7294 0100     		.value	.LVU502
 14420 7296 00000000 		.long	.LLRL196
 14421 729a 19       		.byte	0x19
 14422 729b 01       		.byte	0x1
 14423 729c 63730000 		.long	0x7363
 14424 72a0 05       		.uleb128 0x5
 14425 72a1 1A550000 		.long	0x551a
 14426 72a5 00000000 		.long	.LLST197
GAS LISTING linobj/Ch02_03.s 			page 379


 14427 72a9 00000000 		.long	.LVUS197
 14428 72ad 27       		.uleb128 0x27
 14429 72ae 44550000 		.long	0x5544
 14430 72b2 00000000 		.quad	.LBI1001
 14430      00000000 
 14431 72ba 0000     		.value	.LVU504
 14432 72bc 00000000 		.quad	.LBB1001
 14432      00000000 
 14433 72c4 08000000 		.quad	.LBE1001-.LBB1001
 14433      00000000 
 14434 72cc 04       		.byte	0x4
 14435 72cd 2903     		.value	0x329
 14436 72cf 17       		.byte	0x17
 14437 72d0 42730000 		.long	0x7342
 14438 72d4 05       		.uleb128 0x5
 14439 72d5 56550000 		.long	0x5556
 14440 72d9 00000000 		.long	.LLST198
 14441 72dd 00000000 		.long	.LVUS198
 14442 72e1 32       		.uleb128 0x32
 14443 72e2 75540000 		.long	0x5475
 14444 72e6 00000000 		.quad	.LBI1002
 14444      00000000 
 14445 72ee 0100     		.value	.LVU505
 14446 72f0 00000000 		.quad	.LBB1002
 14446      00000000 
 14447 72f8 08000000 		.quad	.LBE1002-.LBB1002
 14447      00000000 
 14448 7300 04       		.byte	0x4
 14449 7301 BA       		.byte	0xba
 14450 7302 0E       		.byte	0xe
 14451 7303 05       		.uleb128 0x5
 14452 7304 83540000 		.long	0x5483
 14453 7308 00000000 		.long	.LLST199
 14454 730c 00000000 		.long	.LVUS199
 14455 7310 32       		.uleb128 0x32
 14456 7311 17520000 		.long	0x5217
 14457 7315 00000000 		.quad	.LBI1003
 14457      00000000 
 14458 731d 0200     		.value	.LVU506
 14459 731f 00000000 		.quad	.LBB1003
 14459      00000000 
 14460 7327 08000000 		.quad	.LBE1003-.LBB1003
 14460      00000000 
 14461 732f 02       		.byte	0x2
 14462 7330 B6       		.byte	0xb6
 14463 7331 1F       		.byte	0x1f
 14464 7332 05       		.uleb128 0x5
 14465 7333 25520000 		.long	0x5225
 14466 7337 00000000 		.long	.LLST200
 14467 733b 00000000 		.long	.LVUS200
 14468 733f 00       		.byte	0
 14469 7340 00       		.byte	0
 14470 7341 00       		.byte	0
 14471 7342 8C01     		.uleb128 0x8c
 14472 7344 00000000 		.quad	.LVL163
 14472      00000000 
 14473 734c 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 380


 14474 734d 30       		.byte	0x30
 14475 734e 0C       		.uleb128 0xc
 14476 734f 00000000 		.quad	.LVL164
 14476      00000000 
 14477 7357 AE520000 		.long	0x52ae
 14478 735b 06       		.uleb128 0x6
 14479 735c 01       		.uleb128 0x1
 14480 735d 55       		.byte	0x55
 14481 735e 02       		.uleb128 0x2
 14482 735f 7E       		.byte	0x7e
 14483 7360 00       		.sleb128 0
 14484 7361 00       		.byte	0
 14485 7362 00       		.byte	0
 14486 7363 1B       		.uleb128 0x1b
 14487 7364 00000000 		.quad	.LVL57
 14487      00000000 
 14488 736c E3530000 		.long	0x53e3
 14489 7370 7A730000 		.long	0x737a
 14490 7374 06       		.uleb128 0x6
 14491 7375 01       		.uleb128 0x1
 14492 7376 54       		.byte	0x54
 14493 7377 01       		.uleb128 0x1
 14494 7378 3A       		.byte	0x3a
 14495 7379 00       		.byte	0
 14496 737a 1B       		.uleb128 0x1b
 14497 737b 00000000 		.quad	.LVL61
 14497      00000000 
 14498 7383 E3530000 		.long	0x53e3
 14499 7387 91730000 		.long	0x7391
 14500 738b 06       		.uleb128 0x6
 14501 738c 01       		.uleb128 0x1
 14502 738d 54       		.byte	0x54
 14503 738e 01       		.uleb128 0x1
 14504 738f 3A       		.byte	0x3a
 14505 7390 00       		.byte	0
 14506 7391 1B       		.uleb128 0x1b
 14507 7392 00000000 		.quad	.LVL94
 14507      00000000 
 14508 739a E3530000 		.long	0x53e3
 14509 739e A8730000 		.long	0x73a8
 14510 73a2 06       		.uleb128 0x6
 14511 73a3 01       		.uleb128 0x1
 14512 73a4 54       		.byte	0x54
 14513 73a5 01       		.uleb128 0x1
 14514 73a6 3A       		.byte	0x3a
 14515 73a7 00       		.byte	0
 14516 73a8 1B       		.uleb128 0x1b
 14517 73a9 00000000 		.quad	.LVL98
 14517      00000000 
 14518 73b1 E3530000 		.long	0x53e3
 14519 73b5 BF730000 		.long	0x73bf
 14520 73b9 06       		.uleb128 0x6
 14521 73ba 01       		.uleb128 0x1
 14522 73bb 54       		.byte	0x54
 14523 73bc 01       		.uleb128 0x1
 14524 73bd 3A       		.byte	0x3a
 14525 73be 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 381


 14526 73bf 0C       		.uleb128 0xc
 14527 73c0 00000000 		.quad	.LVL165
 14527      00000000 
 14528 73c8 90740000 		.long	0x7490
 14529 73cc 06       		.uleb128 0x6
 14530 73cd 01       		.uleb128 0x1
 14531 73ce 55       		.byte	0x55
 14532 73cf 02       		.uleb128 0x2
 14533 73d0 73       		.byte	0x73
 14534 73d1 00       		.sleb128 0
 14535 73d2 00       		.byte	0
 14536 73d3 00       		.byte	0
 14537 73d4 2C       		.uleb128 0x2c
 14538 73d5 5D300000 		.long	0x305d
 14539 73d9 EA730000 		.long	0x73ea
 14540 73dd 26       		.uleb128 0x26
 14541 73de 5F5F6E00 		.string	"__n"
 14542 73e2 06       		.byte	0x6
 14543 73e3 E8       		.byte	0xe8
 14544 73e4 0C       		.byte	0xc
 14545 73e5 ED000000 		.long	0xed
 14546 73e9 00       		.byte	0
 14547 73ea 0B       		.uleb128 0xb
 14548 73eb 9B2A0000 		.long	0x2a9b
 14549 73ef 0E       		.uleb128 0xe
 14550 73f0 EA730000 		.long	0x73ea
 14551 73f4 15       		.uleb128 0x15
 14552 73f5 B12A0000 		.long	0x2ab1
 14553 73f9 02740000 		.long	0x7402
 14554 73fd 03       		.byte	0x3
 14555 73fe 27740000 		.long	0x7427
 14556 7402 12       		.uleb128 0x12
 14557 7403 00000000 		.long	.LASF843
 14558 7407 EF730000 		.long	0x73ef
 14559 740b 36       		.uleb128 0x36
 14560 740c 00000000 		.long	.LASF864
 14561 7410 07       		.byte	0x7
 14562 7411 1003     		.value	0x310
 14563 7413 16       		.byte	0x16
 14564 7414 932F0000 		.long	0x2f93
 14565 7418 8D01     		.uleb128 0x8d
 14566 741a 00000000 		.long	.LASF865
 14567 741e 07       		.byte	0x7
 14568 741f 1203     		.value	0x312
 14569 7421 12       		.byte	0x12
 14570 7422 932F0000 		.long	0x2f93
 14571 7426 00       		.byte	0
 14572 7427 0B       		.uleb128 0xb
 14573 7428 F22A0000 		.long	0x2af2
 14574 742c 0E       		.uleb128 0xe
 14575 742d 27740000 		.long	0x7427
 14576 7431 15       		.uleb128 0x15
 14577 7432 D52A0000 		.long	0x2ad5
 14578 7436 3F740000 		.long	0x743f
 14579 743a 03       		.byte	0x3
 14580 743b 49740000 		.long	0x7449
 14581 743f 12       		.uleb128 0x12
GAS LISTING linobj/Ch02_03.s 			page 382


 14582 7440 00000000 		.long	.LASF843
 14583 7444 2C740000 		.long	0x742c
 14584 7448 00       		.byte	0
 14585 7449 2C       		.uleb128 0x2c
 14586 744a 77300000 		.long	0x3077
 14587 744e 6B740000 		.long	0x746b
 14588 7452 26       		.uleb128 0x26
 14589 7453 5F5F6100 		.string	"__a"
 14590 7457 07       		.byte	0x7
 14591 7458 BA       		.byte	0xba
 14592 7459 1A       		.byte	0x1a
 14593 745a 542A0000 		.long	0x2a54
 14594 745e 26       		.uleb128 0x26
 14595 745f 5F5F6200 		.string	"__b"
 14596 7463 07       		.byte	0x7
 14597 7464 BA       		.byte	0xba
 14598 7465 2C       		.byte	0x2c
 14599 7466 542A0000 		.long	0x2a54
 14600 746a 00       		.byte	0
 14601 746b 2C       		.uleb128 0x2c
 14602 746c 03080000 		.long	0x803
 14603 7470 82740000 		.long	0x7482
 14604 7474 2F       		.uleb128 0x2f
 14605 7475 5F5F7300 		.string	"__s"
 14606 7479 13       		.byte	0x13
 14607 747a 8101     		.value	0x181
 14608 747c 1F       		.byte	0x1f
 14609 747d 9A3F0000 		.long	0x3f9a
 14610 7481 00       		.byte	0
 14611 7482 18       		.uleb128 0x18
 14612 7483 10       		.byte	0x10
 14613 7484 05       		.byte	0x5
 14614 7485 00000000 		.long	.LASF866
 14615 7489 18       		.uleb128 0x18
 14616 748a 10       		.byte	0x10
 14617 748b 07       		.byte	0x7
 14618 748c 00000000 		.long	.LASF867
 14619 7490 8E01     		.uleb128 0x8e
 14620 7492 00000000 		.long	.LASF883
 14621 7496 00000000 		.long	.LASF884
 14622 749a 00       		.byte	0
 14623              		.section	.debug_abbrev,"",@progbits
 14624              	.Ldebug_abbrev0:
 14625 0000 01       		.uleb128 0x1
 14626 0001 05       		.uleb128 0x5
 14627 0002 00       		.byte	0
 14628 0003 49       		.uleb128 0x49
 14629 0004 13       		.uleb128 0x13
 14630 0005 00       		.byte	0
 14631 0006 00       		.byte	0
 14632 0007 02       		.uleb128 0x2
 14633 0008 05       		.uleb128 0x5
 14634 0009 00       		.byte	0
 14635 000a 49       		.uleb128 0x49
 14636 000b 13       		.uleb128 0x13
 14637 000c 34       		.uleb128 0x34
 14638 000d 19       		.uleb128 0x19
GAS LISTING linobj/Ch02_03.s 			page 383


 14639 000e 00       		.byte	0
 14640 000f 00       		.byte	0
 14641 0010 03       		.uleb128 0x3
 14642 0011 08       		.uleb128 0x8
 14643 0012 00       		.byte	0
 14644 0013 3A       		.uleb128 0x3a
 14645 0014 0B       		.uleb128 0xb
 14646 0015 3B       		.uleb128 0x3b
 14647 0016 0B       		.uleb128 0xb
 14648 0017 39       		.uleb128 0x39
 14649 0018 0B       		.uleb128 0xb
 14650 0019 18       		.uleb128 0x18
 14651 001a 13       		.uleb128 0x13
 14652 001b 00       		.byte	0
 14653 001c 00       		.byte	0
 14654 001d 04       		.uleb128 0x4
 14655 001e 2E       		.uleb128 0x2e
 14656 001f 01       		.byte	0x1
 14657 0020 3F       		.uleb128 0x3f
 14658 0021 19       		.uleb128 0x19
 14659 0022 03       		.uleb128 0x3
 14660 0023 0E       		.uleb128 0xe
 14661 0024 3A       		.uleb128 0x3a
 14662 0025 0B       		.uleb128 0xb
 14663 0026 3B       		.uleb128 0x3b
 14664 0027 05       		.uleb128 0x5
 14665 0028 39       		.uleb128 0x39
 14666 0029 0B       		.uleb128 0xb
 14667 002a 6E       		.uleb128 0x6e
 14668 002b 0E       		.uleb128 0xe
 14669 002c 49       		.uleb128 0x49
 14670 002d 13       		.uleb128 0x13
 14671 002e 32       		.uleb128 0x32
 14672 002f 21       		.uleb128 0x21
 14673 0030 01       		.sleb128 1
 14674 0031 3C       		.uleb128 0x3c
 14675 0032 19       		.uleb128 0x19
 14676 0033 64       		.uleb128 0x64
 14677 0034 13       		.uleb128 0x13
 14678 0035 01       		.uleb128 0x1
 14679 0036 13       		.uleb128 0x13
 14680 0037 00       		.byte	0
 14681 0038 00       		.byte	0
 14682 0039 05       		.uleb128 0x5
 14683 003a 05       		.uleb128 0x5
 14684 003b 00       		.byte	0
 14685 003c 31       		.uleb128 0x31
 14686 003d 13       		.uleb128 0x13
 14687 003e 02       		.uleb128 0x2
 14688 003f 17       		.uleb128 0x17
 14689 0040 B742     		.uleb128 0x2137
 14690 0042 17       		.uleb128 0x17
 14691 0043 00       		.byte	0
 14692 0044 00       		.byte	0
 14693 0045 06       		.uleb128 0x6
 14694 0046 49       		.uleb128 0x49
 14695 0047 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 384


 14696 0048 02       		.uleb128 0x2
 14697 0049 18       		.uleb128 0x18
 14698 004a 7E       		.uleb128 0x7e
 14699 004b 18       		.uleb128 0x18
 14700 004c 00       		.byte	0
 14701 004d 00       		.byte	0
 14702 004e 07       		.uleb128 0x7
 14703 004f 16       		.uleb128 0x16
 14704 0050 00       		.byte	0
 14705 0051 03       		.uleb128 0x3
 14706 0052 0E       		.uleb128 0xe
 14707 0053 3A       		.uleb128 0x3a
 14708 0054 0B       		.uleb128 0xb
 14709 0055 3B       		.uleb128 0x3b
 14710 0056 0B       		.uleb128 0xb
 14711 0057 39       		.uleb128 0x39
 14712 0058 0B       		.uleb128 0xb
 14713 0059 49       		.uleb128 0x49
 14714 005a 13       		.uleb128 0x13
 14715 005b 00       		.byte	0
 14716 005c 00       		.byte	0
 14717 005d 08       		.uleb128 0x8
 14718 005e 0D       		.uleb128 0xd
 14719 005f 00       		.byte	0
 14720 0060 03       		.uleb128 0x3
 14721 0061 0E       		.uleb128 0xe
 14722 0062 3A       		.uleb128 0x3a
 14723 0063 0B       		.uleb128 0xb
 14724 0064 3B       		.uleb128 0x3b
 14725 0065 0B       		.uleb128 0xb
 14726 0066 39       		.uleb128 0x39
 14727 0067 0B       		.uleb128 0xb
 14728 0068 49       		.uleb128 0x49
 14729 0069 13       		.uleb128 0x13
 14730 006a 38       		.uleb128 0x38
 14731 006b 0B       		.uleb128 0xb
 14732 006c 00       		.byte	0
 14733 006d 00       		.byte	0
 14734 006e 09       		.uleb128 0x9
 14735 006f 05       		.uleb128 0x5
 14736 0070 00       		.byte	0
 14737 0071 31       		.uleb128 0x31
 14738 0072 13       		.uleb128 0x13
 14739 0073 00       		.byte	0
 14740 0074 00       		.byte	0
 14741 0075 0A       		.uleb128 0xa
 14742 0076 2E       		.uleb128 0x2e
 14743 0077 01       		.byte	0x1
 14744 0078 3F       		.uleb128 0x3f
 14745 0079 19       		.uleb128 0x19
 14746 007a 03       		.uleb128 0x3
 14747 007b 0E       		.uleb128 0xe
 14748 007c 3A       		.uleb128 0x3a
 14749 007d 0B       		.uleb128 0xb
 14750 007e 3B       		.uleb128 0x3b
 14751 007f 05       		.uleb128 0x5
 14752 0080 39       		.uleb128 0x39
GAS LISTING linobj/Ch02_03.s 			page 385


 14753 0081 0B       		.uleb128 0xb
 14754 0082 49       		.uleb128 0x49
 14755 0083 13       		.uleb128 0x13
 14756 0084 3C       		.uleb128 0x3c
 14757 0085 19       		.uleb128 0x19
 14758 0086 01       		.uleb128 0x1
 14759 0087 13       		.uleb128 0x13
 14760 0088 00       		.byte	0
 14761 0089 00       		.byte	0
 14762 008a 0B       		.uleb128 0xb
 14763 008b 0F       		.uleb128 0xf
 14764 008c 00       		.byte	0
 14765 008d 0B       		.uleb128 0xb
 14766 008e 21       		.uleb128 0x21
 14767 008f 08       		.sleb128 8
 14768 0090 49       		.uleb128 0x49
 14769 0091 13       		.uleb128 0x13
 14770 0092 00       		.byte	0
 14771 0093 00       		.byte	0
 14772 0094 0C       		.uleb128 0xc
 14773 0095 48       		.uleb128 0x48
 14774 0096 01       		.byte	0x1
 14775 0097 7D       		.uleb128 0x7d
 14776 0098 01       		.uleb128 0x1
 14777 0099 7F       		.uleb128 0x7f
 14778 009a 13       		.uleb128 0x13
 14779 009b 00       		.byte	0
 14780 009c 00       		.byte	0
 14781 009d 0D       		.uleb128 0xd
 14782 009e 1D       		.uleb128 0x1d
 14783 009f 01       		.byte	0x1
 14784 00a0 31       		.uleb128 0x31
 14785 00a1 13       		.uleb128 0x13
 14786 00a2 52       		.uleb128 0x52
 14787 00a3 01       		.uleb128 0x1
 14788 00a4 B842     		.uleb128 0x2138
 14789 00a6 05       		.uleb128 0x5
 14790 00a7 55       		.uleb128 0x55
 14791 00a8 17       		.uleb128 0x17
 14792 00a9 58       		.uleb128 0x58
 14793 00aa 21       		.uleb128 0x21
 14794 00ab 01       		.sleb128 1
 14795 00ac 59       		.uleb128 0x59
 14796 00ad 0B       		.uleb128 0xb
 14797 00ae 57       		.uleb128 0x57
 14798 00af 0B       		.uleb128 0xb
 14799 00b0 01       		.uleb128 0x1
 14800 00b1 13       		.uleb128 0x13
 14801 00b2 00       		.byte	0
 14802 00b3 00       		.byte	0
 14803 00b4 0E       		.uleb128 0xe
 14804 00b5 26       		.uleb128 0x26
 14805 00b6 00       		.byte	0
 14806 00b7 49       		.uleb128 0x49
 14807 00b8 13       		.uleb128 0x13
 14808 00b9 00       		.byte	0
 14809 00ba 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 386


 14810 00bb 0F       		.uleb128 0xf
 14811 00bc 2E       		.uleb128 0x2e
 14812 00bd 01       		.byte	0x1
 14813 00be 3F       		.uleb128 0x3f
 14814 00bf 19       		.uleb128 0x19
 14815 00c0 03       		.uleb128 0x3
 14816 00c1 0E       		.uleb128 0xe
 14817 00c2 3A       		.uleb128 0x3a
 14818 00c3 0B       		.uleb128 0xb
 14819 00c4 3B       		.uleb128 0x3b
 14820 00c5 0B       		.uleb128 0xb
 14821 00c6 39       		.uleb128 0x39
 14822 00c7 0B       		.uleb128 0xb
 14823 00c8 49       		.uleb128 0x49
 14824 00c9 13       		.uleb128 0x13
 14825 00ca 3C       		.uleb128 0x3c
 14826 00cb 19       		.uleb128 0x19
 14827 00cc 01       		.uleb128 0x1
 14828 00cd 13       		.uleb128 0x13
 14829 00ce 00       		.byte	0
 14830 00cf 00       		.byte	0
 14831 00d0 10       		.uleb128 0x10
 14832 00d1 2E       		.uleb128 0x2e
 14833 00d2 01       		.byte	0x1
 14834 00d3 3F       		.uleb128 0x3f
 14835 00d4 19       		.uleb128 0x19
 14836 00d5 03       		.uleb128 0x3
 14837 00d6 0E       		.uleb128 0xe
 14838 00d7 3A       		.uleb128 0x3a
 14839 00d8 0B       		.uleb128 0xb
 14840 00d9 3B       		.uleb128 0x3b
 14841 00da 05       		.uleb128 0x5
 14842 00db 39       		.uleb128 0x39
 14843 00dc 0B       		.uleb128 0xb
 14844 00dd 6E       		.uleb128 0x6e
 14845 00de 0E       		.uleb128 0xe
 14846 00df 49       		.uleb128 0x49
 14847 00e0 13       		.uleb128 0x13
 14848 00e1 3C       		.uleb128 0x3c
 14849 00e2 19       		.uleb128 0x19
 14850 00e3 01       		.uleb128 0x1
 14851 00e4 13       		.uleb128 0x13
 14852 00e5 00       		.byte	0
 14853 00e6 00       		.byte	0
 14854 00e7 11       		.uleb128 0x11
 14855 00e8 2F       		.uleb128 0x2f
 14856 00e9 00       		.byte	0
 14857 00ea 03       		.uleb128 0x3
 14858 00eb 0E       		.uleb128 0xe
 14859 00ec 49       		.uleb128 0x49
 14860 00ed 13       		.uleb128 0x13
 14861 00ee 00       		.byte	0
 14862 00ef 00       		.byte	0
 14863 00f0 12       		.uleb128 0x12
 14864 00f1 05       		.uleb128 0x5
 14865 00f2 00       		.byte	0
 14866 00f3 03       		.uleb128 0x3
GAS LISTING linobj/Ch02_03.s 			page 387


 14867 00f4 0E       		.uleb128 0xe
 14868 00f5 49       		.uleb128 0x49
 14869 00f6 13       		.uleb128 0x13
 14870 00f7 34       		.uleb128 0x34
 14871 00f8 19       		.uleb128 0x19
 14872 00f9 00       		.byte	0
 14873 00fa 00       		.byte	0
 14874 00fb 13       		.uleb128 0x13
 14875 00fc 10       		.uleb128 0x10
 14876 00fd 00       		.byte	0
 14877 00fe 0B       		.uleb128 0xb
 14878 00ff 21       		.uleb128 0x21
 14879 0100 08       		.sleb128 8
 14880 0101 49       		.uleb128 0x49
 14881 0102 13       		.uleb128 0x13
 14882 0103 00       		.byte	0
 14883 0104 00       		.byte	0
 14884 0105 14       		.uleb128 0x14
 14885 0106 1D       		.uleb128 0x1d
 14886 0107 01       		.byte	0x1
 14887 0108 31       		.uleb128 0x31
 14888 0109 13       		.uleb128 0x13
 14889 010a 52       		.uleb128 0x52
 14890 010b 01       		.uleb128 0x1
 14891 010c B842     		.uleb128 0x2138
 14892 010e 05       		.uleb128 0x5
 14893 010f 11       		.uleb128 0x11
 14894 0110 01       		.uleb128 0x1
 14895 0111 12       		.uleb128 0x12
 14896 0112 07       		.uleb128 0x7
 14897 0113 58       		.uleb128 0x58
 14898 0114 21       		.uleb128 0x21
 14899 0115 01       		.sleb128 1
 14900 0116 59       		.uleb128 0x59
 14901 0117 0B       		.uleb128 0xb
 14902 0118 57       		.uleb128 0x57
 14903 0119 0B       		.uleb128 0xb
 14904 011a 01       		.uleb128 0x1
 14905 011b 13       		.uleb128 0x13
 14906 011c 00       		.byte	0
 14907 011d 00       		.byte	0
 14908 011e 15       		.uleb128 0x15
 14909 011f 2E       		.uleb128 0x2e
 14910 0120 01       		.byte	0x1
 14911 0121 47       		.uleb128 0x47
 14912 0122 13       		.uleb128 0x13
 14913 0123 64       		.uleb128 0x64
 14914 0124 13       		.uleb128 0x13
 14915 0125 20       		.uleb128 0x20
 14916 0126 0B       		.uleb128 0xb
 14917 0127 01       		.uleb128 0x1
 14918 0128 13       		.uleb128 0x13
 14919 0129 00       		.byte	0
 14920 012a 00       		.byte	0
 14921 012b 16       		.uleb128 0x16
 14922 012c 2E       		.uleb128 0x2e
 14923 012d 01       		.byte	0x1
GAS LISTING linobj/Ch02_03.s 			page 388


 14924 012e 3F       		.uleb128 0x3f
 14925 012f 19       		.uleb128 0x19
 14926 0130 03       		.uleb128 0x3
 14927 0131 0E       		.uleb128 0xe
 14928 0132 3A       		.uleb128 0x3a
 14929 0133 0B       		.uleb128 0xb
 14930 0134 3B       		.uleb128 0x3b
 14931 0135 05       		.uleb128 0x5
 14932 0136 39       		.uleb128 0x39
 14933 0137 0B       		.uleb128 0xb
 14934 0138 6E       		.uleb128 0x6e
 14935 0139 0E       		.uleb128 0xe
 14936 013a 32       		.uleb128 0x32
 14937 013b 21       		.uleb128 0x21
 14938 013c 01       		.sleb128 1
 14939 013d 3C       		.uleb128 0x3c
 14940 013e 19       		.uleb128 0x19
 14941 013f 64       		.uleb128 0x64
 14942 0140 13       		.uleb128 0x13
 14943 0141 01       		.uleb128 0x1
 14944 0142 13       		.uleb128 0x13
 14945 0143 00       		.byte	0
 14946 0144 00       		.byte	0
 14947 0145 17       		.uleb128 0x17
 14948 0146 16       		.uleb128 0x16
 14949 0147 00       		.byte	0
 14950 0148 03       		.uleb128 0x3
 14951 0149 0E       		.uleb128 0xe
 14952 014a 3A       		.uleb128 0x3a
 14953 014b 0B       		.uleb128 0xb
 14954 014c 3B       		.uleb128 0x3b
 14955 014d 0B       		.uleb128 0xb
 14956 014e 39       		.uleb128 0x39
 14957 014f 0B       		.uleb128 0xb
 14958 0150 49       		.uleb128 0x49
 14959 0151 13       		.uleb128 0x13
 14960 0152 32       		.uleb128 0x32
 14961 0153 0B       		.uleb128 0xb
 14962 0154 00       		.byte	0
 14963 0155 00       		.byte	0
 14964 0156 18       		.uleb128 0x18
 14965 0157 24       		.uleb128 0x24
 14966 0158 00       		.byte	0
 14967 0159 0B       		.uleb128 0xb
 14968 015a 0B       		.uleb128 0xb
 14969 015b 3E       		.uleb128 0x3e
 14970 015c 0B       		.uleb128 0xb
 14971 015d 03       		.uleb128 0x3
 14972 015e 0E       		.uleb128 0xe
 14973 015f 00       		.byte	0
 14974 0160 00       		.byte	0
 14975 0161 19       		.uleb128 0x19
 14976 0162 2E       		.uleb128 0x2e
 14977 0163 01       		.byte	0x1
 14978 0164 3F       		.uleb128 0x3f
 14979 0165 19       		.uleb128 0x19
 14980 0166 03       		.uleb128 0x3
GAS LISTING linobj/Ch02_03.s 			page 389


 14981 0167 0E       		.uleb128 0xe
 14982 0168 3A       		.uleb128 0x3a
 14983 0169 0B       		.uleb128 0xb
 14984 016a 3B       		.uleb128 0x3b
 14985 016b 0B       		.uleb128 0xb
 14986 016c 39       		.uleb128 0x39
 14987 016d 0B       		.uleb128 0xb
 14988 016e 6E       		.uleb128 0x6e
 14989 016f 0E       		.uleb128 0xe
 14990 0170 49       		.uleb128 0x49
 14991 0171 13       		.uleb128 0x13
 14992 0172 3C       		.uleb128 0x3c
 14993 0173 19       		.uleb128 0x19
 14994 0174 01       		.uleb128 0x1
 14995 0175 13       		.uleb128 0x13
 14996 0176 00       		.byte	0
 14997 0177 00       		.byte	0
 14998 0178 1A       		.uleb128 0x1a
 14999 0179 2E       		.uleb128 0x2e
 15000 017a 01       		.byte	0x1
 15001 017b 3F       		.uleb128 0x3f
 15002 017c 19       		.uleb128 0x19
 15003 017d 03       		.uleb128 0x3
 15004 017e 0E       		.uleb128 0xe
 15005 017f 3A       		.uleb128 0x3a
 15006 0180 0B       		.uleb128 0xb
 15007 0181 3B       		.uleb128 0x3b
 15008 0182 0B       		.uleb128 0xb
 15009 0183 39       		.uleb128 0x39
 15010 0184 0B       		.uleb128 0xb
 15011 0185 6E       		.uleb128 0x6e
 15012 0186 0E       		.uleb128 0xe
 15013 0187 49       		.uleb128 0x49
 15014 0188 13       		.uleb128 0x13
 15015 0189 3C       		.uleb128 0x3c
 15016 018a 19       		.uleb128 0x19
 15017 018b 64       		.uleb128 0x64
 15018 018c 13       		.uleb128 0x13
 15019 018d 01       		.uleb128 0x1
 15020 018e 13       		.uleb128 0x13
 15021 018f 00       		.byte	0
 15022 0190 00       		.byte	0
 15023 0191 1B       		.uleb128 0x1b
 15024 0192 48       		.uleb128 0x48
 15025 0193 01       		.byte	0x1
 15026 0194 7D       		.uleb128 0x7d
 15027 0195 01       		.uleb128 0x1
 15028 0196 7F       		.uleb128 0x7f
 15029 0197 13       		.uleb128 0x13
 15030 0198 01       		.uleb128 0x1
 15031 0199 13       		.uleb128 0x13
 15032 019a 00       		.byte	0
 15033 019b 00       		.byte	0
 15034 019c 1C       		.uleb128 0x1c
 15035 019d 21       		.uleb128 0x21
 15036 019e 00       		.byte	0
 15037 019f 49       		.uleb128 0x49
GAS LISTING linobj/Ch02_03.s 			page 390


 15038 01a0 13       		.uleb128 0x13
 15039 01a1 2F       		.uleb128 0x2f
 15040 01a2 0B       		.uleb128 0xb
 15041 01a3 00       		.byte	0
 15042 01a4 00       		.byte	0
 15043 01a5 1D       		.uleb128 0x1d
 15044 01a6 2E       		.uleb128 0x2e
 15045 01a7 01       		.byte	0x1
 15046 01a8 3F       		.uleb128 0x3f
 15047 01a9 19       		.uleb128 0x19
 15048 01aa 03       		.uleb128 0x3
 15049 01ab 0E       		.uleb128 0xe
 15050 01ac 3A       		.uleb128 0x3a
 15051 01ad 0B       		.uleb128 0xb
 15052 01ae 3B       		.uleb128 0x3b
 15053 01af 0B       		.uleb128 0xb
 15054 01b0 39       		.uleb128 0x39
 15055 01b1 0B       		.uleb128 0xb
 15056 01b2 6E       		.uleb128 0x6e
 15057 01b3 0E       		.uleb128 0xe
 15058 01b4 32       		.uleb128 0x32
 15059 01b5 21       		.uleb128 0x21
 15060 01b6 01       		.sleb128 1
 15061 01b7 3C       		.uleb128 0x3c
 15062 01b8 19       		.uleb128 0x19
 15063 01b9 64       		.uleb128 0x64
 15064 01ba 13       		.uleb128 0x13
 15065 01bb 01       		.uleb128 0x1
 15066 01bc 13       		.uleb128 0x13
 15067 01bd 00       		.byte	0
 15068 01be 00       		.byte	0
 15069 01bf 1E       		.uleb128 0x1e
 15070 01c0 2E       		.uleb128 0x2e
 15071 01c1 01       		.byte	0x1
 15072 01c2 3F       		.uleb128 0x3f
 15073 01c3 19       		.uleb128 0x19
 15074 01c4 03       		.uleb128 0x3
 15075 01c5 0E       		.uleb128 0xe
 15076 01c6 3A       		.uleb128 0x3a
 15077 01c7 0B       		.uleb128 0xb
 15078 01c8 3B       		.uleb128 0x3b
 15079 01c9 0B       		.uleb128 0xb
 15080 01ca 39       		.uleb128 0x39
 15081 01cb 0B       		.uleb128 0xb
 15082 01cc 6E       		.uleb128 0x6e
 15083 01cd 0E       		.uleb128 0xe
 15084 01ce 49       		.uleb128 0x49
 15085 01cf 13       		.uleb128 0x13
 15086 01d0 32       		.uleb128 0x32
 15087 01d1 0B       		.uleb128 0xb
 15088 01d2 3C       		.uleb128 0x3c
 15089 01d3 19       		.uleb128 0x19
 15090 01d4 64       		.uleb128 0x64
 15091 01d5 13       		.uleb128 0x13
 15092 01d6 01       		.uleb128 0x1
 15093 01d7 13       		.uleb128 0x13
 15094 01d8 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 391


 15095 01d9 00       		.byte	0
 15096 01da 1F       		.uleb128 0x1f
 15097 01db 34       		.uleb128 0x34
 15098 01dc 00       		.byte	0
 15099 01dd 03       		.uleb128 0x3
 15100 01de 08       		.uleb128 0x8
 15101 01df 3A       		.uleb128 0x3a
 15102 01e0 21       		.uleb128 0x21
 15103 01e1 01       		.sleb128 1
 15104 01e2 3B       		.uleb128 0x3b
 15105 01e3 0B       		.uleb128 0xb
 15106 01e4 39       		.uleb128 0x39
 15107 01e5 0B       		.uleb128 0xb
 15108 01e6 49       		.uleb128 0x49
 15109 01e7 13       		.uleb128 0x13
 15110 01e8 00       		.byte	0
 15111 01e9 00       		.byte	0
 15112 01ea 20       		.uleb128 0x20
 15113 01eb 0D       		.uleb128 0xd
 15114 01ec 00       		.byte	0
 15115 01ed 03       		.uleb128 0x3
 15116 01ee 0E       		.uleb128 0xe
 15117 01ef 3A       		.uleb128 0x3a
 15118 01f0 0B       		.uleb128 0xb
 15119 01f1 3B       		.uleb128 0x3b
 15120 01f2 0B       		.uleb128 0xb
 15121 01f3 39       		.uleb128 0x39
 15122 01f4 0B       		.uleb128 0xb
 15123 01f5 49       		.uleb128 0x49
 15124 01f6 13       		.uleb128 0x13
 15125 01f7 00       		.byte	0
 15126 01f8 00       		.byte	0
 15127 01f9 21       		.uleb128 0x21
 15128 01fa 01       		.uleb128 0x1
 15129 01fb 01       		.byte	0x1
 15130 01fc 49       		.uleb128 0x49
 15131 01fd 13       		.uleb128 0x13
 15132 01fe 01       		.uleb128 0x1
 15133 01ff 13       		.uleb128 0x13
 15134 0200 00       		.byte	0
 15135 0201 00       		.byte	0
 15136 0202 22       		.uleb128 0x22
 15137 0203 0B       		.uleb128 0xb
 15138 0204 01       		.byte	0x1
 15139 0205 55       		.uleb128 0x55
 15140 0206 17       		.uleb128 0x17
 15141 0207 00       		.byte	0
 15142 0208 00       		.byte	0
 15143 0209 23       		.uleb128 0x23
 15144 020a 08       		.uleb128 0x8
 15145 020b 00       		.byte	0
 15146 020c 3A       		.uleb128 0x3a
 15147 020d 0B       		.uleb128 0xb
 15148 020e 3B       		.uleb128 0x3b
 15149 020f 05       		.uleb128 0x5
 15150 0210 39       		.uleb128 0x39
 15151 0211 0B       		.uleb128 0xb
GAS LISTING linobj/Ch02_03.s 			page 392


 15152 0212 18       		.uleb128 0x18
 15153 0213 13       		.uleb128 0x13
 15154 0214 00       		.byte	0
 15155 0215 00       		.byte	0
 15156 0216 24       		.uleb128 0x24
 15157 0217 16       		.uleb128 0x16
 15158 0218 00       		.byte	0
 15159 0219 03       		.uleb128 0x3
 15160 021a 0E       		.uleb128 0xe
 15161 021b 3A       		.uleb128 0x3a
 15162 021c 0B       		.uleb128 0xb
 15163 021d 3B       		.uleb128 0x3b
 15164 021e 05       		.uleb128 0x5
 15165 021f 39       		.uleb128 0x39
 15166 0220 0B       		.uleb128 0xb
 15167 0221 49       		.uleb128 0x49
 15168 0222 13       		.uleb128 0x13
 15169 0223 00       		.byte	0
 15170 0224 00       		.byte	0
 15171 0225 25       		.uleb128 0x25
 15172 0226 13       		.uleb128 0x13
 15173 0227 01       		.byte	0x1
 15174 0228 03       		.uleb128 0x3
 15175 0229 0E       		.uleb128 0xe
 15176 022a 0B       		.uleb128 0xb
 15177 022b 0B       		.uleb128 0xb
 15178 022c 3A       		.uleb128 0x3a
 15179 022d 0B       		.uleb128 0xb
 15180 022e 3B       		.uleb128 0x3b
 15181 022f 0B       		.uleb128 0xb
 15182 0230 39       		.uleb128 0x39
 15183 0231 0B       		.uleb128 0xb
 15184 0232 01       		.uleb128 0x1
 15185 0233 13       		.uleb128 0x13
 15186 0234 00       		.byte	0
 15187 0235 00       		.byte	0
 15188 0236 26       		.uleb128 0x26
 15189 0237 05       		.uleb128 0x5
 15190 0238 00       		.byte	0
 15191 0239 03       		.uleb128 0x3
 15192 023a 08       		.uleb128 0x8
 15193 023b 3A       		.uleb128 0x3a
 15194 023c 0B       		.uleb128 0xb
 15195 023d 3B       		.uleb128 0x3b
 15196 023e 0B       		.uleb128 0xb
 15197 023f 39       		.uleb128 0x39
 15198 0240 0B       		.uleb128 0xb
 15199 0241 49       		.uleb128 0x49
 15200 0242 13       		.uleb128 0x13
 15201 0243 00       		.byte	0
 15202 0244 00       		.byte	0
 15203 0245 27       		.uleb128 0x27
 15204 0246 1D       		.uleb128 0x1d
 15205 0247 01       		.byte	0x1
 15206 0248 31       		.uleb128 0x31
 15207 0249 13       		.uleb128 0x13
 15208 024a 52       		.uleb128 0x52
GAS LISTING linobj/Ch02_03.s 			page 393


 15209 024b 01       		.uleb128 0x1
 15210 024c B842     		.uleb128 0x2138
 15211 024e 05       		.uleb128 0x5
 15212 024f 11       		.uleb128 0x11
 15213 0250 01       		.uleb128 0x1
 15214 0251 12       		.uleb128 0x12
 15215 0252 07       		.uleb128 0x7
 15216 0253 58       		.uleb128 0x58
 15217 0254 0B       		.uleb128 0xb
 15218 0255 59       		.uleb128 0x59
 15219 0256 05       		.uleb128 0x5
 15220 0257 57       		.uleb128 0x57
 15221 0258 0B       		.uleb128 0xb
 15222 0259 01       		.uleb128 0x1
 15223 025a 13       		.uleb128 0x13
 15224 025b 00       		.byte	0
 15225 025c 00       		.byte	0
 15226 025d 28       		.uleb128 0x28
 15227 025e 34       		.uleb128 0x34
 15228 025f 00       		.byte	0
 15229 0260 31       		.uleb128 0x31
 15230 0261 13       		.uleb128 0x13
 15231 0262 02       		.uleb128 0x2
 15232 0263 17       		.uleb128 0x17
 15233 0264 B742     		.uleb128 0x2137
 15234 0266 17       		.uleb128 0x17
 15235 0267 00       		.byte	0
 15236 0268 00       		.byte	0
 15237 0269 29       		.uleb128 0x29
 15238 026a 2E       		.uleb128 0x2e
 15239 026b 01       		.byte	0x1
 15240 026c 3F       		.uleb128 0x3f
 15241 026d 19       		.uleb128 0x19
 15242 026e 03       		.uleb128 0x3
 15243 026f 0E       		.uleb128 0xe
 15244 0270 3A       		.uleb128 0x3a
 15245 0271 21       		.uleb128 0x21
 15246 0272 04       		.sleb128 4
 15247 0273 3B       		.uleb128 0x3b
 15248 0274 05       		.uleb128 0x5
 15249 0275 39       		.uleb128 0x39
 15250 0276 21       		.uleb128 0x21
 15251 0277 07       		.sleb128 7
 15252 0278 6E       		.uleb128 0x6e
 15253 0279 0E       		.uleb128 0xe
 15254 027a 49       		.uleb128 0x49
 15255 027b 13       		.uleb128 0x13
 15256 027c 3C       		.uleb128 0x3c
 15257 027d 19       		.uleb128 0x19
 15258 027e 64       		.uleb128 0x64
 15259 027f 13       		.uleb128 0x13
 15260 0280 01       		.uleb128 0x1
 15261 0281 13       		.uleb128 0x13
 15262 0282 00       		.byte	0
 15263 0283 00       		.byte	0
 15264 0284 2A       		.uleb128 0x2a
 15265 0285 1D       		.uleb128 0x1d
GAS LISTING linobj/Ch02_03.s 			page 394


 15266 0286 01       		.byte	0x1
 15267 0287 31       		.uleb128 0x31
 15268 0288 13       		.uleb128 0x13
 15269 0289 52       		.uleb128 0x52
 15270 028a 01       		.uleb128 0x1
 15271 028b B842     		.uleb128 0x2138
 15272 028d 05       		.uleb128 0x5
 15273 028e 55       		.uleb128 0x55
 15274 028f 17       		.uleb128 0x17
 15275 0290 58       		.uleb128 0x58
 15276 0291 21       		.uleb128 0x21
 15277 0292 06       		.sleb128 6
 15278 0293 59       		.uleb128 0x59
 15279 0294 21       		.uleb128 0x21
 15280 0295 F701     		.sleb128 247
 15281 0297 57       		.uleb128 0x57
 15282 0298 21       		.uleb128 0x21
 15283 0299 11       		.sleb128 17
 15284 029a 00       		.byte	0
 15285 029b 00       		.byte	0
 15286 029c 2B       		.uleb128 0x2b
 15287 029d 2E       		.uleb128 0x2e
 15288 029e 01       		.byte	0x1
 15289 029f 3F       		.uleb128 0x3f
 15290 02a0 19       		.uleb128 0x19
 15291 02a1 03       		.uleb128 0x3
 15292 02a2 0E       		.uleb128 0xe
 15293 02a3 3A       		.uleb128 0x3a
 15294 02a4 21       		.uleb128 0x21
 15295 02a5 04       		.sleb128 4
 15296 02a6 3B       		.uleb128 0x3b
 15297 02a7 05       		.uleb128 0x5
 15298 02a8 39       		.uleb128 0x39
 15299 02a9 21       		.uleb128 0x21
 15300 02aa 07       		.sleb128 7
 15301 02ab 6E       		.uleb128 0x6e
 15302 02ac 0E       		.uleb128 0xe
 15303 02ad 3C       		.uleb128 0x3c
 15304 02ae 19       		.uleb128 0x19
 15305 02af 64       		.uleb128 0x64
 15306 02b0 13       		.uleb128 0x13
 15307 02b1 01       		.uleb128 0x1
 15308 02b2 13       		.uleb128 0x13
 15309 02b3 00       		.byte	0
 15310 02b4 00       		.byte	0
 15311 02b5 2C       		.uleb128 0x2c
 15312 02b6 2E       		.uleb128 0x2e
 15313 02b7 01       		.byte	0x1
 15314 02b8 47       		.uleb128 0x47
 15315 02b9 13       		.uleb128 0x13
 15316 02ba 20       		.uleb128 0x20
 15317 02bb 21       		.uleb128 0x21
 15318 02bc 03       		.sleb128 3
 15319 02bd 01       		.uleb128 0x1
 15320 02be 13       		.uleb128 0x13
 15321 02bf 00       		.byte	0
 15322 02c0 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 395


 15323 02c1 2D       		.uleb128 0x2d
 15324 02c2 2E       		.uleb128 0x2e
 15325 02c3 01       		.byte	0x1
 15326 02c4 31       		.uleb128 0x31
 15327 02c5 13       		.uleb128 0x13
 15328 02c6 6E       		.uleb128 0x6e
 15329 02c7 0E       		.uleb128 0xe
 15330 02c8 64       		.uleb128 0x64
 15331 02c9 13       		.uleb128 0x13
 15332 02ca 01       		.uleb128 0x1
 15333 02cb 13       		.uleb128 0x13
 15334 02cc 00       		.byte	0
 15335 02cd 00       		.byte	0
 15336 02ce 2E       		.uleb128 0x2e
 15337 02cf 2E       		.uleb128 0x2e
 15338 02d0 01       		.byte	0x1
 15339 02d1 3F       		.uleb128 0x3f
 15340 02d2 19       		.uleb128 0x19
 15341 02d3 03       		.uleb128 0x3
 15342 02d4 0E       		.uleb128 0xe
 15343 02d5 3A       		.uleb128 0x3a
 15344 02d6 0B       		.uleb128 0xb
 15345 02d7 3B       		.uleb128 0x3b
 15346 02d8 05       		.uleb128 0x5
 15347 02d9 39       		.uleb128 0x39
 15348 02da 21       		.uleb128 0x21
 15349 02db 07       		.sleb128 7
 15350 02dc 6E       		.uleb128 0x6e
 15351 02dd 0E       		.uleb128 0xe
 15352 02de 3C       		.uleb128 0x3c
 15353 02df 19       		.uleb128 0x19
 15354 02e0 01       		.uleb128 0x1
 15355 02e1 13       		.uleb128 0x13
 15356 02e2 00       		.byte	0
 15357 02e3 00       		.byte	0
 15358 02e4 2F       		.uleb128 0x2f
 15359 02e5 05       		.uleb128 0x5
 15360 02e6 00       		.byte	0
 15361 02e7 03       		.uleb128 0x3
 15362 02e8 08       		.uleb128 0x8
 15363 02e9 3A       		.uleb128 0x3a
 15364 02ea 0B       		.uleb128 0xb
 15365 02eb 3B       		.uleb128 0x3b
 15366 02ec 05       		.uleb128 0x5
 15367 02ed 39       		.uleb128 0x39
 15368 02ee 0B       		.uleb128 0xb
 15369 02ef 49       		.uleb128 0x49
 15370 02f0 13       		.uleb128 0x13
 15371 02f1 00       		.byte	0
 15372 02f2 00       		.byte	0
 15373 02f3 30       		.uleb128 0x30
 15374 02f4 34       		.uleb128 0x34
 15375 02f5 00       		.byte	0
 15376 02f6 31       		.uleb128 0x31
 15377 02f7 13       		.uleb128 0x13
 15378 02f8 02       		.uleb128 0x2
 15379 02f9 18       		.uleb128 0x18
GAS LISTING linobj/Ch02_03.s 			page 396


 15380 02fa 00       		.byte	0
 15381 02fb 00       		.byte	0
 15382 02fc 31       		.uleb128 0x31
 15383 02fd 2E       		.uleb128 0x2e
 15384 02fe 01       		.byte	0x1
 15385 02ff 3F       		.uleb128 0x3f
 15386 0300 19       		.uleb128 0x19
 15387 0301 03       		.uleb128 0x3
 15388 0302 0E       		.uleb128 0xe
 15389 0303 3A       		.uleb128 0x3a
 15390 0304 0B       		.uleb128 0xb
 15391 0305 3B       		.uleb128 0x3b
 15392 0306 0B       		.uleb128 0xb
 15393 0307 39       		.uleb128 0x39
 15394 0308 0B       		.uleb128 0xb
 15395 0309 6E       		.uleb128 0x6e
 15396 030a 0E       		.uleb128 0xe
 15397 030b 3C       		.uleb128 0x3c
 15398 030c 19       		.uleb128 0x19
 15399 030d 64       		.uleb128 0x64
 15400 030e 13       		.uleb128 0x13
 15401 030f 01       		.uleb128 0x1
 15402 0310 13       		.uleb128 0x13
 15403 0311 00       		.byte	0
 15404 0312 00       		.byte	0
 15405 0313 32       		.uleb128 0x32
 15406 0314 1D       		.uleb128 0x1d
 15407 0315 01       		.byte	0x1
 15408 0316 31       		.uleb128 0x31
 15409 0317 13       		.uleb128 0x13
 15410 0318 52       		.uleb128 0x52
 15411 0319 01       		.uleb128 0x1
 15412 031a B842     		.uleb128 0x2138
 15413 031c 05       		.uleb128 0x5
 15414 031d 11       		.uleb128 0x11
 15415 031e 01       		.uleb128 0x1
 15416 031f 12       		.uleb128 0x12
 15417 0320 07       		.uleb128 0x7
 15418 0321 58       		.uleb128 0x58
 15419 0322 0B       		.uleb128 0xb
 15420 0323 59       		.uleb128 0x59
 15421 0324 0B       		.uleb128 0xb
 15422 0325 57       		.uleb128 0x57
 15423 0326 0B       		.uleb128 0xb
 15424 0327 00       		.byte	0
 15425 0328 00       		.byte	0
 15426 0329 33       		.uleb128 0x33
 15427 032a 16       		.uleb128 0x16
 15428 032b 00       		.byte	0
 15429 032c 03       		.uleb128 0x3
 15430 032d 0E       		.uleb128 0xe
 15431 032e 3A       		.uleb128 0x3a
 15432 032f 0B       		.uleb128 0xb
 15433 0330 3B       		.uleb128 0x3b
 15434 0331 05       		.uleb128 0x5
 15435 0332 39       		.uleb128 0x39
 15436 0333 0B       		.uleb128 0xb
GAS LISTING linobj/Ch02_03.s 			page 397


 15437 0334 49       		.uleb128 0x49
 15438 0335 13       		.uleb128 0x13
 15439 0336 32       		.uleb128 0x32
 15440 0337 21       		.uleb128 0x21
 15441 0338 01       		.sleb128 1
 15442 0339 00       		.byte	0
 15443 033a 00       		.byte	0
 15444 033b 34       		.uleb128 0x34
 15445 033c 18       		.uleb128 0x18
 15446 033d 00       		.byte	0
 15447 033e 00       		.byte	0
 15448 033f 00       		.byte	0
 15449 0340 35       		.uleb128 0x35
 15450 0341 2E       		.uleb128 0x2e
 15451 0342 01       		.byte	0x1
 15452 0343 3F       		.uleb128 0x3f
 15453 0344 19       		.uleb128 0x19
 15454 0345 03       		.uleb128 0x3
 15455 0346 0E       		.uleb128 0xe
 15456 0347 3A       		.uleb128 0x3a
 15457 0348 0B       		.uleb128 0xb
 15458 0349 3B       		.uleb128 0x3b
 15459 034a 05       		.uleb128 0x5
 15460 034b 39       		.uleb128 0x39
 15461 034c 21       		.uleb128 0x21
 15462 034d 0D       		.sleb128 13
 15463 034e 3C       		.uleb128 0x3c
 15464 034f 19       		.uleb128 0x19
 15465 0350 01       		.uleb128 0x1
 15466 0351 13       		.uleb128 0x13
 15467 0352 00       		.byte	0
 15468 0353 00       		.byte	0
 15469 0354 36       		.uleb128 0x36
 15470 0355 05       		.uleb128 0x5
 15471 0356 00       		.byte	0
 15472 0357 03       		.uleb128 0x3
 15473 0358 0E       		.uleb128 0xe
 15474 0359 3A       		.uleb128 0x3a
 15475 035a 0B       		.uleb128 0xb
 15476 035b 3B       		.uleb128 0x3b
 15477 035c 05       		.uleb128 0x5
 15478 035d 39       		.uleb128 0x39
 15479 035e 0B       		.uleb128 0xb
 15480 035f 49       		.uleb128 0x49
 15481 0360 13       		.uleb128 0x13
 15482 0361 00       		.byte	0
 15483 0362 00       		.byte	0
 15484 0363 37       		.uleb128 0x37
 15485 0364 48       		.uleb128 0x48
 15486 0365 00       		.byte	0
 15487 0366 7D       		.uleb128 0x7d
 15488 0367 01       		.uleb128 0x1
 15489 0368 7F       		.uleb128 0x7f
 15490 0369 13       		.uleb128 0x13
 15491 036a 00       		.byte	0
 15492 036b 00       		.byte	0
 15493 036c 38       		.uleb128 0x38
GAS LISTING linobj/Ch02_03.s 			page 398


 15494 036d 02       		.uleb128 0x2
 15495 036e 01       		.byte	0x1
 15496 036f 03       		.uleb128 0x3
 15497 0370 0E       		.uleb128 0xe
 15498 0371 0B       		.uleb128 0xb
 15499 0372 0B       		.uleb128 0xb
 15500 0373 3A       		.uleb128 0x3a
 15501 0374 0B       		.uleb128 0xb
 15502 0375 3B       		.uleb128 0x3b
 15503 0376 0B       		.uleb128 0xb
 15504 0377 39       		.uleb128 0x39
 15505 0378 21       		.uleb128 0x21
 15506 0379 0B       		.sleb128 11
 15507 037a 01       		.uleb128 0x1
 15508 037b 13       		.uleb128 0x13
 15509 037c 00       		.byte	0
 15510 037d 00       		.byte	0
 15511 037e 39       		.uleb128 0x39
 15512 037f 28       		.uleb128 0x28
 15513 0380 00       		.byte	0
 15514 0381 03       		.uleb128 0x3
 15515 0382 0E       		.uleb128 0xe
 15516 0383 1C       		.uleb128 0x1c
 15517 0384 0B       		.uleb128 0xb
 15518 0385 00       		.byte	0
 15519 0386 00       		.byte	0
 15520 0387 3A       		.uleb128 0x3a
 15521 0388 2E       		.uleb128 0x2e
 15522 0389 01       		.byte	0x1
 15523 038a 3F       		.uleb128 0x3f
 15524 038b 19       		.uleb128 0x19
 15525 038c 03       		.uleb128 0x3
 15526 038d 0E       		.uleb128 0xe
 15527 038e 3A       		.uleb128 0x3a
 15528 038f 0B       		.uleb128 0xb
 15529 0390 3B       		.uleb128 0x3b
 15530 0391 0B       		.uleb128 0xb
 15531 0392 39       		.uleb128 0x39
 15532 0393 0B       		.uleb128 0xb
 15533 0394 6E       		.uleb128 0x6e
 15534 0395 0E       		.uleb128 0xe
 15535 0396 3C       		.uleb128 0x3c
 15536 0397 19       		.uleb128 0x19
 15537 0398 01       		.uleb128 0x1
 15538 0399 13       		.uleb128 0x13
 15539 039a 00       		.byte	0
 15540 039b 00       		.byte	0
 15541 039c 3B       		.uleb128 0x3b
 15542 039d 2E       		.uleb128 0x2e
 15543 039e 00       		.byte	0
 15544 039f 3F       		.uleb128 0x3f
 15545 03a0 19       		.uleb128 0x19
 15546 03a1 03       		.uleb128 0x3
 15547 03a2 0E       		.uleb128 0xe
 15548 03a3 3A       		.uleb128 0x3a
 15549 03a4 21       		.uleb128 0x21
 15550 03a5 2D       		.sleb128 45
GAS LISTING linobj/Ch02_03.s 			page 399


 15551 03a6 3B       		.uleb128 0x3b
 15552 03a7 0B       		.uleb128 0xb
 15553 03a8 39       		.uleb128 0x39
 15554 03a9 21       		.uleb128 0x21
 15555 03aa 1B       		.sleb128 27
 15556 03ab 6E       		.uleb128 0x6e
 15557 03ac 0E       		.uleb128 0xe
 15558 03ad 49       		.uleb128 0x49
 15559 03ae 13       		.uleb128 0x13
 15560 03af 3C       		.uleb128 0x3c
 15561 03b0 19       		.uleb128 0x19
 15562 03b1 00       		.byte	0
 15563 03b2 00       		.byte	0
 15564 03b3 3C       		.uleb128 0x3c
 15565 03b4 0D       		.uleb128 0xd
 15566 03b5 00       		.byte	0
 15567 03b6 03       		.uleb128 0x3
 15568 03b7 0E       		.uleb128 0xe
 15569 03b8 3A       		.uleb128 0x3a
 15570 03b9 21       		.uleb128 0x21
 15571 03ba 08       		.sleb128 8
 15572 03bb 3B       		.uleb128 0x3b
 15573 03bc 21       		.uleb128 0x21
 15574 03bd 00       		.sleb128 0
 15575 03be 49       		.uleb128 0x49
 15576 03bf 13       		.uleb128 0x13
 15577 03c0 38       		.uleb128 0x38
 15578 03c1 0B       		.uleb128 0xb
 15579 03c2 00       		.byte	0
 15580 03c3 00       		.byte	0
 15581 03c4 3D       		.uleb128 0x3d
 15582 03c5 13       		.uleb128 0x13
 15583 03c6 01       		.byte	0x1
 15584 03c7 0B       		.uleb128 0xb
 15585 03c8 0B       		.uleb128 0xb
 15586 03c9 3A       		.uleb128 0x3a
 15587 03ca 0B       		.uleb128 0xb
 15588 03cb 3B       		.uleb128 0x3b
 15589 03cc 0B       		.uleb128 0xb
 15590 03cd 39       		.uleb128 0x39
 15591 03ce 0B       		.uleb128 0xb
 15592 03cf 6E       		.uleb128 0x6e
 15593 03d0 0E       		.uleb128 0xe
 15594 03d1 01       		.uleb128 0x1
 15595 03d2 13       		.uleb128 0x13
 15596 03d3 00       		.byte	0
 15597 03d4 00       		.byte	0
 15598 03d5 3E       		.uleb128 0x3e
 15599 03d6 2E       		.uleb128 0x2e
 15600 03d7 01       		.byte	0x1
 15601 03d8 3F       		.uleb128 0x3f
 15602 03d9 19       		.uleb128 0x19
 15603 03da 03       		.uleb128 0x3
 15604 03db 08       		.uleb128 0x8
 15605 03dc 3A       		.uleb128 0x3a
 15606 03dd 21       		.uleb128 0x21
 15607 03de 04       		.sleb128 4
GAS LISTING linobj/Ch02_03.s 			page 400


 15608 03df 3B       		.uleb128 0x3b
 15609 03e0 05       		.uleb128 0x5
 15610 03e1 39       		.uleb128 0x39
 15611 03e2 21       		.uleb128 0x21
 15612 03e3 07       		.sleb128 7
 15613 03e4 6E       		.uleb128 0x6e
 15614 03e5 0E       		.uleb128 0xe
 15615 03e6 49       		.uleb128 0x49
 15616 03e7 13       		.uleb128 0x13
 15617 03e8 32       		.uleb128 0x32
 15618 03e9 21       		.uleb128 0x21
 15619 03ea 01       		.sleb128 1
 15620 03eb 3C       		.uleb128 0x3c
 15621 03ec 19       		.uleb128 0x19
 15622 03ed 64       		.uleb128 0x64
 15623 03ee 13       		.uleb128 0x13
 15624 03ef 01       		.uleb128 0x1
 15625 03f0 13       		.uleb128 0x13
 15626 03f1 00       		.byte	0
 15627 03f2 00       		.byte	0
 15628 03f3 3F       		.uleb128 0x3f
 15629 03f4 2F       		.uleb128 0x2f
 15630 03f5 00       		.byte	0
 15631 03f6 03       		.uleb128 0x3
 15632 03f7 0E       		.uleb128 0xe
 15633 03f8 49       		.uleb128 0x49
 15634 03f9 13       		.uleb128 0x13
 15635 03fa 1E       		.uleb128 0x1e
 15636 03fb 19       		.uleb128 0x19
 15637 03fc 00       		.byte	0
 15638 03fd 00       		.byte	0
 15639 03fe 40       		.uleb128 0x40
 15640 03ff 2E       		.uleb128 0x2e
 15641 0400 00       		.byte	0
 15642 0401 3F       		.uleb128 0x3f
 15643 0402 19       		.uleb128 0x19
 15644 0403 03       		.uleb128 0x3
 15645 0404 0E       		.uleb128 0xe
 15646 0405 3A       		.uleb128 0x3a
 15647 0406 0B       		.uleb128 0xb
 15648 0407 3B       		.uleb128 0x3b
 15649 0408 0B       		.uleb128 0xb
 15650 0409 39       		.uleb128 0x39
 15651 040a 0B       		.uleb128 0xb
 15652 040b 49       		.uleb128 0x49
 15653 040c 13       		.uleb128 0x13
 15654 040d 3C       		.uleb128 0x3c
 15655 040e 19       		.uleb128 0x19
 15656 040f 00       		.byte	0
 15657 0410 00       		.byte	0
 15658 0411 41       		.uleb128 0x41
 15659 0412 34       		.uleb128 0x34
 15660 0413 00       		.byte	0
 15661 0414 47       		.uleb128 0x47
 15662 0415 13       		.uleb128 0x13
 15663 0416 00       		.byte	0
 15664 0417 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 401


 15665 0418 42       		.uleb128 0x42
 15666 0419 34       		.uleb128 0x34
 15667 041a 00       		.byte	0
 15668 041b 31       		.uleb128 0x31
 15669 041c 13       		.uleb128 0x13
 15670 041d 00       		.byte	0
 15671 041e 00       		.byte	0
 15672 041f 43       		.uleb128 0x43
 15673 0420 39       		.uleb128 0x39
 15674 0421 01       		.byte	0x1
 15675 0422 03       		.uleb128 0x3
 15676 0423 0E       		.uleb128 0xe
 15677 0424 3A       		.uleb128 0x3a
 15678 0425 0B       		.uleb128 0xb
 15679 0426 3B       		.uleb128 0x3b
 15680 0427 0B       		.uleb128 0xb
 15681 0428 39       		.uleb128 0x39
 15682 0429 0B       		.uleb128 0xb
 15683 042a 01       		.uleb128 0x1
 15684 042b 13       		.uleb128 0x13
 15685 042c 00       		.byte	0
 15686 042d 00       		.byte	0
 15687 042e 44       		.uleb128 0x44
 15688 042f 02       		.uleb128 0x2
 15689 0430 00       		.byte	0
 15690 0431 03       		.uleb128 0x3
 15691 0432 0E       		.uleb128 0xe
 15692 0433 3C       		.uleb128 0x3c
 15693 0434 19       		.uleb128 0x19
 15694 0435 00       		.byte	0
 15695 0436 00       		.byte	0
 15696 0437 45       		.uleb128 0x45
 15697 0438 2F       		.uleb128 0x2f
 15698 0439 00       		.byte	0
 15699 043a 03       		.uleb128 0x3
 15700 043b 08       		.uleb128 0x8
 15701 043c 49       		.uleb128 0x49
 15702 043d 13       		.uleb128 0x13
 15703 043e 00       		.byte	0
 15704 043f 00       		.byte	0
 15705 0440 46       		.uleb128 0x46
 15706 0441 2E       		.uleb128 0x2e
 15707 0442 01       		.byte	0x1
 15708 0443 3F       		.uleb128 0x3f
 15709 0444 19       		.uleb128 0x19
 15710 0445 03       		.uleb128 0x3
 15711 0446 0E       		.uleb128 0xe
 15712 0447 3A       		.uleb128 0x3a
 15713 0448 0B       		.uleb128 0xb
 15714 0449 3B       		.uleb128 0x3b
 15715 044a 05       		.uleb128 0x5
 15716 044b 39       		.uleb128 0x39
 15717 044c 21       		.uleb128 0x21
 15718 044d 07       		.sleb128 7
 15719 044e 6E       		.uleb128 0x6e
 15720 044f 0E       		.uleb128 0xe
 15721 0450 32       		.uleb128 0x32
GAS LISTING linobj/Ch02_03.s 			page 402


 15722 0451 21       		.uleb128 0x21
 15723 0452 01       		.sleb128 1
 15724 0453 3C       		.uleb128 0x3c
 15725 0454 19       		.uleb128 0x19
 15726 0455 63       		.uleb128 0x63
 15727 0456 19       		.uleb128 0x19
 15728 0457 64       		.uleb128 0x64
 15729 0458 13       		.uleb128 0x13
 15730 0459 01       		.uleb128 0x1
 15731 045a 13       		.uleb128 0x13
 15732 045b 00       		.byte	0
 15733 045c 00       		.byte	0
 15734 045d 47       		.uleb128 0x47
 15735 045e 02       		.uleb128 0x2
 15736 045f 01       		.byte	0x1
 15737 0460 03       		.uleb128 0x3
 15738 0461 0E       		.uleb128 0xe
 15739 0462 3C       		.uleb128 0x3c
 15740 0463 19       		.uleb128 0x19
 15741 0464 01       		.uleb128 0x1
 15742 0465 13       		.uleb128 0x13
 15743 0466 00       		.byte	0
 15744 0467 00       		.byte	0
 15745 0468 48       		.uleb128 0x48
 15746 0469 34       		.uleb128 0x34
 15747 046a 00       		.byte	0
 15748 046b 03       		.uleb128 0x3
 15749 046c 0E       		.uleb128 0xe
 15750 046d 3A       		.uleb128 0x3a
 15751 046e 21       		.uleb128 0x21
 15752 046f 25       		.sleb128 37
 15753 0470 3B       		.uleb128 0x3b
 15754 0471 21       		.uleb128 0x21
 15755 0472 30       		.sleb128 48
 15756 0473 39       		.uleb128 0x39
 15757 0474 21       		.uleb128 0x21
 15758 0475 14       		.sleb128 20
 15759 0476 49       		.uleb128 0x49
 15760 0477 13       		.uleb128 0x13
 15761 0478 3C       		.uleb128 0x3c
 15762 0479 19       		.uleb128 0x19
 15763 047a 1C       		.uleb128 0x1c
 15764 047b 21       		.uleb128 0x21
 15765 047c 01       		.sleb128 1
 15766 047d 6C       		.uleb128 0x6c
 15767 047e 19       		.uleb128 0x19
 15768 047f 00       		.byte	0
 15769 0480 00       		.byte	0
 15770 0481 49       		.uleb128 0x49
 15771 0482 42       		.uleb128 0x42
 15772 0483 00       		.byte	0
 15773 0484 0B       		.uleb128 0xb
 15774 0485 21       		.uleb128 0x21
 15775 0486 08       		.sleb128 8
 15776 0487 49       		.uleb128 0x49
 15777 0488 13       		.uleb128 0x13
 15778 0489 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 403


 15779 048a 00       		.byte	0
 15780 048b 4A       		.uleb128 0x4a
 15781 048c 0D       		.uleb128 0xd
 15782 048d 00       		.byte	0
 15783 048e 03       		.uleb128 0x3
 15784 048f 08       		.uleb128 0x8
 15785 0490 3A       		.uleb128 0x3a
 15786 0491 21       		.uleb128 0x21
 15787 0492 33       		.sleb128 51
 15788 0493 3B       		.uleb128 0x3b
 15789 0494 0B       		.uleb128 0xb
 15790 0495 39       		.uleb128 0x39
 15791 0496 0B       		.uleb128 0xb
 15792 0497 49       		.uleb128 0x49
 15793 0498 13       		.uleb128 0x13
 15794 0499 38       		.uleb128 0x38
 15795 049a 0B       		.uleb128 0xb
 15796 049b 00       		.byte	0
 15797 049c 00       		.byte	0
 15798 049d 4B       		.uleb128 0x4b
 15799 049e 13       		.uleb128 0x13
 15800 049f 00       		.byte	0
 15801 04a0 03       		.uleb128 0x3
 15802 04a1 0E       		.uleb128 0xe
 15803 04a2 3C       		.uleb128 0x3c
 15804 04a3 19       		.uleb128 0x19
 15805 04a4 00       		.byte	0
 15806 04a5 00       		.byte	0
 15807 04a6 4C       		.uleb128 0x4c
 15808 04a7 05       		.uleb128 0x5
 15809 04a8 00       		.byte	0
 15810 04a9 03       		.uleb128 0x3
 15811 04aa 0E       		.uleb128 0xe
 15812 04ab 3A       		.uleb128 0x3a
 15813 04ac 0B       		.uleb128 0xb
 15814 04ad 3B       		.uleb128 0x3b
 15815 04ae 0B       		.uleb128 0xb
 15816 04af 39       		.uleb128 0x39
 15817 04b0 0B       		.uleb128 0xb
 15818 04b1 49       		.uleb128 0x49
 15819 04b2 13       		.uleb128 0x13
 15820 04b3 00       		.byte	0
 15821 04b4 00       		.byte	0
 15822 04b5 4D       		.uleb128 0x4d
 15823 04b6 2E       		.uleb128 0x2e
 15824 04b7 01       		.byte	0x1
 15825 04b8 03       		.uleb128 0x3
 15826 04b9 0E       		.uleb128 0xe
 15827 04ba 3A       		.uleb128 0x3a
 15828 04bb 21       		.uleb128 0x21
 15829 04bc 01       		.sleb128 1
 15830 04bd 3B       		.uleb128 0x3b
 15831 04be 0B       		.uleb128 0xb
 15832 04bf 39       		.uleb128 0x39
 15833 04c0 21       		.uleb128 0x21
 15834 04c1 0D       		.sleb128 13
 15835 04c2 20       		.uleb128 0x20
GAS LISTING linobj/Ch02_03.s 			page 404


 15836 04c3 21       		.uleb128 0x21
 15837 04c4 01       		.sleb128 1
 15838 04c5 01       		.uleb128 0x1
 15839 04c6 13       		.uleb128 0x13
 15840 04c7 00       		.byte	0
 15841 04c8 00       		.byte	0
 15842 04c9 4E       		.uleb128 0x4e
 15843 04ca 0B       		.uleb128 0xb
 15844 04cb 01       		.byte	0x1
 15845 04cc 00       		.byte	0
 15846 04cd 00       		.byte	0
 15847 04ce 4F       		.uleb128 0x4f
 15848 04cf 0B       		.uleb128 0xb
 15849 04d0 01       		.byte	0x1
 15850 04d1 31       		.uleb128 0x31
 15851 04d2 13       		.uleb128 0x13
 15852 04d3 55       		.uleb128 0x55
 15853 04d4 17       		.uleb128 0x17
 15854 04d5 01       		.uleb128 0x1
 15855 04d6 13       		.uleb128 0x13
 15856 04d7 00       		.byte	0
 15857 04d8 00       		.byte	0
 15858 04d9 50       		.uleb128 0x50
 15859 04da 13       		.uleb128 0x13
 15860 04db 01       		.byte	0x1
 15861 04dc 03       		.uleb128 0x3
 15862 04dd 0E       		.uleb128 0xe
 15863 04de 0B       		.uleb128 0xb
 15864 04df 21       		.uleb128 0x21
 15865 04e0 01       		.sleb128 1
 15866 04e1 3A       		.uleb128 0x3a
 15867 04e2 0B       		.uleb128 0xb
 15868 04e3 3B       		.uleb128 0x3b
 15869 04e4 05       		.uleb128 0x5
 15870 04e5 39       		.uleb128 0x39
 15871 04e6 21       		.uleb128 0x21
 15872 04e7 0C       		.sleb128 12
 15873 04e8 01       		.uleb128 0x1
 15874 04e9 13       		.uleb128 0x13
 15875 04ea 00       		.byte	0
 15876 04eb 00       		.byte	0
 15877 04ec 51       		.uleb128 0x51
 15878 04ed 2E       		.uleb128 0x2e
 15879 04ee 01       		.byte	0x1
 15880 04ef 3F       		.uleb128 0x3f
 15881 04f0 19       		.uleb128 0x19
 15882 04f1 03       		.uleb128 0x3
 15883 04f2 08       		.uleb128 0x8
 15884 04f3 3A       		.uleb128 0x3a
 15885 04f4 21       		.uleb128 0x21
 15886 04f5 13       		.sleb128 19
 15887 04f6 3B       		.uleb128 0x3b
 15888 04f7 05       		.uleb128 0x5
 15889 04f8 39       		.uleb128 0x39
 15890 04f9 21       		.uleb128 0x21
 15891 04fa 07       		.sleb128 7
 15892 04fb 6E       		.uleb128 0x6e
GAS LISTING linobj/Ch02_03.s 			page 405


 15893 04fc 0E       		.uleb128 0xe
 15894 04fd 49       		.uleb128 0x49
 15895 04fe 13       		.uleb128 0x13
 15896 04ff 3C       		.uleb128 0x3c
 15897 0500 19       		.uleb128 0x19
 15898 0501 01       		.uleb128 0x1
 15899 0502 13       		.uleb128 0x13
 15900 0503 00       		.byte	0
 15901 0504 00       		.byte	0
 15902 0505 52       		.uleb128 0x52
 15903 0506 2E       		.uleb128 0x2e
 15904 0507 01       		.byte	0x1
 15905 0508 3F       		.uleb128 0x3f
 15906 0509 19       		.uleb128 0x19
 15907 050a 03       		.uleb128 0x3
 15908 050b 0E       		.uleb128 0xe
 15909 050c 3A       		.uleb128 0x3a
 15910 050d 0B       		.uleb128 0xb
 15911 050e 3B       		.uleb128 0x3b
 15912 050f 0B       		.uleb128 0xb
 15913 0510 39       		.uleb128 0x39
 15914 0511 0B       		.uleb128 0xb
 15915 0512 6E       		.uleb128 0x6e
 15916 0513 0E       		.uleb128 0xe
 15917 0514 49       		.uleb128 0x49
 15918 0515 13       		.uleb128 0x13
 15919 0516 32       		.uleb128 0x32
 15920 0517 21       		.uleb128 0x21
 15921 0518 01       		.sleb128 1
 15922 0519 3C       		.uleb128 0x3c
 15923 051a 19       		.uleb128 0x19
 15924 051b 8B01     		.uleb128 0x8b
 15925 051d 21       		.uleb128 0x21
 15926 051e 01       		.sleb128 1
 15927 051f 64       		.uleb128 0x64
 15928 0520 13       		.uleb128 0x13
 15929 0521 01       		.uleb128 0x1
 15930 0522 13       		.uleb128 0x13
 15931 0523 00       		.byte	0
 15932 0524 00       		.byte	0
 15933 0525 53       		.uleb128 0x53
 15934 0526 39       		.uleb128 0x39
 15935 0527 00       		.byte	0
 15936 0528 03       		.uleb128 0x3
 15937 0529 0E       		.uleb128 0xe
 15938 052a 3A       		.uleb128 0x3a
 15939 052b 0B       		.uleb128 0xb
 15940 052c 3B       		.uleb128 0x3b
 15941 052d 0B       		.uleb128 0xb
 15942 052e 39       		.uleb128 0x39
 15943 052f 0B       		.uleb128 0xb
 15944 0530 00       		.byte	0
 15945 0531 00       		.byte	0
 15946 0532 54       		.uleb128 0x54
 15947 0533 1C       		.uleb128 0x1c
 15948 0534 00       		.byte	0
 15949 0535 49       		.uleb128 0x49
GAS LISTING linobj/Ch02_03.s 			page 406


 15950 0536 13       		.uleb128 0x13
 15951 0537 38       		.uleb128 0x38
 15952 0538 21       		.uleb128 0x21
 15953 0539 00       		.sleb128 0
 15954 053a 00       		.byte	0
 15955 053b 00       		.byte	0
 15956 053c 55       		.uleb128 0x55
 15957 053d 17       		.uleb128 0x17
 15958 053e 01       		.byte	0x1
 15959 053f 0B       		.uleb128 0xb
 15960 0540 21       		.uleb128 0x21
 15961 0541 10       		.sleb128 16
 15962 0542 3A       		.uleb128 0x3a
 15963 0543 0B       		.uleb128 0xb
 15964 0544 3B       		.uleb128 0x3b
 15965 0545 0B       		.uleb128 0xb
 15966 0546 39       		.uleb128 0x39
 15967 0547 0B       		.uleb128 0xb
 15968 0548 8901     		.uleb128 0x89
 15969 054a 19       		.uleb128 0x19
 15970 054b 01       		.uleb128 0x1
 15971 054c 13       		.uleb128 0x13
 15972 054d 00       		.byte	0
 15973 054e 00       		.byte	0
 15974 054f 56       		.uleb128 0x56
 15975 0550 0D       		.uleb128 0xd
 15976 0551 00       		.byte	0
 15977 0552 49       		.uleb128 0x49
 15978 0553 13       		.uleb128 0x13
 15979 0554 38       		.uleb128 0x38
 15980 0555 0B       		.uleb128 0xb
 15981 0556 00       		.byte	0
 15982 0557 00       		.byte	0
 15983 0558 57       		.uleb128 0x57
 15984 0559 2E       		.uleb128 0x2e
 15985 055a 01       		.byte	0x1
 15986 055b 3F       		.uleb128 0x3f
 15987 055c 19       		.uleb128 0x19
 15988 055d 03       		.uleb128 0x3
 15989 055e 08       		.uleb128 0x8
 15990 055f 3A       		.uleb128 0x3a
 15991 0560 0B       		.uleb128 0xb
 15992 0561 3B       		.uleb128 0x3b
 15993 0562 0B       		.uleb128 0xb
 15994 0563 39       		.uleb128 0x39
 15995 0564 0B       		.uleb128 0xb
 15996 0565 6E       		.uleb128 0x6e
 15997 0566 0E       		.uleb128 0xe
 15998 0567 49       		.uleb128 0x49
 15999 0568 13       		.uleb128 0x13
 16000 0569 32       		.uleb128 0x32
 16001 056a 21       		.uleb128 0x21
 16002 056b 01       		.sleb128 1
 16003 056c 3C       		.uleb128 0x3c
 16004 056d 19       		.uleb128 0x19
 16005 056e 64       		.uleb128 0x64
 16006 056f 13       		.uleb128 0x13
GAS LISTING linobj/Ch02_03.s 			page 407


 16007 0570 01       		.uleb128 0x1
 16008 0571 13       		.uleb128 0x13
 16009 0572 00       		.byte	0
 16010 0573 00       		.byte	0
 16011 0574 58       		.uleb128 0x58
 16012 0575 28       		.uleb128 0x28
 16013 0576 00       		.byte	0
 16014 0577 03       		.uleb128 0x3
 16015 0578 0E       		.uleb128 0xe
 16016 0579 1C       		.uleb128 0x1c
 16017 057a 06       		.uleb128 0x6
 16018 057b 00       		.byte	0
 16019 057c 00       		.byte	0
 16020 057d 59       		.uleb128 0x59
 16021 057e 2E       		.uleb128 0x2e
 16022 057f 00       		.byte	0
 16023 0580 3F       		.uleb128 0x3f
 16024 0581 19       		.uleb128 0x19
 16025 0582 03       		.uleb128 0x3
 16026 0583 0E       		.uleb128 0xe
 16027 0584 3A       		.uleb128 0x3a
 16028 0585 0B       		.uleb128 0xb
 16029 0586 3B       		.uleb128 0x3b
 16030 0587 05       		.uleb128 0x5
 16031 0588 39       		.uleb128 0x39
 16032 0589 0B       		.uleb128 0xb
 16033 058a 49       		.uleb128 0x49
 16034 058b 13       		.uleb128 0x13
 16035 058c 3C       		.uleb128 0x3c
 16036 058d 19       		.uleb128 0x19
 16037 058e 00       		.byte	0
 16038 058f 00       		.byte	0
 16039 0590 5A       		.uleb128 0x5a
 16040 0591 02       		.uleb128 0x2
 16041 0592 01       		.byte	0x1
 16042 0593 03       		.uleb128 0x3
 16043 0594 0E       		.uleb128 0xe
 16044 0595 0B       		.uleb128 0xb
 16045 0596 21       		.uleb128 0x21
 16046 0597 08       		.sleb128 8
 16047 0598 3A       		.uleb128 0x3a
 16048 0599 21       		.uleb128 0x21
 16049 059a 2E       		.sleb128 46
 16050 059b 3B       		.uleb128 0x3b
 16051 059c 21       		.uleb128 0x21
 16052 059d 8E08     		.sleb128 1038
 16053 059f 39       		.uleb128 0x39
 16054 05a0 21       		.uleb128 0x21
 16055 05a1 0B       		.sleb128 11
 16056 05a2 01       		.uleb128 0x1
 16057 05a3 13       		.uleb128 0x13
 16058 05a4 00       		.byte	0
 16059 05a5 00       		.byte	0
 16060 05a6 5B       		.uleb128 0x5b
 16061 05a7 0D       		.uleb128 0xd
 16062 05a8 00       		.byte	0
 16063 05a9 03       		.uleb128 0x3
GAS LISTING linobj/Ch02_03.s 			page 408


 16064 05aa 0E       		.uleb128 0xe
 16065 05ab 3A       		.uleb128 0x3a
 16066 05ac 21       		.uleb128 0x21
 16067 05ad 2E       		.sleb128 46
 16068 05ae 3B       		.uleb128 0x3b
 16069 05af 21       		.uleb128 0x21
 16070 05b0 9108     		.sleb128 1041
 16071 05b2 39       		.uleb128 0x39
 16072 05b3 21       		.uleb128 0x21
 16073 05b4 11       		.sleb128 17
 16074 05b5 49       		.uleb128 0x49
 16075 05b6 13       		.uleb128 0x13
 16076 05b7 38       		.uleb128 0x38
 16077 05b8 21       		.uleb128 0x21
 16078 05b9 00       		.sleb128 0
 16079 05ba 32       		.uleb128 0x32
 16080 05bb 21       		.uleb128 0x21
 16081 05bc 02       		.sleb128 2
 16082 05bd 00       		.byte	0
 16083 05be 00       		.byte	0
 16084 05bf 5C       		.uleb128 0x5c
 16085 05c0 1D       		.uleb128 0x1d
 16086 05c1 01       		.byte	0x1
 16087 05c2 31       		.uleb128 0x31
 16088 05c3 13       		.uleb128 0x13
 16089 05c4 52       		.uleb128 0x52
 16090 05c5 01       		.uleb128 0x1
 16091 05c6 B842     		.uleb128 0x2138
 16092 05c8 05       		.uleb128 0x5
 16093 05c9 11       		.uleb128 0x11
 16094 05ca 01       		.uleb128 0x1
 16095 05cb 12       		.uleb128 0x12
 16096 05cc 07       		.uleb128 0x7
 16097 05cd 58       		.uleb128 0x58
 16098 05ce 21       		.uleb128 0x21
 16099 05cf 04       		.sleb128 4
 16100 05d0 59       		.uleb128 0x59
 16101 05d1 21       		.uleb128 0x21
 16102 05d2 DE14     		.sleb128 2654
 16103 05d4 57       		.uleb128 0x57
 16104 05d5 21       		.uleb128 0x21
 16105 05d6 17       		.sleb128 23
 16106 05d7 00       		.byte	0
 16107 05d8 00       		.byte	0
 16108 05d9 5D       		.uleb128 0x5d
 16109 05da 11       		.uleb128 0x11
 16110 05db 01       		.byte	0x1
 16111 05dc 25       		.uleb128 0x25
 16112 05dd 0E       		.uleb128 0xe
 16113 05de 13       		.uleb128 0x13
 16114 05df 0B       		.uleb128 0xb
 16115 05e0 03       		.uleb128 0x3
 16116 05e1 1F       		.uleb128 0x1f
 16117 05e2 1B       		.uleb128 0x1b
 16118 05e3 1F       		.uleb128 0x1f
 16119 05e4 55       		.uleb128 0x55
 16120 05e5 17       		.uleb128 0x17
GAS LISTING linobj/Ch02_03.s 			page 409


 16121 05e6 11       		.uleb128 0x11
 16122 05e7 01       		.uleb128 0x1
 16123 05e8 10       		.uleb128 0x10
 16124 05e9 17       		.uleb128 0x17
 16125 05ea 00       		.byte	0
 16126 05eb 00       		.byte	0
 16127 05ec 5E       		.uleb128 0x5e
 16128 05ed 13       		.uleb128 0x13
 16129 05ee 01       		.byte	0x1
 16130 05ef 03       		.uleb128 0x3
 16131 05f0 0E       		.uleb128 0xe
 16132 05f1 0B       		.uleb128 0xb
 16133 05f2 0B       		.uleb128 0xb
 16134 05f3 3A       		.uleb128 0x3a
 16135 05f4 0B       		.uleb128 0xb
 16136 05f5 3B       		.uleb128 0x3b
 16137 05f6 0B       		.uleb128 0xb
 16138 05f7 01       		.uleb128 0x1
 16139 05f8 13       		.uleb128 0x13
 16140 05f9 00       		.byte	0
 16141 05fa 00       		.byte	0
 16142 05fb 5F       		.uleb128 0x5f
 16143 05fc 0F       		.uleb128 0xf
 16144 05fd 00       		.byte	0
 16145 05fe 0B       		.uleb128 0xb
 16146 05ff 0B       		.uleb128 0xb
 16147 0600 00       		.byte	0
 16148 0601 00       		.byte	0
 16149 0602 60       		.uleb128 0x60
 16150 0603 17       		.uleb128 0x17
 16151 0604 01       		.byte	0x1
 16152 0605 0B       		.uleb128 0xb
 16153 0606 0B       		.uleb128 0xb
 16154 0607 3A       		.uleb128 0x3a
 16155 0608 0B       		.uleb128 0xb
 16156 0609 3B       		.uleb128 0x3b
 16157 060a 0B       		.uleb128 0xb
 16158 060b 39       		.uleb128 0x39
 16159 060c 0B       		.uleb128 0xb
 16160 060d 01       		.uleb128 0x1
 16161 060e 13       		.uleb128 0x13
 16162 060f 00       		.byte	0
 16163 0610 00       		.byte	0
 16164 0611 61       		.uleb128 0x61
 16165 0612 24       		.uleb128 0x24
 16166 0613 00       		.byte	0
 16167 0614 0B       		.uleb128 0xb
 16168 0615 0B       		.uleb128 0xb
 16169 0616 3E       		.uleb128 0x3e
 16170 0617 0B       		.uleb128 0xb
 16171 0618 03       		.uleb128 0x3
 16172 0619 08       		.uleb128 0x8
 16173 061a 00       		.byte	0
 16174 061b 00       		.byte	0
 16175 061c 62       		.uleb128 0x62
 16176 061d 39       		.uleb128 0x39
 16177 061e 01       		.byte	0x1
GAS LISTING linobj/Ch02_03.s 			page 410


 16178 061f 03       		.uleb128 0x3
 16179 0620 08       		.uleb128 0x8
 16180 0621 3A       		.uleb128 0x3a
 16181 0622 0B       		.uleb128 0xb
 16182 0623 3B       		.uleb128 0x3b
 16183 0624 05       		.uleb128 0x5
 16184 0625 39       		.uleb128 0x39
 16185 0626 0B       		.uleb128 0xb
 16186 0627 01       		.uleb128 0x1
 16187 0628 13       		.uleb128 0x13
 16188 0629 00       		.byte	0
 16189 062a 00       		.byte	0
 16190 062b 63       		.uleb128 0x63
 16191 062c 39       		.uleb128 0x39
 16192 062d 00       		.byte	0
 16193 062e 03       		.uleb128 0x3
 16194 062f 0E       		.uleb128 0xe
 16195 0630 3A       		.uleb128 0x3a
 16196 0631 0B       		.uleb128 0xb
 16197 0632 3B       		.uleb128 0x3b
 16198 0633 05       		.uleb128 0x5
 16199 0634 39       		.uleb128 0x39
 16200 0635 0B       		.uleb128 0xb
 16201 0636 00       		.byte	0
 16202 0637 00       		.byte	0
 16203 0638 64       		.uleb128 0x64
 16204 0639 2E       		.uleb128 0x2e
 16205 063a 01       		.byte	0x1
 16206 063b 3F       		.uleb128 0x3f
 16207 063c 19       		.uleb128 0x19
 16208 063d 03       		.uleb128 0x3
 16209 063e 0E       		.uleb128 0xe
 16210 063f 3A       		.uleb128 0x3a
 16211 0640 0B       		.uleb128 0xb
 16212 0641 3B       		.uleb128 0x3b
 16213 0642 0B       		.uleb128 0xb
 16214 0643 39       		.uleb128 0x39
 16215 0644 0B       		.uleb128 0xb
 16216 0645 6E       		.uleb128 0x6e
 16217 0646 0E       		.uleb128 0xe
 16218 0647 3C       		.uleb128 0x3c
 16219 0648 19       		.uleb128 0x19
 16220 0649 63       		.uleb128 0x63
 16221 064a 19       		.uleb128 0x19
 16222 064b 64       		.uleb128 0x64
 16223 064c 13       		.uleb128 0x13
 16224 064d 01       		.uleb128 0x1
 16225 064e 13       		.uleb128 0x13
 16226 064f 00       		.byte	0
 16227 0650 00       		.byte	0
 16228 0651 65       		.uleb128 0x65
 16229 0652 2E       		.uleb128 0x2e
 16230 0653 01       		.byte	0x1
 16231 0654 3F       		.uleb128 0x3f
 16232 0655 19       		.uleb128 0x19
 16233 0656 03       		.uleb128 0x3
 16234 0657 0E       		.uleb128 0xe
GAS LISTING linobj/Ch02_03.s 			page 411


 16235 0658 3A       		.uleb128 0x3a
 16236 0659 0B       		.uleb128 0xb
 16237 065a 3B       		.uleb128 0x3b
 16238 065b 0B       		.uleb128 0xb
 16239 065c 39       		.uleb128 0x39
 16240 065d 0B       		.uleb128 0xb
 16241 065e 6E       		.uleb128 0x6e
 16242 065f 0E       		.uleb128 0xe
 16243 0660 49       		.uleb128 0x49
 16244 0661 13       		.uleb128 0x13
 16245 0662 32       		.uleb128 0x32
 16246 0663 0B       		.uleb128 0xb
 16247 0664 3C       		.uleb128 0x3c
 16248 0665 19       		.uleb128 0x19
 16249 0666 63       		.uleb128 0x63
 16250 0667 19       		.uleb128 0x19
 16251 0668 64       		.uleb128 0x64
 16252 0669 13       		.uleb128 0x13
 16253 066a 01       		.uleb128 0x1
 16254 066b 13       		.uleb128 0x13
 16255 066c 00       		.byte	0
 16256 066d 00       		.byte	0
 16257 066e 66       		.uleb128 0x66
 16258 066f 2E       		.uleb128 0x2e
 16259 0670 01       		.byte	0x1
 16260 0671 3F       		.uleb128 0x3f
 16261 0672 19       		.uleb128 0x19
 16262 0673 03       		.uleb128 0x3
 16263 0674 0E       		.uleb128 0xe
 16264 0675 3A       		.uleb128 0x3a
 16265 0676 0B       		.uleb128 0xb
 16266 0677 3B       		.uleb128 0x3b
 16267 0678 0B       		.uleb128 0xb
 16268 0679 39       		.uleb128 0x39
 16269 067a 0B       		.uleb128 0xb
 16270 067b 6E       		.uleb128 0x6e
 16271 067c 0E       		.uleb128 0xe
 16272 067d 49       		.uleb128 0x49
 16273 067e 13       		.uleb128 0x13
 16274 067f 32       		.uleb128 0x32
 16275 0680 0B       		.uleb128 0xb
 16276 0681 3C       		.uleb128 0x3c
 16277 0682 19       		.uleb128 0x19
 16278 0683 64       		.uleb128 0x64
 16279 0684 13       		.uleb128 0x13
 16280 0685 00       		.byte	0
 16281 0686 00       		.byte	0
 16282 0687 67       		.uleb128 0x67
 16283 0688 2E       		.uleb128 0x2e
 16284 0689 01       		.byte	0x1
 16285 068a 3F       		.uleb128 0x3f
 16286 068b 19       		.uleb128 0x19
 16287 068c 03       		.uleb128 0x3
 16288 068d 0E       		.uleb128 0xe
 16289 068e 3A       		.uleb128 0x3a
 16290 068f 0B       		.uleb128 0xb
 16291 0690 3B       		.uleb128 0x3b
GAS LISTING linobj/Ch02_03.s 			page 412


 16292 0691 0B       		.uleb128 0xb
 16293 0692 39       		.uleb128 0x39
 16294 0693 0B       		.uleb128 0xb
 16295 0694 6E       		.uleb128 0x6e
 16296 0695 0E       		.uleb128 0xe
 16297 0696 3C       		.uleb128 0x3c
 16298 0697 19       		.uleb128 0x19
 16299 0698 00       		.byte	0
 16300 0699 00       		.byte	0
 16301 069a 68       		.uleb128 0x68
 16302 069b 2E       		.uleb128 0x2e
 16303 069c 01       		.byte	0x1
 16304 069d 3F       		.uleb128 0x3f
 16305 069e 19       		.uleb128 0x19
 16306 069f 03       		.uleb128 0x3
 16307 06a0 0E       		.uleb128 0xe
 16308 06a1 3A       		.uleb128 0x3a
 16309 06a2 0B       		.uleb128 0xb
 16310 06a3 3B       		.uleb128 0x3b
 16311 06a4 0B       		.uleb128 0xb
 16312 06a5 39       		.uleb128 0x39
 16313 06a6 0B       		.uleb128 0xb
 16314 06a7 6E       		.uleb128 0x6e
 16315 06a8 0E       		.uleb128 0xe
 16316 06a9 8701     		.uleb128 0x87
 16317 06ab 19       		.uleb128 0x19
 16318 06ac 3C       		.uleb128 0x3c
 16319 06ad 19       		.uleb128 0x19
 16320 06ae 01       		.uleb128 0x1
 16321 06af 13       		.uleb128 0x13
 16322 06b0 00       		.byte	0
 16323 06b1 00       		.byte	0
 16324 06b2 69       		.uleb128 0x69
 16325 06b3 2E       		.uleb128 0x2e
 16326 06b4 00       		.byte	0
 16327 06b5 3F       		.uleb128 0x3f
 16328 06b6 19       		.uleb128 0x19
 16329 06b7 03       		.uleb128 0x3
 16330 06b8 08       		.uleb128 0x8
 16331 06b9 3A       		.uleb128 0x3a
 16332 06ba 0B       		.uleb128 0xb
 16333 06bb 3B       		.uleb128 0x3b
 16334 06bc 05       		.uleb128 0x5
 16335 06bd 39       		.uleb128 0x39
 16336 06be 0B       		.uleb128 0xb
 16337 06bf 6E       		.uleb128 0x6e
 16338 06c0 0E       		.uleb128 0xe
 16339 06c1 49       		.uleb128 0x49
 16340 06c2 13       		.uleb128 0x13
 16341 06c3 3C       		.uleb128 0x3c
 16342 06c4 19       		.uleb128 0x19
 16343 06c5 00       		.byte	0
 16344 06c6 00       		.byte	0
 16345 06c7 6A       		.uleb128 0x6a
 16346 06c8 1C       		.uleb128 0x1c
 16347 06c9 00       		.byte	0
 16348 06ca 49       		.uleb128 0x49
GAS LISTING linobj/Ch02_03.s 			page 413


 16349 06cb 13       		.uleb128 0x13
 16350 06cc 38       		.uleb128 0x38
 16351 06cd 0B       		.uleb128 0xb
 16352 06ce 32       		.uleb128 0x32
 16353 06cf 0B       		.uleb128 0xb
 16354 06d0 00       		.byte	0
 16355 06d1 00       		.byte	0
 16356 06d2 6B       		.uleb128 0x6b
 16357 06d3 2E       		.uleb128 0x2e
 16358 06d4 01       		.byte	0x1
 16359 06d5 3F       		.uleb128 0x3f
 16360 06d6 19       		.uleb128 0x19
 16361 06d7 03       		.uleb128 0x3
 16362 06d8 0E       		.uleb128 0xe
 16363 06d9 3A       		.uleb128 0x3a
 16364 06da 0B       		.uleb128 0xb
 16365 06db 3B       		.uleb128 0x3b
 16366 06dc 0B       		.uleb128 0xb
 16367 06dd 39       		.uleb128 0x39
 16368 06de 0B       		.uleb128 0xb
 16369 06df 6E       		.uleb128 0x6e
 16370 06e0 0E       		.uleb128 0xe
 16371 06e1 32       		.uleb128 0x32
 16372 06e2 0B       		.uleb128 0xb
 16373 06e3 3C       		.uleb128 0x3c
 16374 06e4 19       		.uleb128 0x19
 16375 06e5 64       		.uleb128 0x64
 16376 06e6 13       		.uleb128 0x13
 16377 06e7 00       		.byte	0
 16378 06e8 00       		.byte	0
 16379 06e9 6C       		.uleb128 0x6c
 16380 06ea 2E       		.uleb128 0x2e
 16381 06eb 01       		.byte	0x1
 16382 06ec 3F       		.uleb128 0x3f
 16383 06ed 19       		.uleb128 0x19
 16384 06ee 03       		.uleb128 0x3
 16385 06ef 0E       		.uleb128 0xe
 16386 06f0 3A       		.uleb128 0x3a
 16387 06f1 0B       		.uleb128 0xb
 16388 06f2 3B       		.uleb128 0x3b
 16389 06f3 0B       		.uleb128 0xb
 16390 06f4 39       		.uleb128 0x39
 16391 06f5 0B       		.uleb128 0xb
 16392 06f6 6E       		.uleb128 0x6e
 16393 06f7 0E       		.uleb128 0xe
 16394 06f8 3C       		.uleb128 0x3c
 16395 06f9 19       		.uleb128 0x19
 16396 06fa 63       		.uleb128 0x63
 16397 06fb 19       		.uleb128 0x19
 16398 06fc 8B01     		.uleb128 0x8b
 16399 06fe 0B       		.uleb128 0xb
 16400 06ff 64       		.uleb128 0x64
 16401 0700 13       		.uleb128 0x13
 16402 0701 00       		.byte	0
 16403 0702 00       		.byte	0
 16404 0703 6D       		.uleb128 0x6d
 16405 0704 34       		.uleb128 0x34
GAS LISTING linobj/Ch02_03.s 			page 414


 16406 0705 00       		.byte	0
 16407 0706 03       		.uleb128 0x3
 16408 0707 0E       		.uleb128 0xe
 16409 0708 3A       		.uleb128 0x3a
 16410 0709 0B       		.uleb128 0xb
 16411 070a 3B       		.uleb128 0x3b
 16412 070b 0B       		.uleb128 0xb
 16413 070c 39       		.uleb128 0x39
 16414 070d 0B       		.uleb128 0xb
 16415 070e 49       		.uleb128 0x49
 16416 070f 13       		.uleb128 0x13
 16417 0710 3C       		.uleb128 0x3c
 16418 0711 19       		.uleb128 0x19
 16419 0712 1C       		.uleb128 0x1c
 16420 0713 0A       		.uleb128 0xa
 16421 0714 6C       		.uleb128 0x6c
 16422 0715 19       		.uleb128 0x19
 16423 0716 00       		.byte	0
 16424 0717 00       		.byte	0
 16425 0718 6E       		.uleb128 0x6e
 16426 0719 39       		.uleb128 0x39
 16427 071a 01       		.byte	0x1
 16428 071b 03       		.uleb128 0x3
 16429 071c 0E       		.uleb128 0xe
 16430 071d 3A       		.uleb128 0x3a
 16431 071e 0B       		.uleb128 0xb
 16432 071f 3B       		.uleb128 0x3b
 16433 0720 05       		.uleb128 0x5
 16434 0721 39       		.uleb128 0x39
 16435 0722 0B       		.uleb128 0xb
 16436 0723 8901     		.uleb128 0x89
 16437 0725 19       		.uleb128 0x19
 16438 0726 01       		.uleb128 0x1
 16439 0727 13       		.uleb128 0x13
 16440 0728 00       		.byte	0
 16441 0729 00       		.byte	0
 16442 072a 6F       		.uleb128 0x6f
 16443 072b 2E       		.uleb128 0x2e
 16444 072c 01       		.byte	0x1
 16445 072d 3F       		.uleb128 0x3f
 16446 072e 19       		.uleb128 0x19
 16447 072f 03       		.uleb128 0x3
 16448 0730 0E       		.uleb128 0xe
 16449 0731 6E       		.uleb128 0x6e
 16450 0732 0E       		.uleb128 0xe
 16451 0733 34       		.uleb128 0x34
 16452 0734 19       		.uleb128 0x19
 16453 0735 3C       		.uleb128 0x3c
 16454 0736 19       		.uleb128 0x19
 16455 0737 64       		.uleb128 0x64
 16456 0738 13       		.uleb128 0x13
 16457 0739 00       		.byte	0
 16458 073a 00       		.byte	0
 16459 073b 70       		.uleb128 0x70
 16460 073c 04       		.uleb128 0x4
 16461 073d 01       		.byte	0x1
 16462 073e 3E       		.uleb128 0x3e
GAS LISTING linobj/Ch02_03.s 			page 415


 16463 073f 0B       		.uleb128 0xb
 16464 0740 0B       		.uleb128 0xb
 16465 0741 0B       		.uleb128 0xb
 16466 0742 49       		.uleb128 0x49
 16467 0743 13       		.uleb128 0x13
 16468 0744 3A       		.uleb128 0x3a
 16469 0745 0B       		.uleb128 0xb
 16470 0746 3B       		.uleb128 0x3b
 16471 0747 0B       		.uleb128 0xb
 16472 0748 39       		.uleb128 0x39
 16473 0749 0B       		.uleb128 0xb
 16474 074a 01       		.uleb128 0x1
 16475 074b 13       		.uleb128 0x13
 16476 074c 00       		.byte	0
 16477 074d 00       		.byte	0
 16478 074e 71       		.uleb128 0x71
 16479 074f 34       		.uleb128 0x34
 16480 0750 00       		.byte	0
 16481 0751 03       		.uleb128 0x3
 16482 0752 0E       		.uleb128 0xe
 16483 0753 3A       		.uleb128 0x3a
 16484 0754 0B       		.uleb128 0xb
 16485 0755 3B       		.uleb128 0x3b
 16486 0756 0B       		.uleb128 0xb
 16487 0757 39       		.uleb128 0x39
 16488 0758 0B       		.uleb128 0xb
 16489 0759 6E       		.uleb128 0x6e
 16490 075a 0E       		.uleb128 0xe
 16491 075b 49       		.uleb128 0x49
 16492 075c 13       		.uleb128 0x13
 16493 075d 3F       		.uleb128 0x3f
 16494 075e 19       		.uleb128 0x19
 16495 075f 32       		.uleb128 0x32
 16496 0760 0B       		.uleb128 0xb
 16497 0761 3C       		.uleb128 0x3c
 16498 0762 19       		.uleb128 0x19
 16499 0763 1C       		.uleb128 0x1c
 16500 0764 07       		.uleb128 0x7
 16501 0765 00       		.byte	0
 16502 0766 00       		.byte	0
 16503 0767 72       		.uleb128 0x72
 16504 0768 39       		.uleb128 0x39
 16505 0769 00       		.byte	0
 16506 076a 03       		.uleb128 0x3
 16507 076b 08       		.uleb128 0x8
 16508 076c 3A       		.uleb128 0x3a
 16509 076d 0B       		.uleb128 0xb
 16510 076e 3B       		.uleb128 0x3b
 16511 076f 0B       		.uleb128 0xb
 16512 0770 39       		.uleb128 0x39
 16513 0771 0B       		.uleb128 0xb
 16514 0772 8901     		.uleb128 0x89
 16515 0774 19       		.uleb128 0x19
 16516 0775 00       		.byte	0
 16517 0776 00       		.byte	0
 16518 0777 73       		.uleb128 0x73
 16519 0778 04       		.uleb128 0x4
GAS LISTING linobj/Ch02_03.s 			page 416


 16520 0779 01       		.byte	0x1
 16521 077a 03       		.uleb128 0x3
 16522 077b 0E       		.uleb128 0xe
 16523 077c 3E       		.uleb128 0x3e
 16524 077d 0B       		.uleb128 0xb
 16525 077e 0B       		.uleb128 0xb
 16526 077f 0B       		.uleb128 0xb
 16527 0780 49       		.uleb128 0x49
 16528 0781 13       		.uleb128 0x13
 16529 0782 3A       		.uleb128 0x3a
 16530 0783 0B       		.uleb128 0xb
 16531 0784 3B       		.uleb128 0x3b
 16532 0785 0B       		.uleb128 0xb
 16533 0786 39       		.uleb128 0x39
 16534 0787 0B       		.uleb128 0xb
 16535 0788 01       		.uleb128 0x1
 16536 0789 13       		.uleb128 0x13
 16537 078a 00       		.byte	0
 16538 078b 00       		.byte	0
 16539 078c 74       		.uleb128 0x74
 16540 078d 28       		.uleb128 0x28
 16541 078e 00       		.byte	0
 16542 078f 03       		.uleb128 0x3
 16543 0790 0E       		.uleb128 0xe
 16544 0791 1C       		.uleb128 0x1c
 16545 0792 0D       		.uleb128 0xd
 16546 0793 00       		.byte	0
 16547 0794 00       		.byte	0
 16548 0795 75       		.uleb128 0x75
 16549 0796 2E       		.uleb128 0x2e
 16550 0797 01       		.byte	0x1
 16551 0798 3F       		.uleb128 0x3f
 16552 0799 19       		.uleb128 0x19
 16553 079a 03       		.uleb128 0x3
 16554 079b 0E       		.uleb128 0xe
 16555 079c 3A       		.uleb128 0x3a
 16556 079d 0B       		.uleb128 0xb
 16557 079e 3B       		.uleb128 0x3b
 16558 079f 05       		.uleb128 0x5
 16559 07a0 39       		.uleb128 0x39
 16560 07a1 0B       		.uleb128 0xb
 16561 07a2 6E       		.uleb128 0x6e
 16562 07a3 0E       		.uleb128 0xe
 16563 07a4 49       		.uleb128 0x49
 16564 07a5 13       		.uleb128 0x13
 16565 07a6 32       		.uleb128 0x32
 16566 07a7 0B       		.uleb128 0xb
 16567 07a8 3C       		.uleb128 0x3c
 16568 07a9 19       		.uleb128 0x19
 16569 07aa 64       		.uleb128 0x64
 16570 07ab 13       		.uleb128 0x13
 16571 07ac 00       		.byte	0
 16572 07ad 00       		.byte	0
 16573 07ae 76       		.uleb128 0x76
 16574 07af 34       		.uleb128 0x34
 16575 07b0 00       		.byte	0
 16576 07b1 03       		.uleb128 0x3
GAS LISTING linobj/Ch02_03.s 			page 417


 16577 07b2 0E       		.uleb128 0xe
 16578 07b3 3A       		.uleb128 0x3a
 16579 07b4 0B       		.uleb128 0xb
 16580 07b5 3B       		.uleb128 0x3b
 16581 07b6 0B       		.uleb128 0xb
 16582 07b7 39       		.uleb128 0x39
 16583 07b8 0B       		.uleb128 0xb
 16584 07b9 6E       		.uleb128 0x6e
 16585 07ba 0E       		.uleb128 0xe
 16586 07bb 49       		.uleb128 0x49
 16587 07bc 13       		.uleb128 0x13
 16588 07bd 3F       		.uleb128 0x3f
 16589 07be 19       		.uleb128 0x19
 16590 07bf 3C       		.uleb128 0x3c
 16591 07c0 19       		.uleb128 0x19
 16592 07c1 00       		.byte	0
 16593 07c2 00       		.byte	0
 16594 07c3 77       		.uleb128 0x77
 16595 07c4 2E       		.uleb128 0x2e
 16596 07c5 01       		.byte	0x1
 16597 07c6 3F       		.uleb128 0x3f
 16598 07c7 19       		.uleb128 0x19
 16599 07c8 03       		.uleb128 0x3
 16600 07c9 0E       		.uleb128 0xe
 16601 07ca 3A       		.uleb128 0x3a
 16602 07cb 0B       		.uleb128 0xb
 16603 07cc 3B       		.uleb128 0x3b
 16604 07cd 0B       		.uleb128 0xb
 16605 07ce 39       		.uleb128 0x39
 16606 07cf 0B       		.uleb128 0xb
 16607 07d0 6E       		.uleb128 0x6e
 16608 07d1 0E       		.uleb128 0xe
 16609 07d2 49       		.uleb128 0x49
 16610 07d3 13       		.uleb128 0x13
 16611 07d4 3C       		.uleb128 0x3c
 16612 07d5 19       		.uleb128 0x19
 16613 07d6 00       		.byte	0
 16614 07d7 00       		.byte	0
 16615 07d8 78       		.uleb128 0x78
 16616 07d9 13       		.uleb128 0x13
 16617 07da 01       		.byte	0x1
 16618 07db 03       		.uleb128 0x3
 16619 07dc 08       		.uleb128 0x8
 16620 07dd 0B       		.uleb128 0xb
 16621 07de 0B       		.uleb128 0xb
 16622 07df 3A       		.uleb128 0x3a
 16623 07e0 0B       		.uleb128 0xb
 16624 07e1 3B       		.uleb128 0x3b
 16625 07e2 0B       		.uleb128 0xb
 16626 07e3 39       		.uleb128 0x39
 16627 07e4 0B       		.uleb128 0xb
 16628 07e5 01       		.uleb128 0x1
 16629 07e6 13       		.uleb128 0x13
 16630 07e7 00       		.byte	0
 16631 07e8 00       		.byte	0
 16632 07e9 79       		.uleb128 0x79
 16633 07ea 39       		.uleb128 0x39
GAS LISTING linobj/Ch02_03.s 			page 418


 16634 07eb 01       		.byte	0x1
 16635 07ec 03       		.uleb128 0x3
 16636 07ed 0E       		.uleb128 0xe
 16637 07ee 3A       		.uleb128 0x3a
 16638 07ef 0B       		.uleb128 0xb
 16639 07f0 3B       		.uleb128 0x3b
 16640 07f1 05       		.uleb128 0x5
 16641 07f2 39       		.uleb128 0x39
 16642 07f3 0B       		.uleb128 0xb
 16643 07f4 01       		.uleb128 0x1
 16644 07f5 13       		.uleb128 0x13
 16645 07f6 00       		.byte	0
 16646 07f7 00       		.byte	0
 16647 07f8 7A       		.uleb128 0x7a
 16648 07f9 2E       		.uleb128 0x2e
 16649 07fa 01       		.byte	0x1
 16650 07fb 3F       		.uleb128 0x3f
 16651 07fc 19       		.uleb128 0x19
 16652 07fd 03       		.uleb128 0x3
 16653 07fe 08       		.uleb128 0x8
 16654 07ff 3A       		.uleb128 0x3a
 16655 0800 0B       		.uleb128 0xb
 16656 0801 3B       		.uleb128 0x3b
 16657 0802 0B       		.uleb128 0xb
 16658 0803 39       		.uleb128 0x39
 16659 0804 0B       		.uleb128 0xb
 16660 0805 6E       		.uleb128 0x6e
 16661 0806 0E       		.uleb128 0xe
 16662 0807 49       		.uleb128 0x49
 16663 0808 13       		.uleb128 0x13
 16664 0809 3C       		.uleb128 0x3c
 16665 080a 19       		.uleb128 0x19
 16666 080b 01       		.uleb128 0x1
 16667 080c 13       		.uleb128 0x13
 16668 080d 00       		.byte	0
 16669 080e 00       		.byte	0
 16670 080f 7B       		.uleb128 0x7b
 16671 0810 3B       		.uleb128 0x3b
 16672 0811 00       		.byte	0
 16673 0812 03       		.uleb128 0x3
 16674 0813 0E       		.uleb128 0xe
 16675 0814 00       		.byte	0
 16676 0815 00       		.byte	0
 16677 0816 7C       		.uleb128 0x7c
 16678 0817 26       		.uleb128 0x26
 16679 0818 00       		.byte	0
 16680 0819 00       		.byte	0
 16681 081a 00       		.byte	0
 16682 081b 7D       		.uleb128 0x7d
 16683 081c 3A       		.uleb128 0x3a
 16684 081d 00       		.byte	0
 16685 081e 3A       		.uleb128 0x3a
 16686 081f 0B       		.uleb128 0xb
 16687 0820 3B       		.uleb128 0x3b
 16688 0821 0B       		.uleb128 0xb
 16689 0822 39       		.uleb128 0x39
 16690 0823 0B       		.uleb128 0xb
GAS LISTING linobj/Ch02_03.s 			page 419


 16691 0824 18       		.uleb128 0x18
 16692 0825 13       		.uleb128 0x13
 16693 0826 00       		.byte	0
 16694 0827 00       		.byte	0
 16695 0828 7E       		.uleb128 0x7e
 16696 0829 15       		.uleb128 0x15
 16697 082a 01       		.byte	0x1
 16698 082b 49       		.uleb128 0x49
 16699 082c 13       		.uleb128 0x13
 16700 082d 01       		.uleb128 0x1
 16701 082e 13       		.uleb128 0x13
 16702 082f 00       		.byte	0
 16703 0830 00       		.byte	0
 16704 0831 7F       		.uleb128 0x7f
 16705 0832 15       		.uleb128 0x15
 16706 0833 00       		.byte	0
 16707 0834 00       		.byte	0
 16708 0835 00       		.byte	0
 16709 0836 8001     		.uleb128 0x80
 16710 0838 2E       		.uleb128 0x2e
 16711 0839 01       		.byte	0x1
 16712 083a 3F       		.uleb128 0x3f
 16713 083b 19       		.uleb128 0x19
 16714 083c 03       		.uleb128 0x3
 16715 083d 08       		.uleb128 0x8
 16716 083e 3A       		.uleb128 0x3a
 16717 083f 0B       		.uleb128 0xb
 16718 0840 3B       		.uleb128 0x3b
 16719 0841 05       		.uleb128 0x5
 16720 0842 39       		.uleb128 0x39
 16721 0843 0B       		.uleb128 0xb
 16722 0844 49       		.uleb128 0x49
 16723 0845 13       		.uleb128 0x13
 16724 0846 3C       		.uleb128 0x3c
 16725 0847 19       		.uleb128 0x19
 16726 0848 01       		.uleb128 0x1
 16727 0849 13       		.uleb128 0x13
 16728 084a 00       		.byte	0
 16729 084b 00       		.byte	0
 16730 084c 8101     		.uleb128 0x81
 16731 084e 2E       		.uleb128 0x2e
 16732 084f 01       		.byte	0x1
 16733 0850 3F       		.uleb128 0x3f
 16734 0851 19       		.uleb128 0x19
 16735 0852 03       		.uleb128 0x3
 16736 0853 0E       		.uleb128 0xe
 16737 0854 3A       		.uleb128 0x3a
 16738 0855 0B       		.uleb128 0xb
 16739 0856 3B       		.uleb128 0x3b
 16740 0857 05       		.uleb128 0x5
 16741 0858 39       		.uleb128 0x39
 16742 0859 0B       		.uleb128 0xb
 16743 085a 8701     		.uleb128 0x87
 16744 085c 19       		.uleb128 0x19
 16745 085d 3C       		.uleb128 0x3c
 16746 085e 19       		.uleb128 0x19
 16747 085f 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 420


 16748 0860 13       		.uleb128 0x13
 16749 0861 00       		.byte	0
 16750 0862 00       		.byte	0
 16751 0863 8201     		.uleb128 0x82
 16752 0865 16       		.uleb128 0x16
 16753 0866 00       		.byte	0
 16754 0867 03       		.uleb128 0x3
 16755 0868 0E       		.uleb128 0xe
 16756 0869 3A       		.uleb128 0x3a
 16757 086a 0B       		.uleb128 0xb
 16758 086b 3B       		.uleb128 0x3b
 16759 086c 0B       		.uleb128 0xb
 16760 086d 39       		.uleb128 0x39
 16761 086e 0B       		.uleb128 0xb
 16762 086f 00       		.byte	0
 16763 0870 00       		.byte	0
 16764 0871 8301     		.uleb128 0x83
 16765 0873 13       		.uleb128 0x13
 16766 0874 01       		.byte	0x1
 16767 0875 03       		.uleb128 0x3
 16768 0876 0E       		.uleb128 0xe
 16769 0877 0B       		.uleb128 0xb
 16770 0878 0B       		.uleb128 0xb
 16771 0879 8801     		.uleb128 0x88
 16772 087b 0B       		.uleb128 0xb
 16773 087c 3A       		.uleb128 0x3a
 16774 087d 0B       		.uleb128 0xb
 16775 087e 3B       		.uleb128 0x3b
 16776 087f 0B       		.uleb128 0xb
 16777 0880 39       		.uleb128 0x39
 16778 0881 0B       		.uleb128 0xb
 16779 0882 01       		.uleb128 0x1
 16780 0883 13       		.uleb128 0x13
 16781 0884 00       		.byte	0
 16782 0885 00       		.byte	0
 16783 0886 8401     		.uleb128 0x84
 16784 0888 2E       		.uleb128 0x2e
 16785 0889 01       		.byte	0x1
 16786 088a 3F       		.uleb128 0x3f
 16787 088b 19       		.uleb128 0x19
 16788 088c 03       		.uleb128 0x3
 16789 088d 0E       		.uleb128 0xe
 16790 088e 3A       		.uleb128 0x3a
 16791 088f 0B       		.uleb128 0xb
 16792 0890 3B       		.uleb128 0x3b
 16793 0891 0B       		.uleb128 0xb
 16794 0892 39       		.uleb128 0x39
 16795 0893 0B       		.uleb128 0xb
 16796 0894 6E       		.uleb128 0x6e
 16797 0895 0E       		.uleb128 0xe
 16798 0896 49       		.uleb128 0x49
 16799 0897 13       		.uleb128 0x13
 16800 0898 3C       		.uleb128 0x3c
 16801 0899 19       		.uleb128 0x19
 16802 089a 64       		.uleb128 0x64
 16803 089b 13       		.uleb128 0x13
 16804 089c 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 421


 16805 089d 00       		.byte	0
 16806 089e 8501     		.uleb128 0x85
 16807 08a0 2E       		.uleb128 0x2e
 16808 08a1 01       		.byte	0x1
 16809 08a2 47       		.uleb128 0x47
 16810 08a3 13       		.uleb128 0x13
 16811 08a4 3A       		.uleb128 0x3a
 16812 08a5 0B       		.uleb128 0xb
 16813 08a6 3B       		.uleb128 0x3b
 16814 08a7 0B       		.uleb128 0xb
 16815 08a8 39       		.uleb128 0x39
 16816 08a9 0B       		.uleb128 0xb
 16817 08aa 64       		.uleb128 0x64
 16818 08ab 13       		.uleb128 0x13
 16819 08ac 20       		.uleb128 0x20
 16820 08ad 0B       		.uleb128 0xb
 16821 08ae 01       		.uleb128 0x1
 16822 08af 13       		.uleb128 0x13
 16823 08b0 00       		.byte	0
 16824 08b1 00       		.byte	0
 16825 08b2 8601     		.uleb128 0x86
 16826 08b4 01       		.uleb128 0x1
 16827 08b5 01       		.byte	0x1
 16828 08b6 49       		.uleb128 0x49
 16829 08b7 13       		.uleb128 0x13
 16830 08b8 8801     		.uleb128 0x88
 16831 08ba 0B       		.uleb128 0xb
 16832 08bb 01       		.uleb128 0x1
 16833 08bc 13       		.uleb128 0x13
 16834 08bd 00       		.byte	0
 16835 08be 00       		.byte	0
 16836 08bf 8701     		.uleb128 0x87
 16837 08c1 2E       		.uleb128 0x2e
 16838 08c2 01       		.byte	0x1
 16839 08c3 3F       		.uleb128 0x3f
 16840 08c4 19       		.uleb128 0x19
 16841 08c5 03       		.uleb128 0x3
 16842 08c6 0E       		.uleb128 0xe
 16843 08c7 3A       		.uleb128 0x3a
 16844 08c8 0B       		.uleb128 0xb
 16845 08c9 3B       		.uleb128 0x3b
 16846 08ca 0B       		.uleb128 0xb
 16847 08cb 39       		.uleb128 0x39
 16848 08cc 0B       		.uleb128 0xb
 16849 08cd 49       		.uleb128 0x49
 16850 08ce 13       		.uleb128 0x13
 16851 08cf 55       		.uleb128 0x55
 16852 08d0 17       		.uleb128 0x17
 16853 08d1 40       		.uleb128 0x40
 16854 08d2 18       		.uleb128 0x18
 16855 08d3 7A       		.uleb128 0x7a
 16856 08d4 19       		.uleb128 0x19
 16857 08d5 01       		.uleb128 0x1
 16858 08d6 13       		.uleb128 0x13
 16859 08d7 00       		.byte	0
 16860 08d8 00       		.byte	0
 16861 08d9 8801     		.uleb128 0x88
GAS LISTING linobj/Ch02_03.s 			page 422


 16862 08db 34       		.uleb128 0x34
 16863 08dc 00       		.byte	0
 16864 08dd 03       		.uleb128 0x3
 16865 08de 08       		.uleb128 0x8
 16866 08df 3A       		.uleb128 0x3a
 16867 08e0 0B       		.uleb128 0xb
 16868 08e1 3B       		.uleb128 0x3b
 16869 08e2 0B       		.uleb128 0xb
 16870 08e3 39       		.uleb128 0x39
 16871 08e4 0B       		.uleb128 0xb
 16872 08e5 49       		.uleb128 0x49
 16873 08e6 13       		.uleb128 0x13
 16874 08e7 1C       		.uleb128 0x1c
 16875 08e8 0B       		.uleb128 0xb
 16876 08e9 00       		.byte	0
 16877 08ea 00       		.byte	0
 16878 08eb 8901     		.uleb128 0x89
 16879 08ed 34       		.uleb128 0x34
 16880 08ee 00       		.byte	0
 16881 08ef 03       		.uleb128 0x3
 16882 08f0 08       		.uleb128 0x8
 16883 08f1 3A       		.uleb128 0x3a
 16884 08f2 0B       		.uleb128 0xb
 16885 08f3 3B       		.uleb128 0x3b
 16886 08f4 0B       		.uleb128 0xb
 16887 08f5 39       		.uleb128 0x39
 16888 08f6 0B       		.uleb128 0xb
 16889 08f7 49       		.uleb128 0x49
 16890 08f8 13       		.uleb128 0x13
 16891 08f9 02       		.uleb128 0x2
 16892 08fa 18       		.uleb128 0x18
 16893 08fb 00       		.byte	0
 16894 08fc 00       		.byte	0
 16895 08fd 8A01     		.uleb128 0x8a
 16896 08ff 1D       		.uleb128 0x1d
 16897 0900 01       		.byte	0x1
 16898 0901 31       		.uleb128 0x31
 16899 0902 13       		.uleb128 0x13
 16900 0903 52       		.uleb128 0x52
 16901 0904 01       		.uleb128 0x1
 16902 0905 B842     		.uleb128 0x2138
 16903 0907 05       		.uleb128 0x5
 16904 0908 55       		.uleb128 0x55
 16905 0909 17       		.uleb128 0x17
 16906 090a 58       		.uleb128 0x58
 16907 090b 0B       		.uleb128 0xb
 16908 090c 59       		.uleb128 0x59
 16909 090d 05       		.uleb128 0x5
 16910 090e 57       		.uleb128 0x57
 16911 090f 0B       		.uleb128 0xb
 16912 0910 01       		.uleb128 0x1
 16913 0911 13       		.uleb128 0x13
 16914 0912 00       		.byte	0
 16915 0913 00       		.byte	0
 16916 0914 8B01     		.uleb128 0x8b
 16917 0916 34       		.uleb128 0x34
 16918 0917 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 423


 16919 0918 31       		.uleb128 0x31
 16920 0919 13       		.uleb128 0x13
 16921 091a 1C       		.uleb128 0x1c
 16922 091b 0B       		.uleb128 0xb
 16923 091c 00       		.byte	0
 16924 091d 00       		.byte	0
 16925 091e 8C01     		.uleb128 0x8c
 16926 0920 48       		.uleb128 0x48
 16927 0921 00       		.byte	0
 16928 0922 7D       		.uleb128 0x7d
 16929 0923 01       		.uleb128 0x1
 16930 0924 8301     		.uleb128 0x83
 16931 0926 18       		.uleb128 0x18
 16932 0927 00       		.byte	0
 16933 0928 00       		.byte	0
 16934 0929 8D01     		.uleb128 0x8d
 16935 092b 34       		.uleb128 0x34
 16936 092c 00       		.byte	0
 16937 092d 03       		.uleb128 0x3
 16938 092e 0E       		.uleb128 0xe
 16939 092f 3A       		.uleb128 0x3a
 16940 0930 0B       		.uleb128 0xb
 16941 0931 3B       		.uleb128 0x3b
 16942 0932 05       		.uleb128 0x5
 16943 0933 39       		.uleb128 0x39
 16944 0934 0B       		.uleb128 0xb
 16945 0935 49       		.uleb128 0x49
 16946 0936 13       		.uleb128 0x13
 16947 0937 00       		.byte	0
 16948 0938 00       		.byte	0
 16949 0939 8E01     		.uleb128 0x8e
 16950 093b 2E       		.uleb128 0x2e
 16951 093c 00       		.byte	0
 16952 093d 3F       		.uleb128 0x3f
 16953 093e 19       		.uleb128 0x19
 16954 093f 3C       		.uleb128 0x3c
 16955 0940 19       		.uleb128 0x19
 16956 0941 6E       		.uleb128 0x6e
 16957 0942 0E       		.uleb128 0xe
 16958 0943 03       		.uleb128 0x3
 16959 0944 0E       		.uleb128 0xe
 16960 0945 00       		.byte	0
 16961 0946 00       		.byte	0
 16962 0947 00       		.byte	0
 16963              		.section	.debug_loclists,"",@progbits
 16964 0000 EB0B0000 		.long	.Ldebug_loc3-.Ldebug_loc2
 16965              	.Ldebug_loc2:
 16966 0004 0500     		.value	0x5
 16967 0006 08       		.byte	0x8
 16968 0007 00       		.byte	0
 16969 0008 00000000 		.long	0
 16970              	.Ldebug_loc0:
 16971              	.LVUS4:
 16972 000c 00       		.uleb128 .LVU9
 16973 000d 00       		.uleb128 .LVU17
 16974 000e 00       		.uleb128 .LVU17
 16975 000f 00       		.uleb128 .LVU24
GAS LISTING linobj/Ch02_03.s 			page 424


 16976              	.LLST4:
 16977 0010 06       		.byte	0x6
 16978 0011 00000000 		.quad	.LVL1
 16978      00000000 
 16979 0019 04       		.byte	0x4
 16980 001a 00       		.uleb128 .LVL1-.LVL1
 16981 001b 05       		.uleb128 .LVL2-.LVL1
 16982 001c 04       		.uleb128 0x4
 16983 001d 91       		.byte	0x91
 16984 001e 807F     		.sleb128 -128
 16985 0020 9F       		.byte	0x9f
 16986 0021 04       		.byte	0x4
 16987 0022 05       		.uleb128 .LVL2-.LVL1
 16988 0023 21       		.uleb128 .LVL5-.LVL1
 16989 0024 01       		.uleb128 0x1
 16990 0025 5E       		.byte	0x5e
 16991 0026 00       		.byte	0
 16992              	.LVUS5:
 16993 0027 00       		.uleb128 .LVU9
 16994 0028 00       		.uleb128 .LVU24
 16995              	.LLST5:
 16996 0029 08       		.byte	0x8
 16997 002a 00000000 		.quad	.LVL1
 16997      00000000 
 16998 0032 21       		.uleb128 .LVL5-.LVL1
 16999 0033 03       		.uleb128 0x3
 17000 0034 08       		.byte	0x8
 17001 0035 4B       		.byte	0x4b
 17002 0036 9F       		.byte	0x9f
 17003 0037 00       		.byte	0
 17004              	.LVUS6:
 17005 0038 00       		.uleb128 .LVU9
 17006 0039 00       		.uleb128 .LVU24
 17007              	.LLST6:
 17008 003a 08       		.byte	0x8
 17009 003b 00000000 		.quad	.LVL1
 17009      00000000 
 17010 0043 21       		.uleb128 .LVL5-.LVL1
 17011 0044 03       		.uleb128 0x3
 17012 0045 08       		.byte	0x8
 17013 0046 2D       		.byte	0x2d
 17014 0047 9F       		.byte	0x9f
 17015 0048 00       		.byte	0
 17016              	.LVUS8:
 17017 0049 01       		.uleb128 .LVU10
 17018 004a 02       		.uleb128 .LVU11
 17019              	.LLST8:
 17020 004b 08       		.byte	0x8
 17021 004c 00000000 		.quad	.LVL1
 17021      00000000 
 17022 0054 00       		.uleb128 .LVL1-.LVL1
 17023 0055 04       		.uleb128 0x4
 17024 0056 91       		.byte	0x91
 17025 0057 807F     		.sleb128 -128
 17026 0059 9F       		.byte	0x9f
 17027 005a 00       		.byte	0
 17028              	.LVUS10:
GAS LISTING linobj/Ch02_03.s 			page 425


 17029 005b 02       		.uleb128 .LVU11
 17030 005c 00       		.uleb128 .LVU17
 17031 005d 00       		.uleb128 .LVU17
 17032 005e 00       		.uleb128 .LVU21
 17033              	.LLST10:
 17034 005f 06       		.byte	0x6
 17035 0060 00000000 		.quad	.LVL1
 17035      00000000 
 17036 0068 04       		.byte	0x4
 17037 0069 00       		.uleb128 .LVL1-.LVL1
 17038 006a 05       		.uleb128 .LVL2-.LVL1
 17039 006b 04       		.uleb128 0x4
 17040 006c 91       		.byte	0x91
 17041 006d 807F     		.sleb128 -128
 17042 006f 9F       		.byte	0x9f
 17043 0070 04       		.byte	0x4
 17044 0071 05       		.uleb128 .LVL2-.LVL1
 17045 0072 12       		.uleb128 .LVL4-.LVL1
 17046 0073 01       		.uleb128 0x1
 17047 0074 5E       		.byte	0x5e
 17048 0075 00       		.byte	0
 17049              	.LVUS11:
 17050 0076 02       		.uleb128 .LVU11
 17051 0077 00       		.uleb128 .LVU18
 17052 0078 00       		.uleb128 .LVU18
 17053 0079 00       		.uleb128 .LVU21
 17054              	.LLST11:
 17055 007a 06       		.byte	0x6
 17056 007b 00000000 		.quad	.LVL1
 17056      00000000 
 17057 0083 04       		.byte	0x4
 17058 0084 00       		.uleb128 .LVL1-.LVL1
 17059 0085 0A       		.uleb128 .LVL3-.LVL1
 17060 0086 04       		.uleb128 0x4
 17061 0087 91       		.byte	0x91
 17062 0088 907F     		.sleb128 -112
 17063 008a 9F       		.byte	0x9f
 17064 008b 04       		.byte	0x4
 17065 008c 0A       		.uleb128 .LVL3-.LVL1
 17066 008d 12       		.uleb128 .LVL4-.LVL1
 17067 008e 01       		.uleb128 0x1
 17068 008f 50       		.byte	0x50
 17069 0090 00       		.byte	0
 17070              	.LVUS13:
 17071 0091 04       		.uleb128 .LVU13
 17072 0092 06       		.uleb128 .LVU15
 17073              	.LLST13:
 17074 0093 08       		.byte	0x8
 17075 0094 00000000 		.quad	.LVL1
 17075      00000000 
 17076 009c 00       		.uleb128 .LVL1-.LVL1
 17077 009d 04       		.uleb128 0x4
 17078 009e 91       		.byte	0x91
 17079 009f 807F     		.sleb128 -128
 17080 00a1 9F       		.byte	0x9f
 17081 00a2 00       		.byte	0
 17082              	.LVUS15:
GAS LISTING linobj/Ch02_03.s 			page 426


 17083 00a3 05       		.uleb128 .LVU14
 17084 00a4 06       		.uleb128 .LVU15
 17085              	.LLST15:
 17086 00a5 08       		.byte	0x8
 17087 00a6 00000000 		.quad	.LVL1
 17087      00000000 
 17088 00ae 00       		.uleb128 .LVL1-.LVL1
 17089 00af 04       		.uleb128 0x4
 17090 00b0 91       		.byte	0x91
 17091 00b1 807F     		.sleb128 -128
 17092 00b3 9F       		.byte	0x9f
 17093 00b4 00       		.byte	0
 17094              	.LVUS18:
 17095 00b5 01       		.uleb128 .LVU56
 17096 00b6 00       		.uleb128 .LVU59
 17097              	.LLST18:
 17098 00b7 08       		.byte	0x8
 17099 00b8 00000000 		.quad	.LVL6
 17099      00000000 
 17100 00c0 16       		.uleb128 .LVL8-.LVL6
 17101 00c1 0A       		.uleb128 0xa
 17102 00c2 03       		.byte	0x3
 17103 00c3 00000000 		.quad	.LC2
 17103      00000000 
 17104 00cb 9F       		.byte	0x9f
 17105 00cc 00       		.byte	0
 17106              	.LVUS20:
 17107 00cd 00       		.uleb128 .LVU59
 17108 00ce 00       		.uleb128 .LVU184
 17109 00cf 00       		.uleb128 .LVU481
 17110 00d0 00       		.uleb128 .LVU486
 17111              	.LLST20:
 17112 00d1 06       		.byte	0x6
 17113 00d2 00000000 		.quad	.LVL8
 17113      00000000 
 17114 00da 04       		.byte	0x4
 17115 00db 00       		.uleb128 .LVL8-.LVL8
 17116 00dc ED03     		.uleb128 .LVL56-.LVL8
 17117 00de 01       		.uleb128 0x1
 17118 00df 53       		.byte	0x53
 17119 00e0 04       		.byte	0x4
 17120 00e1 9C0C     		.uleb128 .LVL151-.LVL8
 17121 00e3 C10C     		.uleb128 .LVL155-.LVL8
 17122 00e5 01       		.uleb128 0x1
 17123 00e6 53       		.byte	0x53
 17124 00e7 00       		.byte	0
 17125              	.LVUS21:
 17126 00e8 01       		.uleb128 .LVU60
 17127 00e9 00       		.uleb128 .LVU62
 17128              	.LLST21:
 17129 00ea 08       		.byte	0x8
 17130 00eb 00000000 		.quad	.LVL8
 17130      00000000 
 17131 00f3 16       		.uleb128 .LVL9-.LVL8
 17132 00f4 0A       		.uleb128 0xa
 17133 00f5 03       		.byte	0x3
 17134 00f6 00000000 		.quad	.LC3
GAS LISTING linobj/Ch02_03.s 			page 427


 17134      00000000 
 17135 00fe 9F       		.byte	0x9f
 17136 00ff 00       		.byte	0
 17137              	.LVUS23:
 17138 0100 00       		.uleb128 .LVU62
 17139 0101 00       		.uleb128 .LVU67
 17140              	.LLST23:
 17141 0102 08       		.byte	0x8
 17142 0103 00000000 		.quad	.LVL9
 17142      00000000 
 17143 010b 1D       		.uleb128 .LVL11-.LVL9
 17144 010c 01       		.uleb128 0x1
 17145 010d 53       		.byte	0x53
 17146 010e 00       		.byte	0
 17147              	.LVUS25:
 17148 010f 00       		.uleb128 .LVU67
 17149 0110 00       		.uleb128 .LVU70
 17150 0111 00       		.uleb128 .LVU70
 17151 0112 00       		.uleb128 .LVU70
 17152              	.LLST25:
 17153 0113 06       		.byte	0x6
 17154 0114 00000000 		.quad	.LVL11
 17154      00000000 
 17155 011c 04       		.byte	0x4
 17156 011d 00       		.uleb128 .LVL11-.LVL11
 17157 011e 04       		.uleb128 .LVL12-1-.LVL11
 17158 011f 01       		.uleb128 0x1
 17159 0120 50       		.byte	0x50
 17160 0121 04       		.byte	0x4
 17161 0122 04       		.uleb128 .LVL12-1-.LVL11
 17162 0123 05       		.uleb128 .LVL12-.LVL11
 17163 0124 01       		.uleb128 0x1
 17164 0125 5F       		.byte	0x5f
 17165 0126 00       		.byte	0
 17166              	.LVUS26:
 17167 0127 00       		.uleb128 .LVU67
 17168 0128 00       		.uleb128 .LVU70
 17169              	.LLST26:
 17170 0129 08       		.byte	0x8
 17171 012a 00000000 		.quad	.LVL11
 17171      00000000 
 17172 0132 05       		.uleb128 .LVL12-.LVL11
 17173 0133 0A       		.uleb128 0xa
 17174 0134 03       		.byte	0x3
 17175 0135 00000000 		.quad	.LC4
 17175      00000000 
 17176 013d 9F       		.byte	0x9f
 17177 013e 00       		.byte	0
 17178              	.LVUS28:
 17179 013f 00       		.uleb128 .LVU70
 17180 0140 01       		.uleb128 .LVU79
 17181              	.LLST28:
 17182 0141 08       		.byte	0x8
 17183 0142 00000000 		.quad	.LVL12
 17183      00000000 
 17184 014a 13       		.uleb128 .LVL13-.LVL12
 17185 014b 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 428


 17186 014c 5F       		.byte	0x5f
 17187 014d 00       		.byte	0
 17188              	.LVUS30:
 17189 014e 02       		.uleb128 .LVU72
 17190 014f 00       		.uleb128 .LVU78
 17191 0150 00       		.uleb128 .LVU78
 17192 0151 01       		.uleb128 .LVU79
 17193              	.LLST30:
 17194 0152 08       		.byte	0x8
 17195 0153 00000000 		.quad	.LVL12
 17195      00000000 
 17196 015b 13       		.uleb128 .LVL13-.LVL12
 17197 015c 0A       		.uleb128 0xa
 17198 015d 7F       		.byte	0x7f
 17199 015e 00       		.sleb128 0
 17200 015f 7F       		.byte	0x7f
 17201 0160 00       		.sleb128 0
 17202 0161 06       		.byte	0x6
 17203 0162 48       		.byte	0x48
 17204 0163 1C       		.byte	0x1c
 17205 0164 06       		.byte	0x6
 17206 0165 22       		.byte	0x22
 17207 0166 9F       		.byte	0x9f
 17208 0167 08       		.byte	0x8
 17209 0168 00000000 		.quad	.LVL13
 17209      00000000 
 17210 0170 00       		.uleb128 .LVL13-.LVL13
 17211 0171 06       		.uleb128 0x6
 17212 0172 7F       		.byte	0x7f
 17213 0173 00       		.sleb128 0
 17214 0174 70       		.byte	0x70
 17215 0175 00       		.sleb128 0
 17216 0176 22       		.byte	0x22
 17217 0177 9F       		.byte	0x9f
 17218 0178 00       		.byte	0
 17219              	.LVUS31:
 17220 0179 02       		.uleb128 .LVU72
 17221 017a 01       		.uleb128 .LVU79
 17222              	.LLST31:
 17223 017b 08       		.byte	0x8
 17224 017c 00000000 		.quad	.LVL12
 17224      00000000 
 17225 0184 13       		.uleb128 .LVL13-.LVL12
 17226 0185 02       		.uleb128 0x2
 17227 0186 38       		.byte	0x38
 17228 0187 9F       		.byte	0x9f
 17229 0188 00       		.byte	0
 17230              	.LVUS32:
 17231 0189 04       		.uleb128 .LVU74
 17232 018a 00       		.uleb128 .LVU78
 17233              	.LLST32:
 17234 018b 08       		.byte	0x8
 17235 018c 00000000 		.quad	.LVL12
 17235      00000000 
 17236 0194 13       		.uleb128 .LVL13-.LVL12
 17237 0195 0B       		.uleb128 0xb
 17238 0196 7F       		.byte	0x7f
GAS LISTING linobj/Ch02_03.s 			page 429


 17239 0197 00       		.sleb128 0
 17240 0198 7F       		.byte	0x7f
 17241 0199 00       		.sleb128 0
 17242 019a 06       		.byte	0x6
 17243 019b 48       		.byte	0x48
 17244 019c 1C       		.byte	0x1c
 17245 019d 06       		.byte	0x6
 17246 019e 22       		.byte	0x22
 17247 019f 23       		.byte	0x23
 17248 01a0 10       		.uleb128 0x10
 17249 01a1 00       		.byte	0
 17250              	.LVUS33:
 17251 01a2 00       		.uleb128 .LVU81
 17252 01a3 00       		.uleb128 .LVU83
 17253              	.LLST33:
 17254 01a4 08       		.byte	0x8
 17255 01a5 00000000 		.quad	.LVL15
 17255      00000000 
 17256 01ad 0E       		.uleb128 .LVL16-1-.LVL15
 17257 01ae 01       		.uleb128 0x1
 17258 01af 50       		.byte	0x50
 17259 01b0 00       		.byte	0
 17260              	.LVUS34:
 17261 01b1 00       		.uleb128 .LVU81
 17262 01b2 00       		.uleb128 .LVU83
 17263              	.LLST34:
 17264 01b3 08       		.byte	0x8
 17265 01b4 00000000 		.quad	.LVL15
 17265      00000000 
 17266 01bc 0F       		.uleb128 .LVL16-.LVL15
 17267 01bd 0A       		.uleb128 0xa
 17268 01be 03       		.byte	0x3
 17269 01bf 00000000 		.quad	.LC5
 17269      00000000 
 17270 01c7 9F       		.byte	0x9f
 17271 01c8 00       		.byte	0
 17272              	.LVUS35:
 17273 01c9 02       		.uleb128 .LVU85
 17274 01ca 00       		.uleb128 .LVU87
 17275              	.LLST35:
 17276 01cb 08       		.byte	0x8
 17277 01cc 00000000 		.quad	.LVL16
 17277      00000000 
 17278 01d4 14       		.uleb128 .LVL17-.LVL16
 17279 01d5 0A       		.uleb128 0xa
 17280 01d6 03       		.byte	0x3
 17281 01d7 00000000 		.quad	.LC6
 17281      00000000 
 17282 01df 9F       		.byte	0x9f
 17283 01e0 00       		.byte	0
 17284              	.LVUS37:
 17285 01e1 00       		.uleb128 .LVU87
 17286 01e2 00       		.uleb128 .LVU92
 17287              	.LLST37:
 17288 01e3 08       		.byte	0x8
 17289 01e4 00000000 		.quad	.LVL17
 17289      00000000 
GAS LISTING linobj/Ch02_03.s 			page 430


 17290 01ec 1D       		.uleb128 .LVL19-.LVL17
 17291 01ed 01       		.uleb128 0x1
 17292 01ee 53       		.byte	0x53
 17293 01ef 00       		.byte	0
 17294              	.LVUS39:
 17295 01f0 00       		.uleb128 .LVU92
 17296 01f1 00       		.uleb128 .LVU95
 17297 01f2 00       		.uleb128 .LVU95
 17298 01f3 00       		.uleb128 .LVU95
 17299              	.LLST39:
 17300 01f4 06       		.byte	0x6
 17301 01f5 00000000 		.quad	.LVL19
 17301      00000000 
 17302 01fd 04       		.byte	0x4
 17303 01fe 00       		.uleb128 .LVL19-.LVL19
 17304 01ff 04       		.uleb128 .LVL20-1-.LVL19
 17305 0200 01       		.uleb128 0x1
 17306 0201 50       		.byte	0x50
 17307 0202 04       		.byte	0x4
 17308 0203 04       		.uleb128 .LVL20-1-.LVL19
 17309 0204 05       		.uleb128 .LVL20-.LVL19
 17310 0205 01       		.uleb128 0x1
 17311 0206 5F       		.byte	0x5f
 17312 0207 00       		.byte	0
 17313              	.LVUS40:
 17314 0208 00       		.uleb128 .LVU92
 17315 0209 00       		.uleb128 .LVU95
 17316              	.LLST40:
 17317 020a 08       		.byte	0x8
 17318 020b 00000000 		.quad	.LVL19
 17318      00000000 
 17319 0213 05       		.uleb128 .LVL20-.LVL19
 17320 0214 0A       		.uleb128 0xa
 17321 0215 03       		.byte	0x3
 17322 0216 00000000 		.quad	.LC4
 17322      00000000 
 17323 021e 9F       		.byte	0x9f
 17324 021f 00       		.byte	0
 17325              	.LVUS42:
 17326 0220 00       		.uleb128 .LVU95
 17327 0221 01       		.uleb128 .LVU104
 17328              	.LLST42:
 17329 0222 08       		.byte	0x8
 17330 0223 00000000 		.quad	.LVL20
 17330      00000000 
 17331 022b 13       		.uleb128 .LVL21-.LVL20
 17332 022c 01       		.uleb128 0x1
 17333 022d 5F       		.byte	0x5f
 17334 022e 00       		.byte	0
 17335              	.LVUS44:
 17336 022f 02       		.uleb128 .LVU97
 17337 0230 00       		.uleb128 .LVU103
 17338 0231 00       		.uleb128 .LVU103
 17339 0232 01       		.uleb128 .LVU104
 17340              	.LLST44:
 17341 0233 08       		.byte	0x8
 17342 0234 00000000 		.quad	.LVL20
GAS LISTING linobj/Ch02_03.s 			page 431


 17342      00000000 
 17343 023c 13       		.uleb128 .LVL21-.LVL20
 17344 023d 0A       		.uleb128 0xa
 17345 023e 7F       		.byte	0x7f
 17346 023f 00       		.sleb128 0
 17347 0240 7F       		.byte	0x7f
 17348 0241 00       		.sleb128 0
 17349 0242 06       		.byte	0x6
 17350 0243 48       		.byte	0x48
 17351 0244 1C       		.byte	0x1c
 17352 0245 06       		.byte	0x6
 17353 0246 22       		.byte	0x22
 17354 0247 9F       		.byte	0x9f
 17355 0248 08       		.byte	0x8
 17356 0249 00000000 		.quad	.LVL21
 17356      00000000 
 17357 0251 00       		.uleb128 .LVL21-.LVL21
 17358 0252 06       		.uleb128 0x6
 17359 0253 7F       		.byte	0x7f
 17360 0254 00       		.sleb128 0
 17361 0255 70       		.byte	0x70
 17362 0256 00       		.sleb128 0
 17363 0257 22       		.byte	0x22
 17364 0258 9F       		.byte	0x9f
 17365 0259 00       		.byte	0
 17366              	.LVUS45:
 17367 025a 02       		.uleb128 .LVU97
 17368 025b 01       		.uleb128 .LVU104
 17369              	.LLST45:
 17370 025c 08       		.byte	0x8
 17371 025d 00000000 		.quad	.LVL20
 17371      00000000 
 17372 0265 13       		.uleb128 .LVL21-.LVL20
 17373 0266 02       		.uleb128 0x2
 17374 0267 38       		.byte	0x38
 17375 0268 9F       		.byte	0x9f
 17376 0269 00       		.byte	0
 17377              	.LVUS46:
 17378 026a 04       		.uleb128 .LVU99
 17379 026b 00       		.uleb128 .LVU103
 17380              	.LLST46:
 17381 026c 08       		.byte	0x8
 17382 026d 00000000 		.quad	.LVL20
 17382      00000000 
 17383 0275 13       		.uleb128 .LVL21-.LVL20
 17384 0276 0B       		.uleb128 0xb
 17385 0277 7F       		.byte	0x7f
 17386 0278 00       		.sleb128 0
 17387 0279 7F       		.byte	0x7f
 17388 027a 00       		.sleb128 0
 17389 027b 06       		.byte	0x6
 17390 027c 48       		.byte	0x48
 17391 027d 1C       		.byte	0x1c
 17392 027e 06       		.byte	0x6
 17393 027f 22       		.byte	0x22
 17394 0280 23       		.byte	0x23
 17395 0281 10       		.uleb128 0x10
GAS LISTING linobj/Ch02_03.s 			page 432


 17396 0282 00       		.byte	0
 17397              	.LVUS47:
 17398 0283 00       		.uleb128 .LVU106
 17399 0284 00       		.uleb128 .LVU108
 17400              	.LLST47:
 17401 0285 08       		.byte	0x8
 17402 0286 00000000 		.quad	.LVL23
 17402      00000000 
 17403 028e 0E       		.uleb128 .LVL24-1-.LVL23
 17404 028f 01       		.uleb128 0x1
 17405 0290 50       		.byte	0x50
 17406 0291 00       		.byte	0
 17407              	.LVUS48:
 17408 0292 00       		.uleb128 .LVU106
 17409 0293 00       		.uleb128 .LVU108
 17410              	.LLST48:
 17411 0294 08       		.byte	0x8
 17412 0295 00000000 		.quad	.LVL23
 17412      00000000 
 17413 029d 0F       		.uleb128 .LVL24-.LVL23
 17414 029e 0A       		.uleb128 0xa
 17415 029f 03       		.byte	0x3
 17416 02a0 00000000 		.quad	.LC5
 17416      00000000 
 17417 02a8 9F       		.byte	0x9f
 17418 02a9 00       		.byte	0
 17419              	.LVUS50:
 17420 02aa 01       		.uleb128 .LVU113
 17421 02ab 00       		.uleb128 .LVU115
 17422              	.LLST50:
 17423 02ac 08       		.byte	0x8
 17424 02ad 00000000 		.quad	.LVL25
 17424      00000000 
 17425 02b5 0F       		.uleb128 .LVL26-.LVL25
 17426 02b6 0A       		.uleb128 0xa
 17427 02b7 03       		.byte	0x3
 17428 02b8 00000000 		.quad	.LC7
 17428      00000000 
 17429 02c0 9F       		.byte	0x9f
 17430 02c1 00       		.byte	0
 17431              	.LVUS51:
 17432 02c2 00       		.uleb128 .LVU115
 17433 02c3 00       		.uleb128 .LVU118
 17434              	.LLST51:
 17435 02c4 08       		.byte	0x8
 17436 02c5 00000000 		.quad	.LVL26
 17436      00000000 
 17437 02cd 10       		.uleb128 .LVL28-.LVL26
 17438 02ce 01       		.uleb128 0x1
 17439 02cf 53       		.byte	0x53
 17440 02d0 00       		.byte	0
 17441              	.LVUS52:
 17442 02d1 00       		.uleb128 .LVU118
 17443 02d2 00       		.uleb128 .LVU121
 17444              	.LLST52:
 17445 02d3 08       		.byte	0x8
 17446 02d4 00000000 		.quad	.LVL28
GAS LISTING linobj/Ch02_03.s 			page 433


 17446      00000000 
 17447 02dc 0E       		.uleb128 .LVL29-1-.LVL28
 17448 02dd 01       		.uleb128 0x1
 17449 02de 50       		.byte	0x50
 17450 02df 00       		.byte	0
 17451              	.LVUS53:
 17452 02e0 00       		.uleb128 .LVU118
 17453 02e1 00       		.uleb128 .LVU121
 17454              	.LLST53:
 17455 02e2 08       		.byte	0x8
 17456 02e3 00000000 		.quad	.LVL28
 17456      00000000 
 17457 02eb 0F       		.uleb128 .LVL29-.LVL28
 17458 02ec 0A       		.uleb128 0xa
 17459 02ed 03       		.byte	0x3
 17460 02ee 00000000 		.quad	.LC4
 17460      00000000 
 17461 02f6 9F       		.byte	0x9f
 17462 02f7 00       		.byte	0
 17463              	.LVUS56:
 17464 02f8 03       		.uleb128 .LVU124
 17465 02f9 01       		.uleb128 .LVU132
 17466              	.LLST56:
 17467 02fa 08       		.byte	0x8
 17468 02fb 00000000 		.quad	.LVL29
 17468      00000000 
 17469 0303 1F       		.uleb128 .LVL32-.LVL29
 17470 0304 02       		.uleb128 0x2
 17471 0305 3C       		.byte	0x3c
 17472 0306 9F       		.byte	0x9f
 17473 0307 00       		.byte	0
 17474              	.LVUS58:
 17475 0308 00       		.uleb128 .LVU134
 17476 0309 00       		.uleb128 .LVU135
 17477 030a 00       		.uleb128 .LVU135
 17478 030b 00       		.uleb128 .LVU144
 17479 030c 00       		.uleb128 .LVU484
 17480 030d 00       		.uleb128 .LVU485
 17481              	.LLST58:
 17482 030e 06       		.byte	0x6
 17483 030f 00000000 		.quad	.LVL34
 17483      00000000 
 17484 0317 04       		.byte	0x4
 17485 0318 00       		.uleb128 .LVL34-.LVL34
 17486 0319 03       		.uleb128 .LVL35-.LVL34
 17487 031a 01       		.uleb128 0x1
 17488 031b 50       		.byte	0x50
 17489 031c 04       		.byte	0x4
 17490 031d 03       		.uleb128 .LVL35-.LVL34
 17491 031e 26       		.uleb128 .LVL38-1-.LVL34
 17492 031f 01       		.uleb128 0x1
 17493 0320 55       		.byte	0x55
 17494 0321 04       		.byte	0x4
 17495 0322 800A     		.uleb128 .LVL153-.LVL34
 17496 0324 8A0A     		.uleb128 .LVL154-1-.LVL34
 17497 0326 01       		.uleb128 0x1
 17498 0327 55       		.byte	0x55
GAS LISTING linobj/Ch02_03.s 			page 434


 17499 0328 00       		.byte	0
 17500              	.LVUS59:
 17501 0329 00       		.uleb128 .LVU136
 17502 032a 00       		.uleb128 .LVU143
 17503 032b 00       		.uleb128 .LVU143
 17504 032c 00       		.uleb128 .LVU144
 17505 032d 00       		.uleb128 .LVU484
 17506 032e 00       		.uleb128 .LVU485
 17507              	.LLST59:
 17508 032f 06       		.byte	0x6
 17509 0330 00000000 		.quad	.LVL36
 17509      00000000 
 17510 0338 04       		.byte	0x4
 17511 0339 00       		.uleb128 .LVL36-.LVL36
 17512 033a 15       		.uleb128 .LVL37-.LVL36
 17513 033b 03       		.uleb128 0x3
 17514 033c 91       		.byte	0x91
 17515 033d DB7E     		.sleb128 -165
 17516 033f 04       		.byte	0x4
 17517 0340 15       		.uleb128 .LVL37-.LVL36
 17518 0341 1E       		.uleb128 .LVL38-1-.LVL36
 17519 0342 02       		.uleb128 0x2
 17520 0343 74       		.byte	0x74
 17521 0344 00       		.sleb128 0
 17522 0345 04       		.byte	0x4
 17523 0346 F809     		.uleb128 .LVL153-.LVL36
 17524 0348 820A     		.uleb128 .LVL154-1-.LVL36
 17525 034a 03       		.uleb128 0x3
 17526 034b 91       		.byte	0x91
 17527 034c DB7E     		.sleb128 -165
 17528 034e 00       		.byte	0
 17529              	.LVUS60:
 17530 034f 01       		.uleb128 .LVU148
 17531 0350 00       		.uleb128 .LVU150
 17532              	.LLST60:
 17533 0351 08       		.byte	0x8
 17534 0352 00000000 		.quad	.LVL40
 17534      00000000 
 17535 035a 0F       		.uleb128 .LVL41-.LVL40
 17536 035b 0A       		.uleb128 0xa
 17537 035c 03       		.byte	0x3
 17538 035d 00000000 		.quad	.LC8
 17538      00000000 
 17539 0365 9F       		.byte	0x9f
 17540 0366 00       		.byte	0
 17541              	.LVUS62:
 17542 0367 00       		.uleb128 .LVU150
 17543 0368 00       		.uleb128 .LVU153
 17544 0369 00       		.uleb128 .LVU153
 17545 036a 00       		.uleb128 .LVU154
 17546 036b 00       		.uleb128 .LVU154
 17547 036c 00       		.uleb128 .LVU155
 17548              	.LLST62:
 17549 036d 06       		.byte	0x6
 17550 036e 00000000 		.quad	.LVL41
 17550      00000000 
 17551 0376 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 435


 17552 0377 00       		.uleb128 .LVL41-.LVL41
 17553 0378 04       		.uleb128 .LVL42-.LVL41
 17554 0379 03       		.uleb128 0x3
 17555 037a 73       		.byte	0x73
 17556 037b 7C       		.sleb128 -4
 17557 037c 9F       		.byte	0x9f
 17558 037d 04       		.byte	0x4
 17559 037e 04       		.uleb128 .LVL42-.LVL41
 17560 037f 0D       		.uleb128 .LVL43-1-.LVL41
 17561 0380 01       		.uleb128 0x1
 17562 0381 54       		.byte	0x54
 17563 0382 04       		.byte	0x4
 17564 0383 0D       		.uleb128 .LVL43-1-.LVL41
 17565 0384 11       		.uleb128 .LVL44-.LVL41
 17566 0385 03       		.uleb128 0x3
 17567 0386 73       		.byte	0x73
 17568 0387 7C       		.sleb128 -4
 17569 0388 9F       		.byte	0x9f
 17570 0389 00       		.byte	0
 17571              	.LVUS63:
 17572 038a 00       		.uleb128 .LVU155
 17573 038b 00       		.uleb128 .LVU158
 17574              	.LLST63:
 17575 038c 08       		.byte	0x8
 17576 038d 00000000 		.quad	.LVL44
 17576      00000000 
 17577 0395 0E       		.uleb128 .LVL45-1-.LVL44
 17578 0396 01       		.uleb128 0x1
 17579 0397 50       		.byte	0x50
 17580 0398 00       		.byte	0
 17581              	.LVUS64:
 17582 0399 00       		.uleb128 .LVU155
 17583 039a 00       		.uleb128 .LVU158
 17584              	.LLST64:
 17585 039b 08       		.byte	0x8
 17586 039c 00000000 		.quad	.LVL44
 17586      00000000 
 17587 03a4 0F       		.uleb128 .LVL45-.LVL44
 17588 03a5 0A       		.uleb128 0xa
 17589 03a6 03       		.byte	0x3
 17590 03a7 00000000 		.quad	.LC4
 17590      00000000 
 17591 03af 9F       		.byte	0x9f
 17592 03b0 00       		.byte	0
 17593              	.LVUS67:
 17594 03b1 03       		.uleb128 .LVU161
 17595 03b2 01       		.uleb128 .LVU169
 17596              	.LLST67:
 17597 03b3 08       		.byte	0x8
 17598 03b4 00000000 		.quad	.LVL45
 17598      00000000 
 17599 03bc 1F       		.uleb128 .LVL48-.LVL45
 17600 03bd 02       		.uleb128 0x2
 17601 03be 3C       		.byte	0x3c
 17602 03bf 9F       		.byte	0x9f
 17603 03c0 00       		.byte	0
 17604              	.LVUS69:
GAS LISTING linobj/Ch02_03.s 			page 436


 17605 03c1 00       		.uleb128 .LVU171
 17606 03c2 00       		.uleb128 .LVU172
 17607 03c3 00       		.uleb128 .LVU172
 17608 03c4 00       		.uleb128 .LVU181
 17609 03c5 00       		.uleb128 .LVU481
 17610 03c6 00       		.uleb128 .LVU483
 17611              	.LLST69:
 17612 03c7 06       		.byte	0x6
 17613 03c8 00000000 		.quad	.LVL50
 17613      00000000 
 17614 03d0 04       		.byte	0x4
 17615 03d1 00       		.uleb128 .LVL50-.LVL50
 17616 03d2 03       		.uleb128 .LVL51-.LVL50
 17617 03d3 01       		.uleb128 0x1
 17618 03d4 50       		.byte	0x50
 17619 03d5 04       		.byte	0x4
 17620 03d6 03       		.uleb128 .LVL51-.LVL50
 17621 03d7 26       		.uleb128 .LVL54-1-.LVL50
 17622 03d8 01       		.uleb128 0x1
 17623 03d9 55       		.byte	0x55
 17624 03da 04       		.byte	0x4
 17625 03db E408     		.uleb128 .LVL151-.LVL50
 17626 03dd F308     		.uleb128 .LVL152-1-.LVL50
 17627 03df 01       		.uleb128 0x1
 17628 03e0 55       		.byte	0x55
 17629 03e1 00       		.byte	0
 17630              	.LVUS70:
 17631 03e2 00       		.uleb128 .LVU173
 17632 03e3 00       		.uleb128 .LVU180
 17633 03e4 00       		.uleb128 .LVU180
 17634 03e5 00       		.uleb128 .LVU181
 17635 03e6 00       		.uleb128 .LVU481
 17636 03e7 00       		.uleb128 .LVU483
 17637              	.LLST70:
 17638 03e8 06       		.byte	0x6
 17639 03e9 00000000 		.quad	.LVL52
 17639      00000000 
 17640 03f1 04       		.byte	0x4
 17641 03f2 00       		.uleb128 .LVL52-.LVL52
 17642 03f3 1A       		.uleb128 .LVL53-.LVL52
 17643 03f4 03       		.uleb128 0x3
 17644 03f5 91       		.byte	0x91
 17645 03f6 DC7E     		.sleb128 -164
 17646 03f8 04       		.byte	0x4
 17647 03f9 1A       		.uleb128 .LVL53-.LVL52
 17648 03fa 1E       		.uleb128 .LVL54-1-.LVL52
 17649 03fb 02       		.uleb128 0x2
 17650 03fc 74       		.byte	0x74
 17651 03fd 00       		.sleb128 0
 17652 03fe 04       		.byte	0x4
 17653 03ff DC08     		.uleb128 .LVL151-.LVL52
 17654 0401 EB08     		.uleb128 .LVL152-1-.LVL52
 17655 0403 03       		.uleb128 0x3
 17656 0404 91       		.byte	0x91
 17657 0405 DC7E     		.sleb128 -164
 17658 0407 00       		.byte	0
 17659              	.LVUS74:
GAS LISTING linobj/Ch02_03.s 			page 437


 17660 0408 00       		.uleb128 .LVU189
 17661 0409 00       		.uleb128 .LVU196
 17662              	.LLST74:
 17663 040a 08       		.byte	0x8
 17664 040b 00000000 		.quad	.LVL58
 17664      00000000 
 17665 0413 04       		.uleb128 .LVL59-1-.LVL58
 17666 0414 01       		.uleb128 0x1
 17667 0415 50       		.byte	0x50
 17668 0416 00       		.byte	0
 17669              	.LVUS75:
 17670 0417 00       		.uleb128 .LVU189
 17671 0418 00       		.uleb128 .LVU197
 17672              	.LLST75:
 17673 0419 08       		.byte	0x8
 17674 041a 00000000 		.quad	.LVL58
 17674      00000000 
 17675 0422 08       		.uleb128 .LVL60-.LVL58
 17676 0423 01       		.uleb128 0x1
 17677 0424 5E       		.byte	0x5e
 17678 0425 00       		.byte	0
 17679              	.LVUS76:
 17680 0426 01       		.uleb128 .LVU190
 17681 0427 02       		.uleb128 .LVU191
 17682              	.LLST76:
 17683 0428 08       		.byte	0x8
 17684 0429 00000000 		.quad	.LVL58
 17684      00000000 
 17685 0431 00       		.uleb128 .LVL58-.LVL58
 17686 0432 01       		.uleb128 0x1
 17687 0433 5E       		.byte	0x5e
 17688 0434 00       		.byte	0
 17689              	.LVUS77:
 17690 0435 02       		.uleb128 .LVU191
 17691 0436 05       		.uleb128 .LVU194
 17692              	.LLST77:
 17693 0437 08       		.byte	0x8
 17694 0438 00000000 		.quad	.LVL58
 17694      00000000 
 17695 0440 00       		.uleb128 .LVL58-.LVL58
 17696 0441 01       		.uleb128 0x1
 17697 0442 5E       		.byte	0x5e
 17698 0443 00       		.byte	0
 17699              	.LVUS78:
 17700 0444 04       		.uleb128 .LVU193
 17701 0445 05       		.uleb128 .LVU194
 17702              	.LLST78:
 17703 0446 08       		.byte	0x8
 17704 0447 00000000 		.quad	.LVL58
 17704      00000000 
 17705 044f 00       		.uleb128 .LVL58-.LVL58
 17706 0450 01       		.uleb128 0x1
 17707 0451 5E       		.byte	0x5e
 17708 0452 00       		.byte	0
 17709              	.LVUS80:
 17710 0453 03       		.uleb128 .LVU202
 17711 0454 00       		.uleb128 .LVU481
GAS LISTING linobj/Ch02_03.s 			page 438


 17712 0455 00       		.uleb128 .LVU486
 17713 0456 00       		.uleb128 .LVU499
 17714              	.LLST80:
 17715 0457 06       		.byte	0x6
 17716 0458 00000000 		.quad	.LVL61
 17716      00000000 
 17717 0460 04       		.byte	0x4
 17718 0461 00       		.uleb128 .LVL61-.LVL61
 17719 0462 8108     		.uleb128 .LVL151-.LVL61
 17720 0464 02       		.uleb128 0x2
 17721 0465 3A       		.byte	0x3a
 17722 0466 9F       		.byte	0x9f
 17723 0467 04       		.byte	0x4
 17724 0468 A608     		.uleb128 .LVL155-.LVL61
 17725 046a E308     		.uleb128 .LVL161-.LVL61
 17726 046c 02       		.uleb128 0x2
 17727 046d 3A       		.byte	0x3a
 17728 046e 9F       		.byte	0x9f
 17729 046f 00       		.byte	0
 17730              	.LVUS81:
 17731 0470 01       		.uleb128 .LVU218
 17732 0471 00       		.uleb128 .LVU221
 17733              	.LLST81:
 17734 0472 08       		.byte	0x8
 17735 0473 00000000 		.quad	.LVL62
 17735      00000000 
 17736 047b 16       		.uleb128 .LVL64-.LVL62
 17737 047c 0A       		.uleb128 0xa
 17738 047d 03       		.byte	0x3
 17739 047e 00000000 		.quad	.LC11
 17739      00000000 
 17740 0486 9F       		.byte	0x9f
 17741 0487 00       		.byte	0
 17742              	.LVUS83:
 17743 0488 00       		.uleb128 .LVU221
 17744 0489 00       		.uleb128 .LVU306
 17745 048a 00       		.uleb128 .LVU435
 17746 048b 00       		.uleb128 .LVU438
 17747              	.LLST83:
 17748 048c 06       		.byte	0x6
 17749 048d 00000000 		.quad	.LVL64
 17749      00000000 
 17750 0495 04       		.byte	0x4
 17751 0496 00       		.uleb128 .LVL64-.LVL64
 17752 0497 D302     		.uleb128 .LVL93-.LVL64
 17753 0499 01       		.uleb128 0x1
 17754 049a 53       		.byte	0x53
 17755 049b 04       		.byte	0x4
 17756 049c 9F06     		.uleb128 .LVL133-.LVL64
 17757 049e B606     		.uleb128 .LVL135-.LVL64
 17758 04a0 01       		.uleb128 0x1
 17759 04a1 53       		.byte	0x53
 17760 04a2 00       		.byte	0
 17761              	.LVUS84:
 17762 04a3 01       		.uleb128 .LVU222
 17763 04a4 00       		.uleb128 .LVU224
 17764              	.LLST84:
GAS LISTING linobj/Ch02_03.s 			page 439


 17765 04a5 08       		.byte	0x8
 17766 04a6 00000000 		.quad	.LVL64
 17766      00000000 
 17767 04ae 14       		.uleb128 .LVL65-.LVL64
 17768 04af 0A       		.uleb128 0xa
 17769 04b0 03       		.byte	0x3
 17770 04b1 00000000 		.quad	.LC3
 17770      00000000 
 17771 04b9 9F       		.byte	0x9f
 17772 04ba 00       		.byte	0
 17773              	.LVUS86:
 17774 04bb 00       		.uleb128 .LVU224
 17775 04bc 00       		.uleb128 .LVU229
 17776              	.LLST86:
 17777 04bd 08       		.byte	0x8
 17778 04be 00000000 		.quad	.LVL65
 17778      00000000 
 17779 04c6 1D       		.uleb128 .LVL67-.LVL65
 17780 04c7 01       		.uleb128 0x1
 17781 04c8 53       		.byte	0x53
 17782 04c9 00       		.byte	0
 17783              	.LVUS88:
 17784 04ca 00       		.uleb128 .LVU229
 17785 04cb 00       		.uleb128 .LVU232
 17786 04cc 00       		.uleb128 .LVU232
 17787 04cd 00       		.uleb128 .LVU232
 17788              	.LLST88:
 17789 04ce 06       		.byte	0x6
 17790 04cf 00000000 		.quad	.LVL67
 17790      00000000 
 17791 04d7 04       		.byte	0x4
 17792 04d8 00       		.uleb128 .LVL67-.LVL67
 17793 04d9 04       		.uleb128 .LVL68-1-.LVL67
 17794 04da 01       		.uleb128 0x1
 17795 04db 50       		.byte	0x50
 17796 04dc 04       		.byte	0x4
 17797 04dd 04       		.uleb128 .LVL68-1-.LVL67
 17798 04de 05       		.uleb128 .LVL68-.LVL67
 17799 04df 01       		.uleb128 0x1
 17800 04e0 5F       		.byte	0x5f
 17801 04e1 00       		.byte	0
 17802              	.LVUS89:
 17803 04e2 00       		.uleb128 .LVU229
 17804 04e3 00       		.uleb128 .LVU232
 17805              	.LLST89:
 17806 04e4 08       		.byte	0x8
 17807 04e5 00000000 		.quad	.LVL67
 17807      00000000 
 17808 04ed 05       		.uleb128 .LVL68-.LVL67
 17809 04ee 0A       		.uleb128 0xa
 17810 04ef 03       		.byte	0x3
 17811 04f0 00000000 		.quad	.LC4
 17811      00000000 
 17812 04f8 9F       		.byte	0x9f
 17813 04f9 00       		.byte	0
 17814              	.LVUS91:
 17815 04fa 00       		.uleb128 .LVU232
GAS LISTING linobj/Ch02_03.s 			page 440


 17816 04fb 01       		.uleb128 .LVU241
 17817              	.LLST91:
 17818 04fc 08       		.byte	0x8
 17819 04fd 00000000 		.quad	.LVL68
 17819      00000000 
 17820 0505 13       		.uleb128 .LVL69-.LVL68
 17821 0506 01       		.uleb128 0x1
 17822 0507 5F       		.byte	0x5f
 17823 0508 00       		.byte	0
 17824              	.LVUS93:
 17825 0509 02       		.uleb128 .LVU234
 17826 050a 00       		.uleb128 .LVU240
 17827 050b 00       		.uleb128 .LVU240
 17828 050c 01       		.uleb128 .LVU241
 17829              	.LLST93:
 17830 050d 08       		.byte	0x8
 17831 050e 00000000 		.quad	.LVL68
 17831      00000000 
 17832 0516 13       		.uleb128 .LVL69-.LVL68
 17833 0517 0A       		.uleb128 0xa
 17834 0518 7F       		.byte	0x7f
 17835 0519 00       		.sleb128 0
 17836 051a 7F       		.byte	0x7f
 17837 051b 00       		.sleb128 0
 17838 051c 06       		.byte	0x6
 17839 051d 48       		.byte	0x48
 17840 051e 1C       		.byte	0x1c
 17841 051f 06       		.byte	0x6
 17842 0520 22       		.byte	0x22
 17843 0521 9F       		.byte	0x9f
 17844 0522 08       		.byte	0x8
 17845 0523 00000000 		.quad	.LVL69
 17845      00000000 
 17846 052b 00       		.uleb128 .LVL69-.LVL69
 17847 052c 06       		.uleb128 0x6
 17848 052d 7F       		.byte	0x7f
 17849 052e 00       		.sleb128 0
 17850 052f 70       		.byte	0x70
 17851 0530 00       		.sleb128 0
 17852 0531 22       		.byte	0x22
 17853 0532 9F       		.byte	0x9f
 17854 0533 00       		.byte	0
 17855              	.LVUS94:
 17856 0534 02       		.uleb128 .LVU234
 17857 0535 01       		.uleb128 .LVU241
 17858              	.LLST94:
 17859 0536 08       		.byte	0x8
 17860 0537 00000000 		.quad	.LVL68
 17860      00000000 
 17861 053f 13       		.uleb128 .LVL69-.LVL68
 17862 0540 02       		.uleb128 0x2
 17863 0541 3A       		.byte	0x3a
 17864 0542 9F       		.byte	0x9f
 17865 0543 00       		.byte	0
 17866              	.LVUS95:
 17867 0544 04       		.uleb128 .LVU236
 17868 0545 00       		.uleb128 .LVU240
GAS LISTING linobj/Ch02_03.s 			page 441


 17869              	.LLST95:
 17870 0546 08       		.byte	0x8
 17871 0547 00000000 		.quad	.LVL68
 17871      00000000 
 17872 054f 13       		.uleb128 .LVL69-.LVL68
 17873 0550 0B       		.uleb128 0xb
 17874 0551 7F       		.byte	0x7f
 17875 0552 00       		.sleb128 0
 17876 0553 7F       		.byte	0x7f
 17877 0554 00       		.sleb128 0
 17878 0555 06       		.byte	0x6
 17879 0556 48       		.byte	0x48
 17880 0557 1C       		.byte	0x1c
 17881 0558 06       		.byte	0x6
 17882 0559 22       		.byte	0x22
 17883 055a 23       		.byte	0x23
 17884 055b 10       		.uleb128 0x10
 17885 055c 00       		.byte	0
 17886              	.LVUS96:
 17887 055d 00       		.uleb128 .LVU243
 17888 055e 00       		.uleb128 .LVU245
 17889              	.LLST96:
 17890 055f 08       		.byte	0x8
 17891 0560 00000000 		.quad	.LVL71
 17891      00000000 
 17892 0568 0E       		.uleb128 .LVL72-1-.LVL71
 17893 0569 01       		.uleb128 0x1
 17894 056a 50       		.byte	0x50
 17895 056b 00       		.byte	0
 17896              	.LVUS97:
 17897 056c 00       		.uleb128 .LVU243
 17898 056d 00       		.uleb128 .LVU245
 17899              	.LLST97:
 17900 056e 08       		.byte	0x8
 17901 056f 00000000 		.quad	.LVL71
 17901      00000000 
 17902 0577 0F       		.uleb128 .LVL72-.LVL71
 17903 0578 0A       		.uleb128 0xa
 17904 0579 03       		.byte	0x3
 17905 057a 00000000 		.quad	.LC5
 17905      00000000 
 17906 0582 9F       		.byte	0x9f
 17907 0583 00       		.byte	0
 17908              	.LVUS98:
 17909 0584 02       		.uleb128 .LVU247
 17910 0585 00       		.uleb128 .LVU249
 17911              	.LLST98:
 17912 0586 08       		.byte	0x8
 17913 0587 00000000 		.quad	.LVL72
 17913      00000000 
 17914 058f 14       		.uleb128 .LVL73-.LVL72
 17915 0590 0A       		.uleb128 0xa
 17916 0591 03       		.byte	0x3
 17917 0592 00000000 		.quad	.LC6
 17917      00000000 
 17918 059a 9F       		.byte	0x9f
 17919 059b 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 442


 17920              	.LVUS100:
 17921 059c 00       		.uleb128 .LVU249
 17922 059d 00       		.uleb128 .LVU254
 17923              	.LLST100:
 17924 059e 08       		.byte	0x8
 17925 059f 00000000 		.quad	.LVL73
 17925      00000000 
 17926 05a7 1D       		.uleb128 .LVL75-.LVL73
 17927 05a8 01       		.uleb128 0x1
 17928 05a9 53       		.byte	0x53
 17929 05aa 00       		.byte	0
 17930              	.LVUS102:
 17931 05ab 00       		.uleb128 .LVU254
 17932 05ac 00       		.uleb128 .LVU257
 17933 05ad 00       		.uleb128 .LVU257
 17934 05ae 00       		.uleb128 .LVU257
 17935              	.LLST102:
 17936 05af 06       		.byte	0x6
 17937 05b0 00000000 		.quad	.LVL75
 17937      00000000 
 17938 05b8 04       		.byte	0x4
 17939 05b9 00       		.uleb128 .LVL75-.LVL75
 17940 05ba 04       		.uleb128 .LVL76-1-.LVL75
 17941 05bb 01       		.uleb128 0x1
 17942 05bc 50       		.byte	0x50
 17943 05bd 04       		.byte	0x4
 17944 05be 04       		.uleb128 .LVL76-1-.LVL75
 17945 05bf 05       		.uleb128 .LVL76-.LVL75
 17946 05c0 01       		.uleb128 0x1
 17947 05c1 5F       		.byte	0x5f
 17948 05c2 00       		.byte	0
 17949              	.LVUS103:
 17950 05c3 00       		.uleb128 .LVU254
 17951 05c4 00       		.uleb128 .LVU257
 17952              	.LLST103:
 17953 05c5 08       		.byte	0x8
 17954 05c6 00000000 		.quad	.LVL75
 17954      00000000 
 17955 05ce 05       		.uleb128 .LVL76-.LVL75
 17956 05cf 0A       		.uleb128 0xa
 17957 05d0 03       		.byte	0x3
 17958 05d1 00000000 		.quad	.LC4
 17958      00000000 
 17959 05d9 9F       		.byte	0x9f
 17960 05da 00       		.byte	0
 17961              	.LVUS105:
 17962 05db 00       		.uleb128 .LVU257
 17963 05dc 01       		.uleb128 .LVU266
 17964              	.LLST105:
 17965 05dd 08       		.byte	0x8
 17966 05de 00000000 		.quad	.LVL76
 17966      00000000 
 17967 05e6 13       		.uleb128 .LVL77-.LVL76
 17968 05e7 01       		.uleb128 0x1
 17969 05e8 5F       		.byte	0x5f
 17970 05e9 00       		.byte	0
 17971              	.LVUS107:
GAS LISTING linobj/Ch02_03.s 			page 443


 17972 05ea 02       		.uleb128 .LVU259
 17973 05eb 00       		.uleb128 .LVU265
 17974 05ec 00       		.uleb128 .LVU265
 17975 05ed 01       		.uleb128 .LVU266
 17976              	.LLST107:
 17977 05ee 08       		.byte	0x8
 17978 05ef 00000000 		.quad	.LVL76
 17978      00000000 
 17979 05f7 13       		.uleb128 .LVL77-.LVL76
 17980 05f8 0A       		.uleb128 0xa
 17981 05f9 7F       		.byte	0x7f
 17982 05fa 00       		.sleb128 0
 17983 05fb 7F       		.byte	0x7f
 17984 05fc 00       		.sleb128 0
 17985 05fd 06       		.byte	0x6
 17986 05fe 48       		.byte	0x48
 17987 05ff 1C       		.byte	0x1c
 17988 0600 06       		.byte	0x6
 17989 0601 22       		.byte	0x22
 17990 0602 9F       		.byte	0x9f
 17991 0603 08       		.byte	0x8
 17992 0604 00000000 		.quad	.LVL77
 17992      00000000 
 17993 060c 00       		.uleb128 .LVL77-.LVL77
 17994 060d 06       		.uleb128 0x6
 17995 060e 7F       		.byte	0x7f
 17996 060f 00       		.sleb128 0
 17997 0610 70       		.byte	0x70
 17998 0611 00       		.sleb128 0
 17999 0612 22       		.byte	0x22
 18000 0613 9F       		.byte	0x9f
 18001 0614 00       		.byte	0
 18002              	.LVUS108:
 18003 0615 02       		.uleb128 .LVU259
 18004 0616 01       		.uleb128 .LVU266
 18005              	.LLST108:
 18006 0617 08       		.byte	0x8
 18007 0618 00000000 		.quad	.LVL76
 18007      00000000 
 18008 0620 13       		.uleb128 .LVL77-.LVL76
 18009 0621 02       		.uleb128 0x2
 18010 0622 3A       		.byte	0x3a
 18011 0623 9F       		.byte	0x9f
 18012 0624 00       		.byte	0
 18013              	.LVUS109:
 18014 0625 04       		.uleb128 .LVU261
 18015 0626 00       		.uleb128 .LVU265
 18016              	.LLST109:
 18017 0627 08       		.byte	0x8
 18018 0628 00000000 		.quad	.LVL76
 18018      00000000 
 18019 0630 13       		.uleb128 .LVL77-.LVL76
 18020 0631 0B       		.uleb128 0xb
 18021 0632 7F       		.byte	0x7f
 18022 0633 00       		.sleb128 0
 18023 0634 7F       		.byte	0x7f
 18024 0635 00       		.sleb128 0
GAS LISTING linobj/Ch02_03.s 			page 444


 18025 0636 06       		.byte	0x6
 18026 0637 48       		.byte	0x48
 18027 0638 1C       		.byte	0x1c
 18028 0639 06       		.byte	0x6
 18029 063a 22       		.byte	0x22
 18030 063b 23       		.byte	0x23
 18031 063c 10       		.uleb128 0x10
 18032 063d 00       		.byte	0
 18033              	.LVUS110:
 18034 063e 00       		.uleb128 .LVU268
 18035 063f 00       		.uleb128 .LVU270
 18036              	.LLST110:
 18037 0640 08       		.byte	0x8
 18038 0641 00000000 		.quad	.LVL79
 18038      00000000 
 18039 0649 0E       		.uleb128 .LVL80-1-.LVL79
 18040 064a 01       		.uleb128 0x1
 18041 064b 50       		.byte	0x50
 18042 064c 00       		.byte	0
 18043              	.LVUS111:
 18044 064d 00       		.uleb128 .LVU268
 18045 064e 00       		.uleb128 .LVU270
 18046              	.LLST111:
 18047 064f 08       		.byte	0x8
 18048 0650 00000000 		.quad	.LVL79
 18048      00000000 
 18049 0658 0F       		.uleb128 .LVL80-.LVL79
 18050 0659 0A       		.uleb128 0xa
 18051 065a 03       		.byte	0x3
 18052 065b 00000000 		.quad	.LC5
 18052      00000000 
 18053 0663 9F       		.byte	0x9f
 18054 0664 00       		.byte	0
 18055              	.LVUS112:
 18056 0665 02       		.uleb128 .LVU272
 18057 0666 00       		.uleb128 .LVU274
 18058              	.LLST112:
 18059 0667 08       		.byte	0x8
 18060 0668 00000000 		.quad	.LVL80
 18060      00000000 
 18061 0670 14       		.uleb128 .LVL81-.LVL80
 18062 0671 0A       		.uleb128 0xa
 18063 0672 03       		.byte	0x3
 18064 0673 00000000 		.quad	.LC12
 18064      00000000 
 18065 067b 9F       		.byte	0x9f
 18066 067c 00       		.byte	0
 18067              	.LVUS114:
 18068 067d 00       		.uleb128 .LVU274
 18069 067e 00       		.uleb128 .LVU279
 18070              	.LLST114:
 18071 067f 08       		.byte	0x8
 18072 0680 00000000 		.quad	.LVL81
 18072      00000000 
 18073 0688 1D       		.uleb128 .LVL83-.LVL81
 18074 0689 01       		.uleb128 0x1
 18075 068a 53       		.byte	0x53
GAS LISTING linobj/Ch02_03.s 			page 445


 18076 068b 00       		.byte	0
 18077              	.LVUS116:
 18078 068c 00       		.uleb128 .LVU279
 18079 068d 00       		.uleb128 .LVU282
 18080 068e 00       		.uleb128 .LVU282
 18081 068f 00       		.uleb128 .LVU282
 18082              	.LLST116:
 18083 0690 06       		.byte	0x6
 18084 0691 00000000 		.quad	.LVL83
 18084      00000000 
 18085 0699 04       		.byte	0x4
 18086 069a 00       		.uleb128 .LVL83-.LVL83
 18087 069b 04       		.uleb128 .LVL84-1-.LVL83
 18088 069c 01       		.uleb128 0x1
 18089 069d 50       		.byte	0x50
 18090 069e 04       		.byte	0x4
 18091 069f 04       		.uleb128 .LVL84-1-.LVL83
 18092 06a0 05       		.uleb128 .LVL84-.LVL83
 18093 06a1 01       		.uleb128 0x1
 18094 06a2 5F       		.byte	0x5f
 18095 06a3 00       		.byte	0
 18096              	.LVUS117:
 18097 06a4 00       		.uleb128 .LVU279
 18098 06a5 00       		.uleb128 .LVU282
 18099              	.LLST117:
 18100 06a6 08       		.byte	0x8
 18101 06a7 00000000 		.quad	.LVL83
 18101      00000000 
 18102 06af 05       		.uleb128 .LVL84-.LVL83
 18103 06b0 0A       		.uleb128 0xa
 18104 06b1 03       		.byte	0x3
 18105 06b2 00000000 		.quad	.LC4
 18105      00000000 
 18106 06ba 9F       		.byte	0x9f
 18107 06bb 00       		.byte	0
 18108              	.LVUS119:
 18109 06bc 00       		.uleb128 .LVU282
 18110 06bd 01       		.uleb128 .LVU291
 18111              	.LLST119:
 18112 06be 08       		.byte	0x8
 18113 06bf 00000000 		.quad	.LVL84
 18113      00000000 
 18114 06c7 13       		.uleb128 .LVL85-.LVL84
 18115 06c8 01       		.uleb128 0x1
 18116 06c9 5F       		.byte	0x5f
 18117 06ca 00       		.byte	0
 18118              	.LVUS121:
 18119 06cb 02       		.uleb128 .LVU284
 18120 06cc 00       		.uleb128 .LVU290
 18121 06cd 00       		.uleb128 .LVU290
 18122 06ce 01       		.uleb128 .LVU291
 18123              	.LLST121:
 18124 06cf 08       		.byte	0x8
 18125 06d0 00000000 		.quad	.LVL84
 18125      00000000 
 18126 06d8 13       		.uleb128 .LVL85-.LVL84
 18127 06d9 0A       		.uleb128 0xa
GAS LISTING linobj/Ch02_03.s 			page 446


 18128 06da 7F       		.byte	0x7f
 18129 06db 00       		.sleb128 0
 18130 06dc 7F       		.byte	0x7f
 18131 06dd 00       		.sleb128 0
 18132 06de 06       		.byte	0x6
 18133 06df 48       		.byte	0x48
 18134 06e0 1C       		.byte	0x1c
 18135 06e1 06       		.byte	0x6
 18136 06e2 22       		.byte	0x22
 18137 06e3 9F       		.byte	0x9f
 18138 06e4 08       		.byte	0x8
 18139 06e5 00000000 		.quad	.LVL85
 18139      00000000 
 18140 06ed 00       		.uleb128 .LVL85-.LVL85
 18141 06ee 06       		.uleb128 0x6
 18142 06ef 7F       		.byte	0x7f
 18143 06f0 00       		.sleb128 0
 18144 06f1 70       		.byte	0x70
 18145 06f2 00       		.sleb128 0
 18146 06f3 22       		.byte	0x22
 18147 06f4 9F       		.byte	0x9f
 18148 06f5 00       		.byte	0
 18149              	.LVUS122:
 18150 06f6 02       		.uleb128 .LVU284
 18151 06f7 01       		.uleb128 .LVU291
 18152              	.LLST122:
 18153 06f8 08       		.byte	0x8
 18154 06f9 00000000 		.quad	.LVL84
 18154      00000000 
 18155 0701 13       		.uleb128 .LVL85-.LVL84
 18156 0702 02       		.uleb128 0x2
 18157 0703 3A       		.byte	0x3a
 18158 0704 9F       		.byte	0x9f
 18159 0705 00       		.byte	0
 18160              	.LVUS123:
 18161 0706 04       		.uleb128 .LVU286
 18162 0707 00       		.uleb128 .LVU290
 18163              	.LLST123:
 18164 0708 08       		.byte	0x8
 18165 0709 00000000 		.quad	.LVL84
 18165      00000000 
 18166 0711 13       		.uleb128 .LVL85-.LVL84
 18167 0712 0B       		.uleb128 0xb
 18168 0713 7F       		.byte	0x7f
 18169 0714 00       		.sleb128 0
 18170 0715 7F       		.byte	0x7f
 18171 0716 00       		.sleb128 0
 18172 0717 06       		.byte	0x6
 18173 0718 48       		.byte	0x48
 18174 0719 1C       		.byte	0x1c
 18175 071a 06       		.byte	0x6
 18176 071b 22       		.byte	0x22
 18177 071c 23       		.byte	0x23
 18178 071d 10       		.uleb128 0x10
 18179 071e 00       		.byte	0
 18180              	.LVUS125:
 18181 071f 00       		.uleb128 .LVU293
GAS LISTING linobj/Ch02_03.s 			page 447


 18182 0720 00       		.uleb128 .LVU294
 18183 0721 00       		.uleb128 .LVU294
 18184 0722 00       		.uleb128 .LVU303
 18185 0723 00       		.uleb128 .LVU435
 18186 0724 00       		.uleb128 .LVU437
 18187              	.LLST125:
 18188 0725 06       		.byte	0x6
 18189 0726 00000000 		.quad	.LVL87
 18189      00000000 
 18190 072e 04       		.byte	0x4
 18191 072f 00       		.uleb128 .LVL87-.LVL87
 18192 0730 03       		.uleb128 .LVL88-.LVL87
 18193 0731 01       		.uleb128 0x1
 18194 0732 50       		.byte	0x50
 18195 0733 04       		.byte	0x4
 18196 0734 03       		.uleb128 .LVL88-.LVL87
 18197 0735 26       		.uleb128 .LVL91-1-.LVL87
 18198 0736 01       		.uleb128 0x1
 18199 0737 55       		.byte	0x55
 18200 0738 04       		.byte	0x4
 18201 0739 8104     		.uleb128 .LVL133-.LVL87
 18202 073b 9204     		.uleb128 .LVL134-1-.LVL87
 18203 073d 01       		.uleb128 0x1
 18204 073e 55       		.byte	0x55
 18205 073f 00       		.byte	0
 18206              	.LVUS126:
 18207 0740 00       		.uleb128 .LVU295
 18208 0741 00       		.uleb128 .LVU302
 18209 0742 00       		.uleb128 .LVU302
 18210 0743 00       		.uleb128 .LVU303
 18211 0744 00       		.uleb128 .LVU435
 18212 0745 00       		.uleb128 .LVU437
 18213              	.LLST126:
 18214 0746 06       		.byte	0x6
 18215 0747 00000000 		.quad	.LVL89
 18215      00000000 
 18216 074f 04       		.byte	0x4
 18217 0750 00       		.uleb128 .LVL89-.LVL89
 18218 0751 1A       		.uleb128 .LVL90-.LVL89
 18219 0752 03       		.uleb128 0x3
 18220 0753 91       		.byte	0x91
 18221 0754 DD7E     		.sleb128 -163
 18222 0756 04       		.byte	0x4
 18223 0757 1A       		.uleb128 .LVL90-.LVL89
 18224 0758 1E       		.uleb128 .LVL91-1-.LVL89
 18225 0759 02       		.uleb128 0x2
 18226 075a 74       		.byte	0x74
 18227 075b 00       		.sleb128 0
 18228 075c 04       		.byte	0x4
 18229 075d F903     		.uleb128 .LVL133-.LVL89
 18230 075f 8A04     		.uleb128 .LVL134-1-.LVL89
 18231 0761 03       		.uleb128 0x3
 18232 0762 91       		.byte	0x91
 18233 0763 DD7E     		.sleb128 -163
 18234 0765 00       		.byte	0
 18235              	.LVUS128:
 18236 0766 00       		.uleb128 .LVU311
GAS LISTING linobj/Ch02_03.s 			page 448


 18237 0767 00       		.uleb128 .LVU318
 18238              	.LLST128:
 18239 0768 08       		.byte	0x8
 18240 0769 00000000 		.quad	.LVL95
 18240      00000000 
 18241 0771 04       		.uleb128 .LVL96-1-.LVL95
 18242 0772 01       		.uleb128 0x1
 18243 0773 50       		.byte	0x50
 18244 0774 00       		.byte	0
 18245              	.LVUS129:
 18246 0775 00       		.uleb128 .LVU311
 18247 0776 00       		.uleb128 .LVU319
 18248              	.LLST129:
 18249 0777 08       		.byte	0x8
 18250 0778 00000000 		.quad	.LVL95
 18250      00000000 
 18251 0780 08       		.uleb128 .LVL97-.LVL95
 18252 0781 01       		.uleb128 0x1
 18253 0782 5E       		.byte	0x5e
 18254 0783 00       		.byte	0
 18255              	.LVUS130:
 18256 0784 01       		.uleb128 .LVU312
 18257 0785 02       		.uleb128 .LVU313
 18258              	.LLST130:
 18259 0786 08       		.byte	0x8
 18260 0787 00000000 		.quad	.LVL95
 18260      00000000 
 18261 078f 00       		.uleb128 .LVL95-.LVL95
 18262 0790 01       		.uleb128 0x1
 18263 0791 5E       		.byte	0x5e
 18264 0792 00       		.byte	0
 18265              	.LVUS131:
 18266 0793 02       		.uleb128 .LVU313
 18267 0794 05       		.uleb128 .LVU316
 18268              	.LLST131:
 18269 0795 08       		.byte	0x8
 18270 0796 00000000 		.quad	.LVL95
 18270      00000000 
 18271 079e 00       		.uleb128 .LVL95-.LVL95
 18272 079f 01       		.uleb128 0x1
 18273 07a0 5E       		.byte	0x5e
 18274 07a1 00       		.byte	0
 18275              	.LVUS132:
 18276 07a2 04       		.uleb128 .LVU315
 18277 07a3 05       		.uleb128 .LVU316
 18278              	.LLST132:
 18279 07a4 08       		.byte	0x8
 18280 07a5 00000000 		.quad	.LVL95
 18280      00000000 
 18281 07ad 00       		.uleb128 .LVL95-.LVL95
 18282 07ae 01       		.uleb128 0x1
 18283 07af 5E       		.byte	0x5e
 18284 07b0 00       		.byte	0
 18285              	.LVUS134:
 18286 07b1 03       		.uleb128 .LVU324
 18287 07b2 00       		.uleb128 .LVU435
 18288 07b3 00       		.uleb128 .LVU438
GAS LISTING linobj/Ch02_03.s 			page 449


 18289 07b4 00       		.uleb128 .LVU481
 18290 07b5 00       		.uleb128 .LVU486
 18291 07b6 00       		.uleb128 .LVU499
 18292              	.LLST134:
 18293 07b7 06       		.byte	0x6
 18294 07b8 00000000 		.quad	.LVL98
 18294      00000000 
 18295 07c0 04       		.byte	0x4
 18296 07c1 00       		.uleb128 .LVL98-.LVL98
 18297 07c2 9E03     		.uleb128 .LVL133-.LVL98
 18298 07c4 02       		.uleb128 0x2
 18299 07c5 3A       		.byte	0x3a
 18300 07c6 9F       		.byte	0x9f
 18301 07c7 04       		.byte	0x4
 18302 07c8 B503     		.uleb128 .LVL135-.LVL98
 18303 07ca C004     		.uleb128 .LVL151-.LVL98
 18304 07cc 02       		.uleb128 0x2
 18305 07cd 3A       		.byte	0x3a
 18306 07ce 9F       		.byte	0x9f
 18307 07cf 04       		.byte	0x4
 18308 07d0 E504     		.uleb128 .LVL155-.LVL98
 18309 07d2 A205     		.uleb128 .LVL161-.LVL98
 18310 07d4 02       		.uleb128 0x2
 18311 07d5 3A       		.byte	0x3a
 18312 07d6 9F       		.byte	0x9f
 18313 07d7 00       		.byte	0
 18314              	.LVUS135:
 18315 07d8 01       		.uleb128 .LVU340
 18316 07d9 00       		.uleb128 .LVU343
 18317              	.LLST135:
 18318 07da 08       		.byte	0x8
 18319 07db 00000000 		.quad	.LVL99
 18319      00000000 
 18320 07e3 16       		.uleb128 .LVL101-.LVL99
 18321 07e4 0A       		.uleb128 0xa
 18322 07e5 03       		.byte	0x3
 18323 07e6 00000000 		.quad	.LC15
 18323      00000000 
 18324 07ee 9F       		.byte	0x9f
 18325 07ef 00       		.byte	0
 18326              	.LVUS137:
 18327 07f0 00       		.uleb128 .LVU343
 18328 07f1 00       		.uleb128 .LVU435
 18329 07f2 00       		.uleb128 .LVU438
 18330 07f3 02       		.uleb128 .LVU479
 18331 07f4 02       		.uleb128 .LVU479
 18332 07f5 00       		.uleb128 .LVU480
 18333 07f6 00       		.uleb128 .LVU486
 18334 07f7 00       		.uleb128 .LVU488
 18335 07f8 00       		.uleb128 .LVU497
 18336 07f9 00       		.uleb128 .LVU499
 18337              	.LLST137:
 18338 07fa 06       		.byte	0x6
 18339 07fb 00000000 		.quad	.LVL101
 18339      00000000 
 18340 0803 04       		.byte	0x4
 18341 0804 00       		.uleb128 .LVL101-.LVL101
GAS LISTING linobj/Ch02_03.s 			page 450


 18342 0805 DE02     		.uleb128 .LVL133-.LVL101
 18343 0807 01       		.uleb128 0x1
 18344 0808 53       		.byte	0x53
 18345 0809 04       		.byte	0x4
 18346 080a F502     		.uleb128 .LVL135-.LVL101
 18347 080c F003     		.uleb128 .LVL149-.LVL101
 18348 080e 01       		.uleb128 0x1
 18349 080f 53       		.byte	0x53
 18350 0810 04       		.byte	0x4
 18351 0811 F003     		.uleb128 .LVL149-.LVL101
 18352 0813 FB03     		.uleb128 .LVL150-.LVL101
 18353 0815 03       		.uleb128 0x3
 18354 0816 73       		.byte	0x73
 18355 0817 01       		.sleb128 1
 18356 0818 9F       		.byte	0x9f
 18357 0819 04       		.byte	0x4
 18358 081a A504     		.uleb128 .LVL155-.LVL101
 18359 081c B504     		.uleb128 .LVL157-.LVL101
 18360 081e 01       		.uleb128 0x1
 18361 081f 53       		.byte	0x53
 18362 0820 04       		.byte	0x4
 18363 0821 CF04     		.uleb128 .LVL159-.LVL101
 18364 0823 E204     		.uleb128 .LVL161-.LVL101
 18365 0825 01       		.uleb128 0x1
 18366 0826 53       		.byte	0x53
 18367 0827 00       		.byte	0
 18368              	.LVUS138:
 18369 0828 01       		.uleb128 .LVU344
 18370 0829 00       		.uleb128 .LVU346
 18371              	.LLST138:
 18372 082a 08       		.byte	0x8
 18373 082b 00000000 		.quad	.LVL101
 18373      00000000 
 18374 0833 14       		.uleb128 .LVL102-.LVL101
 18375 0834 0A       		.uleb128 0xa
 18376 0835 03       		.byte	0x3
 18377 0836 00000000 		.quad	.LC3
 18377      00000000 
 18378 083e 9F       		.byte	0x9f
 18379 083f 00       		.byte	0
 18380              	.LVUS140:
 18381 0840 00       		.uleb128 .LVU346
 18382 0841 00       		.uleb128 .LVU351
 18383              	.LLST140:
 18384 0842 08       		.byte	0x8
 18385 0843 00000000 		.quad	.LVL102
 18385      00000000 
 18386 084b 1D       		.uleb128 .LVL104-.LVL102
 18387 084c 01       		.uleb128 0x1
 18388 084d 53       		.byte	0x53
 18389 084e 00       		.byte	0
 18390              	.LVUS142:
 18391 084f 00       		.uleb128 .LVU351
 18392 0850 00       		.uleb128 .LVU354
 18393 0851 00       		.uleb128 .LVU354
 18394 0852 00       		.uleb128 .LVU354
 18395              	.LLST142:
GAS LISTING linobj/Ch02_03.s 			page 451


 18396 0853 06       		.byte	0x6
 18397 0854 00000000 		.quad	.LVL104
 18397      00000000 
 18398 085c 04       		.byte	0x4
 18399 085d 00       		.uleb128 .LVL104-.LVL104
 18400 085e 04       		.uleb128 .LVL105-1-.LVL104
 18401 085f 01       		.uleb128 0x1
 18402 0860 50       		.byte	0x50
 18403 0861 04       		.byte	0x4
 18404 0862 04       		.uleb128 .LVL105-1-.LVL104
 18405 0863 05       		.uleb128 .LVL105-.LVL104
 18406 0864 01       		.uleb128 0x1
 18407 0865 5F       		.byte	0x5f
 18408 0866 00       		.byte	0
 18409              	.LVUS143:
 18410 0867 00       		.uleb128 .LVU351
 18411 0868 00       		.uleb128 .LVU354
 18412              	.LLST143:
 18413 0869 08       		.byte	0x8
 18414 086a 00000000 		.quad	.LVL104
 18414      00000000 
 18415 0872 05       		.uleb128 .LVL105-.LVL104
 18416 0873 0A       		.uleb128 0xa
 18417 0874 03       		.byte	0x3
 18418 0875 00000000 		.quad	.LC4
 18418      00000000 
 18419 087d 9F       		.byte	0x9f
 18420 087e 00       		.byte	0
 18421              	.LVUS145:
 18422 087f 00       		.uleb128 .LVU354
 18423 0880 01       		.uleb128 .LVU363
 18424              	.LLST145:
 18425 0881 08       		.byte	0x8
 18426 0882 00000000 		.quad	.LVL105
 18426      00000000 
 18427 088a 13       		.uleb128 .LVL106-.LVL105
 18428 088b 01       		.uleb128 0x1
 18429 088c 5F       		.byte	0x5f
 18430 088d 00       		.byte	0
 18431              	.LVUS147:
 18432 088e 02       		.uleb128 .LVU356
 18433 088f 00       		.uleb128 .LVU362
 18434 0890 00       		.uleb128 .LVU362
 18435 0891 01       		.uleb128 .LVU363
 18436              	.LLST147:
 18437 0892 08       		.byte	0x8
 18438 0893 00000000 		.quad	.LVL105
 18438      00000000 
 18439 089b 13       		.uleb128 .LVL106-.LVL105
 18440 089c 0A       		.uleb128 0xa
 18441 089d 7F       		.byte	0x7f
 18442 089e 00       		.sleb128 0
 18443 089f 7F       		.byte	0x7f
 18444 08a0 00       		.sleb128 0
 18445 08a1 06       		.byte	0x6
 18446 08a2 48       		.byte	0x48
 18447 08a3 1C       		.byte	0x1c
GAS LISTING linobj/Ch02_03.s 			page 452


 18448 08a4 06       		.byte	0x6
 18449 08a5 22       		.byte	0x22
 18450 08a6 9F       		.byte	0x9f
 18451 08a7 08       		.byte	0x8
 18452 08a8 00000000 		.quad	.LVL106
 18452      00000000 
 18453 08b0 00       		.uleb128 .LVL106-.LVL106
 18454 08b1 06       		.uleb128 0x6
 18455 08b2 7F       		.byte	0x7f
 18456 08b3 00       		.sleb128 0
 18457 08b4 70       		.byte	0x70
 18458 08b5 00       		.sleb128 0
 18459 08b6 22       		.byte	0x22
 18460 08b7 9F       		.byte	0x9f
 18461 08b8 00       		.byte	0
 18462              	.LVUS148:
 18463 08b9 02       		.uleb128 .LVU356
 18464 08ba 01       		.uleb128 .LVU363
 18465              	.LLST148:
 18466 08bb 08       		.byte	0x8
 18467 08bc 00000000 		.quad	.LVL105
 18467      00000000 
 18468 08c4 13       		.uleb128 .LVL106-.LVL105
 18469 08c5 02       		.uleb128 0x2
 18470 08c6 3A       		.byte	0x3a
 18471 08c7 9F       		.byte	0x9f
 18472 08c8 00       		.byte	0
 18473              	.LVUS149:
 18474 08c9 04       		.uleb128 .LVU358
 18475 08ca 00       		.uleb128 .LVU362
 18476              	.LLST149:
 18477 08cb 08       		.byte	0x8
 18478 08cc 00000000 		.quad	.LVL105
 18478      00000000 
 18479 08d4 13       		.uleb128 .LVL106-.LVL105
 18480 08d5 0B       		.uleb128 0xb
 18481 08d6 7F       		.byte	0x7f
 18482 08d7 00       		.sleb128 0
 18483 08d8 7F       		.byte	0x7f
 18484 08d9 00       		.sleb128 0
 18485 08da 06       		.byte	0x6
 18486 08db 48       		.byte	0x48
 18487 08dc 1C       		.byte	0x1c
 18488 08dd 06       		.byte	0x6
 18489 08de 22       		.byte	0x22
 18490 08df 23       		.byte	0x23
 18491 08e0 10       		.uleb128 0x10
 18492 08e1 00       		.byte	0
 18493              	.LVUS150:
 18494 08e2 00       		.uleb128 .LVU365
 18495 08e3 00       		.uleb128 .LVU367
 18496              	.LLST150:
 18497 08e4 08       		.byte	0x8
 18498 08e5 00000000 		.quad	.LVL108
 18498      00000000 
 18499 08ed 0E       		.uleb128 .LVL109-1-.LVL108
 18500 08ee 01       		.uleb128 0x1
GAS LISTING linobj/Ch02_03.s 			page 453


 18501 08ef 50       		.byte	0x50
 18502 08f0 00       		.byte	0
 18503              	.LVUS151:
 18504 08f1 00       		.uleb128 .LVU365
 18505 08f2 00       		.uleb128 .LVU367
 18506              	.LLST151:
 18507 08f3 08       		.byte	0x8
 18508 08f4 00000000 		.quad	.LVL108
 18508      00000000 
 18509 08fc 0F       		.uleb128 .LVL109-.LVL108
 18510 08fd 0A       		.uleb128 0xa
 18511 08fe 03       		.byte	0x3
 18512 08ff 00000000 		.quad	.LC5
 18512      00000000 
 18513 0907 9F       		.byte	0x9f
 18514 0908 00       		.byte	0
 18515              	.LVUS152:
 18516 0909 02       		.uleb128 .LVU369
 18517 090a 00       		.uleb128 .LVU371
 18518              	.LLST152:
 18519 090b 08       		.byte	0x8
 18520 090c 00000000 		.quad	.LVL109
 18520      00000000 
 18521 0914 14       		.uleb128 .LVL110-.LVL109
 18522 0915 0A       		.uleb128 0xa
 18523 0916 03       		.byte	0x3
 18524 0917 00000000 		.quad	.LC6
 18524      00000000 
 18525 091f 9F       		.byte	0x9f
 18526 0920 00       		.byte	0
 18527              	.LVUS154:
 18528 0921 00       		.uleb128 .LVU371
 18529 0922 00       		.uleb128 .LVU376
 18530              	.LLST154:
 18531 0923 08       		.byte	0x8
 18532 0924 00000000 		.quad	.LVL110
 18532      00000000 
 18533 092c 1D       		.uleb128 .LVL112-.LVL110
 18534 092d 01       		.uleb128 0x1
 18535 092e 53       		.byte	0x53
 18536 092f 00       		.byte	0
 18537              	.LVUS156:
 18538 0930 00       		.uleb128 .LVU376
 18539 0931 00       		.uleb128 .LVU379
 18540 0932 00       		.uleb128 .LVU379
 18541 0933 00       		.uleb128 .LVU379
 18542              	.LLST156:
 18543 0934 06       		.byte	0x6
 18544 0935 00000000 		.quad	.LVL112
 18544      00000000 
 18545 093d 04       		.byte	0x4
 18546 093e 00       		.uleb128 .LVL112-.LVL112
 18547 093f 04       		.uleb128 .LVL113-1-.LVL112
 18548 0940 01       		.uleb128 0x1
 18549 0941 50       		.byte	0x50
 18550 0942 04       		.byte	0x4
 18551 0943 04       		.uleb128 .LVL113-1-.LVL112
GAS LISTING linobj/Ch02_03.s 			page 454


 18552 0944 05       		.uleb128 .LVL113-.LVL112
 18553 0945 01       		.uleb128 0x1
 18554 0946 5F       		.byte	0x5f
 18555 0947 00       		.byte	0
 18556              	.LVUS157:
 18557 0948 00       		.uleb128 .LVU376
 18558 0949 00       		.uleb128 .LVU379
 18559              	.LLST157:
 18560 094a 08       		.byte	0x8
 18561 094b 00000000 		.quad	.LVL112
 18561      00000000 
 18562 0953 05       		.uleb128 .LVL113-.LVL112
 18563 0954 0A       		.uleb128 0xa
 18564 0955 03       		.byte	0x3
 18565 0956 00000000 		.quad	.LC4
 18565      00000000 
 18566 095e 9F       		.byte	0x9f
 18567 095f 00       		.byte	0
 18568              	.LVUS159:
 18569 0960 00       		.uleb128 .LVU379
 18570 0961 01       		.uleb128 .LVU388
 18571              	.LLST159:
 18572 0962 08       		.byte	0x8
 18573 0963 00000000 		.quad	.LVL113
 18573      00000000 
 18574 096b 13       		.uleb128 .LVL114-.LVL113
 18575 096c 01       		.uleb128 0x1
 18576 096d 5F       		.byte	0x5f
 18577 096e 00       		.byte	0
 18578              	.LVUS161:
 18579 096f 02       		.uleb128 .LVU381
 18580 0970 00       		.uleb128 .LVU387
 18581 0971 00       		.uleb128 .LVU387
 18582 0972 01       		.uleb128 .LVU388
 18583              	.LLST161:
 18584 0973 08       		.byte	0x8
 18585 0974 00000000 		.quad	.LVL113
 18585      00000000 
 18586 097c 13       		.uleb128 .LVL114-.LVL113
 18587 097d 0A       		.uleb128 0xa
 18588 097e 7F       		.byte	0x7f
 18589 097f 00       		.sleb128 0
 18590 0980 7F       		.byte	0x7f
 18591 0981 00       		.sleb128 0
 18592 0982 06       		.byte	0x6
 18593 0983 48       		.byte	0x48
 18594 0984 1C       		.byte	0x1c
 18595 0985 06       		.byte	0x6
 18596 0986 22       		.byte	0x22
 18597 0987 9F       		.byte	0x9f
 18598 0988 08       		.byte	0x8
 18599 0989 00000000 		.quad	.LVL114
 18599      00000000 
 18600 0991 00       		.uleb128 .LVL114-.LVL114
 18601 0992 06       		.uleb128 0x6
 18602 0993 7F       		.byte	0x7f
 18603 0994 00       		.sleb128 0
GAS LISTING linobj/Ch02_03.s 			page 455


 18604 0995 70       		.byte	0x70
 18605 0996 00       		.sleb128 0
 18606 0997 22       		.byte	0x22
 18607 0998 9F       		.byte	0x9f
 18608 0999 00       		.byte	0
 18609              	.LVUS162:
 18610 099a 02       		.uleb128 .LVU381
 18611 099b 01       		.uleb128 .LVU388
 18612              	.LLST162:
 18613 099c 08       		.byte	0x8
 18614 099d 00000000 		.quad	.LVL113
 18614      00000000 
 18615 09a5 13       		.uleb128 .LVL114-.LVL113
 18616 09a6 02       		.uleb128 0x2
 18617 09a7 3A       		.byte	0x3a
 18618 09a8 9F       		.byte	0x9f
 18619 09a9 00       		.byte	0
 18620              	.LVUS163:
 18621 09aa 04       		.uleb128 .LVU383
 18622 09ab 00       		.uleb128 .LVU387
 18623              	.LLST163:
 18624 09ac 08       		.byte	0x8
 18625 09ad 00000000 		.quad	.LVL113
 18625      00000000 
 18626 09b5 13       		.uleb128 .LVL114-.LVL113
 18627 09b6 0B       		.uleb128 0xb
 18628 09b7 7F       		.byte	0x7f
 18629 09b8 00       		.sleb128 0
 18630 09b9 7F       		.byte	0x7f
 18631 09ba 00       		.sleb128 0
 18632 09bb 06       		.byte	0x6
 18633 09bc 48       		.byte	0x48
 18634 09bd 1C       		.byte	0x1c
 18635 09be 06       		.byte	0x6
 18636 09bf 22       		.byte	0x22
 18637 09c0 23       		.byte	0x23
 18638 09c1 10       		.uleb128 0x10
 18639 09c2 00       		.byte	0
 18640              	.LVUS164:
 18641 09c3 00       		.uleb128 .LVU390
 18642 09c4 00       		.uleb128 .LVU392
 18643              	.LLST164:
 18644 09c5 08       		.byte	0x8
 18645 09c6 00000000 		.quad	.LVL116
 18645      00000000 
 18646 09ce 0E       		.uleb128 .LVL117-1-.LVL116
 18647 09cf 01       		.uleb128 0x1
 18648 09d0 50       		.byte	0x50
 18649 09d1 00       		.byte	0
 18650              	.LVUS165:
 18651 09d2 00       		.uleb128 .LVU390
 18652 09d3 00       		.uleb128 .LVU392
 18653              	.LLST165:
 18654 09d4 08       		.byte	0x8
 18655 09d5 00000000 		.quad	.LVL116
 18655      00000000 
 18656 09dd 0F       		.uleb128 .LVL117-.LVL116
GAS LISTING linobj/Ch02_03.s 			page 456


 18657 09de 0A       		.uleb128 0xa
 18658 09df 03       		.byte	0x3
 18659 09e0 00000000 		.quad	.LC5
 18659      00000000 
 18660 09e8 9F       		.byte	0x9f
 18661 09e9 00       		.byte	0
 18662              	.LVUS167:
 18663 09ea 01       		.uleb128 .LVU397
 18664 09eb 00       		.uleb128 .LVU399
 18665              	.LLST167:
 18666 09ec 08       		.byte	0x8
 18667 09ed 00000000 		.quad	.LVL118
 18667      00000000 
 18668 09f5 0F       		.uleb128 .LVL119-.LVL118
 18669 09f6 0A       		.uleb128 0xa
 18670 09f7 03       		.byte	0x3
 18671 09f8 00000000 		.quad	.LC7
 18671      00000000 
 18672 0a00 9F       		.byte	0x9f
 18673 0a01 00       		.byte	0
 18674              	.LVUS168:
 18675 0a02 00       		.uleb128 .LVU399
 18676 0a03 00       		.uleb128 .LVU402
 18677              	.LLST168:
 18678 0a04 08       		.byte	0x8
 18679 0a05 00000000 		.quad	.LVL119
 18679      00000000 
 18680 0a0d 10       		.uleb128 .LVL121-.LVL119
 18681 0a0e 01       		.uleb128 0x1
 18682 0a0f 53       		.byte	0x53
 18683 0a10 00       		.byte	0
 18684              	.LVUS169:
 18685 0a11 00       		.uleb128 .LVU402
 18686 0a12 00       		.uleb128 .LVU405
 18687              	.LLST169:
 18688 0a13 08       		.byte	0x8
 18689 0a14 00000000 		.quad	.LVL121
 18689      00000000 
 18690 0a1c 0E       		.uleb128 .LVL122-1-.LVL121
 18691 0a1d 01       		.uleb128 0x1
 18692 0a1e 50       		.byte	0x50
 18693 0a1f 00       		.byte	0
 18694              	.LVUS170:
 18695 0a20 00       		.uleb128 .LVU402
 18696 0a21 00       		.uleb128 .LVU405
 18697              	.LLST170:
 18698 0a22 08       		.byte	0x8
 18699 0a23 00000000 		.quad	.LVL121
 18699      00000000 
 18700 0a2b 0F       		.uleb128 .LVL122-.LVL121
 18701 0a2c 0A       		.uleb128 0xa
 18702 0a2d 03       		.byte	0x3
 18703 0a2e 00000000 		.quad	.LC4
 18703      00000000 
 18704 0a36 9F       		.byte	0x9f
 18705 0a37 00       		.byte	0
 18706              	.LVUS173:
GAS LISTING linobj/Ch02_03.s 			page 457


 18707 0a38 03       		.uleb128 .LVU408
 18708 0a39 01       		.uleb128 .LVU417
 18709              	.LLST173:
 18710 0a3a 08       		.byte	0x8
 18711 0a3b 00000000 		.quad	.LVL122
 18711      00000000 
 18712 0a43 20       		.uleb128 .LVL125-.LVL122
 18713 0a44 02       		.uleb128 0x2
 18714 0a45 3E       		.byte	0x3e
 18715 0a46 9F       		.byte	0x9f
 18716 0a47 00       		.byte	0
 18717              	.LVUS175:
 18718 0a48 01       		.uleb128 .LVU417
 18719 0a49 00       		.uleb128 .LVU420
 18720              	.LLST175:
 18721 0a4a 08       		.byte	0x8
 18722 0a4b 00000000 		.quad	.LVL125
 18722      00000000 
 18723 0a53 04       		.uleb128 .LVL126-1-.LVL125
 18724 0a54 0A       		.uleb128 0xa
 18725 0a55 73       		.byte	0x73
 18726 0a56 00       		.sleb128 0
 18727 0a57 33       		.byte	0x33
 18728 0a58 24       		.byte	0x24
 18729 0a59 91       		.byte	0x91
 18730 0a5a 00       		.sleb128 0
 18731 0a5b 22       		.byte	0x22
 18732 0a5c 08       		.byte	0x8
 18733 0a5d 60       		.byte	0x60
 18734 0a5e 1C       		.byte	0x1c
 18735 0a5f 00       		.byte	0
 18736              	.LVUS177:
 18737 0a60 00       		.uleb128 .LVU421
 18738 0a61 00       		.uleb128 .LVU423
 18739 0a62 00       		.uleb128 .LVU423
 18740 0a63 00       		.uleb128 .LVU432
 18741 0a64 00       		.uleb128 .LVU486
 18742 0a65 00       		.uleb128 .LVU487
 18743              	.LLST177:
 18744 0a66 06       		.byte	0x6
 18745 0a67 00000000 		.quad	.LVL127
 18745      00000000 
 18746 0a6f 04       		.byte	0x4
 18747 0a70 00       		.uleb128 .LVL127-.LVL127
 18748 0a71 03       		.uleb128 .LVL128-.LVL127
 18749 0a72 01       		.uleb128 0x1
 18750 0a73 50       		.byte	0x50
 18751 0a74 04       		.byte	0x4
 18752 0a75 03       		.uleb128 .LVL128-.LVL127
 18753 0a76 26       		.uleb128 .LVL131-1-.LVL127
 18754 0a77 01       		.uleb128 0x1
 18755 0a78 55       		.byte	0x55
 18756 0a79 04       		.byte	0x4
 18757 0a7a F701     		.uleb128 .LVL155-.LVL127
 18758 0a7c 8102     		.uleb128 .LVL156-1-.LVL127
 18759 0a7e 01       		.uleb128 0x1
 18760 0a7f 55       		.byte	0x55
GAS LISTING linobj/Ch02_03.s 			page 458


 18761 0a80 00       		.byte	0
 18762              	.LVUS178:
 18763 0a81 00       		.uleb128 .LVU424
 18764 0a82 00       		.uleb128 .LVU431
 18765 0a83 00       		.uleb128 .LVU431
 18766 0a84 00       		.uleb128 .LVU432
 18767 0a85 00       		.uleb128 .LVU486
 18768 0a86 00       		.uleb128 .LVU487
 18769              	.LLST178:
 18770 0a87 06       		.byte	0x6
 18771 0a88 00000000 		.quad	.LVL129
 18771      00000000 
 18772 0a90 04       		.byte	0x4
 18773 0a91 00       		.uleb128 .LVL129-.LVL129
 18774 0a92 15       		.uleb128 .LVL130-.LVL129
 18775 0a93 03       		.uleb128 0x3
 18776 0a94 91       		.byte	0x91
 18777 0a95 DE7E     		.sleb128 -162
 18778 0a97 04       		.byte	0x4
 18779 0a98 15       		.uleb128 .LVL130-.LVL129
 18780 0a99 1E       		.uleb128 .LVL131-1-.LVL129
 18781 0a9a 02       		.uleb128 0x2
 18782 0a9b 74       		.byte	0x74
 18783 0a9c 00       		.sleb128 0
 18784 0a9d 04       		.byte	0x4
 18785 0a9e EF01     		.uleb128 .LVL155-.LVL129
 18786 0aa0 F901     		.uleb128 .LVL156-1-.LVL129
 18787 0aa2 03       		.uleb128 0x3
 18788 0aa3 91       		.byte	0x91
 18789 0aa4 DE7E     		.sleb128 -162
 18790 0aa6 00       		.byte	0
 18791              	.LVUS179:
 18792 0aa7 02       		.uleb128 .LVU440
 18793 0aa8 00       		.uleb128 .LVU442
 18794              	.LLST179:
 18795 0aa9 08       		.byte	0x8
 18796 0aaa 00000000 		.quad	.LVL135
 18796      00000000 
 18797 0ab2 10       		.uleb128 .LVL136-.LVL135
 18798 0ab3 0A       		.uleb128 0xa
 18799 0ab4 03       		.byte	0x3
 18800 0ab5 00000000 		.quad	.LC8
 18800      00000000 
 18801 0abd 9F       		.byte	0x9f
 18802 0abe 00       		.byte	0
 18803              	.LVUS181:
 18804 0abf 00       		.uleb128 .LVU442
 18805 0ac0 00       		.uleb128 .LVU445
 18806 0ac1 00       		.uleb128 .LVU445
 18807 0ac2 00       		.uleb128 .LVU446
 18808 0ac3 00       		.uleb128 .LVU446
 18809 0ac4 00       		.uleb128 .LVU447
 18810              	.LLST181:
 18811 0ac5 06       		.byte	0x6
 18812 0ac6 00000000 		.quad	.LVL136
 18812      00000000 
 18813 0ace 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 459


 18814 0acf 00       		.uleb128 .LVL136-.LVL136
 18815 0ad0 04       		.uleb128 .LVL137-.LVL136
 18816 0ad1 03       		.uleb128 0x3
 18817 0ad2 73       		.byte	0x73
 18818 0ad3 7E       		.sleb128 -2
 18819 0ad4 9F       		.byte	0x9f
 18820 0ad5 04       		.byte	0x4
 18821 0ad6 04       		.uleb128 .LVL137-.LVL136
 18822 0ad7 0D       		.uleb128 .LVL138-1-.LVL136
 18823 0ad8 01       		.uleb128 0x1
 18824 0ad9 54       		.byte	0x54
 18825 0ada 04       		.byte	0x4
 18826 0adb 0D       		.uleb128 .LVL138-1-.LVL136
 18827 0adc 11       		.uleb128 .LVL139-.LVL136
 18828 0add 03       		.uleb128 0x3
 18829 0ade 73       		.byte	0x73
 18830 0adf 7E       		.sleb128 -2
 18831 0ae0 9F       		.byte	0x9f
 18832 0ae1 00       		.byte	0
 18833              	.LVUS182:
 18834 0ae2 00       		.uleb128 .LVU447
 18835 0ae3 00       		.uleb128 .LVU450
 18836              	.LLST182:
 18837 0ae4 08       		.byte	0x8
 18838 0ae5 00000000 		.quad	.LVL139
 18838      00000000 
 18839 0aed 0E       		.uleb128 .LVL140-1-.LVL139
 18840 0aee 01       		.uleb128 0x1
 18841 0aef 50       		.byte	0x50
 18842 0af0 00       		.byte	0
 18843              	.LVUS183:
 18844 0af1 00       		.uleb128 .LVU447
 18845 0af2 00       		.uleb128 .LVU450
 18846              	.LLST183:
 18847 0af3 08       		.byte	0x8
 18848 0af4 00000000 		.quad	.LVL139
 18848      00000000 
 18849 0afc 0F       		.uleb128 .LVL140-.LVL139
 18850 0afd 0A       		.uleb128 0xa
 18851 0afe 03       		.byte	0x3
 18852 0aff 00000000 		.quad	.LC4
 18852      00000000 
 18853 0b07 9F       		.byte	0x9f
 18854 0b08 00       		.byte	0
 18855              	.LVUS186:
 18856 0b09 03       		.uleb128 .LVU453
 18857 0b0a 01       		.uleb128 .LVU462
 18858              	.LLST186:
 18859 0b0b 08       		.byte	0x8
 18860 0b0c 00000000 		.quad	.LVL140
 18860      00000000 
 18861 0b14 20       		.uleb128 .LVL143-.LVL140
 18862 0b15 02       		.uleb128 0x2
 18863 0b16 3E       		.byte	0x3e
 18864 0b17 9F       		.byte	0x9f
 18865 0b18 00       		.byte	0
 18866              	.LVUS188:
GAS LISTING linobj/Ch02_03.s 			page 460


 18867 0b19 01       		.uleb128 .LVU462
 18868 0b1a 00       		.uleb128 .LVU465
 18869              	.LLST188:
 18870 0b1b 08       		.byte	0x8
 18871 0b1c 00000000 		.quad	.LVL143
 18871      00000000 
 18872 0b24 04       		.uleb128 .LVL144-1-.LVL143
 18873 0b25 0A       		.uleb128 0xa
 18874 0b26 73       		.byte	0x73
 18875 0b27 00       		.sleb128 0
 18876 0b28 33       		.byte	0x33
 18877 0b29 24       		.byte	0x24
 18878 0b2a 91       		.byte	0x91
 18879 0b2b 00       		.sleb128 0
 18880 0b2c 22       		.byte	0x22
 18881 0b2d 08       		.byte	0x8
 18882 0b2e 60       		.byte	0x60
 18883 0b2f 1C       		.byte	0x1c
 18884 0b30 00       		.byte	0
 18885              	.LVUS190:
 18886 0b31 00       		.uleb128 .LVU466
 18887 0b32 00       		.uleb128 .LVU468
 18888 0b33 00       		.uleb128 .LVU468
 18889 0b34 00       		.uleb128 .LVU477
 18890 0b35 00       		.uleb128 .LVU497
 18891 0b36 00       		.uleb128 .LVU498
 18892              	.LLST190:
 18893 0b37 06       		.byte	0x6
 18894 0b38 00000000 		.quad	.LVL145
 18894      00000000 
 18895 0b40 04       		.byte	0x4
 18896 0b41 00       		.uleb128 .LVL145-.LVL145
 18897 0b42 03       		.uleb128 .LVL146-.LVL145
 18898 0b43 01       		.uleb128 0x1
 18899 0b44 50       		.byte	0x50
 18900 0b45 04       		.byte	0x4
 18901 0b46 03       		.uleb128 .LVL146-.LVL145
 18902 0b47 22       		.uleb128 .LVL149-1-.LVL145
 18903 0b48 01       		.uleb128 0x1
 18904 0b49 55       		.byte	0x55
 18905 0b4a 04       		.byte	0x4
 18906 0b4b 8201     		.uleb128 .LVL159-.LVL145
 18907 0b4d 9201     		.uleb128 .LVL160-1-.LVL145
 18908 0b4f 01       		.uleb128 0x1
 18909 0b50 55       		.byte	0x55
 18910 0b51 00       		.byte	0
 18911              	.LVUS191:
 18912 0b52 00       		.uleb128 .LVU469
 18913 0b53 00       		.uleb128 .LVU476
 18914 0b54 00       		.uleb128 .LVU476
 18915 0b55 00       		.uleb128 .LVU477
 18916 0b56 00       		.uleb128 .LVU497
 18917 0b57 00       		.uleb128 .LVU498
 18918              	.LLST191:
 18919 0b58 06       		.byte	0x6
 18920 0b59 00000000 		.quad	.LVL147
 18920      00000000 
GAS LISTING linobj/Ch02_03.s 			page 461


 18921 0b61 04       		.byte	0x4
 18922 0b62 00       		.uleb128 .LVL147-.LVL147
 18923 0b63 11       		.uleb128 .LVL148-.LVL147
 18924 0b64 03       		.uleb128 0x3
 18925 0b65 91       		.byte	0x91
 18926 0b66 DF7E     		.sleb128 -161
 18927 0b68 04       		.byte	0x4
 18928 0b69 11       		.uleb128 .LVL148-.LVL147
 18929 0b6a 1A       		.uleb128 .LVL149-1-.LVL147
 18930 0b6b 02       		.uleb128 0x2
 18931 0b6c 74       		.byte	0x74
 18932 0b6d 00       		.sleb128 0
 18933 0b6e 04       		.byte	0x4
 18934 0b6f 7A       		.uleb128 .LVL159-.LVL147
 18935 0b70 8A01     		.uleb128 .LVL160-1-.LVL147
 18936 0b72 03       		.uleb128 0x3
 18937 0b73 91       		.byte	0x91
 18938 0b74 DF7E     		.sleb128 -161
 18939 0b76 00       		.byte	0
 18940              	.LVUS192:
 18941 0b77 02       		.uleb128 .LVU490
 18942 0b78 03       		.uleb128 .LVU495
 18943              	.LLST192:
 18944 0b79 08       		.byte	0x8
 18945 0b7a 00000000 		.quad	.LVL157
 18945      00000000 
 18946 0b82 09       		.uleb128 .LVL158-.LVL157
 18947 0b83 01       		.uleb128 0x1
 18948 0b84 5E       		.byte	0x5e
 18949 0b85 00       		.byte	0
 18950              	.LVUS193:
 18951 0b86 00       		.uleb128 .LVU492
 18952 0b87 03       		.uleb128 .LVU495
 18953              	.LLST193:
 18954 0b88 08       		.byte	0x8
 18955 0b89 00000000 		.quad	.LVL158
 18955      00000000 
 18956 0b91 00       		.uleb128 .LVL158-.LVL158
 18957 0b92 01       		.uleb128 0x1
 18958 0b93 5E       		.byte	0x5e
 18959 0b94 00       		.byte	0
 18960              	.LVUS194:
 18961 0b95 01       		.uleb128 .LVU493
 18962 0b96 03       		.uleb128 .LVU495
 18963              	.LLST194:
 18964 0b97 08       		.byte	0x8
 18965 0b98 00000000 		.quad	.LVL158
 18965      00000000 
 18966 0ba0 00       		.uleb128 .LVL158-.LVL158
 18967 0ba1 01       		.uleb128 0x1
 18968 0ba2 5E       		.byte	0x5e
 18969 0ba3 00       		.byte	0
 18970              	.LVUS195:
 18971 0ba4 02       		.uleb128 .LVU494
 18972 0ba5 03       		.uleb128 .LVU495
 18973              	.LLST195:
 18974 0ba6 08       		.byte	0x8
GAS LISTING linobj/Ch02_03.s 			page 462


 18975 0ba7 00000000 		.quad	.LVL158
 18975      00000000 
 18976 0baf 00       		.uleb128 .LVL158-.LVL158
 18977 0bb0 01       		.uleb128 0x1
 18978 0bb1 5E       		.byte	0x5e
 18979 0bb2 00       		.byte	0
 18980              	.LVUS197:
 18981 0bb3 00       		.uleb128 0
 18982 0bb4 03       		.uleb128 .LVU507
 18983              	.LLST197:
 18984 0bb5 08       		.byte	0x8
 18985 0bb6 00000000 		.quad	.LVL162
 18985      00000000 
 18986 0bbe 0B       		.uleb128 .LVL164-.LVL162
 18987 0bbf 01       		.uleb128 0x1
 18988 0bc0 5E       		.byte	0x5e
 18989 0bc1 00       		.byte	0
 18990              	.LVUS198:
 18991 0bc2 00       		.uleb128 .LVU504
 18992 0bc3 03       		.uleb128 .LVU507
 18993              	.LLST198:
 18994 0bc4 08       		.byte	0x8
 18995 0bc5 00000000 		.quad	.LVL164
 18995      00000000 
 18996 0bcd 00       		.uleb128 .LVL164-.LVL164
 18997 0bce 01       		.uleb128 0x1
 18998 0bcf 5E       		.byte	0x5e
 18999 0bd0 00       		.byte	0
 19000              	.LVUS199:
 19001 0bd1 01       		.uleb128 .LVU505
 19002 0bd2 03       		.uleb128 .LVU507
 19003              	.LLST199:
 19004 0bd3 08       		.byte	0x8
 19005 0bd4 00000000 		.quad	.LVL164
 19005      00000000 
 19006 0bdc 00       		.uleb128 .LVL164-.LVL164
 19007 0bdd 01       		.uleb128 0x1
 19008 0bde 5E       		.byte	0x5e
 19009 0bdf 00       		.byte	0
 19010              	.LVUS200:
 19011 0be0 02       		.uleb128 .LVU506
 19012 0be1 03       		.uleb128 .LVU507
 19013              	.LLST200:
 19014 0be2 08       		.byte	0x8
 19015 0be3 00000000 		.quad	.LVL164
 19015      00000000 
 19016 0beb 00       		.uleb128 .LVL164-.LVL164
 19017 0bec 01       		.uleb128 0x1
 19018 0bed 5E       		.byte	0x5e
 19019 0bee 00       		.byte	0
 19020              	.Ldebug_loc3:
 19021              		.section	.debug_aranges,"",@progbits
 19022 0000 3C000000 		.long	0x3c
 19023 0004 0200     		.value	0x2
 19024 0006 00000000 		.long	.Ldebug_info0
 19025 000a 08       		.byte	0x8
 19026 000b 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 463


 19027 000c 0000     		.value	0
 19028 000e 0000     		.value	0
 19029 0010 00000000 		.quad	.Ltext_cold0
 19029      00000000 
 19030 0018 13000000 		.quad	.Letext_cold0-.Ltext_cold0
 19030      00000000 
 19031 0020 00000000 		.quad	.LFB1975
 19031      00000000 
 19032 0028 04070000 		.quad	.LHOTE16-.LFB1975
 19032      00000000 
 19033 0030 00000000 		.quad	0
 19033      00000000 
 19034 0038 00000000 		.quad	0
 19034      00000000 
 19035              		.section	.debug_rnglists,"",@progbits
 19036              	.Ldebug_ranges0:
 19037 0000 0F040000 		.long	.Ldebug_ranges3-.Ldebug_ranges2
 19038              	.Ldebug_ranges2:
 19039 0004 0500     		.value	0x5
 19040 0006 08       		.byte	0x8
 19041 0007 00       		.byte	0
 19042 0008 00000000 		.long	0
 19043              	.LLRL0:
 19044 000c 07       		.byte	0x7
 19045 000d 00000000 		.quad	.LFB1975
 19045      00000000 
 19046 0015 840E     		.uleb128 .LHOTE16-.LFB1975
 19047 0017 07       		.byte	0x7
 19048 0018 00000000 		.quad	.LFSB1975
 19048      00000000 
 19049 0020 13       		.uleb128 .LCOLDE16-.LFSB1975
 19050 0021 00       		.byte	0
 19051              	.LLRL3:
 19052 0022 05       		.byte	0x5
 19053 0023 00000000 		.quad	.LBB685
 19053      00000000 
 19054 002b 04       		.byte	0x4
 19055 002c 00       		.uleb128 .LBB685-.LBB685
 19056 002d 0A       		.uleb128 .LBE685-.LBB685
 19057 002e 04       		.byte	0x4
 19058 002f 16       		.uleb128 .LBB701-.LBB685
 19059 0030 28       		.uleb128 .LBE701-.LBB685
 19060 0031 04       		.byte	0x4
 19061 0032 32       		.uleb128 .LBB795-.LBB685
 19062 0033 37       		.uleb128 .LBE795-.LBB685
 19063 0034 00       		.byte	0
 19064              	.LLRL9:
 19065 0035 05       		.byte	0x5
 19066 0036 00000000 		.quad	.LBB689
 19066      00000000 
 19067 003e 04       		.byte	0x4
 19068 003f 00       		.uleb128 .LBB689-.LBB689
 19069 0040 0A       		.uleb128 .LBE689-.LBB689
 19070 0041 04       		.byte	0x4
 19071 0042 0D       		.uleb128 .LBB696-.LBB689
 19072 0043 12       		.uleb128 .LBE696-.LBB689
 19073 0044 00       		.byte	0
GAS LISTING linobj/Ch02_03.s 			page 464


 19074              	.LLRL17:
 19075 0045 05       		.byte	0x5
 19076 0046 00000000 		.quad	.LBB702
 19076      00000000 
 19077 004e 04       		.byte	0x4
 19078 004f 00       		.uleb128 .LBB702-.LBB702
 19079 0050 0A       		.uleb128 .LBE702-.LBB702
 19080 0051 04       		.byte	0x4
 19081 0052 0F       		.uleb128 .LBB798-.LBB702
 19082 0053 C104     		.uleb128 .LBE798-.LBB702
 19083 0055 04       		.byte	0x4
 19084 0056 F60C     		.uleb128 .LBB991-.LBB702
 19085 0058 960D     		.uleb128 .LBE991-.LBB702
 19086 005a 00       		.byte	0
 19087              	.LLRL19:
 19088 005b 05       		.byte	0x5
 19089 005c 00000000 		.quad	.LBB706
 19089      00000000 
 19090 0064 04       		.byte	0x4
 19091 0065 00       		.uleb128 .LBB706-.LBB706
 19092 0066 EF03     		.uleb128 .LBE706-.LBB706
 19093 0068 04       		.byte	0x4
 19094 0069 A40C     		.uleb128 .LBB792-.LBB706
 19095 006b C40C     		.uleb128 .LBE792-.LBB706
 19096 006d 00       		.byte	0
 19097              	.LLRL22:
 19098 006e 05       		.byte	0x5
 19099 006f 00000000 		.quad	.LBB709
 19099      00000000 
 19100 0077 04       		.byte	0x4
 19101 0078 00       		.uleb128 .LBB709-.LBB709
 19102 0079 0D       		.uleb128 .LBE709-.LBB709
 19103 007a 04       		.byte	0x4
 19104 007b 1A       		.uleb128 .LBB715-.LBB709
 19105 007c 1D       		.uleb128 .LBE715-.LBB709
 19106 007d 00       		.byte	0
 19107              	.LLRL24:
 19108 007e 05       		.byte	0x5
 19109 007f 00000000 		.quad	.LBB712
 19109      00000000 
 19110 0087 04       		.byte	0x4
 19111 0088 00       		.uleb128 .LBB712-.LBB712
 19112 0089 0D       		.uleb128 .LBE712-.LBB712
 19113 008a 04       		.byte	0x4
 19114 008b 10       		.uleb128 .LBB716-.LBB712
 19115 008c 15       		.uleb128 .LBE716-.LBB712
 19116 008d 00       		.byte	0
 19117              	.LLRL27:
 19118 008e 05       		.byte	0x5
 19119 008f 00000000 		.quad	.LBB717
 19119      00000000 
 19120 0097 04       		.byte	0x4
 19121 0098 00       		.uleb128 .LBB717-.LBB717
 19122 0099 03       		.uleb128 .LBE717-.LBB717
 19123 009a 04       		.byte	0x4
 19124 009b 06       		.uleb128 .LBB724-.LBB717
 19125 009c 13       		.uleb128 .LBE724-.LBB717
GAS LISTING linobj/Ch02_03.s 			page 465


 19126 009d 00       		.byte	0
 19127              	.LLRL29:
 19128 009e 05       		.byte	0x5
 19129 009f 00000000 		.quad	.LBB719
 19129      00000000 
 19130 00a7 04       		.byte	0x4
 19131 00a8 00       		.uleb128 .LBB719-.LBB719
 19132 00a9 00       		.uleb128 .LBE719-.LBB719
 19133 00aa 04       		.byte	0x4
 19134 00ab 06       		.uleb128 .LBB722-.LBB719
 19135 00ac 13       		.uleb128 .LBE722-.LBB719
 19136 00ad 00       		.byte	0
 19137              	.LLRL36:
 19138 00ae 05       		.byte	0x5
 19139 00af 00000000 		.quad	.LBB729
 19139      00000000 
 19140 00b7 04       		.byte	0x4
 19141 00b8 00       		.uleb128 .LBB729-.LBB729
 19142 00b9 0D       		.uleb128 .LBE729-.LBB729
 19143 00ba 04       		.byte	0x4
 19144 00bb 1A       		.uleb128 .LBB735-.LBB729
 19145 00bc 1D       		.uleb128 .LBE735-.LBB729
 19146 00bd 00       		.byte	0
 19147              	.LLRL38:
 19148 00be 05       		.byte	0x5
 19149 00bf 00000000 		.quad	.LBB732
 19149      00000000 
 19150 00c7 04       		.byte	0x4
 19151 00c8 00       		.uleb128 .LBB732-.LBB732
 19152 00c9 0D       		.uleb128 .LBE732-.LBB732
 19153 00ca 04       		.byte	0x4
 19154 00cb 10       		.uleb128 .LBB736-.LBB732
 19155 00cc 15       		.uleb128 .LBE736-.LBB732
 19156 00cd 00       		.byte	0
 19157              	.LLRL41:
 19158 00ce 05       		.byte	0x5
 19159 00cf 00000000 		.quad	.LBB737
 19159      00000000 
 19160 00d7 04       		.byte	0x4
 19161 00d8 00       		.uleb128 .LBB737-.LBB737
 19162 00d9 03       		.uleb128 .LBE737-.LBB737
 19163 00da 04       		.byte	0x4
 19164 00db 06       		.uleb128 .LBB744-.LBB737
 19165 00dc 13       		.uleb128 .LBE744-.LBB737
 19166 00dd 00       		.byte	0
 19167              	.LLRL43:
 19168 00de 05       		.byte	0x5
 19169 00df 00000000 		.quad	.LBB739
 19169      00000000 
 19170 00e7 04       		.byte	0x4
 19171 00e8 00       		.uleb128 .LBB739-.LBB739
 19172 00e9 00       		.uleb128 .LBE739-.LBB739
 19173 00ea 04       		.byte	0x4
 19174 00eb 06       		.uleb128 .LBB742-.LBB739
 19175 00ec 13       		.uleb128 .LBE742-.LBB739
 19176 00ed 00       		.byte	0
 19177              	.LLRL49:
GAS LISTING linobj/Ch02_03.s 			page 466


 19178 00ee 05       		.byte	0x5
 19179 00ef 00000000 		.quad	.LBB747
 19179      00000000 
 19180 00f7 04       		.byte	0x4
 19181 00f8 00       		.uleb128 .LBB747-.LBB747
 19182 00f9 05       		.uleb128 .LBE747-.LBB747
 19183 00fa 04       		.byte	0x4
 19184 00fb 0F       		.uleb128 .LBB750-.LBB747
 19185 00fc 1E       		.uleb128 .LBE750-.LBB747
 19186 00fd 00       		.byte	0
 19187              	.LLRL54:
 19188 00fe 05       		.byte	0x5
 19189 00ff 00000000 		.quad	.LBB755
 19189      00000000 
 19190 0107 04       		.byte	0x4
 19191 0108 00       		.uleb128 .LBB755-.LBB755
 19192 0109 07       		.uleb128 .LBE755-.LBB755
 19193 010a 04       		.byte	0x4
 19194 010b 10       		.uleb128 .LBB762-.LBB755
 19195 010c 1F       		.uleb128 .LBE762-.LBB755
 19196 010d 00       		.byte	0
 19197              	.LLRL55:
 19198 010e 05       		.byte	0x5
 19199 010f 00000000 		.quad	.LBB757
 19199      00000000 
 19200 0117 04       		.byte	0x4
 19201 0118 00       		.uleb128 .LBB757-.LBB757
 19202 0119 00       		.uleb128 .LBE757-.LBB757
 19203 011a 04       		.byte	0x4
 19204 011b 10       		.uleb128 .LBB760-.LBB757
 19205 011c 1F       		.uleb128 .LBE760-.LBB757
 19206 011d 00       		.byte	0
 19207              	.LLRL57:
 19208 011e 05       		.byte	0x5
 19209 011f 00000000 		.quad	.LBB763
 19209      00000000 
 19210 0127 04       		.byte	0x4
 19211 0128 00       		.uleb128 .LBB763-.LBB763
 19212 0129 27       		.uleb128 .LBE763-.LBB763
 19213 012a 04       		.byte	0x4
 19214 012b 810A     		.uleb128 .LBB791-.LBB763
 19215 012d 910A     		.uleb128 .LBE791-.LBB763
 19216 012f 00       		.byte	0
 19217              	.LLRL61:
 19218 0130 05       		.byte	0x5
 19219 0131 00000000 		.quad	.LBB771
 19219      00000000 
 19220 0139 04       		.byte	0x4
 19221 013a 00       		.uleb128 .LBB771-.LBB771
 19222 013b 00       		.uleb128 .LBE771-.LBB771
 19223 013c 04       		.byte	0x4
 19224 013d 04       		.uleb128 .LBB773-.LBB771
 19225 013e 11       		.uleb128 .LBE773-.LBB771
 19226 013f 00       		.byte	0
 19227              	.LLRL65:
 19228 0140 05       		.byte	0x5
 19229 0141 00000000 		.quad	.LBB776
GAS LISTING linobj/Ch02_03.s 			page 467


 19229      00000000 
 19230 0149 04       		.byte	0x4
 19231 014a 00       		.uleb128 .LBB776-.LBB776
 19232 014b 07       		.uleb128 .LBE776-.LBB776
 19233 014c 04       		.byte	0x4
 19234 014d 10       		.uleb128 .LBB783-.LBB776
 19235 014e 1F       		.uleb128 .LBE783-.LBB776
 19236 014f 00       		.byte	0
 19237              	.LLRL66:
 19238 0150 05       		.byte	0x5
 19239 0151 00000000 		.quad	.LBB778
 19239      00000000 
 19240 0159 04       		.byte	0x4
 19241 015a 00       		.uleb128 .LBB778-.LBB778
 19242 015b 00       		.uleb128 .LBE778-.LBB778
 19243 015c 04       		.byte	0x4
 19244 015d 10       		.uleb128 .LBB781-.LBB778
 19245 015e 1F       		.uleb128 .LBE781-.LBB778
 19246 015f 00       		.byte	0
 19247              	.LLRL68:
 19248 0160 05       		.byte	0x5
 19249 0161 00000000 		.quad	.LBB784
 19249      00000000 
 19250 0169 04       		.byte	0x4
 19251 016a 00       		.uleb128 .LBB784-.LBB784
 19252 016b 27       		.uleb128 .LBE784-.LBB784
 19253 016c 04       		.byte	0x4
 19254 016d EA08     		.uleb128 .LBB790-.LBB784
 19255 016f FA08     		.uleb128 .LBE790-.LBB784
 19256 0171 00       		.byte	0
 19257              	.LLRL73:
 19258 0172 05       		.byte	0x5
 19259 0173 00000000 		.quad	.LBB799
 19259      00000000 
 19260 017b 04       		.byte	0x4
 19261 017c 00       		.uleb128 .LBB799-.LBB799
 19262 017d 0A       		.uleb128 .LBE799-.LBB799
 19263 017e 04       		.byte	0x4
 19264 017f 0D       		.uleb128 .LBB805-.LBB799
 19265 0180 15       		.uleb128 .LBE805-.LBB799
 19266 0181 00       		.byte	0
 19267              	.LLRL79:
 19268 0182 05       		.byte	0x5
 19269 0183 00000000 		.quad	.LBB806
 19269      00000000 
 19270 018b 04       		.byte	0x4
 19271 018c 00       		.uleb128 .LBB806-.LBB806
 19272 018d 9303     		.uleb128 .LBE806-.LBB806
 19273 018f 04       		.byte	0x4
 19274 0190 E706     		.uleb128 .LBB989-.LBB806
 19275 0192 F706     		.uleb128 .LBE989-.LBB806
 19276 0194 00       		.byte	0
 19277              	.LLRL82:
 19278 0195 05       		.byte	0x5
 19279 0196 00000000 		.quad	.LBB810
 19279      00000000 
 19280 019e 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 468


 19281 019f 00       		.uleb128 .LBB810-.LBB810
 19282 01a0 D502     		.uleb128 .LBE810-.LBB810
 19283 01a2 04       		.byte	0x4
 19284 01a3 A906     		.uleb128 .LBB876-.LBB810
 19285 01a5 B906     		.uleb128 .LBE876-.LBB810
 19286 01a7 00       		.byte	0
 19287              	.LLRL85:
 19288 01a8 05       		.byte	0x5
 19289 01a9 00000000 		.quad	.LBB813
 19289      00000000 
 19290 01b1 04       		.byte	0x4
 19291 01b2 00       		.uleb128 .LBB813-.LBB813
 19292 01b3 0D       		.uleb128 .LBE813-.LBB813
 19293 01b4 04       		.byte	0x4
 19294 01b5 1A       		.uleb128 .LBB819-.LBB813
 19295 01b6 1D       		.uleb128 .LBE819-.LBB813
 19296 01b7 00       		.byte	0
 19297              	.LLRL87:
 19298 01b8 05       		.byte	0x5
 19299 01b9 00000000 		.quad	.LBB816
 19299      00000000 
 19300 01c1 04       		.byte	0x4
 19301 01c2 00       		.uleb128 .LBB816-.LBB816
 19302 01c3 0D       		.uleb128 .LBE816-.LBB816
 19303 01c4 04       		.byte	0x4
 19304 01c5 10       		.uleb128 .LBB820-.LBB816
 19305 01c6 15       		.uleb128 .LBE820-.LBB816
 19306 01c7 00       		.byte	0
 19307              	.LLRL90:
 19308 01c8 05       		.byte	0x5
 19309 01c9 00000000 		.quad	.LBB821
 19309      00000000 
 19310 01d1 04       		.byte	0x4
 19311 01d2 00       		.uleb128 .LBB821-.LBB821
 19312 01d3 03       		.uleb128 .LBE821-.LBB821
 19313 01d4 04       		.byte	0x4
 19314 01d5 06       		.uleb128 .LBB828-.LBB821
 19315 01d6 13       		.uleb128 .LBE828-.LBB821
 19316 01d7 00       		.byte	0
 19317              	.LLRL92:
 19318 01d8 05       		.byte	0x5
 19319 01d9 00000000 		.quad	.LBB823
 19319      00000000 
 19320 01e1 04       		.byte	0x4
 19321 01e2 00       		.uleb128 .LBB823-.LBB823
 19322 01e3 00       		.uleb128 .LBE823-.LBB823
 19323 01e4 04       		.byte	0x4
 19324 01e5 06       		.uleb128 .LBB826-.LBB823
 19325 01e6 13       		.uleb128 .LBE826-.LBB823
 19326 01e7 00       		.byte	0
 19327              	.LLRL99:
 19328 01e8 05       		.byte	0x5
 19329 01e9 00000000 		.quad	.LBB833
 19329      00000000 
 19330 01f1 04       		.byte	0x4
 19331 01f2 00       		.uleb128 .LBB833-.LBB833
 19332 01f3 0D       		.uleb128 .LBE833-.LBB833
GAS LISTING linobj/Ch02_03.s 			page 469


 19333 01f4 04       		.byte	0x4
 19334 01f5 1A       		.uleb128 .LBB839-.LBB833
 19335 01f6 1D       		.uleb128 .LBE839-.LBB833
 19336 01f7 00       		.byte	0
 19337              	.LLRL101:
 19338 01f8 05       		.byte	0x5
 19339 01f9 00000000 		.quad	.LBB836
 19339      00000000 
 19340 0201 04       		.byte	0x4
 19341 0202 00       		.uleb128 .LBB836-.LBB836
 19342 0203 0D       		.uleb128 .LBE836-.LBB836
 19343 0204 04       		.byte	0x4
 19344 0205 10       		.uleb128 .LBB840-.LBB836
 19345 0206 15       		.uleb128 .LBE840-.LBB836
 19346 0207 00       		.byte	0
 19347              	.LLRL104:
 19348 0208 05       		.byte	0x5
 19349 0209 00000000 		.quad	.LBB841
 19349      00000000 
 19350 0211 04       		.byte	0x4
 19351 0212 00       		.uleb128 .LBB841-.LBB841
 19352 0213 03       		.uleb128 .LBE841-.LBB841
 19353 0214 04       		.byte	0x4
 19354 0215 06       		.uleb128 .LBB848-.LBB841
 19355 0216 13       		.uleb128 .LBE848-.LBB841
 19356 0217 00       		.byte	0
 19357              	.LLRL106:
 19358 0218 05       		.byte	0x5
 19359 0219 00000000 		.quad	.LBB843
 19359      00000000 
 19360 0221 04       		.byte	0x4
 19361 0222 00       		.uleb128 .LBB843-.LBB843
 19362 0223 00       		.uleb128 .LBE843-.LBB843
 19363 0224 04       		.byte	0x4
 19364 0225 06       		.uleb128 .LBB846-.LBB843
 19365 0226 13       		.uleb128 .LBE846-.LBB843
 19366 0227 00       		.byte	0
 19367              	.LLRL113:
 19368 0228 05       		.byte	0x5
 19369 0229 00000000 		.quad	.LBB853
 19369      00000000 
 19370 0231 04       		.byte	0x4
 19371 0232 00       		.uleb128 .LBB853-.LBB853
 19372 0233 0D       		.uleb128 .LBE853-.LBB853
 19373 0234 04       		.byte	0x4
 19374 0235 1A       		.uleb128 .LBB859-.LBB853
 19375 0236 1D       		.uleb128 .LBE859-.LBB853
 19376 0237 00       		.byte	0
 19377              	.LLRL115:
 19378 0238 05       		.byte	0x5
 19379 0239 00000000 		.quad	.LBB856
 19379      00000000 
 19380 0241 04       		.byte	0x4
 19381 0242 00       		.uleb128 .LBB856-.LBB856
 19382 0243 0D       		.uleb128 .LBE856-.LBB856
 19383 0244 04       		.byte	0x4
 19384 0245 10       		.uleb128 .LBB860-.LBB856
GAS LISTING linobj/Ch02_03.s 			page 470


 19385 0246 15       		.uleb128 .LBE860-.LBB856
 19386 0247 00       		.byte	0
 19387              	.LLRL118:
 19388 0248 05       		.byte	0x5
 19389 0249 00000000 		.quad	.LBB861
 19389      00000000 
 19390 0251 04       		.byte	0x4
 19391 0252 00       		.uleb128 .LBB861-.LBB861
 19392 0253 03       		.uleb128 .LBE861-.LBB861
 19393 0254 04       		.byte	0x4
 19394 0255 06       		.uleb128 .LBB868-.LBB861
 19395 0256 13       		.uleb128 .LBE868-.LBB861
 19396 0257 00       		.byte	0
 19397              	.LLRL120:
 19398 0258 05       		.byte	0x5
 19399 0259 00000000 		.quad	.LBB863
 19399      00000000 
 19400 0261 04       		.byte	0x4
 19401 0262 00       		.uleb128 .LBB863-.LBB863
 19402 0263 00       		.uleb128 .LBE863-.LBB863
 19403 0264 04       		.byte	0x4
 19404 0265 06       		.uleb128 .LBB866-.LBB863
 19405 0266 13       		.uleb128 .LBE866-.LBB863
 19406 0267 00       		.byte	0
 19407              	.LLRL124:
 19408 0268 05       		.byte	0x5
 19409 0269 00000000 		.quad	.LBB869
 19409      00000000 
 19410 0271 04       		.byte	0x4
 19411 0272 00       		.uleb128 .LBB869-.LBB869
 19412 0273 27       		.uleb128 .LBE869-.LBB869
 19413 0274 04       		.byte	0x4
 19414 0275 8904     		.uleb128 .LBB875-.LBB869
 19415 0277 9904     		.uleb128 .LBE875-.LBB869
 19416 0279 00       		.byte	0
 19417              	.LLRL127:
 19418 027a 05       		.byte	0x5
 19419 027b 00000000 		.quad	.LBB878
 19419      00000000 
 19420 0283 04       		.byte	0x4
 19421 0284 00       		.uleb128 .LBB878-.LBB878
 19422 0285 0A       		.uleb128 .LBE878-.LBB878
 19423 0286 04       		.byte	0x4
 19424 0287 0D       		.uleb128 .LBB884-.LBB878
 19425 0288 15       		.uleb128 .LBE884-.LBB878
 19426 0289 00       		.byte	0
 19427              	.LLRL133:
 19428 028a 05       		.byte	0x5
 19429 028b 00000000 		.quad	.LBB885
 19429      00000000 
 19430 0293 04       		.byte	0x4
 19431 0294 00       		.uleb128 .LBB885-.LBB885
 19432 0295 A603     		.uleb128 .LBE885-.LBB885
 19433 0297 04       		.byte	0x4
 19434 0298 B603     		.uleb128 .LBB990-.LBB885
 19435 029a C604     		.uleb128 .LBE990-.LBB885
 19436 029c 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 471


 19437 029d E604     		.uleb128 .LBB992-.LBB885
 19438 029f F604     		.uleb128 .LBE992-.LBB885
 19439 02a1 04       		.byte	0x4
 19440 02a2 9605     		.uleb128 .LBB998-.LBB885
 19441 02a4 A205     		.uleb128 .LBE998-.LBB885
 19442 02a6 00       		.byte	0
 19443              	.LLRL136:
 19444 02a7 05       		.byte	0x5
 19445 02a8 00000000 		.quad	.LBB889
 19445      00000000 
 19446 02b0 04       		.byte	0x4
 19447 02b1 00       		.uleb128 .LBB889-.LBB889
 19448 02b2 E802     		.uleb128 .LBE889-.LBB889
 19449 02b4 04       		.byte	0x4
 19450 02b5 F802     		.uleb128 .LBB983-.LBB889
 19451 02b7 8804     		.uleb128 .LBE983-.LBB889
 19452 02b9 04       		.byte	0x4
 19453 02ba A804     		.uleb128 .LBB984-.LBB889
 19454 02bc B804     		.uleb128 .LBE984-.LBB889
 19455 02be 04       		.byte	0x4
 19456 02bf D804     		.uleb128 .LBB985-.LBB889
 19457 02c1 E404     		.uleb128 .LBE985-.LBB889
 19458 02c3 00       		.byte	0
 19459              	.LLRL139:
 19460 02c4 05       		.byte	0x5
 19461 02c5 00000000 		.quad	.LBB892
 19461      00000000 
 19462 02cd 04       		.byte	0x4
 19463 02ce 00       		.uleb128 .LBB892-.LBB892
 19464 02cf 0D       		.uleb128 .LBE892-.LBB892
 19465 02d0 04       		.byte	0x4
 19466 02d1 1A       		.uleb128 .LBB898-.LBB892
 19467 02d2 1D       		.uleb128 .LBE898-.LBB892
 19468 02d3 00       		.byte	0
 19469              	.LLRL141:
 19470 02d4 05       		.byte	0x5
 19471 02d5 00000000 		.quad	.LBB895
 19471      00000000 
 19472 02dd 04       		.byte	0x4
 19473 02de 00       		.uleb128 .LBB895-.LBB895
 19474 02df 0D       		.uleb128 .LBE895-.LBB895
 19475 02e0 04       		.byte	0x4
 19476 02e1 10       		.uleb128 .LBB899-.LBB895
 19477 02e2 15       		.uleb128 .LBE899-.LBB895
 19478 02e3 00       		.byte	0
 19479              	.LLRL144:
 19480 02e4 05       		.byte	0x5
 19481 02e5 00000000 		.quad	.LBB900
 19481      00000000 
 19482 02ed 04       		.byte	0x4
 19483 02ee 00       		.uleb128 .LBB900-.LBB900
 19484 02ef 03       		.uleb128 .LBE900-.LBB900
 19485 02f0 04       		.byte	0x4
 19486 02f1 06       		.uleb128 .LBB907-.LBB900
 19487 02f2 13       		.uleb128 .LBE907-.LBB900
 19488 02f3 00       		.byte	0
 19489              	.LLRL146:
GAS LISTING linobj/Ch02_03.s 			page 472


 19490 02f4 05       		.byte	0x5
 19491 02f5 00000000 		.quad	.LBB902
 19491      00000000 
 19492 02fd 04       		.byte	0x4
 19493 02fe 00       		.uleb128 .LBB902-.LBB902
 19494 02ff 00       		.uleb128 .LBE902-.LBB902
 19495 0300 04       		.byte	0x4
 19496 0301 06       		.uleb128 .LBB905-.LBB902
 19497 0302 13       		.uleb128 .LBE905-.LBB902
 19498 0303 00       		.byte	0
 19499              	.LLRL153:
 19500 0304 05       		.byte	0x5
 19501 0305 00000000 		.quad	.LBB912
 19501      00000000 
 19502 030d 04       		.byte	0x4
 19503 030e 00       		.uleb128 .LBB912-.LBB912
 19504 030f 0D       		.uleb128 .LBE912-.LBB912
 19505 0310 04       		.byte	0x4
 19506 0311 1A       		.uleb128 .LBB918-.LBB912
 19507 0312 1D       		.uleb128 .LBE918-.LBB912
 19508 0313 00       		.byte	0
 19509              	.LLRL155:
 19510 0314 05       		.byte	0x5
 19511 0315 00000000 		.quad	.LBB915
 19511      00000000 
 19512 031d 04       		.byte	0x4
 19513 031e 00       		.uleb128 .LBB915-.LBB915
 19514 031f 0D       		.uleb128 .LBE915-.LBB915
 19515 0320 04       		.byte	0x4
 19516 0321 10       		.uleb128 .LBB919-.LBB915
 19517 0322 15       		.uleb128 .LBE919-.LBB915
 19518 0323 00       		.byte	0
 19519              	.LLRL158:
 19520 0324 05       		.byte	0x5
 19521 0325 00000000 		.quad	.LBB920
 19521      00000000 
 19522 032d 04       		.byte	0x4
 19523 032e 00       		.uleb128 .LBB920-.LBB920
 19524 032f 03       		.uleb128 .LBE920-.LBB920
 19525 0330 04       		.byte	0x4
 19526 0331 06       		.uleb128 .LBB927-.LBB920
 19527 0332 13       		.uleb128 .LBE927-.LBB920
 19528 0333 00       		.byte	0
 19529              	.LLRL160:
 19530 0334 05       		.byte	0x5
 19531 0335 00000000 		.quad	.LBB922
 19531      00000000 
 19532 033d 04       		.byte	0x4
 19533 033e 00       		.uleb128 .LBB922-.LBB922
 19534 033f 00       		.uleb128 .LBE922-.LBB922
 19535 0340 04       		.byte	0x4
 19536 0341 06       		.uleb128 .LBB925-.LBB922
 19537 0342 13       		.uleb128 .LBE925-.LBB922
 19538 0343 00       		.byte	0
 19539              	.LLRL166:
 19540 0344 05       		.byte	0x5
 19541 0345 00000000 		.quad	.LBB930
GAS LISTING linobj/Ch02_03.s 			page 473


 19541      00000000 
 19542 034d 04       		.byte	0x4
 19543 034e 00       		.uleb128 .LBB930-.LBB930
 19544 034f 05       		.uleb128 .LBE930-.LBB930
 19545 0350 04       		.byte	0x4
 19546 0351 0F       		.uleb128 .LBB933-.LBB930
 19547 0352 1E       		.uleb128 .LBE933-.LBB930
 19548 0353 00       		.byte	0
 19549              	.LLRL171:
 19550 0354 05       		.byte	0x5
 19551 0355 00000000 		.quad	.LBB938
 19551      00000000 
 19552 035d 04       		.byte	0x4
 19553 035e 00       		.uleb128 .LBB938-.LBB938
 19554 035f 07       		.uleb128 .LBE938-.LBB938
 19555 0360 04       		.byte	0x4
 19556 0361 11       		.uleb128 .LBB948-.LBB938
 19557 0362 20       		.uleb128 .LBE948-.LBB938
 19558 0363 00       		.byte	0
 19559              	.LLRL172:
 19560 0364 05       		.byte	0x5
 19561 0365 00000000 		.quad	.LBB940
 19561      00000000 
 19562 036d 04       		.byte	0x4
 19563 036e 00       		.uleb128 .LBB940-.LBB940
 19564 036f 00       		.uleb128 .LBE940-.LBB940
 19565 0370 04       		.byte	0x4
 19566 0371 11       		.uleb128 .LBB943-.LBB940
 19567 0372 20       		.uleb128 .LBE943-.LBB940
 19568 0373 00       		.byte	0
 19569              	.LLRL174:
 19570 0374 05       		.byte	0x5
 19571 0375 00000000 		.quad	.LBB945
 19571      00000000 
 19572 037d 04       		.byte	0x4
 19573 037e 00       		.uleb128 .LBB945-.LBB945
 19574 037f 0A       		.uleb128 .LBE945-.LBB945
 19575 0380 04       		.byte	0x4
 19576 0381 19       		.uleb128 .LBB949-.LBB945
 19577 0382 21       		.uleb128 .LBE949-.LBB945
 19578 0383 00       		.byte	0
 19579              	.LLRL176:
 19580 0384 05       		.byte	0x5
 19581 0385 00000000 		.quad	.LBB950
 19581      00000000 
 19582 038d 04       		.byte	0x4
 19583 038e 00       		.uleb128 .LBB950-.LBB950
 19584 038f 27       		.uleb128 .LBE950-.LBB950
 19585 0390 04       		.byte	0x4
 19586 0391 F801     		.uleb128 .LBB981-.LBB950
 19587 0393 8802     		.uleb128 .LBE981-.LBB950
 19588 0395 00       		.byte	0
 19589              	.LLRL180:
 19590 0396 05       		.byte	0x5
 19591 0397 00000000 		.quad	.LBB958
 19591      00000000 
 19592 039f 04       		.byte	0x4
GAS LISTING linobj/Ch02_03.s 			page 474


 19593 03a0 00       		.uleb128 .LBB958-.LBB958
 19594 03a1 00       		.uleb128 .LBE958-.LBB958
 19595 03a2 04       		.byte	0x4
 19596 03a3 04       		.uleb128 .LBB960-.LBB958
 19597 03a4 11       		.uleb128 .LBE960-.LBB958
 19598 03a5 00       		.byte	0
 19599              	.LLRL184:
 19600 03a6 05       		.byte	0x5
 19601 03a7 00000000 		.quad	.LBB963
 19601      00000000 
 19602 03af 04       		.byte	0x4
 19603 03b0 00       		.uleb128 .LBB963-.LBB963
 19604 03b1 07       		.uleb128 .LBE963-.LBB963
 19605 03b2 04       		.byte	0x4
 19606 03b3 11       		.uleb128 .LBB973-.LBB963
 19607 03b4 20       		.uleb128 .LBE973-.LBB963
 19608 03b5 00       		.byte	0
 19609              	.LLRL185:
 19610 03b6 05       		.byte	0x5
 19611 03b7 00000000 		.quad	.LBB965
 19611      00000000 
 19612 03bf 04       		.byte	0x4
 19613 03c0 00       		.uleb128 .LBB965-.LBB965
 19614 03c1 00       		.uleb128 .LBE965-.LBB965
 19615 03c2 04       		.byte	0x4
 19616 03c3 11       		.uleb128 .LBB968-.LBB965
 19617 03c4 20       		.uleb128 .LBE968-.LBB965
 19618 03c5 00       		.byte	0
 19619              	.LLRL187:
 19620 03c6 05       		.byte	0x5
 19621 03c7 00000000 		.quad	.LBB970
 19621      00000000 
 19622 03cf 04       		.byte	0x4
 19623 03d0 00       		.uleb128 .LBB970-.LBB970
 19624 03d1 0A       		.uleb128 .LBE970-.LBB970
 19625 03d2 04       		.byte	0x4
 19626 03d3 19       		.uleb128 .LBB974-.LBB970
 19627 03d4 21       		.uleb128 .LBE974-.LBB970
 19628 03d5 00       		.byte	0
 19629              	.LLRL189:
 19630 03d6 05       		.byte	0x5
 19631 03d7 00000000 		.quad	.LBB975
 19631      00000000 
 19632 03df 04       		.byte	0x4
 19633 03e0 00       		.uleb128 .LBB975-.LBB975
 19634 03e1 23       		.uleb128 .LBE975-.LBB975
 19635 03e2 04       		.byte	0x4
 19636 03e3 8901     		.uleb128 .LBB982-.LBB975
 19637 03e5 9501     		.uleb128 .LBE982-.LBB975
 19638 03e7 00       		.byte	0
 19639              	.LLRL196:
 19640 03e8 07       		.byte	0x7
 19641 03e9 00000000 		.quad	.LBB999
 19641      00000000 
 19642 03f1 08       		.uleb128 .LBE999-.LBB999
 19643 03f2 07       		.byte	0x7
 19644 03f3 00000000 		.quad	.LBB1006
GAS LISTING linobj/Ch02_03.s 			page 475


 19644      00000000 
 19645 03fb 13       		.uleb128 .LBE1006-.LBB1006
 19646 03fc 00       		.byte	0
 19647              	.LLRL201:
 19648 03fd 07       		.byte	0x7
 19649 03fe 00000000 		.quad	.Ltext_cold0
 19649      00000000 
 19650 0406 13       		.uleb128 .Letext_cold0-.Ltext_cold0
 19651 0407 07       		.byte	0x7
 19652 0408 00000000 		.quad	.LFB1975
 19652      00000000 
 19653 0410 840E     		.uleb128 .LHOTE16-.LFB1975
 19654 0412 00       		.byte	0
 19655              	.Ldebug_ranges3:
 19656              		.section	.debug_line,"",@progbits
 19657              	.Ldebug_line0:
 19658 0000 E30B0000 		.section	.debug_str,"MS",@progbits,1
 19658      05000800 
 19658      9C010000 
 19658      010101FB 
 19658      0E0D0001 
 19659              	.LASF32:
 19660 0000 5F66696C 		.string	"_fileno"
 19660      656E6F00 
 19661              	.LASF739:
 19662 0008 66676574 		.string	"fgetc"
 19662      6300
 19663              	.LASF690:
 19664 000e 696E7438 		.string	"int8_t"
 19664      5F7400
 19665              	.LASF585:
 19666 0015 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEm
 19666      5F5F676E 
 19666      755F6378 
 19666      7831375F 
 19666      5F6E6F72 
 19667              	.LASF809:
 19668 0072 546F5374 		.string	"ToStringI16"
 19668      72696E67 
 19668      49313600 
 19669              	.LASF176:
 19670 007e 5F4D5F63 		.string	"_M_create"
 19670      72656174 
 19670      6500
 19671              	.LASF8:
 19672 0088 73697A65 		.string	"size_t"
 19672      5F7400
 19673              	.LASF798:
 19674 008f 6D5F4931 		.string	"m_I16"
 19674      3600
 19675              	.LASF741:
 19676 0095 66676574 		.string	"fgets"
 19676      7300
 19677              	.LASF514:
 19678 009b 746D5F68 		.string	"tm_hour"
 19678      6F757200 
 19679              	.LASF13:
GAS LISTING linobj/Ch02_03.s 			page 476


 19680 00a3 5F5F7661 		.string	"__value"
 19680      6C756500 
 19681              	.LASF140:
 19682 00ab 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE8allocateERS0_m"
 19682      74313661 
 19682      6C6C6F63 
 19682      61746F72 
 19682      5F747261 
 19683              	.LASF568:
 19684 00d9 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_always_equalEv"
 19684      5F5F676E 
 19684      755F6378 
 19684      7831345F 
 19684      5F616C6C 
 19685              	.LASF151:
 19686 0112 62617369 		.string	"basic_string<char, std::char_traits<char>, std::allocator<char> >"
 19686      635F7374 
 19686      72696E67 
 19686      3C636861 
 19686      722C2073 
 19687              	.LASF424:
 19688 0154 5F5A4E4B 		.string	"_ZNKSt8ios_base5widthEv"
 19688      53743869 
 19688      6F735F62 
 19688      61736535 
 19688      77696474 
 19689              	.LASF310:
 19690 016c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKc"
 19690      74375F5F 
 19690      63787831 
 19690      31313262 
 19690      61736963 
 19691              	.LASF836:
 19692 01ad 5F5A646C 		.string	"_ZdlPvm"
 19692      50766D00 
 19693              	.LASF731:
 19694 01b5 5F494F5F 		.string	"_IO_codecvt"
 19694      636F6465 
 19694      63767400 
 19695              	.LASF611:
 19696 01c1 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 19696      395F5F67 
 19696      6E755F63 
 19696      78783137 
 19696      5F5F6E6F 
 19697              	.LASF825:
 19698 0220 546F5374 		.string	"ToStringX16"
 19698      72696E67 
 19698      58313600 
 19699              	.LASF571:
 19700 022c 72656269 		.string	"rebind<char>"
 19700      6E643C63 
 19700      6861723E 
 19700      00
 19701              	.LASF450:
 19702 0239 5F507472 		.string	"_Ptr"
 19702      00
GAS LISTING linobj/Ch02_03.s 			page 477


 19703              	.LASF792:
 19704 023e 75696E74 		.string	"uint_fast64_t"
 19704      5F666173 
 19704      7436345F 
 19704      7400
 19705              	.LASF264:
 19706 024c 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4sizeEv"
 19706      5374375F 
 19706      5F637878 
 19706      31313132 
 19706      62617369 
 19707              	.LASF666:
 19708 028a 5F5F7569 		.string	"__uint_least8_t"
 19708      6E745F6C 
 19708      65617374 
 19708      385F7400 
 19709              	.LASF287:
 19710 029a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv"
 19710      74375F5F 
 19710      63787831 
 19710      31313262 
 19710      61736963 
 19711              	.LASF319:
 19712 02d8 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKc"
 19712      74375F5F 
 19712      63787831 
 19712      31313262 
 19712      61736963 
 19713              	.LASF173:
 19714 031a 5F4D5F73 		.string	"_M_set_length"
 19714      65745F6C 
 19714      656E6774 
 19714      6800
 19715              	.LASF29:
 19716 0328 5F494F5F 		.string	"_IO_save_end"
 19716      73617665 
 19716      5F656E64 
 19716      00
 19717              	.LASF785:
 19718 0335 696E745F 		.string	"int_fast8_t"
 19718      66617374 
 19718      385F7400 
 19719              	.LASF826:
 19720 0341 5F5A4E36 		.string	"_ZN6XmmVal11ToStringX16B5cxx11Ev"
 19720      586D6D56 
 19720      616C3131 
 19720      546F5374 
 19720      72696E67 
 19721              	.LASF189:
 19722 0362 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_M_init_local_bufEv"
 19722      74375F5F 
 19722      63787831 
 19722      31313262 
 19722      61736963 
 19723              	.LASF558:
 19724 03ad 5F535F6F 		.string	"_S_on_swap"
 19724      6E5F7377 
GAS LISTING linobj/Ch02_03.s 			page 478


 19724      617000
 19725              	.LASF305:
 19726 03b8 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9push_backEc"
 19726      74375F5F 
 19726      63787831 
 19726      31313262 
 19726      61736963 
 19727              	.LASF769:
 19728 03fa 61736374 		.string	"asctime"
 19728      696D6500 
 19729              	.LASF718:
 19730 0402 6C6C6469 		.string	"lldiv"
 19730      7600
 19731              	.LASF691:
 19732 0408 696E7431 		.string	"int16_t"
 19732      365F7400 
 19733              	.LASF312:
 19734 0410 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignESt16initializer_listIcE"
 19734      74375F5F 
 19734      63787831 
 19734      31313262 
 19734      61736963 
 19735              	.LASF510:
 19736 0465 77637363 		.string	"wcscspn"
 19736      73706E00 
 19737              	.LASF435:
 19738 046d 5F5A4E53 		.string	"_ZNSolsEi"
 19738      6F6C7345 
 19738      6900
 19739              	.LASF656:
 19740 0477 6C6F6361 		.string	"localeconv"
 19740      6C65636F 
 19740      6E7600
 19741              	.LASF438:
 19742 0482 5F5A4E53 		.string	"_ZNSolsEl"
 19742      6F6C7345 
 19742      6C00
 19743              	.LASF439:
 19744 048c 5F5A4E53 		.string	"_ZNSolsEm"
 19744      6F6C7345 
 19744      6D00
 19745              	.LASF51:
 19746 0496 5F4D5F61 		.string	"_M_addref"
 19746      64647265 
 19746      6600
 19747              	.LASF56:
 19748 04a0 5F4D5F67 		.string	"_M_get"
 19748      657400
 19749              	.LASF436:
 19750 04a7 5F5A4E53 		.string	"_ZNSolsEs"
 19750      6F6C7345 
 19750      7300
 19751              	.LASF725:
 19752 04b1 73747274 		.string	"strtold"
 19752      6F6C6400 
 19753              	.LASF321:
 19754 04b9 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iterat
GAS LISTING linobj/Ch02_03.s 			page 479


 19754      74375F5F 
 19754      63787831 
 19754      31313262 
 19754      61736963 
 19755              	.LASF401:
 19756 051f 5F4D5F6C 		.string	"_M_len"
 19756      656E00
 19757              	.LASF538:
 19758 0526 5F5F6973 		.string	"__isoc23_wcstoul"
 19758      6F633233 
 19758      5F776373 
 19758      746F756C 
 19758      00
 19759              	.LASF679:
 19760 0537 74696D65 		.string	"time_t"
 19760      5F7400
 19761              	.LASF808:
 19762 053e 5F5A4E36 		.string	"_ZN6XmmVal10ToStringI8B5cxx11Ev"
 19762      586D6D56 
 19762      616C3130 
 19762      546F5374 
 19762      72696E67 
 19763              	.LASF720:
 19764 055e 73747274 		.string	"strtoll"
 19764      6F6C6C00 
 19765              	.LASF824:
 19766 0566 5F5A4E36 		.string	"_ZN6XmmVal10ToStringX8B5cxx11Ev"
 19766      586D6D56 
 19766      616C3130 
 19766      546F5374 
 19766      72696E67 
 19767              	.LASF463:
 19768 0586 5F5A5374 		.string	"_ZSt16__ostream_insertIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_PKS3_l"
 19768      31365F5F 
 19768      6F737472 
 19768      65616D5F 
 19768      696E7365 
 19769              	.LASF22:
 19770 05d4 5F494F5F 		.string	"_IO_write_base"
 19770      77726974 
 19770      655F6261 
 19770      736500
 19771              	.LASF447:
 19772 05e3 706F696E 		.string	"pointer_to"
 19772      7465725F 
 19772      746F00
 19773              	.LASF757:
 19774 05ee 746D706E 		.string	"tmpnam"
 19774      616D00
 19775              	.LASF21:
 19776 05f5 5F494F5F 		.string	"_IO_read_base"
 19776      72656164 
 19776      5F626173 
 19776      6500
 19777              	.LASF685:
 19778 0603 6469765F 		.string	"div_t"
 19778      7400
GAS LISTING linobj/Ch02_03.s 			page 480


 19779              	.LASF811:
 19780 0609 546F5374 		.string	"ToStringI32"
 19780      72696E67 
 19780      49333200 
 19781              	.LASF799:
 19782 0615 6D5F4933 		.string	"m_I32"
 19782      3200
 19783              	.LASF419:
 19784 061b 5F535F69 		.string	"_S_ios_iostate_max"
 19784      6F735F69 
 19784      6F737461 
 19784      74655F6D 
 19784      617800
 19785              	.LASF38:
 19786 062e 5F6C6F63 		.string	"_lock"
 19786      6B00
 19787              	.LASF696:
 19788 0634 61745F71 		.string	"at_quick_exit"
 19788      7569636B 
 19788      5F657869 
 19788      7400
 19789              	.LASF633:
 19790 0642 696E745F 		.string	"int_curr_symbol"
 19790      63757272 
 19790      5F73796D 
 19790      626F6C00 
 19791              	.LASF207:
 19792 0652 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__nor
 19792      74375F5F 
 19792      63787831 
 19792      31313262 
 19792      61736963 
 19793              	.LASF801:
 19794 06c4 6D5F5538 		.string	"m_U8"
 19794      00
 19795              	.LASF257:
 19796 06c9 63656E64 		.string	"cend"
 19796      00
 19797              	.LASF415:
 19798 06ce 5F535F62 		.string	"_S_badbit"
 19798      61646269 
 19798      7400
 19799              	.LASF193:
 19800 06d8 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_checkEmPKc"
 19800      5374375F 
 19800      5F637878 
 19800      31313132 
 19800      62617369 
 19801              	.LASF766:
 19802 071d 64696666 		.string	"difftime"
 19802      74696D65 
 19802      00
 19803              	.LASF853:
 19804 0726 5F5F6F75 		.string	"__out"
 19804      7400
 19805              	.LASF644:
 19806 072c 6E5F6373 		.string	"n_cs_precedes"
GAS LISTING linobj/Ch02_03.s 			page 481


 19806      5F707265 
 19806      63656465 
 19806      7300
 19807              	.LASF659:
 19808 073a 5F5F696E 		.string	"__int16_t"
 19808      7431365F 
 19808      7400
 19809              	.LASF27:
 19810 0744 5F494F5F 		.string	"_IO_save_base"
 19810      73617665 
 19810      5F626173 
 19810      6500
 19811              	.LASF239:
 19812 0752 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEc"
 19812      74375F5F 
 19812      63787831 
 19812      31313262 
 19812      61736963 
 19813              	.LASF827:
 19814 078c 546F5374 		.string	"ToStringX32"
 19814      72696E67 
 19814      58333200 
 19815              	.LASF404:
 19816 0798 5F5A4E53 		.string	"_ZNSt16initializer_listIcEC4Ev"
 19816      74313669 
 19816      6E697469 
 19816      616C697A 
 19816      65725F6C 
 19817              	.LASF607:
 19818 07b7 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 19818      5F5F676E 
 19818      755F6378 
 19818      7831375F 
 19818      5F6E6F72 
 19819              	.LASF410:
 19820 0815 69746572 		.string	"iterator_traits<char const*>"
 19820      61746F72 
 19820      5F747261 
 19820      6974733C 
 19820      63686172 
 19821              	.LASF266:
 19822 0832 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8max_sizeEv"
 19822      5374375F 
 19822      5F637878 
 19822      31313132 
 19822      62617369 
 19823              	.LASF640:
 19824 0874 696E745F 		.string	"int_frac_digits"
 19824      66726163 
 19824      5F646967 
 19824      69747300 
 19825              	.LASF714:
 19826 0884 5F5F6973 		.string	"__isoc23_strtoul"
 19826      6F633233 
 19826      5F737472 
 19826      746F756C 
 19826      00
GAS LISTING linobj/Ch02_03.s 			page 482


 19827              	.LASF539:
 19828 0895 77637378 		.string	"wcsxfrm"
 19828      66726D00 
 19829              	.LASF719:
 19830 089d 61746F6C 		.string	"atoll"
 19830      6C00
 19831              	.LASF458:
 19832 08a3 72647374 		.string	"rdstate"
 19832      61746500 
 19833              	.LASF57:
 19834 08ab 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EPv"
 19834      7431355F 
 19834      5F657863 
 19834      65707469 
 19834      6F6E5F70 
 19835              	.LASF600:
 19836 08d6 5F4D5F63 		.string	"_M_current"
 19836      75727265 
 19836      6E7400
 19837              	.LASF132:
 19838 08e1 5F5A4E53 		.string	"_ZNSaIcEaSERKS_"
 19838      61496345 
 19838      61534552 
 19838      4B535F00 
 19839              	.LASF884:
 19840 08f1 5F5F6275 		.string	"__builtin_unwind_resume"
 19840      696C7469 
 19840      6E5F756E 
 19840      77696E64 
 19840      5F726573 
 19841              	.LASF740:
 19842 0909 66676574 		.string	"fgetpos"
 19842      706F7300 
 19843              	.LASF727:
 19844 0911 5F5F706F 		.string	"__pos"
 19844      7300
 19845              	.LASF31:
 19846 0917 5F636861 		.string	"_chain"
 19846      696E00
 19847              	.LASF508:
 19848 091e 77637363 		.string	"wcscoll"
 19848      6F6C6C00 
 19849              	.LASF734:
 19850 0926 636C6561 		.string	"clearerr"
 19850      72657272 
 19850      00
 19851              	.LASF203:
 19852 092f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_moveEPcPKcm"
 19852      74375F5F 
 19852      63787831 
 19852      31313262 
 19852      61736963 
 19853              	.LASF35:
 19854 0974 5F637572 		.string	"_cur_column"
 19854      5F636F6C 
 19854      756D6E00 
 19855              	.LASF791:
GAS LISTING linobj/Ch02_03.s 			page 483


 19856 0980 75696E74 		.string	"uint_fast32_t"
 19856      5F666173 
 19856      7433325F 
 19856      7400
 19857              	.LASF110:
 19858 098e 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcED4Ev"
 19858      7431355F 
 19858      5F6E6577 
 19858      5F616C6C 
 19858      6F636174 
 19859              	.LASF814:
 19860 09ac 5F5A4E36 		.string	"_ZN6XmmVal11ToStringI64B5cxx11Ev"
 19860      586D6D56 
 19860      616C3131 
 19860      546F5374 
 19860      72696E67 
 19861              	.LASF638:
 19862 09cd 706F7369 		.string	"positive_sign"
 19862      74697665 
 19862      5F736967 
 19862      6E00
 19863              	.LASF876:
 19864 09db 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4nposE"
 19864      74375F5F 
 19864      63787831 
 19864      31313262 
 19864      61736963 
 19865              	.LASF583:
 19866 0a17 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEp
 19866      5F5F676E 
 19866      755F6378 
 19866      7831375F 
 19866      5F6E6F72 
 19867              	.LASF797:
 19868 0a74 6D5F4938 		.string	"m_I8"
 19868      00
 19869              	.LASF10:
 19870 0a79 5F5F7763 		.string	"__wch"
 19870      6800
 19871              	.LASF289:
 19872 0a7f 6261636B 		.string	"back"
 19872      00
 19873              	.LASF87:
 19874 0a84 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4moveEPcPKcm"
 19874      74313163 
 19874      6861725F 
 19874      74726169 
 19874      74734963 
 19875              	.LASF658:
 19876 0aa6 5F5F7569 		.string	"__uint8_t"
 19876      6E74385F 
 19876      7400
 19877              	.LASF787:
 19878 0ab0 696E745F 		.string	"int_fast32_t"
 19878      66617374 
 19878      33325F74 
 19878      00
GAS LISTING linobj/Ch02_03.s 			page 484


 19879              	.LASF108:
 19880 0abd 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcEaSERKS0_"
 19880      7431355F 
 19880      5F6E6577 
 19880      5F616C6C 
 19880      6F636174 
 19881              	.LASF284:
 19882 0adf 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEm"
 19882      5374375F 
 19882      5F637878 
 19882      31313132 
 19882      62617369 
 19883              	.LASF158:
 19884 0b1b 5F535F61 		.string	"_S_allocate"
 19884      6C6C6F63 
 19884      61746500 
 19885              	.LASF582:
 19886 0b27 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEp
 19886      5F5F676E 
 19886      755F6378 
 19886      7831375F 
 19886      5F6E6F72 
 19887              	.LASF342:
 19888 0b84 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 19888      74375F5F 
 19888      63787831 
 19888      31313262 
 19888      61736963 
 19889              	.LASF180:
 19890 0bf3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_disposeEv"
 19890      74375F5F 
 19890      63787831 
 19890      31313262 
 19890      61736963 
 19891              	.LASF236:
 19892 0c37 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS3_"
 19892      74375F5F 
 19892      63787831 
 19892      31313262 
 19892      61736963 
 19893              	.LASF200:
 19894 0c75 5F535F63 		.string	"_S_copy"
 19894      6F707900 
 19895              	.LASF697:
 19896 0c7d 61746F66 		.string	"atof"
 19896      00
 19897              	.LASF188:
 19898 0c82 5F4D5F69 		.string	"_M_init_local_buf"
 19898      6E69745F 
 19898      6C6F6361 
 19898      6C5F6275 
 19898      6600
 19899              	.LASF336:
 19900 0c94 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 19900      74375F5F 
 19900      63787831 
 19900      31313262 
GAS LISTING linobj/Ch02_03.s 			page 485


 19900      61736963 
 19901              	.LASF698:
 19902 0d01 61746F69 		.string	"atoi"
 19902      00
 19903              	.LASF699:
 19904 0d06 61746F6C 		.string	"atol"
 19904      00
 19905              	.LASF408:
 19906 0d0b 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::__cxx11::basic_string<char, std
 19906      7273655F 
 19906      69746572 
 19906      61746F72 
 19906      3C5F5F67 
 19907              	.LASF315:
 19908 0d94 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iterat
 19908      74375F5F 
 19908      63787831 
 19908      31313262 
 19908      61736963 
 19909              	.LASF161:
 19910 0e10 5F4D5F64 		.string	"_M_dataplus"
 19910      61746170 
 19910      6C757300 
 19911              	.LASF155:
 19912 0e1c 5F4D5F70 		.string	"_M_p"
 19912      00
 19913              	.LASF168:
 19914 0e21 5F4D5F6C 		.string	"_M_local_data"
 19914      6F63616C 
 19914      5F646174 
 19914      6100
 19915              	.LASF96:
 19916 0e2f 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11to_int_typeERKc"
 19916      74313163 
 19916      6861725F 
 19916      74726169 
 19916      74734963 
 19917              	.LASF347:
 19918 0e56 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_replace_coldEPcmPKcmm"
 19918      74375F5F 
 19918      63787831 
 19918      31313262 
 19918      61736963 
 19919              	.LASF834:
 19920 0ea6 5F5A4E36 		.string	"_ZN6XmmVal11ToStringF64B5cxx11Ev"
 19920      586D6D56 
 19920      616C3131 
 19920      546F5374 
 19920      72696E67 
 19921              	.LASF635:
 19922 0ec7 6D6F6E5F 		.string	"mon_decimal_point"
 19922      64656369 
 19922      6D616C5F 
 19922      706F696E 
 19922      7400
 19923              	.LASF536:
 19924 0ed9 6C6F6E67 		.string	"long int"
GAS LISTING linobj/Ch02_03.s 			page 486


 19924      20696E74 
 19924      00
 19925              	.LASF64:
 19926 0ee2 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSERKS0_"
 19926      7431355F 
 19926      5F657863 
 19926      65707469 
 19926      6F6E5F70 
 19927              	.LASF453:
 19928 0f10 5F5A4E53 		.string	"_ZNSt19__ptr_traits_ptr_toIPKcS0_Lb0EE10pointer_toERS0_"
 19928      7431395F 
 19928      5F707472 
 19928      5F747261 
 19928      6974735F 
 19929              	.LASF647:
 19930 0f48 6E5F7369 		.string	"n_sign_posn"
 19930      676E5F70 
 19930      6F736E00 
 19931              	.LASF520:
 19932 0f54 746D5F69 		.string	"tm_isdst"
 19932      73647374 
 19932      00
 19933              	.LASF855:
 19934 0f5d 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC2EmcRKS3_"
 19934      74375F5F 
 19934      63787831 
 19934      31313262 
 19934      61736963 
 19935              	.LASF502:
 19936 0f9d 76777072 		.string	"vwprintf"
 19936      696E7466 
 19936      00
 19937              	.LASF223:
 19938 0fa6 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_"
 19938      74375F5F 
 19938      63787831 
 19938      31313262 
 19938      61736963 
 19939              	.LASF717:
 19940 0fe4 7763746F 		.string	"wctomb"
 19940      6D6200
 19941              	.LASF859:
 19942 0feb 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD2Ev"
 19942      74375F5F 
 19942      63787831 
 19942      31313262 
 19942      61736963 
 19943              	.LASF94:
 19944 1033 696E745F 		.string	"int_type"
 19944      74797065 
 19944      00
 19945              	.LASF399:
 19946 103c 696E6974 		.string	"initializer_list<char>"
 19946      69616C69 
 19946      7A65725F 
 19946      6C697374 
 19946      3C636861 
GAS LISTING linobj/Ch02_03.s 			page 487


 19947              	.LASF730:
 19948 1053 5F494F5F 		.string	"_IO_marker"
 19948      6D61726B 
 19948      657200
 19949              	.LASF233:
 19950 105e 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EOS4_RKS3_"
 19950      74375F5F 
 19950      63787831 
 19950      31313262 
 19950      61736963 
 19951              	.LASF733:
 19952 10a0 66706F73 		.string	"fpos_t"
 19952      5F7400
 19953              	.LASF273:
 19954 10a7 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8capacityEv"
 19954      5374375F 
 19954      5F637878 
 19954      31313132 
 19954      62617369 
 19955              	.LASF863:
 19956 10e9 6D61696E 		.string	"main"
 19956      00
 19957              	.LASF650:
 19958 10ee 696E745F 		.string	"int_n_cs_precedes"
 19958      6E5F6373 
 19958      5F707265 
 19958      63656465 
 19958      7300
 19959              	.LASF367:
 19960 1100 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcm"
 19960      5374375F 
 19960      5F637878 
 19960      31313132 
 19960      62617369 
 19961              	.LASF762:
 19962 1142 746F7763 		.string	"towctrans"
 19962      7472616E 
 19962      7300
 19963              	.LASF177:
 19964 114c 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_is_localEv"
 19964      5374375F 
 19964      5F637878 
 19964      31313132 
 19964      62617369 
 19965              	.LASF213:
 19966 1192 5F535F63 		.string	"_S_compare"
 19966      6F6D7061 
 19966      726500
 19967              	.LASF800:
 19968 119d 6D5F4936 		.string	"m_I64"
 19968      3400
 19969              	.LASF708:
 19970 11a3 72616E64 		.string	"rand"
 19970      00
 19971              	.LASF130:
 19972 11a8 5F5A4E53 		.string	"_ZNSaIcEC4Ev"
 19972      61496345 
GAS LISTING linobj/Ch02_03.s 			page 488


 19972      43344576 
 19972      00
 19973              	.LASF610:
 19974 11b5 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 19974      5F5F676E 
 19974      755F6378 
 19974      7831375F 
 19974      5F6E6F72 
 19975              	.LASF712:
 19976 1213 5F5F6973 		.string	"__isoc23_strtol"
 19976      6F633233 
 19976      5F737472 
 19976      746F6C00 
 19977              	.LASF349:
 19978 1223 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_replaceEmmPKcm"
 19978      74375F5F 
 19978      63787831 
 19978      31313262 
 19978      61736963 
 19979              	.LASF79:
 19980 126c 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2ltERKcS2_"
 19980      74313163 
 19980      6861725F 
 19980      74726169 
 19980      74734963 
 19981              	.LASF245:
 19982 128c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv"
 19982      74375F5F 
 19982      63787831 
 19982      31313262 
 19982      61736963 
 19983              	.LASF198:
 19984 12c8 5F4D5F64 		.string	"_M_disjunct"
 19984      69736A75 
 19984      6E637400 
 19985              	.LASF844:
 19986 12d4 5F5F7369 		.string	"__size"
 19986      7A6500
 19987              	.LASF345:
 19988 12db 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE14_M_replace_auxEmmmc"
 19988      74375F5F 
 19988      63787831 
 19988      31313262 
 19988      61736963 
 19989              	.LASF11:
 19990 1326 5F5F7763 		.string	"__wchb"
 19990      686200
 19991              	.LASF74:
 19992 132d 6E756C6C 		.string	"nullptr_t"
 19992      7074725F 
 19992      7400
 19993              	.LASF829:
 19994 1337 546F5374 		.string	"ToStringX64"
 19994      72696E67 
 19994      58363400 
 19995              	.LASF313:
 19996 1343 696E7365 		.string	"insert"
GAS LISTING linobj/Ch02_03.s 			page 489


 19996      727400
 19997              	.LASF172:
 19998 134a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_capacityEm"
 19998      74375F5F 
 19998      63787831 
 19998      31313262 
 19998      61736963 
 19999              	.LASF194:
 20000 138f 5F4D5F63 		.string	"_M_check_length"
 20000      6865636B 
 20000      5F6C656E 
 20000      67746800 
 20001              	.LASF288:
 20002 139f 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5frontEv"
 20002      5374375F 
 20002      5F637878 
 20002      31313132 
 20002      62617369 
 20003              	.LASF157:
 20004 13de 5F4D5F61 		.string	"_M_allocated_capacity"
 20004      6C6C6F63 
 20004      61746564 
 20004      5F636170 
 20004      61636974 
 20005              	.LASF141:
 20006 13f4 616C6C6F 		.string	"allocator_type"
 20006      6361746F 
 20006      725F7479 
 20006      706500
 20007              	.LASF784:
 20008 1403 75696E74 		.string	"uint_least64_t"
 20008      5F6C6561 
 20008      73743634 
 20008      5F7400
 20009              	.LASF416:
 20010 1412 5F535F65 		.string	"_S_eofbit"
 20010      6F666269 
 20010      7400
 20011              	.LASF433:
 20012 141c 5F5A4E53 		.string	"_ZNSo9_M_insertImEERSoT_"
 20012      6F395F4D 
 20012      5F696E73 
 20012      65727449 
 20012      6D454552 
 20013              	.LASF560:
 20014 1435 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE10_S_on_swapERS1_S3_"
 20014      5F5F676E 
 20014      755F6378 
 20014      7831345F 
 20014      5F616C6C 
 20015              	.LASF376:
 20016 146f 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcmm"
 20016      5374375F 
 20016      5F637878 
 20016      31313132 
 20016      62617369 
 20017              	.LASF371:
GAS LISTING linobj/Ch02_03.s 			page 490


 20018 14ba 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcmm"
 20018      5374375F 
 20018      5F637878 
 20018      31313132 
 20018      62617369 
 20019              	.LASF519:
 20020 1506 746D5F79 		.string	"tm_yday"
 20020      64617900 
 20021              	.LASF722:
 20022 150e 73747274 		.string	"strtoull"
 20022      6F756C6C 
 20022      00
 20023              	.LASF471:
 20024 1517 5F5A5374 		.string	"_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_c"
 20024      6C734953 
 20024      74313163 
 20024      6861725F 
 20024      74726169 
 20025              	.LASF773:
 20026 154d 75696E74 		.string	"uint8_t"
 20026      385F7400 
 20027              	.LASF577:
 20028 1555 6F706572 		.string	"operator*"
 20028      61746F72 
 20028      2A00
 20029              	.LASF589:
 20030 155f 6F706572 		.string	"operator+"
 20030      61746F72 
 20030      2B00
 20031              	.LASF593:
 20032 1569 6F706572 		.string	"operator-"
 20032      61746F72 
 20032      2D00
 20033              	.LASF851:
 20034 1573 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcEC2Ev"
 20034      7431355F 
 20034      5F6E6577 
 20034      5F616C6C 
 20034      6F636174 
 20035              	.LASF332:
 20036 1591 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKcm"
 20036      74375F5F 
 20036      63787831 
 20036      31313262 
 20036      61736963 
 20037              	.LASF841:
 20038 15d6 4D756C49 		.string	"MulI16_Iavx"
 20038      31365F49 
 20038      61767800 
 20039              	.LASF578:
 20040 15e2 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20040      395F5F67 
 20040      6E755F63 
 20040      78783137 
 20040      5F5F6E6F 
 20041              	.LASF751:
 20042 1640 72656D6F 		.string	"remove"
GAS LISTING linobj/Ch02_03.s 			page 491


 20042      766500
 20043              	.LASF732:
 20044 1647 5F494F5F 		.string	"_IO_wide_data"
 20044      77696465 
 20044      5F646174 
 20044      6100
 20045              	.LASF426:
 20046 1655 62617369 		.string	"basic_ostream<char, std::char_traits<char> >"
 20046      635F6F73 
 20046      74726561 
 20046      6D3C6368 
 20046      61722C20 
 20047              	.LASF759:
 20048 1682 77637479 		.string	"wctype_t"
 20048      70655F74 
 20048      00
 20049              	.LASF63:
 20050 168b 6F706572 		.string	"operator="
 20050      61746F72 
 20050      3D00
 20051              	.LASF868:
 20052 1695 474E5520 		.string	"GNU C++14 14.1.1 20240522 (Red Hat 14.1.1-4) -m64 -mavx -mtune=generic -march=x86-64 -g -
 20052      432B2B31 
 20052      34203134 
 20052      2E312E31 
 20052      20323032 
 20053              	.LASF476:
 20054 16fc 66676574 		.string	"fgetwc"
 20054      776300
 20055              	.LASF655:
 20056 1703 67657477 		.string	"getwchar"
 20056      63686172 
 20056      00
 20057              	.LASF372:
 20058 170c 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEPKcm"
 20058      5374375F 
 20058      5F637878 
 20058      31313132 
 20058      62617369 
 20059              	.LASF668:
 20060 1757 5F5F7569 		.string	"__uint_least16_t"
 20060      6E745F6C 
 20060      65617374 
 20060      31365F74 
 20060      00
 20061              	.LASF394:
 20062 1768 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEPKc"
 20062      5374375F 
 20062      5F637878 
 20062      31313132 
 20062      62617369 
 20063              	.LASF270:
 20064 17ab 73687269 		.string	"shrink_to_fit"
 20064      6E6B5F74 
 20064      6F5F6669 
 20064      7400
 20065              	.LASF541:
GAS LISTING linobj/Ch02_03.s 			page 492


 20066 17b9 776D656D 		.string	"wmemcmp"
 20066      636D7000 
 20067              	.LASF77:
 20068 17c1 63686172 		.string	"char_type"
 20068      5F747970 
 20068      6500
 20069              	.LASF624:
 20070 17cb 756E7369 		.string	"unsigned char"
 20070      676E6564 
 20070      20636861 
 20070      7200
 20071              	.LASF867:
 20072 17d9 5F5F696E 		.string	"__int128 unsigned"
 20072      74313238 
 20072      20756E73 
 20072      69676E65 
 20072      6400
 20073              	.LASF269:
 20074 17eb 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEm"
 20074      74375F5F 
 20074      63787831 
 20074      31313262 
 20074      61736963 
 20075              	.LASF847:
 20076 182a 5F5F6461 		.string	"__dat"
 20076      7400
 20077              	.LASF860:
 20078 1830 4D756C49 		.string	"MulI32b"
 20078      33326200 
 20079              	.LASF645:
 20080 1838 6E5F7365 		.string	"n_sep_by_space"
 20080      705F6279 
 20080      5F737061 
 20080      636500
 20081              	.LASF162:
 20082 1847 5F4D5F73 		.string	"_M_string_length"
 20082      7472696E 
 20082      675F6C65 
 20082      6E677468 
 20082      00
 20083              	.LASF216:
 20084 1858 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_assignERKS4_"
 20084      74375F5F 
 20084      63787831 
 20084      31313262 
 20084      61736963 
 20085              	.LASF735:
 20086 189e 66636C6F 		.string	"fclose"
 20086      736500
 20087              	.LASF552:
 20088 18a5 776D656D 		.string	"wmemchr"
 20088      63687200 
 20089              	.LASF627:
 20090 18ad 63686172 		.string	"char16_t"
 20090      31365F74 
 20090      00
 20091              	.LASF874:
GAS LISTING linobj/Ch02_03.s 			page 493


 20092 18b6 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderD4Ev"
 20092      74375F5F 
 20092      63787831 
 20092      31313262 
 20092      61736963 
 20093              	.LASF518:
 20094 18fe 746D5F77 		.string	"tm_wday"
 20094      64617900 
 20095              	.LASF832:
 20096 1906 5F5A4E36 		.string	"_ZN6XmmVal11ToStringF32B5cxx11Ev"
 20096      586D6D56 
 20096      616C3131 
 20096      546F5374 
 20096      72696E67 
 20097              	.LASF556:
 20098 1927 5F535F73 		.string	"_S_select_on_copy"
 20098      656C6563 
 20098      745F6F6E 
 20098      5F636F70 
 20098      7900
 20099              	.LASF779:
 20100 1939 696E745F 		.string	"int_least32_t"
 20100      6C656173 
 20100      7433325F 
 20100      7400
 20101              	.LASF391:
 20102 1947 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareERKS4_"
 20102      5374375F 
 20102      5F637878 
 20102      31313132 
 20102      62617369 
 20103              	.LASF688:
 20104 198c 376C6C64 		.string	"7lldiv_t"
 20104      69765F74 
 20104      00
 20105              	.LASF507:
 20106 1995 77637363 		.string	"wcscmp"
 20106      6D7000
 20107              	.LASF748:
 20108 199c 67657463 		.string	"getc"
 20108      00
 20109              	.LASF99:
 20110 19a1 6E6F745F 		.string	"not_eof"
 20110      656F6600 
 20111              	.LASF492:
 20112 19a9 73777072 		.string	"swprintf"
 20112      696E7466 
 20112      00
 20113              	.LASF217:
 20114 19b2 5F4D5F6D 		.string	"_M_mutate"
 20114      75746174 
 20114      6500
 20115              	.LASF340:
 20116 19bc 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20116      74375F5F 
 20116      63787831 
 20116      31313262 
GAS LISTING linobj/Ch02_03.s 			page 494


 20116      61736963 
 20117              	.LASF318:
 20118 1a2b 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmPKcm"
 20118      74375F5F 
 20118      63787831 
 20118      31313262 
 20118      61736963 
 20119              	.LASF473:
 20120 1a6e 5F5A5374 		.string	"_ZSt4setwi"
 20120      34736574 
 20120      776900
 20121              	.LASF549:
 20122 1a79 77637370 		.string	"wcspbrk"
 20122      62726B00 
 20123              	.LASF72:
 20124 1a81 72657468 		.string	"rethrow_exception"
 20124      726F775F 
 20124      65786365 
 20124      7074696F 
 20124      6E00
 20125              	.LASF293:
 20126 1a93 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLERKS4_"
 20126      74375F5F 
 20126      63787831 
 20126      31313262 
 20126      61736963 
 20127              	.LASF354:
 20128 1ad1 635F7374 		.string	"c_str"
 20128      7200
 20129              	.LASF548:
 20130 1ad7 77637363 		.string	"wcschr"
 20130      687200
 20131              	.LASF195:
 20132 1ade 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE15_M_check_lengthEmmPKc"
 20132      5374375F 
 20132      5F637878 
 20132      31313132 
 20132      62617369 
 20133              	.LASF295:
 20134 1b2c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEc"
 20134      74375F5F 
 20134      63787831 
 20134      31313262 
 20134      61736963 
 20135              	.LASF105:
 20136 1b66 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcEC4ERKS0_"
 20136      7431355F 
 20136      5F6E6577 
 20136      5F616C6C 
 20136      6F636174 
 20137              	.LASF383:
 20138 1b88 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEcm"
 20138      5374375F 
 20138      5F637878 
 20138      31313132 
 20138      62617369 
 20139              	.LASF14:
GAS LISTING linobj/Ch02_03.s 			page 495


 20140 1bd5 63686172 		.string	"char"
 20140      00
 20141              	.LASF565:
 20142 1bda 5F535F70 		.string	"_S_propagate_on_swap"
 20142      726F7061 
 20142      67617465 
 20142      5F6F6E5F 
 20142      73776170 
 20143              	.LASF702:
 20144 1bef 6C646976 		.string	"ldiv"
 20144      00
 20145              	.LASF238:
 20146 1bf4 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEPKc"
 20146      74375F5F 
 20146      63787831 
 20146      31313262 
 20146      61736963 
 20147              	.LASF461:
 20148 1c30 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate"
 20148      74396261 
 20148      7369635F 
 20148      696F7349 
 20148      63537431 
 20149              	.LASF879:
 20150 1c6f 5F5A4E39 		.string	"_ZN9__gnu_cxx3divExx"
 20150      5F5F676E 
 20150      755F6378 
 20150      78336469 
 20150      76457878 
 20151              	.LASF16:
 20152 1c84 6D627374 		.string	"mbstate_t"
 20152      6174655F 
 20152      7400
 20153              	.LASF547:
 20154 1c8e 5F5F6973 		.string	"__isoc23_wscanf"
 20154      6F633233 
 20154      5F777363 
 20154      616E6600 
 20155              	.LASF302:
 20156 1c9e 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEmc"
 20156      74375F5F 
 20156      63787831 
 20156      31313262 
 20156      61736963 
 20157              	.LASF353:
 20158 1cde 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4swapERS4_"
 20158      74375F5F 
 20158      63787831 
 20158      31313262 
 20158      61736963 
 20159              	.LASF764:
 20160 1d1e 77637479 		.string	"wctype"
 20160      706500
 20161              	.LASF856:
 20162 1d25 5F5A4E53 		.string	"_ZNSaIcED2Ev"
 20162      61496345 
 20162      44324576 
GAS LISTING linobj/Ch02_03.s 			page 496


 20162      00
 20163              	.LASF783:
 20164 1d32 75696E74 		.string	"uint_least32_t"
 20164      5F6C6561 
 20164      73743332 
 20164      5F7400
 20165              	.LASF612:
 20166 1d41 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20166      5F5F676E 
 20166      755F6378 
 20166      7831375F 
 20166      5F6E6F72 
 20167              	.LASF272:
 20168 1d9f 63617061 		.string	"capacity"
 20168      63697479 
 20168      00
 20169              	.LASF267:
 20170 1da8 72657369 		.string	"resize"
 20170      7A6500
 20171              	.LASF881:
 20172 1daf 5F494F5F 		.string	"_IO_lock_t"
 20172      6C6F636B 
 20172      5F7400
 20173              	.LASF660:
 20174 1dba 5F5F7569 		.string	"__uint16_t"
 20174      6E743136 
 20174      5F7400
 20175              	.LASF366:
 20176 1dc5 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEPKcmm"
 20176      5374375F 
 20176      5F637878 
 20176      31313132 
 20176      62617369 
 20177              	.LASF334:
 20178 1e08 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmmc"
 20178      74375F5F 
 20178      63787831 
 20178      31313262 
 20178      61736963 
 20179              	.LASF142:
 20180 1e4b 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE8allocateERS0_mPKv"
 20180      74313661 
 20180      6C6C6F63 
 20180      61746F72 
 20180      5F747261 
 20181              	.LASF543:
 20182 1e7c 776D656D 		.string	"wmemmove"
 20182      6D6F7665 
 20182      00
 20183              	.LASF320:
 20184 1e85 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmmc"
 20184      74375F5F 
 20184      63787831 
 20184      31313262 
 20184      61736963 
 20185              	.LASF622:
 20186 1ec6 6C6F6E67 		.string	"long long unsigned int"
GAS LISTING linobj/Ch02_03.s 			page 497


 20186      206C6F6E 
 20186      6720756E 
 20186      7369676E 
 20186      65642069 
 20187              	.LASF268:
 20188 1edd 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6resizeEmc"
 20188      74375F5F 
 20188      63787831 
 20188      31313262 
 20188      61736963 
 20189              	.LASF275:
 20190 1f1d 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEm"
 20190      74375F5F 
 20190      63787831 
 20190      31313262 
 20190      61736963 
 20191              	.LASF572:
 20192 1f5d 6F746865 		.string	"other"
 20192      7200
 20193              	.LASF683:
 20194 1f63 35646976 		.string	"5div_t"
 20194      5F7400
 20195              	.LASF276:
 20196 1f6a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7reserveEv"
 20196      74375F5F 
 20196      63787831 
 20196      31313262 
 20196      61736963 
 20197              	.LASF828:
 20198 1faa 5F5A4E36 		.string	"_ZN6XmmVal11ToStringX32B5cxx11Ev"
 20198      586D6D56 
 20198      616C3131 
 20198      546F5374 
 20198      72696E67 
 20199              	.LASF118:
 20200 1fcb 616C6C6F 		.string	"allocate"
 20200      63617465 
 20200      00
 20201              	.LASF544:
 20202 1fd4 776D656D 		.string	"wmemset"
 20202      73657400 
 20203              	.LASF102:
 20204 1fdc 5F5F6E65 		.string	"__new_allocator<char>"
 20204      775F616C 
 20204      6C6F6361 
 20204      746F723C 
 20204      63686172 
 20205              	.LASF329:
 20206 1ff2 7265706C 		.string	"replace"
 20206      61636500 
 20207              	.LASF513:
 20208 1ffa 746D5F6D 		.string	"tm_min"
 20208      696E00
 20209              	.LASF277:
 20210 2001 636C6561 		.string	"clear"
 20210      7200
 20211              	.LASF50:
GAS LISTING linobj/Ch02_03.s 			page 498


 20212 2007 5F4D5F65 		.string	"_M_exception_object"
 20212      78636570 
 20212      74696F6E 
 20212      5F6F626A 
 20212      65637400 
 20213              	.LASF19:
 20214 201b 5F494F5F 		.string	"_IO_read_ptr"
 20214      72656164 
 20214      5F707472 
 20214      00
 20215              	.LASF546:
 20216 2028 77736361 		.string	"wscanf"
 20216      6E6600
 20217              	.LASF190:
 20218 202f 5F4D5F75 		.string	"_M_use_local_data"
 20218      73655F6C 
 20218      6F63616C 
 20218      5F646174 
 20218      6100
 20219              	.LASF219:
 20220 2041 5F4D5F65 		.string	"_M_erase"
 20220      72617365 
 20220      00
 20221              	.LASF636:
 20222 204a 6D6F6E5F 		.string	"mon_thousands_sep"
 20222      74686F75 
 20222      73616E64 
 20222      735F7365 
 20222      7000
 20223              	.LASF495:
 20224 205c 756E6765 		.string	"ungetwc"
 20224      74776300 
 20225              	.LASF3:
 20226 2064 66705F6F 		.string	"fp_offset"
 20226      66667365 
 20226      7400
 20227              	.LASF747:
 20228 206e 6674656C 		.string	"ftell"
 20228      6C00
 20229              	.LASF101:
 20230 2074 70747264 		.string	"ptrdiff_t"
 20230      6966665F 
 20230      7400
 20231              	.LASF121:
 20232 207e 6465616C 		.string	"deallocate"
 20232      6C6F6361 
 20232      746500
 20233              	.LASF309:
 20234 2089 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEPKcm"
 20234      74375F5F 
 20234      63787831 
 20234      31313262 
 20234      61736963 
 20235              	.LASF333:
 20236 20cb 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmPKc"
 20236      74375F5F 
 20236      63787831 
GAS LISTING linobj/Ch02_03.s 			page 499


 20236      31313262 
 20236      61736963 
 20237              	.LASF486:
 20238 210f 6D62726C 		.string	"mbrlen"
 20238      656E00
 20239              	.LASF595:
 20240 2116 62617365 		.string	"base"
 20240      00
 20241              	.LASF639:
 20242 211b 6E656761 		.string	"negative_sign"
 20242      74697665 
 20242      5F736967 
 20242      6E00
 20243              	.LASF170:
 20244 2129 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv"
 20244      5374375F 
 20244      5F637878 
 20244      31313132 
 20244      62617369 
 20245              	.LASF330:
 20246 2171 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmRKS4_"
 20246      74375F5F 
 20246      63787831 
 20246      31313262 
 20246      61736963 
 20247              	.LASF648:
 20248 21b7 696E745F 		.string	"int_p_cs_precedes"
 20248      705F6373 
 20248      5F707265 
 20248      63656465 
 20248      7300
 20249              	.LASF211:
 20250 21c9 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcS5_S5_"
 20250      74375F5F 
 20250      63787831 
 20250      31313262 
 20250      61736963 
 20251              	.LASF113:
 20252 2217 706F696E 		.string	"pointer"
 20252      74657200 
 20253              	.LASF374:
 20254 221f 66696E64 		.string	"find_last_of"
 20254      5F6C6173 
 20254      745F6F66 
 20254      00
 20255              	.LASF455:
 20256 222c 5F5F696E 		.string	"__integer_to_chars_is_unsigned"
 20256      74656765 
 20256      725F746F 
 20256      5F636861 
 20256      72735F69 
 20257              	.LASF247:
 20258 224b 72657665 		.string	"reverse_iterator"
 20258      7273655F 
 20258      69746572 
 20258      61746F72 
 20258      00
GAS LISTING linobj/Ch02_03.s 			page 500


 20259              	.LASF501:
 20260 225c 5F5F6973 		.string	"__isoc23_vswscanf"
 20260      6F633233 
 20260      5F767377 
 20260      7363616E 
 20260      6600
 20261              	.LASF297:
 20262 226e 61707065 		.string	"append"
 20262      6E6400
 20263              	.LASF446:
 20264 2275 5F5F7074 		.string	"__ptr_traits_ptr_to<char*, char, false>"
 20264      725F7472 
 20264      61697473 
 20264      5F707472 
 20264      5F746F3C 
 20265              	.LASF442:
 20266 229d 636F7574 		.string	"cout"
 20266      00
 20267              	.LASF30:
 20268 22a2 5F6D6172 		.string	"_markers"
 20268      6B657273 
 20268      00
 20269              	.LASF861:
 20270 22ab 4D756C49 		.string	"MulI32a"
 20270      33326100 
 20271              	.LASF139:
 20272 22b3 616C6C6F 		.string	"allocator_traits<std::allocator<char> >"
 20272      6361746F 
 20272      725F7472 
 20272      61697473 
 20272      3C737464 
 20273              	.LASF620:
 20274 22db 77637374 		.string	"wcstoull"
 20274      6F756C6C 
 20274      00
 20275              	.LASF80:
 20276 22e4 636F6D70 		.string	"compare"
 20276      61726500 
 20277              	.LASF414:
 20278 22ec 5F535F67 		.string	"_S_goodbit"
 20278      6F6F6462 
 20278      697400
 20279              	.LASF457:
 20280 22f7 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE5clearESt12_Ios_Iostate"
 20280      74396261 
 20280      7369635F 
 20280      696F7349 
 20280      63537431 
 20281              	.LASF726:
 20282 2333 5F475F66 		.string	"_G_fpos_t"
 20282      706F735F 
 20282      7400
 20283              	.LASF672:
 20284 233d 5F5F7569 		.string	"__uint_least64_t"
 20284      6E745F6C 
 20284      65617374 
 20284      36345F74 
GAS LISTING linobj/Ch02_03.s 			page 501


 20284      00
 20285              	.LASF126:
 20286 234e 5F5A4E4B 		.string	"_ZNKSt15__new_allocatorIcE11_M_max_sizeEv"
 20286      53743135 
 20286      5F5F6E65 
 20286      775F616C 
 20286      6C6F6361 
 20287              	.LASF377:
 20288 2378 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEPKcm"
 20288      5374375F 
 20288      5F637878 
 20288      31313132 
 20288      62617369 
 20289              	.LASF772:
 20290 23c2 6C6F6361 		.string	"localtime"
 20290      6C74696D 
 20290      6500
 20291              	.LASF509:
 20292 23cc 77637363 		.string	"wcscpy"
 20292      707900
 20293              	.LASF521:
 20294 23d3 746D5F67 		.string	"tm_gmtoff"
 20294      6D746F66 
 20294      6600
 20295              	.LASF300:
 20296 23dd 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKcm"
 20296      74375F5F 
 20296      63787831 
 20296      31313262 
 20296      61736963 
 20297              	.LASF127:
 20298 241f 5F436861 		.string	"_CharT"
 20298      725400
 20299              	.LASF160:
 20300 2426 5F436861 		.string	"_Char_alloc_type"
 20300      725F616C 
 20300      6C6F635F 
 20300      74797065 
 20300      00
 20301              	.LASF499:
 20302 2437 76737770 		.string	"vswprintf"
 20302      72696E74 
 20302      6600
 20303              	.LASF208:
 20304 2441 69746572 		.string	"iterator"
 20304      61746F72 
 20304      00
 20305              	.LASF465:
 20306 244a 6F706572 		.string	"operator<< <char, std::char_traits<char> >"
 20306      61746F72 
 20306      3C3C203C 
 20306      63686172 
 20306      2C207374 
 20307              	.LASF152:
 20308 2475 5F416C6C 		.string	"_Alloc_hider"
 20308      6F635F68 
 20308      69646572 
GAS LISTING linobj/Ch02_03.s 			page 502


 20308      00
 20309              	.LASF713:
 20310 2482 73747274 		.string	"strtoul"
 20310      6F756C00 
 20311              	.LASF183:
 20312 248a 5F4D5F63 		.string	"_M_construct"
 20312      6F6E7374 
 20312      72756374 
 20312      00
 20313              	.LASF498:
 20314 2497 5F5F6973 		.string	"__isoc23_vfwscanf"
 20314      6F633233 
 20314      5F766677 
 20314      7363616E 
 20314      6600
 20315              	.LASF69:
 20316 24a9 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr4swapERS0_"
 20316      7431355F 
 20316      5F657863 
 20316      65707469 
 20316      6F6E5F70 
 20317              	.LASF71:
 20318 24d9 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv"
 20318      53743135 
 20318      5F5F6578 
 20318      63657074 
 20318      696F6E5F 
 20319              	.LASF481:
 20320 2518 66776964 		.string	"fwide"
 20320      6500
 20321              	.LASF147:
 20322 251e 73656C65 		.string	"select_on_container_copy_construction"
 20322      63745F6F 
 20322      6E5F636F 
 20322      6E746169 
 20322      6E65725F 
 20323              	.LASF482:
 20324 2544 66777072 		.string	"fwprintf"
 20324      696E7466 
 20324      00
 20325              	.LASF550:
 20326 254d 77637372 		.string	"wcsrchr"
 20326      63687200 
 20327              	.LASF262:
 20328 2555 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5crendEv"
 20328      5374375F 
 20328      5F637878 
 20328      31313132 
 20328      62617369 
 20329              	.LASF675:
 20330 2594 5F5F6F66 		.string	"__off_t"
 20330      665F7400 
 20331              	.LASF462:
 20332 259c 5F5F6F73 		.string	"__ostream_insert<char, std::char_traits<char> >"
 20332      74726561 
 20332      6D5F696E 
 20332      73657274 
GAS LISTING linobj/Ch02_03.s 			page 503


 20332      3C636861 
 20333              	.LASF657:
 20334 25cc 5F5F696E 		.string	"__int8_t"
 20334      74385F74 
 20334      00
 20335              	.LASF512:
 20336 25d5 746D5F73 		.string	"tm_sec"
 20336      656300
 20337              	.LASF535:
 20338 25dc 5F5F6973 		.string	"__isoc23_wcstol"
 20338      6F633233 
 20338      5F776373 
 20338      746F6C00 
 20339              	.LASF70:
 20340 25ec 5F5F6378 		.string	"__cxa_exception_type"
 20340      615F6578 
 20340      63657074 
 20340      696F6E5F 
 20340      74797065 
 20341              	.LASF39:
 20342 2601 5F6F6666 		.string	"_offset"
 20342      73657400 
 20343              	.LASF249:
 20344 2609 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"
 20344      74375F5F 
 20344      63787831 
 20344      31313262 
 20344      61736963 
 20345              	.LASF209:
 20346 2648 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcN9__gnu_cxx17__nor
 20346      74375F5F 
 20346      63787831 
 20346      31313262 
 20346      61736963 
 20347              	.LASF526:
 20348 26ba 7763736E 		.string	"wcsncpy"
 20348      63707900 
 20349              	.LASF755:
 20350 26c2 73657476 		.string	"setvbuf"
 20350      62756600 
 20351              	.LASF286:
 20352 26ca 66726F6E 		.string	"front"
 20352      7400
 20353              	.LASF395:
 20354 26d0 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmPKc"
 20354      5374375F 
 20354      5F637878 
 20354      31313132 
 20354      62617369 
 20355              	.LASF491:
 20356 2715 70757477 		.string	"putwchar"
 20356      63686172 
 20356      00
 20357              	.LASF380:
 20358 271e 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofERKS4_m"
 20358      5374375F 
 20358      5F637878 
GAS LISTING linobj/Ch02_03.s 			page 504


 20358      31313132 
 20358      62617369 
 20359              	.LASF201:
 20360 276f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_S_copyEPcPKcm"
 20360      74375F5F 
 20360      63787831 
 20360      31313262 
 20360      61736963 
 20361              	.LASF561:
 20362 27b4 5F535F70 		.string	"_S_propagate_on_copy_assign"
 20362      726F7061 
 20362      67617465 
 20362      5F6F6E5F 
 20362      636F7079 
 20363              	.LASF65:
 20364 27d0 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSEOS0_"
 20364      7431355F 
 20364      5F657863 
 20364      65707469 
 20364      6F6E5F70 
 20365              	.LASF434:
 20366 27fd 6F706572 		.string	"operator<<"
 20366      61746F72 
 20366      3C3C00
 20367              	.LASF602:
 20368 2808 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20368      5F5F676E 
 20368      755F6378 
 20368      7831375F 
 20368      5F6E6F72 
 20369              	.LASF437:
 20370 286a 5F5F6F73 		.string	"__ostream_type"
 20370      74726561 
 20370      6D5F7479 
 20370      706500
 20371              	.LASF474:
 20372 2879 6F706572 		.string	"operator|"
 20372      61746F72 
 20372      7C00
 20373              	.LASF89:
 20374 2883 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4copyEPcPKcm"
 20374      74313163 
 20374      6861725F 
 20374      74726169 
 20374      74734963 
 20375              	.LASF117:
 20376 28a5 636F6E73 		.string	"const_reference"
 20376      745F7265 
 20376      66657265 
 20376      6E636500 
 20377              	.LASF346:
 20378 28b5 5F4D5F72 		.string	"_M_replace_cold"
 20378      65706C61 
 20378      63655F63 
 20378      6F6C6400 
 20379              	.LASF84:
 20380 28c5 66696E64 		.string	"find"
GAS LISTING linobj/Ch02_03.s 			page 505


 20380      00
 20381              	.LASF241:
 20382 28ca 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSESt16initializer_listIcE"
 20382      74375F5F 
 20382      63787831 
 20382      31313262 
 20382      61736963 
 20383              	.LASF294:
 20384 291a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLEPKc"
 20384      74375F5F 
 20384      63787831 
 20384      31313262 
 20384      61736963 
 20385              	.LASF664:
 20386 2956 5F5F7569 		.string	"__uint64_t"
 20386      6E743634 
 20386      5F7400
 20387              	.LASF314:
 20388 2961 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEN9__gnu_cxx17__normal_iterat
 20388      74375F5F 
 20388      63787831 
 20388      31313262 
 20388      61736963 
 20389              	.LASF701:
 20390 29c8 67657465 		.string	"getenv"
 20390      6E7600
 20391              	.LASF782:
 20392 29cf 75696E74 		.string	"uint_least16_t"
 20392      5F6C6561 
 20392      73743136 
 20392      5F7400
 20393              	.LASF86:
 20394 29de 6D6F7665 		.string	"move"
 20394      00
 20395              	.LASF122:
 20396 29e3 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcE10deallocateEPcm"
 20396      7431355F 
 20396      5F6E6577 
 20396      5F616C6C 
 20396      6F636174 
 20397              	.LASF6:
 20398 2a0d 6C6F6E67 		.string	"long unsigned int"
 20398      20756E73 
 20398      69676E65 
 20398      6420696E 
 20398      7400
 20399              	.LASF159:
 20400 2a1f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_S_allocateERS3_m"
 20400      74375F5F 
 20400      63787831 
 20400      31313262 
 20400      61736963 
 20401              	.LASF237:
 20402 2a68 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSERKS4_"
 20402      74375F5F 
 20402      63787831 
 20402      31313262 
GAS LISTING linobj/Ch02_03.s 			page 506


 20402      61736963 
 20403              	.LASF59:
 20404 2aa6 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4Ev"
 20404      7431355F 
 20404      5F657863 
 20404      65707469 
 20404      6F6E5F70 
 20405              	.LASF392:
 20406 2ad0 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmRKS4_"
 20406      5374375F 
 20406      5F637878 
 20406      31313132 
 20406      62617369 
 20407              	.LASF244:
 20408 2b17 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv"
 20408      5374375F 
 20408      5F637878 
 20408      31313132 
 20408      62617369 
 20409              	.LASF298:
 20410 2b56 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_"
 20410      74375F5F 
 20410      63787831 
 20410      31313262 
 20410      61736963 
 20411              	.LASF114:
 20412 2b99 72656665 		.string	"reference"
 20412      72656E63 
 20412      6500
 20413              	.LASF52:
 20414 2ba3 5F4D5F72 		.string	"_M_release"
 20414      656C6561 
 20414      736500
 20415              	.LASF283:
 20416 2bae 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm"
 20416      74375F5F 
 20416      63787831 
 20416      31313262 
 20416      61736963 
 20417              	.LASF250:
 20418 2be8 636F6E73 		.string	"const_reverse_iterator"
 20418      745F7265 
 20418      76657273 
 20418      655F6974 
 20418      65726174 
 20419              	.LASF33:
 20420 2bff 5F666C61 		.string	"_flags2"
 20420      67733200 
 20421              	.LASF156:
 20422 2c07 5F4D5F6C 		.string	"_M_local_buf"
 20422      6F63616C 
 20422      5F627566 
 20422      00
 20423              	.LASF111:
 20424 2c14 61646472 		.string	"address"
 20424      65737300 
 20425              	.LASF817:
GAS LISTING linobj/Ch02_03.s 			page 507


 20426 2c1c 546F5374 		.string	"ToStringU16"
 20426      72696E67 
 20426      55313600 
 20427              	.LASF566:
 20428 2c28 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE20_S_propagate_on_swapEv"
 20428      5F5F676E 
 20428      755F6378 
 20428      7831345F 
 20428      5F616C6C 
 20429              	.LASF681:
 20430 2c66 5F5F676E 		.string	"__gnu_debug"
 20430      755F6465 
 20430      62756700 
 20431              	.LASF670:
 20432 2c72 5F5F7569 		.string	"__uint_least32_t"
 20432      6E745F6C 
 20432      65617374 
 20432      33325F74 
 20432      00
 20433              	.LASF637:
 20434 2c83 6D6F6E5F 		.string	"mon_grouping"
 20434      67726F75 
 20434      70696E67 
 20434      00
 20435              	.LASF686:
 20436 2c90 366C6469 		.string	"6ldiv_t"
 20436      765F7400 
 20437              	.LASF870:
 20438 2c98 5F5A4E53 		.string	"_ZNSt15__exception_ptr4swapERNS_13exception_ptrES1_"
 20438      7431355F 
 20438      5F657863 
 20438      65707469 
 20438      6F6E5F70 
 20439              	.LASF281:
 20440 2ccc 6F706572 		.string	"operator[]"
 20440      61746F72 
 20440      5B5D00
 20441              	.LASF618:
 20442 2cd7 5F5F6973 		.string	"__isoc23_wcstoll"
 20442      6F633233 
 20442      5F776373 
 20442      746F6C6C 
 20442      00
 20443              	.LASF780:
 20444 2ce8 696E745F 		.string	"int_least64_t"
 20444      6C656173 
 20444      7436345F 
 20444      7400
 20445              	.LASF496:
 20446 2cf6 76667770 		.string	"vfwprintf"
 20446      72696E74 
 20446      6600
 20447              	.LASF304:
 20448 2d00 70757368 		.string	"push_back"
 20448      5F626163 
 20448      6B00
 20449              	.LASF178:
GAS LISTING linobj/Ch02_03.s 			page 508


 20450 2d0a 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_createERmm"
 20450      74375F5F 
 20450      63787831 
 20450      31313262 
 20450      61736963 
 20451              	.LASF843:
 20452 2d4e 74686973 		.string	"this"
 20452      00
 20453              	.LASF135:
 20454 2d53 70696563 		.string	"piecewise_construct_t"
 20454      65776973 
 20454      655F636F 
 20454      6E737472 
 20454      7563745F 
 20455              	.LASF628:
 20456 2d69 63686172 		.string	"char32_t"
 20456      33325F74 
 20456      00
 20457              	.LASF46:
 20458 2d72 5F756E75 		.string	"_unused2"
 20458      73656432 
 20458      00
 20459              	.LASF378:
 20460 2d7b 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofEcm"
 20460      5374375F 
 20460      5F637878 
 20460      31313132 
 20460      62617369 
 20461              	.LASF551:
 20462 2dc3 77637373 		.string	"wcsstr"
 20462      747200
 20463              	.LASF831:
 20464 2dca 546F5374 		.string	"ToStringF32"
 20464      72696E67 
 20464      46333200 
 20465              	.LASF716:
 20466 2dd6 77637374 		.string	"wcstombs"
 20466      6F6D6273 
 20466      00
 20467              	.LASF123:
 20468 2ddf 6D61785F 		.string	"max_size"
 20468      73697A65 
 20468      00
 20469              	.LASF837:
 20470 2de8 4D756C49 		.string	"MulI32b_Iavx"
 20470      3332625F 
 20470      49617678 
 20470      00
 20471              	.LASF845:
 20472 2df5 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcEC2ERKS0_"
 20472      7431355F 
 20472      5F6E6577 
 20472      5F616C6C 
 20472      6F636174 
 20473              	.LASF470:
 20474 2e17 5F5A5374 		.string	"_ZStlsIcSt11char_traitsIcESaIcEERSt13basic_ostreamIT_T0_ES7_RKNSt7__cxx1112basic_stringIS
 20474      6C734963 
GAS LISTING linobj/Ch02_03.s 			page 509


 20474      53743131 
 20474      63686172 
 20474      5F747261 
 20475              	.LASF149:
 20476 2e7b 76616C75 		.string	"value_type"
 20476      655F7479 
 20476      706500
 20477              	.LASF381:
 20478 2e86 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcmm"
 20478      5374375F 
 20478      5F637878 
 20478      31313132 
 20478      62617369 
 20479              	.LASF794:
 20480 2ed6 75696E74 		.string	"uintptr_t"
 20480      7074725F 
 20480      7400
 20481              	.LASF411:
 20482 2ee0 64696666 		.string	"difference_type"
 20482      6572656E 
 20482      63655F74 
 20482      79706500 
 20483              	.LASF254:
 20484 2ef0 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv"
 20484      5374375F 
 20484      5F637878 
 20484      31313132 
 20484      62617369 
 20485              	.LASF97:
 20486 2f2e 65715F69 		.string	"eq_int_type"
 20486      6E745F74 
 20486      79706500 
 20487              	.LASF58:
 20488 2f3a 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr6_M_getEv"
 20488      53743135 
 20488      5F5F6578 
 20488      63657074 
 20488      696F6E5F 
 20489              	.LASF765:
 20490 2f6a 636C6F63 		.string	"clock"
 20490      6B00
 20491              	.LASF291:
 20492 2f70 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv"
 20492      5374375F 
 20492      5F637878 
 20492      31313132 
 20492      62617369 
 20493              	.LASF689:
 20494 2fae 6C6C6469 		.string	"lldiv_t"
 20494      765F7400 
 20495              	.LASF449:
 20496 2fb6 656C656D 		.string	"element_type"
 20496      656E745F 
 20496      74797065 
 20496      00
 20497              	.LASF525:
 20498 2fc3 7763736E 		.string	"wcsncmp"
GAS LISTING linobj/Ch02_03.s 			page 510


 20498      636D7000 
 20499              	.LASF88:
 20500 2fcb 636F7079 		.string	"copy"
 20500      00
 20501              	.LASF430:
 20502 2fd0 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE3endEv"
 20502      53743136 
 20502      696E6974 
 20502      69616C69 
 20502      7A65725F 
 20503              	.LASF308:
 20504 2ff2 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_mm"
 20504      74375F5F 
 20504      63787831 
 20504      31313262 
 20504      61736963 
 20505              	.LASF107:
 20506 3037 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptrcvbEv"
 20506      53743135 
 20506      5F5F6578 
 20506      63657074 
 20506      696F6E5F 
 20507              	.LASF746:
 20508 3063 66736574 		.string	"fsetpos"
 20508      706F7300 
 20509              	.LASF148:
 20510 306b 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE37select_on_container_copy_constructionERKS0_"
 20510      74313661 
 20510      6C6C6F63 
 20510      61746F72 
 20510      5F747261 
 20511              	.LASF218:
 20512 30b7 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_mutateEmmPKcm"
 20512      74375F5F 
 20512      63787831 
 20512      31313262 
 20512      61736963 
 20513              	.LASF185:
 20514 30fe 5F4D5F67 		.string	"_M_get_allocator"
 20514      65745F61 
 20514      6C6C6F63 
 20514      61746F72 
 20514      00
 20515              	.LASF651:
 20516 310f 696E745F 		.string	"int_n_sep_by_space"
 20516      6E5F7365 
 20516      705F6279 
 20516      5F737061 
 20516      636500
 20517              	.LASF397:
 20518 3122 5F547261 		.string	"_Traits"
 20518      69747300 
 20519              	.LASF119:
 20520 312a 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcE8allocateEmPKv"
 20520      7431355F 
 20520      5F6E6577 
 20520      5F616C6C 
GAS LISTING linobj/Ch02_03.s 			page 511


 20520      6F636174 
 20521              	.LASF420:
 20522 3152 5F535F69 		.string	"_S_ios_iostate_min"
 20522      6F735F69 
 20522      6F737461 
 20522      74655F6D 
 20522      696E00
 20523              	.LASF580:
 20524 3165 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20524      395F5F67 
 20524      6E755F63 
 20524      78783137 
 20524      5F5F6E6F 
 20525              	.LASF278:
 20526 31c3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5clearEv"
 20526      74375F5F 
 20526      63787831 
 20526      31313262 
 20526      61736963 
 20527              	.LASF494:
 20528 3201 5F5F6973 		.string	"__isoc23_swscanf"
 20528      6F633233 
 20528      5F737773 
 20528      63616E66 
 20528      00
 20529              	.LASF384:
 20530 3212 66696E64 		.string	"find_last_not_of"
 20530      5F6C6173 
 20530      745F6E6F 
 20530      745F6F66 
 20530      00
 20531              	.LASF576:
 20532 3223 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC
 20532      5F5F676E 
 20532      755F6378 
 20532      7831375F 
 20532      5F6E6F72 
 20533              	.LASF103:
 20534 3284 5F5F6E65 		.string	"__new_allocator"
 20534      775F616C 
 20534      6C6F6361 
 20534      746F7200 
 20535              	.LASF846:
 20536 3294 5F5A4E53 		.string	"_ZNSaIcEC2ERKS_"
 20536      61496345 
 20536      43324552 
 20536      4B535F00 
 20537              	.LASF819:
 20538 32a4 546F5374 		.string	"ToStringU32"
 20538      72696E67 
 20538      55333200 
 20539              	.LASF662:
 20540 32b0 5F5F7569 		.string	"__uint32_t"
 20540      6E743332 
 20540      5F7400
 20541              	.LASF803:
 20542 32bb 6D5F5533 		.string	"m_U32"
GAS LISTING linobj/Ch02_03.s 			page 512


 20542      3200
 20543              	.LASF619:
 20544 32c1 6C6F6E67 		.string	"long long int"
 20544      206C6F6E 
 20544      6720696E 
 20544      7400
 20545              	.LASF15:
 20546 32cf 5F5F6D62 		.string	"__mbstate_t"
 20546      73746174 
 20546      655F7400 
 20547              	.LASF848:
 20548 32db 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC2EPcRKS3_"
 20548      74375F5F 
 20548      63787831 
 20548      31313262 
 20548      61736963 
 20549              	.LASF542:
 20550 3329 776D656D 		.string	"wmemcpy"
 20550      63707900 
 20551              	.LASF484:
 20552 3331 5F5F6973 		.string	"__isoc23_fwscanf"
 20552      6F633233 
 20552      5F667773 
 20552      63616E66 
 20552      00
 20553              	.LASF422:
 20554 3342 77696474 		.string	"width"
 20554      6800
 20555              	.LASF516:
 20556 3348 746D5F6D 		.string	"tm_mon"
 20556      6F6E00
 20557              	.LASF807:
 20558 334f 546F5374 		.string	"ToStringI8"
 20558      72696E67 
 20558      493800
 20559              	.LASF529:
 20560 335a 77637374 		.string	"wcstod"
 20560      6F6400
 20561              	.LASF146:
 20562 3361 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE8max_sizeERKS0_"
 20562      74313661 
 20562      6C6C6F63 
 20562      61746F72 
 20562      5F747261 
 20563              	.LASF873:
 20564 338f 7E5F416C 		.string	"~_Alloc_hider"
 20564      6C6F635F 
 20564      68696465 
 20564      7200
 20565              	.LASF531:
 20566 339d 77637374 		.string	"wcstof"
 20566      6F6600
 20567              	.LASF171:
 20568 33a4 5F4D5F63 		.string	"_M_capacity"
 20568      61706163 
 20568      69747900 
 20569              	.LASF42:
GAS LISTING linobj/Ch02_03.s 			page 513


 20570 33b0 5F667265 		.string	"_freeres_list"
 20570      65726573 
 20570      5F6C6973 
 20570      7400
 20571              	.LASF427:
 20572 33be 5F4D5F69 		.string	"_M_insert<long int>"
 20572      6E736572 
 20572      743C6C6F 
 20572      6E672069 
 20572      6E743E00 
 20573              	.LASF534:
 20574 33d2 77637374 		.string	"wcstol"
 20574      6F6C00
 20575              	.LASF337:
 20576 33d9 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20576      74375F5F 
 20576      63787831 
 20576      31313262 
 20576      61736963 
 20577              	.LASF530:
 20578 3445 646F7562 		.string	"double"
 20578      6C6500
 20579              	.LASF85:
 20580 344c 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4findEPKcmRS1_"
 20580      74313163 
 20580      6861725F 
 20580      74726169 
 20580      74734963 
 20581              	.LASF705:
 20582 3470 6D62746F 		.string	"mbtowc"
 20582      776300
 20583              	.LASF24:
 20584 3477 5F494F5F 		.string	"_IO_write_end"
 20584      77726974 
 20584      655F656E 
 20584      6400
 20585              	.LASF246:
 20586 3485 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE3endEv"
 20586      5374375F 
 20586      5F637878 
 20586      31313132 
 20586      62617369 
 20587              	.LASF386:
 20588 34c2 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcmm"
 20588      5374375F 
 20588      5F637878 
 20588      31313132 
 20588      62617369 
 20589              	.LASF802:
 20590 3511 6D5F5531 		.string	"m_U16"
 20590      3600
 20591              	.LASF352:
 20592 3517 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4copyEPcmm"
 20592      5374375F 
 20592      5F637878 
 20592      31313132 
 20592      62617369 
GAS LISTING linobj/Ch02_03.s 			page 514


 20593              	.LASF296:
 20594 3558 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEpLESt16initializer_listIcE"
 20594      74375F5F 
 20594      63787831 
 20594      31313262 
 20594      61736963 
 20595              	.LASF796:
 20596 35a8 75696E74 		.string	"uintmax_t"
 20596      6D61785F 
 20596      7400
 20597              	.LASF441:
 20598 35b2 70696563 		.string	"piecewise_construct"
 20598      65776973 
 20598      655F636F 
 20598      6E737472 
 20598      75637400 
 20599              	.LASF540:
 20600 35c6 7763746F 		.string	"wctob"
 20600      6200
 20601              	.LASF443:
 20602 35cc 69746572 		.string	"iterator_traits<char*>"
 20602      61746F72 
 20602      5F747261 
 20602      6974733C 
 20602      63686172 
 20603              	.LASF810:
 20604 35e3 5F5A4E36 		.string	"_ZN6XmmVal11ToStringI16B5cxx11Ev"
 20604      586D6D56 
 20604      616C3131 
 20604      546F5374 
 20604      72696E67 
 20605              	.LASF2:
 20606 3604 67705F6F 		.string	"gp_offset"
 20606      66667365 
 20606      7400
 20607              	.LASF608:
 20608 360e 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20608      5F5F676E 
 20608      755F6378 
 20608      7831375F 
 20608      5F6E6F72 
 20609              	.LASF812:
 20610 366c 5F5A4E36 		.string	"_ZN6XmmVal11ToStringI32B5cxx11Ev"
 20610      586D6D56 
 20610      616C3131 
 20610      546F5374 
 20610      72696E67 
 20611              	.LASF389:
 20612 368d 73756273 		.string	"substr"
 20612      747200
 20613              	.LASF574:
 20614 3694 5F5F6E6F 		.string	"__normal_iterator"
 20614      726D616C 
 20614      5F697465 
 20614      7261746F 
 20614      7200
 20615              	.LASF692:
GAS LISTING linobj/Ch02_03.s 			page 515


 20616 36a6 696E7433 		.string	"int32_t"
 20616      325F7400 
 20617              	.LASF532:
 20618 36ae 666C6F61 		.string	"float"
 20618      7400
 20619              	.LASF694:
 20620 36b4 5F5F636F 		.string	"__compar_fn_t"
 20620      6D706172 
 20620      5F666E5F 
 20620      7400
 20621              	.LASF187:
 20622 36c2 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv"
 20622      5374375F 
 20622      5F637878 
 20622      31313132 
 20622      62617369 
 20623              	.LASF880:
 20624 370d 6465636C 		.string	"decltype(nullptr)"
 20624      74797065 
 20624      286E756C 
 20624      6C707472 
 20624      2900
 20625              	.LASF55:
 20626 371f 65786365 		.string	"exception_ptr"
 20626      7074696F 
 20626      6E5F7074 
 20626      7200
 20627              	.LASF646:
 20628 372d 705F7369 		.string	"p_sign_posn"
 20628      676E5F70 
 20628      6F736E00 
 20629              	.LASF407:
 20630 3739 74797065 		.string	"type_info"
 20630      5F696E66 
 20630      6F00
 20631              	.LASF878:
 20632 3743 5F5A5374 		.string	"_ZSt4cout"
 20632      34636F75 
 20632      7400
 20633              	.LASF673:
 20634 374d 5F5F696E 		.string	"__intmax_t"
 20634      746D6178 
 20634      5F7400
 20635              	.LASF451:
 20636 3758 5F456C74 		.string	"_Elt"
 20636      00
 20637              	.LASF25:
 20638 375d 5F494F5F 		.string	"_IO_buf_base"
 20638      6275665F 
 20638      62617365 
 20638      00
 20639              	.LASF412:
 20640 376a 73747269 		.string	"string"
 20640      6E6700
 20641              	.LASF594:
 20642 3771 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20642      395F5F67 
GAS LISTING linobj/Ch02_03.s 			page 516


 20642      6E755F63 
 20642      78783137 
 20642      5F5F6E6F 
 20643              	.LASF862:
 20644 37cf 4D756C49 		.string	"MulI16"
 20644      313600
 20645              	.LASF387:
 20646 37d6 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEPKcm"
 20646      5374375F 
 20646      5F637878 
 20646      31313132 
 20646      62617369 
 20647              	.LASF390:
 20648 3824 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6substrEmm"
 20648      5374375F 
 20648      5F637878 
 20648      31313132 
 20648      62617369 
 20649              	.LASF587:
 20650 3865 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20650      395F5F67 
 20650      6E755F63 
 20650      78783137 
 20650      5F5F6E6F 
 20651              	.LASF215:
 20652 38c3 5F4D5F61 		.string	"_M_assign"
 20652      73736967 
 20652      6E00
 20653              	.LASF603:
 20654 38cd 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 20654      395F5F67 
 20654      6E755F63 
 20654      78783137 
 20654      5F5F6E6F 
 20655              	.LASF76:
 20656 392c 63686172 		.string	"char_traits<char>"
 20656      5F747261 
 20656      6974733C 
 20656      63686172 
 20656      3E00
 20657              	.LASF750:
 20658 393e 70657272 		.string	"perror"
 20658      6F7200
 20659              	.LASF428:
 20660 3945 5F5A4E53 		.string	"_ZNSo9_M_insertIlEERSoT_"
 20660      6F395F4D 
 20660      5F696E73 
 20660      65727449 
 20660      6C454552 
 20661              	.LASF385:
 20662 395e 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofERKS4_m"
 20662      5374375F 
 20662      5F637878 
 20662      31313132 
 20662      62617369 
 20663              	.LASF833:
 20664 39ae 546F5374 		.string	"ToStringF64"
GAS LISTING linobj/Ch02_03.s 			page 517


 20664      72696E67 
 20664      46363400 
 20665              	.LASF226:
 20666 39ba 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_mmRKS3_"
 20666      74375F5F 
 20666      63787831 
 20666      31313262 
 20666      61736963 
 20667              	.LASF793:
 20668 39ff 696E7470 		.string	"intptr_t"
 20668      74725F74 
 20668      00
 20669              	.LASF528:
 20670 3a08 77637373 		.string	"wcsspn"
 20670      706E00
 20671              	.LASF806:
 20672 3a0f 6D5F4636 		.string	"m_F64"
 20672      3400
 20673              	.LASF364:
 20674 3a15 7266696E 		.string	"rfind"
 20674      6400
 20675              	.LASF106:
 20676 3a1b 6F706572 		.string	"operator bool"
 20676      61746F72 
 20676      20626F6F 
 20676      6C00
 20677              	.LASF98:
 20678 3a29 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11eq_int_typeERKiS2_"
 20678      74313163 
 20678      6861725F 
 20678      74726169 
 20678      74734963 
 20679              	.LASF197:
 20680 3a53 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_limitEmm"
 20680      5374375F 
 20680      5F637878 
 20680      31313132 
 20680      62617369 
 20681              	.LASF805:
 20682 3a96 6D5F4633 		.string	"m_F32"
 20682      3200
 20683              	.LASF316:
 20684 3a9c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_"
 20684      74375F5F 
 20684      63787831 
 20684      31313262 
 20684      61736963 
 20685              	.LASF7:
 20686 3ae0 756E7369 		.string	"unsigned int"
 20686      676E6564 
 20686      20696E74 
 20686      00
 20687              	.LASF34:
 20688 3aed 5F6F6C64 		.string	"_old_offset"
 20688      5F6F6666 
 20688      73657400 
 20689              	.LASF596:
GAS LISTING linobj/Ch02_03.s 			page 518


 20690 3af9 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20690      395F5F67 
 20690      6E755F63 
 20690      78783137 
 20690      5F5F6E6F 
 20691              	.LASF259:
 20692 3b5a 63726265 		.string	"crbegin"
 20692      67696E00 
 20693              	.LASF44:
 20694 3b62 5F5F7061 		.string	"__pad5"
 20694      643500
 20695              	.LASF311:
 20696 3b69 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEmc"
 20696      74375F5F 
 20696      63787831 
 20696      31313262 
 20696      61736963 
 20697              	.LASF598:
 20698 3ba9 5F436F6E 		.string	"_Container"
 20698      7461696E 
 20698      657200
 20699              	.LASF357:
 20700 3bb4 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4dataEv"
 20700      5374375F 
 20700      5F637878 
 20700      31313132 
 20700      62617369 
 20701              	.LASF91:
 20702 3bf2 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignEPcmc"
 20702      74313163 
 20702      6861725F 
 20702      74726169 
 20702      74734963 
 20703              	.LASF487:
 20704 3c14 6D627274 		.string	"mbrtowc"
 20704      6F776300 
 20705              	.LASF790:
 20706 3c1c 75696E74 		.string	"uint_fast16_t"
 20706      5F666173 
 20706      7431365F 
 20706      7400
 20707              	.LASF767:
 20708 3c2a 6D6B7469 		.string	"mktime"
 20708      6D6500
 20709              	.LASF93:
 20710 3c31 5F5A4E53 		.string	"_ZNSt11char_traitsIcE12to_char_typeERKi"
 20710      74313163 
 20710      6861725F 
 20710      74726169 
 20710      74734963 
 20711              	.LASF362:
 20712 3c59 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcm"
 20712      5374375F 
 20712      5F637878 
 20712      31313132 
 20712      62617369 
 20713              	.LASF382:
GAS LISTING linobj/Ch02_03.s 			page 519


 20714 3c9a 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17find_first_not_ofEPKcm"
 20714      5374375F 
 20714      5F637878 
 20714      31313132 
 20714      62617369 
 20715              	.LASF821:
 20716 3ce9 546F5374 		.string	"ToStringU64"
 20716      72696E67 
 20716      55363400 
 20717              	.LASF403:
 20718 3cf5 5F5A4E53 		.string	"_ZNSt16initializer_listIcEC4EPKcm"
 20718      74313669 
 20718      6E697469 
 20718      616C697A 
 20718      65725F6C 
 20719              	.LASF715:
 20720 3d17 73797374 		.string	"system"
 20720      656D00
 20721              	.LASF804:
 20722 3d1e 6D5F5536 		.string	"m_U64"
 20722      3400
 20723              	.LASF429:
 20724 3d24 5F56616C 		.string	"_ValueT"
 20724      75655400 
 20725              	.LASF760:
 20726 3d2c 77637472 		.string	"wctrans_t"
 20726      616E735F 
 20726      7400
 20727              	.LASF460:
 20728 3d36 73657473 		.string	"setstate"
 20728      74617465 
 20728      00
 20729              	.LASF202:
 20730 3d3f 5F535F6D 		.string	"_S_move"
 20730      6F766500 
 20731              	.LASF355:
 20732 3d47 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5c_strEv"
 20732      5374375F 
 20732      5F637878 
 20732      31313132 
 20732      62617369 
 20733              	.LASF4:
 20734 3d86 6F766572 		.string	"overflow_arg_area"
 20734      666C6F77 
 20734      5F617267 
 20734      5F617265 
 20734      6100
 20735              	.LASF752:
 20736 3d98 72656E61 		.string	"rename"
 20736      6D6500
 20737              	.LASF248:
 20738 3d9f 72626567 		.string	"rbegin"
 20738      696E00
 20739              	.LASF228:
 20740 3da6 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcRKS3_"
 20740      74375F5F 
 20740      63787831 
GAS LISTING linobj/Ch02_03.s 			page 520


 20740      31313262 
 20740      61736963 
 20741              	.LASF328:
 20742 3de7 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8pop_backEv"
 20742      74375F5F 
 20742      63787831 
 20742      31313262 
 20742      61736963 
 20743              	.LASF373:
 20744 3e28 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofEcm"
 20744      5374375F 
 20744      5F637878 
 20744      31313132 
 20744      62617369 
 20745              	.LASF18:
 20746 3e71 5F666C61 		.string	"_flags"
 20746      677300
 20747              	.LASF104:
 20748 3e78 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcEC4Ev"
 20748      7431355F 
 20748      5F6E6577 
 20748      5F616C6C 
 20748      6F636174 
 20749              	.LASF150:
 20750 3e96 72656269 		.string	"rebind_alloc"
 20750      6E645F61 
 20750      6C6C6F63 
 20750      00
 20751              	.LASF677:
 20752 3ea3 5F5F636C 		.string	"__clock_t"
 20752      6F636B5F 
 20752      7400
 20753              	.LASF124:
 20754 3ead 5F5A4E4B 		.string	"_ZNKSt15__new_allocatorIcE8max_sizeEv"
 20754      53743135 
 20754      5F5F6E65 
 20754      775F616C 
 20754      6C6F6361 
 20755              	.LASF227:
 20756 3ed3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EPKcmRKS3_"
 20756      74375F5F 
 20756      63787831 
 20756      31313262 
 20756      61736963 
 20757              	.LASF45:
 20758 3f15 5F6D6F64 		.string	"_mode"
 20758      6500
 20759              	.LASF835:
 20760 3f1b 6F706572 		.string	"operator delete"
 20760      61746F72 
 20760      2064656C 
 20760      65746500 
 20761              	.LASF66:
 20762 3f2b 7E657863 		.string	"~exception_ptr"
 20762      65707469 
 20762      6F6E5F70 
 20762      747200
GAS LISTING linobj/Ch02_03.s 			page 521


 20763              	.LASF770:
 20764 3f3a 6374696D 		.string	"ctime"
 20764      6500
 20765              	.LASF599:
 20766 3f40 5F5F6E6F 		.string	"__normal_iterator<char const*, std::__cxx11::basic_string<char, std::char_traits<char>, s
 20766      726D616C 
 20766      5F697465 
 20766      7261746F 
 20766      723C6368 
 20767              	.LASF440:
 20768 3fb1 6F737472 		.string	"ostream"
 20768      65616D00 
 20769              	.LASF630:
 20770 3fb9 64656369 		.string	"decimal_point"
 20770      6D616C5F 
 20770      706F696E 
 20770      7400
 20771              	.LASF497:
 20772 3fc7 76667773 		.string	"vfwscanf"
 20772      63616E66 
 20772      00
 20773              	.LASF749:
 20774 3fd0 67657463 		.string	"getchar"
 20774      68617200 
 20775              	.LASF40:
 20776 3fd8 5F636F64 		.string	"_codecvt"
 20776      65637674 
 20776      00
 20777              	.LASF136:
 20778 3fe1 5F5A4E53 		.string	"_ZNSt21piecewise_construct_tC4Ev"
 20778      74323170 
 20778      69656365 
 20778      77697365 
 20778      5F636F6E 
 20779              	.LASF838:
 20780 4002 5F5A3132 		.string	"_Z12MulI32b_IavxP6XmmValPKS_S2_"
 20780      4D756C49 
 20780      3332625F 
 20780      49617678 
 20780      5036586D 
 20781              	.LASF12:
 20782 4022 5F5F636F 		.string	"__count"
 20782      756E7400 
 20783              	.LASF504:
 20784 402a 5F5F6973 		.string	"__isoc23_vwscanf"
 20784      6F633233 
 20784      5F767773 
 20784      63616E66 
 20784      00
 20785              	.LASF553:
 20786 403b 5F5F676E 		.string	"__gnu_cxx"
 20786      755F6378 
 20786      7800
 20787              	.LASF723:
 20788 4045 5F5F6973 		.string	"__isoc23_strtoull"
 20788      6F633233 
 20788      5F737472 
GAS LISTING linobj/Ch02_03.s 			page 522


 20788      746F756C 
 20788      6C00
 20789              	.LASF830:
 20790 4057 5F5A4E36 		.string	"_ZN6XmmVal11ToStringX64B5cxx11Ev"
 20790      586D6D56 
 20790      616C3131 
 20790      546F5374 
 20790      72696E67 
 20791              	.LASF709:
 20792 4078 7372616E 		.string	"srand"
 20792      6400
 20793              	.LASF623:
 20794 407e 626F6F6C 		.string	"bool"
 20794      00
 20795              	.LASF781:
 20796 4083 75696E74 		.string	"uint_least8_t"
 20796      5F6C6561 
 20796      7374385F 
 20796      7400
 20797              	.LASF736:
 20798 4091 66656F66 		.string	"feof"
 20798      00
 20799              	.LASF459:
 20800 4096 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv"
 20800      53743962 
 20800      61736963 
 20800      5F696F73 
 20800      49635374 
 20801              	.LASF777:
 20802 40c6 696E745F 		.string	"int_least8_t"
 20802      6C656173 
 20802      74385F74 
 20802      00
 20803              	.LASF360:
 20804 40d3 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEPKcmm"
 20804      5374375F 
 20804      5F637878 
 20804      31313132 
 20804      62617369 
 20805              	.LASF475:
 20806 4115 62746F77 		.string	"btowc"
 20806      6300
 20807              	.LASF706:
 20808 411b 71736F72 		.string	"qsort"
 20808      7400
 20809              	.LASF285:
 20810 4121 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE2atEm"
 20810      74375F5F 
 20810      63787831 
 20810      31313262 
 20810      61736963 
 20811              	.LASF573:
 20812 415c 5F5F6E6F 		.string	"__normal_iterator<char*, std::__cxx11::basic_string<char, std::char_traits<char>, std::al
 20812      726D616C 
 20812      5F697465 
 20812      7261746F 
 20812      723C6368 
GAS LISTING linobj/Ch02_03.s 			page 523


 20813              	.LASF795:
 20814 41c7 696E746D 		.string	"intmax_t"
 20814      61785F74 
 20814      00
 20815              	.LASF616:
 20816 41d0 6C6F6E67 		.string	"long double"
 20816      20646F75 
 20816      626C6500 
 20817              	.LASF882:
 20818 41dc 586D6D56 		.string	"XmmVal"
 20818      616C00
 20819              	.LASF604:
 20820 41e3 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 20820      395F5F67 
 20820      6E755F63 
 20820      78783137 
 20820      5F5F6E6F 
 20821              	.LASF265:
 20822 4242 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6lengthEv"
 20822      5374375F 
 20822      5F637878 
 20822      31313132 
 20822      62617369 
 20823              	.LASF490:
 20824 4282 70757477 		.string	"putwc"
 20824      6300
 20825              	.LASF322:
 20826 4288 5F5F636F 		.string	"__const_iterator"
 20826      6E73745F 
 20826      69746572 
 20826      61746F72 
 20826      00
 20827              	.LASF274:
 20828 4299 72657365 		.string	"reserve"
 20828      72766500 
 20829              	.LASF206:
 20830 42a1 5F535F63 		.string	"_S_copy_chars"
 20830      6F70795F 
 20830      63686172 
 20830      7300
 20831              	.LASF822:
 20832 42af 5F5A4E36 		.string	"_ZN6XmmVal11ToStringU64B5cxx11Ev"
 20832      586D6D56 
 20832      616C3131 
 20832      546F5374 
 20832      72696E67 
 20833              	.LASF606:
 20834 42d0 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20834      5F5F676E 
 20834      755F6378 
 20834      7831375F 
 20834      5F6E6F72 
 20835              	.LASF47:
 20836 432e 46494C45 		.string	"FILE"
 20836      00
 20837              	.LASF405:
 20838 4333 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE4sizeEv"
GAS LISTING linobj/Ch02_03.s 			page 524


 20838      53743136 
 20838      696E6974 
 20838      69616C69 
 20838      7A65725F 
 20839              	.LASF375:
 20840 4356 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12find_last_ofERKS4_m"
 20840      5374375F 
 20840      5F637878 
 20840      31313132 
 20840      62617369 
 20841              	.LASF363:
 20842 43a2 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findEcm"
 20842      5374375F 
 20842      5F637878 
 20842      31313132 
 20842      62617369 
 20843              	.LASF242:
 20844 43e1 62656769 		.string	"begin"
 20844      6E00
 20845              	.LASF306:
 20846 43e7 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignERKS4_"
 20846      74375F5F 
 20846      63787831 
 20846      31313262 
 20846      61736963 
 20847              	.LASF605:
 20848 442a 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 20848      5F5F676E 
 20848      755F6378 
 20848      7831375F 
 20848      5F6E6F72 
 20849              	.LASF687:
 20850 4488 6C646976 		.string	"ldiv_t"
 20850      5F7400
 20851              	.LASF515:
 20852 448f 746D5F6D 		.string	"tm_mday"
 20852      64617900 
 20853              	.LASF369:
 20854 4497 66696E64 		.string	"find_first_of"
 20854      5F666972 
 20854      73745F6F 
 20854      6600
 20855              	.LASF125:
 20856 44a5 5F4D5F6D 		.string	"_M_max_size"
 20856      61785F73 
 20856      697A6500 
 20857              	.LASF700:
 20858 44b1 62736561 		.string	"bsearch"
 20858      72636800 
 20859              	.LASF456:
 20860 44b9 62617369 		.string	"basic_ios<char, std::char_traits<char> >"
 20860      635F696F 
 20860      733C6368 
 20860      61722C20 
 20860      7374643A 
 20861              	.LASF590:
 20862 44e2 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
GAS LISTING linobj/Ch02_03.s 			page 525


 20862      395F5F67 
 20862      6E755F63 
 20862      78783137 
 20862      5F5F6E6F 
 20863              	.LASF307:
 20864 4540 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6assignEOS4_"
 20864      74375F5F 
 20864      63787831 
 20864      31313262 
 20864      61736963 
 20865              	.LASF134:
 20866 4582 5F5A4E53 		.string	"_ZNSaIcED4Ev"
 20866      61496345 
 20866      44344576 
 20866      00
 20867              	.LASF214:
 20868 458f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_S_compareEmm"
 20868      74375F5F 
 20868      63787831 
 20868      31313262 
 20868      61736963 
 20869              	.LASF324:
 20870 45d4 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEmm"
 20870      74375F5F 
 20870      63787831 
 20870      31313262 
 20870      61736963 
 20871              	.LASF263:
 20872 4613 73697A65 		.string	"size"
 20872      00
 20873              	.LASF75:
 20874 4618 5F494F5F 		.string	"_IO_FILE"
 20874      46494C45 
 20874      00
 20875              	.LASF82:
 20876 4621 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7compareEPKcS2_m"
 20876      74313163 
 20876      6861725F 
 20876      74726169 
 20876      74734963 
 20877              	.LASF559:
 20878 4647 5F5A5374 		.string	"_ZStorSt12_Ios_IostateS_"
 20878      6F725374 
 20878      31325F49 
 20878      6F735F49 
 20878      6F737461 
 20879              	.LASF680:
 20880 4660 636C6F63 		.string	"clock_t"
 20880      6B5F7400 
 20881              	.LASF472:
 20882 4668 73657477 		.string	"setw"
 20882      00
 20883              	.LASF68:
 20884 466d 73776170 		.string	"swap"
 20884      00
 20885              	.LASF5:
 20886 4672 7265675F 		.string	"reg_save_area"
GAS LISTING linobj/Ch02_03.s 			page 526


 20886      73617665 
 20886      5F617265 
 20886      6100
 20887              	.LASF615:
 20888 4680 77637374 		.string	"wcstold"
 20888      6F6C6400 
 20889              	.LASF649:
 20890 4688 696E745F 		.string	"int_p_sep_by_space"
 20890      705F7365 
 20890      705F6279 
 20890      5F737061 
 20890      636500
 20891              	.LASF81:
 20892 469b 6C656E67 		.string	"length"
 20892      746800
 20893              	.LASF774:
 20894 46a2 75696E74 		.string	"uint16_t"
 20894      31365F74 
 20894      00
 20895              	.LASF617:
 20896 46ab 77637374 		.string	"wcstoll"
 20896      6F6C6C00 
 20897              	.LASF222:
 20898 46b3 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4Ev"
 20898      74375F5F 
 20898      63787831 
 20898      31313262 
 20898      61736963 
 20899              	.LASF359:
 20900 46ed 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13get_allocatorEv"
 20900      5374375F 
 20900      5F637878 
 20900      31313132 
 20900      62617369 
 20901              	.LASF204:
 20902 4735 5F535F61 		.string	"_S_assign"
 20902      73736967 
 20902      6E00
 20903              	.LASF877:
 20904 473f 5F496F73 		.string	"_Ios_Iostate"
 20904      5F496F73 
 20904      74617465 
 20904      00
 20905              	.LASF351:
 20906 474c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_appendEPKcm"
 20906      74375F5F 
 20906      63787831 
 20906      31313262 
 20906      61736963 
 20907              	.LASF61:
 20908 4791 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EDn"
 20908      7431355F 
 20908      5F657863 
 20908      65707469 
 20908      6F6E5F70 
 20909              	.LASF73:
 20910 47bc 5F5A5374 		.string	"_ZSt17rethrow_exceptionNSt15__exception_ptr13exception_ptrE"
GAS LISTING linobj/Ch02_03.s 			page 527


 20910      31377265 
 20910      7468726F 
 20910      775F6578 
 20910      63657074 
 20911              	.LASF754:
 20912 47f8 73657462 		.string	"setbuf"
 20912      756600
 20913              	.LASF231:
 20914 47ff 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ESt16initializer_listIcERKS3_"
 20914      74375F5F 
 20914      63787831 
 20914      31313262 
 20914      61736963 
 20915              	.LASF850:
 20916 4854 5F5A4E53 		.string	"_ZNSt15__new_allocatorIcED2Ev"
 20916      7431355F 
 20916      5F6E6577 
 20916      5F616C6C 
 20916      6F636174 
 20917              	.LASF527:
 20918 4872 77637372 		.string	"wcsrtombs"
 20918      746F6D62 
 20918      7300
 20919              	.LASF667:
 20920 487c 5F5F696E 		.string	"__int_least16_t"
 20920      745F6C65 
 20920      61737431 
 20920      365F7400 
 20921              	.LASF643:
 20922 488c 705F7365 		.string	"p_sep_by_space"
 20922      705F6279 
 20922      5F737061 
 20922      636500
 20923              	.LASF562:
 20924 489b 5F535F70 		.string	"_S_propagate_on_move_assign"
 20924      726F7061 
 20924      67617465 
 20924      5F6F6E5F 
 20924      6D6F7665 
 20925              	.LASF164:
 20926 48b7 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEPc"
 20926      74375F5F 
 20926      63787831 
 20926      31313262 
 20926      61736963 
 20927              	.LASF184:
 20928 48f8 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_M_constructEmc"
 20928      74375F5F 
 20928      63787831 
 20928      31313262 
 20928      61736963 
 20929              	.LASF597:
 20930 493f 5F497465 		.string	"_Iterator"
 20930      7261746F 
 20930      7200
 20931              	.LASF235:
 20932 4949 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED4Ev"
GAS LISTING linobj/Ch02_03.s 			page 528


 20932      74375F5F 
 20932      63787831 
 20932      31313262 
 20932      61736963 
 20933              	.LASF43:
 20934 4983 5F667265 		.string	"_freeres_buf"
 20934      65726573 
 20934      5F627566 
 20934      00
 20935              	.LASF557:
 20936 4990 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE17_S_select_on_copyERKS1_"
 20936      5F5F676E 
 20936      755F6378 
 20936      7831345F 
 20936      5F616C6C 
 20937              	.LASF344:
 20938 49cf 5F4D5F72 		.string	"_M_replace_aux"
 20938      65706C61 
 20938      63655F61 
 20938      757800
 20939              	.LASF131:
 20940 49de 5F5A4E53 		.string	"_ZNSaIcEC4ERKS_"
 20940      61496345 
 20940      43344552 
 20940      4B535F00 
 20941              	.LASF78:
 20942 49ee 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2eqERKcS2_"
 20942      74313163 
 20942      6861725F 
 20942      74726169 
 20942      74734963 
 20943              	.LASF243:
 20944 4a0e 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5beginEv"
 20944      74375F5F 
 20944      63787831 
 20944      31313262 
 20944      61736963 
 20945              	.LASF145:
 20946 4a4c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIcEE10deallocateERS0_Pcm"
 20946      74313661 
 20946      6C6C6F63 
 20946      61746F72 
 20946      5F747261 
 20947              	.LASF224:
 20948 4a7f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_mRKS3_"
 20948      74375F5F 
 20948      63787831 
 20948      31313262 
 20948      61736963 
 20949              	.LASF581:
 20950 4ac3 6F706572 		.string	"operator++"
 20950      61746F72 
 20950      2B2B00
 20951              	.LASF220:
 20952 4ace 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE8_M_eraseEmm"
 20952      74375F5F 
 20952      63787831 
GAS LISTING linobj/Ch02_03.s 			page 529


 20952      31313262 
 20952      61736963 
 20953              	.LASF488:
 20954 4b10 6D627369 		.string	"mbsinit"
 20954      6E697400 
 20955              	.LASF493:
 20956 4b18 73777363 		.string	"swscanf"
 20956      616E6600 
 20957              	.LASF280:
 20958 4b20 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5emptyEv"
 20958      5374375F 
 20958      5F637878 
 20958      31313132 
 20958      62617369 
 20959              	.LASF370:
 20960 4b5f 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13find_first_ofERKS4_m"
 20960      5374375F 
 20960      5F637878 
 20960      31313132 
 20960      62617369 
 20961              	.LASF840:
 20962 4bac 5F5A3132 		.string	"_Z12MulI32a_IavxP6XmmValPKS_S2_"
 20962      4D756C49 
 20962      3332615F 
 20962      49617678 
 20962      5036586D 
 20963              	.LASF256:
 20964 4bcc 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6cbeginEv"
 20964      5374375F 
 20964      5F637878 
 20964      31313132 
 20964      62617369 
 20965              	.LASF533:
 20966 4c0c 77637374 		.string	"wcstok"
 20966      6F6B00
 20967              	.LASF872:
 20968 4c13 5F5F6378 		.string	"__cxx11"
 20968      78313100 
 20969              	.LASF778:
 20970 4c1b 696E745F 		.string	"int_least16_t"
 20970      6C656173 
 20970      7431365F 
 20970      7400
 20971              	.LASF271:
 20972 4c29 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13shrink_to_fitEv"
 20972      74375F5F 
 20972      63787831 
 20972      31313262 
 20972      61736963 
 20973              	.LASF684:
 20974 4c70 71756F74 		.string	"quot"
 20974      00
 20975              	.LASF17:
 20976 4c75 5F5F4649 		.string	"__FILE"
 20976      4C4500
 20977              	.LASF592:
 20978 4c7c 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEm
GAS LISTING linobj/Ch02_03.s 			page 530


 20978      5F5F676E 
 20978      755F6378 
 20978      7831375F 
 20978      5F6E6F72 
 20979              	.LASF255:
 20980 4cd9 63626567 		.string	"cbegin"
 20980      696E00
 20981              	.LASF388:
 20982 4ce0 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16find_last_not_ofEcm"
 20982      5374375F 
 20982      5F637878 
 20982      31313132 
 20982      62617369 
 20983              	.LASF303:
 20984 4d2c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendESt16initializer_listIcE"
 20984      74375F5F 
 20984      63787831 
 20984      31313262 
 20984      61736963 
 20985              	.LASF818:
 20986 4d81 5F5A4E36 		.string	"_ZN6XmmVal11ToStringU16B5cxx11Ev"
 20986      586D6D56 
 20986      616C3131 
 20986      546F5374 
 20986      72696E67 
 20987              	.LASF341:
 20988 4da2 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 20988      74375F5F 
 20988      63787831 
 20988      31313262 
 20988      61736963 
 20989              	.LASF28:
 20990 4e1a 5F494F5F 		.string	"_IO_backup_base"
 20990      6261636B 
 20990      75705F62 
 20990      61736500 
 20991              	.LASF654:
 20992 4e2a 7365746C 		.string	"setlocale"
 20992      6F63616C 
 20992      6500
 20993              	.LASF37:
 20994 4e34 5F73686F 		.string	"_shortbuf"
 20994      72746275 
 20994      6600
 20995              	.LASF864:
 20996 4e3e 5F5F7769 		.string	"__wide"
 20996      646500
 20997              	.LASF820:
 20998 4e45 5F5A4E36 		.string	"_ZN6XmmVal11ToStringU32B5cxx11Ev"
 20998      586D6D56 
 20998      616C3131 
 20998      546F5374 
 20998      72696E67 
 20999              	.LASF317:
 21000 4e66 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6insertEmRKS4_mm"
 21000      74375F5F 
 21000      63787831 
GAS LISTING linobj/Ch02_03.s 			page 531


 21000      31313262 
 21000      61736963 
 21001              	.LASF468:
 21002 4eac 5F5A5374 		.string	"_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc"
 21002      6C734953 
 21002      74313163 
 21002      6861725F 
 21002      74726169 
 21003              	.LASF483:
 21004 4ee4 66777363 		.string	"fwscanf"
 21004      616E6600 
 21005              	.LASF9:
 21006 4eec 77696E74 		.string	"wint_t"
 21006      5F7400
 21007              	.LASF413:
 21008 4ef3 5F535F6C 		.string	"_S_local_capacity"
 21008      6F63616C 
 21008      5F636170 
 21008      61636974 
 21008      7900
 21009              	.LASF133:
 21010 4f05 7E616C6C 		.string	"~allocator"
 21010      6F636174 
 21010      6F7200
 21011              	.LASF379:
 21012 4f10 66696E64 		.string	"find_first_not_of"
 21012      5F666972 
 21012      73745F6E 
 21012      6F745F6F 
 21012      6600
 21013              	.LASF866:
 21014 4f22 5F5F696E 		.string	"__int128"
 21014      74313238 
 21014      00
 21015              	.LASF768:
 21016 4f2b 74696D65 		.string	"time"
 21016      00
 21017              	.LASF425:
 21018 4f30 696F735F 		.string	"ios_base"
 21018      62617365 
 21018      00
 21019              	.LASF676:
 21020 4f39 5F5F6F66 		.string	"__off64_t"
 21020      6636345F 
 21020      7400
 21021              	.LASF335:
 21022 4f43 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 21022      74375F5F 
 21022      63787831 
 21022      31313262 
 21022      61736963 
 21023              	.LASF282:
 21024 4fb1 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEixEm"
 21024      5374375F 
 21024      5F637878 
 21024      31313132 
 21024      62617369 
GAS LISTING linobj/Ch02_03.s 			page 532


 21025              	.LASF857:
 21026 4fec 5F5A4E53 		.string	"_ZNSaIcEC2Ev"
 21026      61496345 
 21026      43324576 
 21026      00
 21027              	.LASF400:
 21028 4ff9 5F4D5F61 		.string	"_M_array"
 21028      72726179 
 21028      00
 21029              	.LASF742:
 21030 5002 666F7065 		.string	"fopen"
 21030      6E00
 21031              	.LASF196:
 21032 5008 5F4D5F6C 		.string	"_M_limit"
 21032      696D6974 
 21032      00
 21033              	.LASF240:
 21034 5011 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEaSEOS4_"
 21034      74375F5F 
 21034      63787831 
 21034      31313262 
 21034      61736963 
 21035              	.LASF129:
 21036 504e 616C6C6F 		.string	"allocator"
 21036      6361746F 
 21036      7200
 21037              	.LASF763:
 21038 5058 77637472 		.string	"wctrans"
 21038      616E7300 
 21039              	.LASF631:
 21040 5060 74686F75 		.string	"thousands_sep"
 21040      73616E64 
 21040      735F7365 
 21040      7000
 21041              	.LASF169:
 21042 506e 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_local_dataEv"
 21042      74375F5F 
 21042      63787831 
 21042      31313262 
 21042      61736963 
 21043              	.LASF137:
 21044 50b5 5F5F7377 		.string	"__swappable_details"
 21044      61707061 
 21044      626C655F 
 21044      64657461 
 21044      696C7300 
 21045              	.LASF703:
 21046 50c9 6D626C65 		.string	"mblen"
 21046      6E00
 21047              	.LASF555:
 21048 50cf 5F5F616C 		.string	"__alloc_traits<std::allocator<char>, char>"
 21048      6C6F635F 
 21048      74726169 
 21048      74733C73 
 21048      74643A3A 
 21049              	.LASF205:
 21050 50fa 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_S_assignEPcmc"
GAS LISTING linobj/Ch02_03.s 			page 533


 21050      74375F5F 
 21050      63787831 
 21050      31313262 
 21050      61736963 
 21051              	.LASF469:
 21052 513f 6F706572 		.string	"operator<< <char, std::char_traits<char>, std::allocator<char> >"
 21052      61746F72 
 21052      3C3C203C 
 21052      63686172 
 21052      2C207374 
 21053              	.LASF753:
 21054 5180 72657769 		.string	"rewind"
 21054      6E6400
 21055              	.LASF174:
 21056 5187 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_M_set_lengthEm"
 21056      74375F5F 
 21056      63787831 
 21056      31313262 
 21056      61736963 
 21057              	.LASF26:
 21058 51ce 5F494F5F 		.string	"_IO_buf_end"
 21058      6275665F 
 21058      656E6400 
 21059              	.LASF393:
 21060 51da 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmRKS4_mm"
 21060      5374375F 
 21060      5F637878 
 21060      31313132 
 21060      62617369 
 21061              	.LASF179:
 21062 5223 5F4D5F64 		.string	"_M_dispose"
 21062      6973706F 
 21062      736500
 21063              	.LASF225:
 21064 522e 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_mm"
 21064      74375F5F 
 21064      63787831 
 21064      31313262 
 21064      61736963 
 21065              	.LASF523:
 21066 526e 7763736C 		.string	"wcslen"
 21066      656E00
 21067              	.LASF421:
 21068 5275 696F7374 		.string	"iostate"
 21068      61746500 
 21069              	.LASF325:
 21070 527d 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iterato
 21070      74375F5F 
 21070      63787831 
 21070      31313262 
 21070      61736963 
 21071              	.LASF368:
 21072 52e1 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindEcm"
 21072      5374375F 
 21072      5F637878 
 21072      31313132 
 21072      62617369 
GAS LISTING linobj/Ch02_03.s 			page 534


 21073              	.LASF816:
 21074 5321 5F5A4E36 		.string	"_ZN6XmmVal10ToStringU8B5cxx11Ev"
 21074      586D6D56 
 21074      616C3130 
 21074      546F5374 
 21074      72696E67 
 21075              	.LASF865:
 21076 5341 5F5F6F6C 		.string	"__old"
 21076      6400
 21077              	.LASF432:
 21078 5347 5F4D5F69 		.string	"_M_insert<long unsigned int>"
 21078      6E736572 
 21078      743C6C6F 
 21078      6E672075 
 21078      6E736967 
 21079              	.LASF128:
 21080 5364 616C6C6F 		.string	"allocator<char>"
 21080      6361746F 
 21080      723C6368 
 21080      61723E00 
 21081              	.LASF721:
 21082 5374 5F5F6973 		.string	"__isoc23_strtoll"
 21082      6F633233 
 21082      5F737472 
 21082      746F6C6C 
 21082      00
 21083              	.LASF710:
 21084 5385 73747274 		.string	"strtod"
 21084      6F6400
 21085              	.LASF95:
 21086 538c 746F5F69 		.string	"to_int_type"
 21086      6E745F74 
 21086      79706500 
 21087              	.LASF724:
 21088 5398 73747274 		.string	"strtof"
 21088      6F6600
 21089              	.LASF789:
 21090 539f 75696E74 		.string	"uint_fast8_t"
 21090      5F666173 
 21090      74385F74 
 21090      00
 21091              	.LASF398:
 21092 53ac 5F416C6C 		.string	"_Alloc"
 21092      6F6300
 21093              	.LASF92:
 21094 53b3 746F5F63 		.string	"to_char_type"
 21094      6861725F 
 21094      74797065 
 21094      00
 21095              	.LASF711:
 21096 53c0 73747274 		.string	"strtol"
 21096      6F6C00
 21097              	.LASF138:
 21098 53c7 5F5F6465 		.string	"__debug"
 21098      62756700 
 21099              	.LASF641:
 21100 53cf 66726163 		.string	"frac_digits"
GAS LISTING linobj/Ch02_03.s 			page 535


 21100      5F646967 
 21100      69747300 
 21101              	.LASF466:
 21102 53db 5F5A5374 		.string	"_ZStlsIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_St5_Setw"
 21102      6C734963 
 21102      53743131 
 21102      63686172 
 21102      5F747261 
 21103              	.LASF737:
 21104 541b 66657272 		.string	"ferror"
 21104      6F7200
 21105              	.LASF634:
 21106 5422 63757272 		.string	"currency_symbol"
 21106      656E6379 
 21106      5F73796D 
 21106      626F6C00 
 21107              	.LASF626:
 21108 5432 73686F72 		.string	"short int"
 21108      7420696E 
 21108      7400
 21109              	.LASF154:
 21110 543c 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC4EPcOS3_"
 21110      74375F5F 
 21110      63787831 
 21110      31313262 
 21110      61736963 
 21111              	.LASF163:
 21112 5489 5F4D5F64 		.string	"_M_data"
 21112      61746100 
 21113              	.LASF467:
 21114 5491 6F706572 		.string	"operator<< <std::char_traits<char> >"
 21114      61746F72 
 21114      3C3C203C 
 21114      7374643A 
 21114      3A636861 
 21115              	.LASF83:
 21116 54b6 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6lengthEPKc"
 21116      74313163 
 21116      6861725F 
 21116      74726169 
 21116      74734963 
 21117              	.LASF776:
 21118 54d7 75696E74 		.string	"uint64_t"
 21118      36345F74 
 21118      00
 21119              	.LASF511:
 21120 54e0 77637366 		.string	"wcsftime"
 21120      74696D65 
 21120      00
 21121              	.LASF210:
 21122 54e9 636F6E73 		.string	"const_iterator"
 21122      745F6974 
 21122      65726174 
 21122      6F7200
 21123              	.LASF569:
 21124 54f8 5F535F6E 		.string	"_S_nothrow_move"
 21124      6F746872 
GAS LISTING linobj/Ch02_03.s 			page 536


 21124      6F775F6D 
 21124      6F766500 
 21125              	.LASF728:
 21126 5508 5F5F7374 		.string	"__state"
 21126      61746500 
 21127              	.LASF261:
 21128 5510 6372656E 		.string	"crend"
 21128      6400
 21129              	.LASF745:
 21130 5516 66736565 		.string	"fseek"
 21130      6B00
 21131              	.LASF564:
 21132 551c 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE27_S_propagate_on_move_assignEv"
 21132      5F5F676E 
 21132      755F6378 
 21132      7831345F 
 21132      5F616C6C 
 21133              	.LASF695:
 21134 5561 61746578 		.string	"atexit"
 21134      697400
 21135              	.LASF326:
 21136 5568 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5eraseEN9__gnu_cxx17__normal_iterato
 21136      74375F5F 
 21136      63787831 
 21136      31313262 
 21136      61736963 
 21137              	.LASF212:
 21138 55cf 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE13_S_copy_charsEPcPKcS7_"
 21138      74375F5F 
 21138      63787831 
 21138      31313262 
 21138      61736963 
 21139              	.LASF253:
 21140 561d 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4rendEv"
 21140      74375F5F 
 21140      63787831 
 21140      31313262 
 21140      61736963 
 21141              	.LASF601:
 21142 565a 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEE
 21142      5F5F676E 
 21142      755F6378 
 21142      7831375F 
 21142      5F6E6F72 
 21143              	.LASF671:
 21144 56b8 5F5F696E 		.string	"__int_least64_t"
 21144      745F6C65 
 21144      61737436 
 21144      345F7400 
 21145              	.LASF292:
 21146 56c8 6F706572 		.string	"operator+="
 21146      61746F72 
 21146      2B3D00
 21147              	.LASF36:
 21148 56d3 5F767461 		.string	"_vtable_offset"
 21148      626C655F 
 21148      6F666673 
GAS LISTING linobj/Ch02_03.s 			page 537


 21148      657400
 21149              	.LASF290:
 21150 56e2 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4backEv"
 21150      74375F5F 
 21150      63787831 
 21150      31313262 
 21150      61736963 
 21151              	.LASF199:
 21152 571f 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE11_M_disjunctEPKc"
 21152      5374375F 
 21152      5F637878 
 21152      31313132 
 21152      62617369 
 21153              	.LASF331:
 21154 5767 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEmmRKS4_mm"
 21154      74375F5F 
 21154      63787831 
 21154      31313262 
 21154      61736963 
 21155              	.LASF674:
 21156 57af 5F5F7569 		.string	"__uintmax_t"
 21156      6E746D61 
 21156      785F7400 
 21157              	.LASF229:
 21158 57bb 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EmcRKS3_"
 21158      74375F5F 
 21158      63787831 
 21158      31313262 
 21158      61736963 
 21159              	.LASF614:
 21160 57fb 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21160      395F5F67 
 21160      6E755F63 
 21160      78783137 
 21160      5F5F6E6F 
 21161              	.LASF144:
 21162 585d 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignERcRKc"
 21162      74313163 
 21162      6861725F 
 21162      74726169 
 21162      74734963 
 21163              	.LASF221:
 21164 5880 62617369 		.string	"basic_string"
 21164      635F7374 
 21164      72696E67 
 21164      00
 21165              	.LASF327:
 21166 588d 706F705F 		.string	"pop_back"
 21166      6261636B 
 21166      00
 21167              	.LASF192:
 21168 5896 5F4D5F63 		.string	"_M_check"
 21168      6865636B 
 21168      00
 21169              	.LASF506:
 21170 589f 77637363 		.string	"wcscat"
 21170      617400
GAS LISTING linobj/Ch02_03.s 			page 538


 21171              	.LASF464:
 21172 58a6 73747265 		.string	"streamsize"
 21172      616D7369 
 21172      7A6500
 21173              	.LASF570:
 21174 58b1 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE15_S_nothrow_moveEv"
 21174      5F5F676E 
 21174      755F6378 
 21174      7831345F 
 21174      5F616C6C 
 21175              	.LASF756:
 21176 58ea 746D7066 		.string	"tmpfile"
 21176      696C6500 
 21177              	.LASF423:
 21178 58f2 5F5A4E53 		.string	"_ZNSt8ios_base5widthEl"
 21178      7438696F 
 21178      735F6261 
 21178      73653577 
 21178      69647468 
 21179              	.LASF682:
 21180 5909 31315F5F 		.string	"11__mbstate_t"
 21180      6D627374 
 21180      6174655F 
 21180      7400
 21181              	.LASF584:
 21182 5917 6F706572 		.string	"operator--"
 21182      61746F72 
 21182      2D2D00
 21183              	.LASF813:
 21184 5922 546F5374 		.string	"ToStringI64"
 21184      72696E67 
 21184      49363400 
 21185              	.LASF191:
 21186 592e 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE17_M_use_local_dataEv"
 21186      74375F5F 
 21186      63787831 
 21186      31313262 
 21186      61736963 
 21187              	.LASF588:
 21188 5979 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEp
 21188      5F5F676E 
 21188      755F6378 
 21188      7831375F 
 21188      5F6E6F72 
 21189              	.LASF652:
 21190 59d6 696E745F 		.string	"int_p_sign_posn"
 21190      705F7369 
 21190      676E5F70 
 21190      6F736E00 
 21191              	.LASF625:
 21192 59e6 7369676E 		.string	"signed char"
 21192      65642063 
 21192      68617200 
 21193              	.LASF883:
 21194 59f2 5F556E77 		.string	"_Unwind_Resume"
 21194      696E645F 
 21194      52657375 
GAS LISTING linobj/Ch02_03.s 			page 539


 21194      6D6500
 21195              	.LASF522:
 21196 5a01 746D5F7A 		.string	"tm_zone"
 21196      6F6E6500 
 21197              	.LASF663:
 21198 5a09 5F5F696E 		.string	"__int64_t"
 21198      7436345F 
 21198      7400
 21199              	.LASF758:
 21200 5a13 756E6765 		.string	"ungetc"
 21200      746300
 21201              	.LASF823:
 21202 5a1a 546F5374 		.string	"ToStringX8"
 21202      72696E67 
 21202      583800
 21203              	.LASF166:
 21204 5a25 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE9_M_lengthEm"
 21204      74375F5F 
 21204      63787831 
 21204      31313262 
 21204      61736963 
 21205              	.LASF299:
 21206 5a67 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendERKS4_mm"
 21206      74375F5F 
 21206      63787831 
 21206      31313262 
 21206      61736963 
 21207              	.LASF854:
 21208 5aac 5F5F7374 		.string	"__str"
 21208      7200
 21209              	.LASF323:
 21210 5ab2 65726173 		.string	"erase"
 21210      6500
 21211              	.LASF503:
 21212 5ab8 76777363 		.string	"vwscanf"
 21212      616E6600 
 21213              	.LASF418:
 21214 5ac0 5F535F69 		.string	"_S_ios_iostate_end"
 21214      6F735F69 
 21214      6F737461 
 21214      74655F65 
 21214      6E6400
 21215              	.LASF505:
 21216 5ad3 77637274 		.string	"wcrtomb"
 21216      6F6D6200 
 21217              	.LASF629:
 21218 5adb 6C636F6E 		.string	"lconv"
 21218      7600
 21219              	.LASF260:
 21220 5ae1 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7crbeginEv"
 21220      5374375F 
 21220      5F637878 
 21220      31313132 
 21220      62617369 
 21221              	.LASF230:
 21222 5b22 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4EOS4_"
 21222      74375F5F 
GAS LISTING linobj/Ch02_03.s 			page 540


 21222      63787831 
 21222      31313262 
 21222      61736963 
 21223              	.LASF20:
 21224 5b5f 5F494F5F 		.string	"_IO_read_end"
 21224      72656164 
 21224      5F656E64 
 21224      00
 21225              	.LASF704:
 21226 5b6c 6D627374 		.string	"mbstowcs"
 21226      6F776373 
 21226      00
 21227              	.LASF365:
 21228 5b75 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE5rfindERKS4_m"
 21228      5374375F 
 21228      5F637878 
 21228      31313132 
 21228      62617369 
 21229              	.LASF524:
 21230 5bb9 7763736E 		.string	"wcsncat"
 21230      63617400 
 21231              	.LASF852:
 21232 5bc1 5F5F6F73 		.string	"__os"
 21232      00
 21233              	.LASF60:
 21234 5bc6 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4ERKS0_"
 21234      7431355F 
 21234      5F657863 
 21234      65707469 
 21234      6F6E5F70 
 21235              	.LASF875:
 21236 5bf4 6E706F73 		.string	"npos"
 21236      00
 21237              	.LASF234:
 21238 5bf9 7E626173 		.string	"~basic_string"
 21238      69635F73 
 21238      7472696E 
 21238      6700
 21239              	.LASF815:
 21240 5c07 546F5374 		.string	"ToStringU8"
 21240      72696E67 
 21240      553800
 21241              	.LASF563:
 21242 5c12 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIcEcE27_S_propagate_on_copy_assignEv"
 21242      5F5F676E 
 21242      755F6378 
 21242      7831345F 
 21242      5F616C6C 
 21243              	.LASF775:
 21244 5c57 75696E74 		.string	"uint32_t"
 21244      33325F74 
 21244      00
 21245              	.LASF567:
 21246 5c60 5F535F61 		.string	"_S_always_equal"
 21246      6C776179 
 21246      735F6571 
 21246      75616C00 
GAS LISTING linobj/Ch02_03.s 			page 541


 21247              	.LASF653:
 21248 5c70 696E745F 		.string	"int_n_sign_posn"
 21248      6E5F7369 
 21248      676E5F70 
 21248      6F736E00 
 21249              	.LASF591:
 21250 5c80 6F706572 		.string	"operator-="
 21250      61746F72 
 21250      2D3D00
 21251              	.LASF579:
 21252 5c8b 6F706572 		.string	"operator->"
 21252      61746F72 
 21252      2D3E00
 21253              	.LASF729:
 21254 5c96 5F5F6670 		.string	"__fpos_t"
 21254      6F735F74 
 21254      00
 21255              	.LASF109:
 21256 5c9f 7E5F5F6E 		.string	"~__new_allocator"
 21256      65775F61 
 21256      6C6C6F63 
 21256      61746F72 
 21256      00
 21257              	.LASF858:
 21258 5cb0 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEED2Ev"
 21258      74375F5F 
 21258      63787831 
 21258      31313262 
 21258      61736963 
 21259              	.LASF613:
 21260 5cea 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21260      395F5F67 
 21260      6E755F63 
 21260      78783137 
 21260      5F5F6E6F 
 21261              	.LASF182:
 21262 5d49 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE10_M_destroyEm"
 21262      74375F5F 
 21262      63787831 
 21262      31313262 
 21262      61736963 
 21263              	.LASF186:
 21264 5d8d 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE16_M_get_allocatorEv"
 21264      74375F5F 
 21264      63787831 
 21264      31313262 
 21264      61736963 
 21265              	.LASF839:
 21266 5dd7 4D756C49 		.string	"MulI32a_Iavx"
 21266      3332615F 
 21266      49617678 
 21266      00
 21267              	.LASF609:
 21268 5de4 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEE
 21268      395F5F67 
 21268      6E755F63 
 21268      78783137 
GAS LISTING linobj/Ch02_03.s 			page 542


 21268      5F5F6E6F 
 21269              	.LASF500:
 21270 5e43 76737773 		.string	"vswscanf"
 21270      63616E66 
 21270      00
 21271              	.LASF489:
 21272 5e4c 6D627372 		.string	"mbsrtowcs"
 21272      746F7763 
 21272      7300
 21273              	.LASF41:
 21274 5e56 5F776964 		.string	"_wide_data"
 21274      655F6461 
 21274      746100
 21275              	.LASF842:
 21276 5e61 5F5A3131 		.string	"_Z11MulI16_IavxP6XmmValPKS_S2_"
 21276      4D756C49 
 21276      31365F49 
 21276      61767850 
 21276      36586D6D 
 21277              	.LASF54:
 21278 5e80 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv"
 21278      7431355F 
 21278      5F657863 
 21278      65707469 
 21278      6F6E5F70 
 21279              	.LASF448:
 21280 5eb4 5F5A4E53 		.string	"_ZNSt19__ptr_traits_ptr_toIPccLb0EE10pointer_toERc"
 21280      7431395F 
 21280      5F707472 
 21280      5F747261 
 21280      6974735F 
 21281              	.LASF477:
 21282 5ee7 66676574 		.string	"fgetws"
 21282      777300
 21283              	.LASF669:
 21284 5eee 5F5F696E 		.string	"__int_least32_t"
 21284      745F6C65 
 21284      61737433 
 21284      325F7400 
 21285              	.LASF417:
 21286 5efe 5F535F66 		.string	"_S_failbit"
 21286      61696C62 
 21286      697400
 21287              	.LASF258:
 21288 5f09 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4cendEv"
 21288      5374375F 
 21288      5F637878 
 21288      31313132 
 21288      62617369 
 21289              	.LASF67:
 21290 5f47 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrD4Ev"
 21290      7431355F 
 21290      5F657863 
 21290      65707469 
 21290      6F6E5F70 
 21291              	.LASF358:
 21292 5f71 6765745F 		.string	"get_allocator"
GAS LISTING linobj/Ch02_03.s 			page 543


 21292      616C6C6F 
 21292      6361746F 
 21292      7200
 21293              	.LASF338:
 21294 5f7f 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 21294      74375F5F 
 21294      63787831 
 21294      31313262 
 21294      61736963 
 21295              	.LASF251:
 21296 5fea 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6rbeginEv"
 21296      5374375F 
 21296      5F637878 
 21296      31313132 
 21296      62617369 
 21297              	.LASF479:
 21298 602a 66707574 		.string	"fputwc"
 21298      776300
 21299              	.LASF642:
 21300 6031 705F6373 		.string	"p_cs_precedes"
 21300      5F707265 
 21300      63656465 
 21300      7300
 21301              	.LASF517:
 21302 603f 746D5F79 		.string	"tm_year"
 21302      65617200 
 21303              	.LASF62:
 21304 6047 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptrC4EOS0_"
 21304      7431355F 
 21304      5F657863 
 21304      65707469 
 21304      6F6E5F70 
 21305              	.LASF350:
 21306 6074 5F4D5F61 		.string	"_M_append"
 21306      7070656E 
 21306      6400
 21307              	.LASF48:
 21308 607e 73686F72 		.string	"short unsigned int"
 21308      7420756E 
 21308      7369676E 
 21308      65642069 
 21308      6E7400
 21309              	.LASF343:
 21310 6091 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 21310      74375F5F 
 21310      63787831 
 21310      31313262 
 21310      61736963 
 21311              	.LASF665:
 21312 6111 5F5F696E 		.string	"__int_least8_t"
 21312      745F6C65 
 21312      61737438 
 21312      5F7400
 21313              	.LASF771:
 21314 6120 676D7469 		.string	"gmtime"
 21314      6D6500
 21315              	.LASF445:
GAS LISTING linobj/Ch02_03.s 			page 544


 21316 6127 5F4D5F6E 		.string	"_M_n"
 21316      00
 21317              	.LASF621:
 21318 612c 5F5F6973 		.string	"__isoc23_wcstoull"
 21318      6F633233 
 21318      5F776373 
 21318      746F756C 
 21318      6C00
 21319              	.LASF743:
 21320 613e 66726561 		.string	"fread"
 21320      6400
 21321              	.LASF167:
 21322 6144 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7_M_dataEv"
 21322      5374375F 
 21322      5F637878 
 21322      31313132 
 21322      62617369 
 21323              	.LASF788:
 21324 6185 696E745F 		.string	"int_fast64_t"
 21324      66617374 
 21324      36345F74 
 21324      00
 21325              	.LASF554:
 21326 6192 5F5F6F70 		.string	"__ops"
 21326      7300
 21327              	.LASF153:
 21328 6198 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE12_Alloc_hiderC4EPcRKS3_"
 21328      74375F5F 
 21328      63787831 
 21328      31313262 
 21328      61736963 
 21329              	.LASF454:
 21330 61e6 5F5F6465 		.string	"__detail"
 21330      7461696C 
 21330      00
 21331              	.LASF23:
 21332 61ef 5F494F5F 		.string	"_IO_write_ptr"
 21332      77726974 
 21332      655F7074 
 21332      7200
 21333              	.LASF116:
 21334 61fd 5F5A4E4B 		.string	"_ZNKSt15__new_allocatorIcE7addressERKc"
 21334      53743135 
 21334      5F5F6E65 
 21334      775F616C 
 21334      6C6F6361 
 21335              	.LASF348:
 21336 6224 5F4D5F72 		.string	"_M_replace"
 21336      65706C61 
 21336      636500
 21337              	.LASF575:
 21338 622f 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEC
 21338      5F5F676E 
 21338      755F6378 
 21338      7831375F 
 21338      5F6E6F72 
 21339              	.LASF871:
GAS LISTING linobj/Ch02_03.s 			page 545


 21340 628c 5F5A4E53 		.string	"_ZNSt11char_traitsIcE3eofEv"
 21340      74313163 
 21340      6861725F 
 21340      74726169 
 21340      74734963 
 21341              	.LASF49:
 21342 62a8 5F5F6578 		.string	"__exception_ptr"
 21342      63657074 
 21342      696F6E5F 
 21342      70747200 
 21343              	.LASF661:
 21344 62b8 5F5F696E 		.string	"__int32_t"
 21344      7433325F 
 21344      7400
 21345              	.LASF693:
 21346 62c2 696E7436 		.string	"int64_t"
 21346      345F7400 
 21347              	.LASF849:
 21348 62ca 5F5F696E 		.string	"__in_chrg"
 21348      5F636872 
 21348      6700
 21349              	.LASF396:
 21350 62d4 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7compareEmmPKcm"
 21350      5374375F 
 21350      5F637878 
 21350      31313132 
 21350      62617369 
 21351              	.LASF53:
 21352 631a 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv"
 21352      7431355F 
 21352      5F657863 
 21352      65707469 
 21352      6F6E5F70 
 21353              	.LASF485:
 21354 634c 67657477 		.string	"getwc"
 21354      6300
 21355              	.LASF232:
 21356 6352 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEC4ERKS4_RKS3_"
 21356      74375F5F 
 21356      63787831 
 21356      31313262 
 21356      61736963 
 21357              	.LASF279:
 21358 6395 656D7074 		.string	"empty"
 21358      7900
 21359              	.LASF409:
 21360 639b 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char const*, std::__cxx11::basic_string<cha
 21360      7273655F 
 21360      69746572 
 21360      61746F72 
 21360      3C5F5F67 
 21361              	.LASF761:
 21362 642a 69737763 		.string	"iswctype"
 21362      74797065 
 21362      00
 21363              	.LASF678:
 21364 6433 5F5F7469 		.string	"__time_t"
GAS LISTING linobj/Ch02_03.s 			page 546


 21364      6D655F74 
 21364      00
 21365              	.LASF90:
 21366 643c 61737369 		.string	"assign"
 21366      676E00
 21367              	.LASF632:
 21368 6443 67726F75 		.string	"grouping"
 21368      70696E67 
 21368      00
 21369              	.LASF112:
 21370 644c 5F5A4E4B 		.string	"_ZNKSt15__new_allocatorIcE7addressERc"
 21370      53743135 
 21370      5F5F6E65 
 21370      775F616C 
 21370      6C6F6361 
 21371              	.LASF165:
 21372 6472 5F4D5F6C 		.string	"_M_length"
 21372      656E6774 
 21372      6800
 21373              	.LASF480:
 21374 647c 66707574 		.string	"fputws"
 21374      777300
 21375              	.LASF181:
 21376 6483 5F4D5F64 		.string	"_M_destroy"
 21376      65737472 
 21376      6F7900
 21377              	.LASF786:
 21378 648e 696E745F 		.string	"int_fast16_t"
 21378      66617374 
 21378      31365F74 
 21378      00
 21379              	.LASF545:
 21380 649b 77707269 		.string	"wprintf"
 21380      6E746600 
 21381              	.LASF356:
 21382 64a3 64617461 		.string	"data"
 21382      00
 21383              	.LASF100:
 21384 64a8 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7not_eofERKi"
 21384      74313163 
 21384      6861725F 
 21384      74726169 
 21384      74734963 
 21385              	.LASF738:
 21386 64ca 66666C75 		.string	"fflush"
 21386      736800
 21387              	.LASF452:
 21388 64d1 5F5F7074 		.string	"__ptr_traits_ptr_to<char const*, char const, false>"
 21388      725F7472 
 21388      61697473 
 21388      5F707472 
 21388      5F746F3C 
 21389              	.LASF252:
 21390 6505 72656E64 		.string	"rend"
 21390      00
 21391              	.LASF175:
 21392 650a 5F4D5F69 		.string	"_M_is_local"
GAS LISTING linobj/Ch02_03.s 			page 547


 21392      735F6C6F 
 21392      63616C00 
 21393              	.LASF402:
 21394 6516 696E6974 		.string	"initializer_list"
 21394      69616C69 
 21394      7A65725F 
 21394      6C697374 
 21394      00
 21395              	.LASF707:
 21396 6527 71756963 		.string	"quick_exit"
 21396      6B5F6578 
 21396      697400
 21397              	.LASF478:
 21398 6532 77636861 		.string	"wchar_t"
 21398      725F7400 
 21399              	.LASF869:
 21400 653a 74797065 		.string	"typedef __va_list_tag __va_list_tag"
 21400      64656620 
 21400      5F5F7661 
 21400      5F6C6973 
 21400      745F7461 
 21401              	.LASF143:
 21402 655e 636F6E73 		.string	"const_void_pointer"
 21402      745F766F 
 21402      69645F70 
 21402      6F696E74 
 21402      657200
 21403              	.LASF361:
 21404 6571 5F5A4E4B 		.string	"_ZNKSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE4findERKS4_m"
 21404      5374375F 
 21404      5F637878 
 21404      31313132 
 21404      62617369 
 21405              	.LASF537:
 21406 65b4 77637374 		.string	"wcstoul"
 21406      6F756C00 
 21407              	.LASF406:
 21408 65bc 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE5beginEv"
 21408      53743136 
 21408      696E6974 
 21408      69616C69 
 21408      7A65725F 
 21409              	.LASF115:
 21410 65e0 636F6E73 		.string	"const_pointer"
 21410      745F706F 
 21410      696E7465 
 21410      7200
 21411              	.LASF444:
 21412 65ee 5F536574 		.string	"_Setw"
 21412      7700
 21413              	.LASF744:
 21414 65f4 6672656F 		.string	"freopen"
 21414      70656E00 
 21415              	.LASF431:
 21416 65fc 5F5A4E53 		.string	"_ZNSo3putEc"
 21416      6F337075 
 21416      74456300 
GAS LISTING linobj/Ch02_03.s 			page 548


 21417              	.LASF339:
 21418 6608 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE7replaceEN9__gnu_cxx17__normal_itera
 21418      74375F5F 
 21418      63787831 
 21418      31313262 
 21418      61736963 
 21419              	.LASF301:
 21420 6676 5F5A4E53 		.string	"_ZNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEE6appendEPKc"
 21420      74375F5F 
 21420      63787831 
 21420      31313262 
 21420      61736963 
 21421              	.LASF120:
 21422 66b7 73697A65 		.string	"size_type"
 21422      5F747970 
 21422      6500
 21423              	.LASF586:
 21424 66c1 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEm
 21424      5F5F676E 
 21424      755F6378 
 21424      7831375F 
 21424      5F6E6F72 
 21425              		.section	.debug_line_str,"MS",@progbits,1
 21426              	.LASF1:
 21427 0000 2F686F6D 		.string	"/home/vz/\320\224\320\276\320\272\321\203\320\274\320\265\320\275\321\202\321\213/code/GR
 21427      652F767A 
 21427      2FD094D0 
 21427      BED0BAD1 
 21427      83D0BCD0 
 21428              	.LASF0:
 21429 0064 43683032 		.string	"Ch02_03.cpp"
 21429      5F30332E 
 21429      63707000 
 21430              		.globl	__gxx_personality_v0
 21431              		.ident	"GCC: (GNU) 14.1.1 20240522 (Red Hat 14.1.1-4)"
 21432 0070 2F686F6D 		.section	.note.GNU-stack,"",@progbits
 21432      652F767A 
 21432      2FD094D0 
 21432      BED0BAD1 
 21432      83D0BCD0 
